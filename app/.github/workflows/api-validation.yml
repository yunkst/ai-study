name: API规范验证

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'lib/**/*.dart'
      - 'assets/openapi.json'
      - '.github/workflows/api-validation.yml'

jobs:
  api-validation:
    name: Flutter API规范检查
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Flutter环境
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        
    - name: 获取依赖
      run: flutter pub get
      
    - name: 检查OpenAPI文档
      run: |
        if [ ! -f "assets/openapi.json" ]; then
          echo "❌ OpenAPI文档不存在"
          exit 1
        fi
        echo "✅ OpenAPI文档存在"
        
    - name: 运行API规范检查
      run: |
        echo "🔍 开始API规范检查..."
        dart run lib/tools/api_analyzer_cli.dart --output api_analysis_report.txt -v
        
    - name: 上传分析报告
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: api-analysis-report
        path: api_analysis_report.txt
        retention-days: 30
        
    - name: 检查分析结果
      run: |
        if [ -f "api_analysis_report.txt" ]; then
          echo "📋 API分析报告:"
          cat api_analysis_report.txt
          
          # 检查是否有违规问题
          if grep -q "发现.*个问题" api_analysis_report.txt; then
            echo "❌ 发现API规范违规问题"
            exit 1
          fi
        fi
        echo "✅ API规范检查通过"
        
  code-quality:
    name: 代码质量检查
    runs-on: ubuntu-latest
    needs: api-validation
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Flutter环境
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        
    - name: 获取依赖
      run: flutter pub get
      
    - name: 代码格式检查
      run: dart format --set-exit-if-changed .
      
    - name: 静态分析
      run: flutter analyze
      
    - name: 运行测试
      run: flutter test
      
  security-scan:
    name: 安全扫描
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 扫描敏感信息
      run: |
        echo "🔍 扫描敏感信息..."
        
        # 检查是否有硬编码的API密钥
        if grep -r -i "api[_-]key\|secret\|password\|token" lib/ --include="*.dart" | grep -v "// TODO\|// FIXME"; then
          echo "❌ 发现可能的敏感信息泄露"
          exit 1
        fi
        
        # 检查是否有硬编码的URL
        if grep -r "http://\|https://" lib/ --include="*.dart" | grep -v "localhost\|127.0.0.1\|example.com"; then
          echo "⚠️  发现硬编码的URL，请确保不包含敏感信息"
        fi
        
        echo "✅ 安全扫描通过"
        
  notify:
    name: 通知结果
    runs-on: ubuntu-latest
    needs: [api-validation, code-quality]
    if: always()
    
    steps:
    - name: 检查结果
      run: |
        if [ "${{ needs.api-validation.result }}" = "success" ] && [ "${{ needs.code-quality.result }}" = "success" ]; then
          echo "✅ 所有检查都通过了！"
        else
          echo "❌ 部分检查失败，请查看详细日志"
          exit 1
        fi