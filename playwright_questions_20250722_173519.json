[
  {
    "section_id": "9342",
    "section_name": "绪论（第二版） - 系统架构概述",
    "question_id": 208435,
    "question_title": "采用以架构为核心的软件开发方法，在建立软件架构的初期，首要任务是选择一个合适的（请作答此空），在此基础上，开发人员通过架构模型，可以获得关于（ ）的理解，为将来的架构实现与演化过程建立了目标。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 分析模式 ",
      " 设计模式 ",
      " 架构风格 ",
      " 架构标准 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 208435,
      "question_title": "采用以架构为核心的软件开发方法，在建立软件架构的初期，首要任务是选择一个合适的（请作答此空），在此基础上，开发人员通过架构模型，可以获得关于（ ）的理解，为将来的架构实现与演化过程建立了目标。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208435,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 分析模式 ",
        " 设计模式 ",
        " 架构风格 ",
        " 架构标准 "
      ]
    },
    "crawl_time": 1753176817.5903273
  },
  {
    "section_id": "9347",
    "section_name": "计算机系统基础知识（第二版） - 计算机硬件",
    "question_id": 46877,
    "question_title": "<p>RISC(精简指令系统计算机）的特点不包括：（）</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 指令长度固定，指令种类尽量少 ",
      " 寻址方式尽量丰富，指令功能尽可能强 ",
      " 增加寄存器数目，以减少访存次数 ",
      " 用硬布线电路实现指令解码，以尽快完成指令译码 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 46877,
      "question_title": "<p>RISC(精简指令系统计算机）的特点不包括：（）</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 46877,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 指令长度固定，指令种类尽量少 ",
        " 寻址方式尽量丰富，指令功能尽可能强 ",
        " 增加寄存器数目，以减少访存次数 ",
        " 用硬布线电路实现指令解码，以尽快完成指令译码 "
      ]
    },
    "crawl_time": 1753176818.778861
  },
  {
    "section_id": "9347",
    "section_name": "计算机系统基础知识（第二版） - 计算机硬件",
    "question_id": 49903,
    "question_title": "<p>某计算机系统输入/输出采用双缓冲工作方式，其工作过程如下图所示，假设磁盘块与缓冲区大小相同，每个盘块读入缓冲区的时间T为10μs，缓冲区送用户区的时间M为6μs，系统对每个磁盘块数据韵处理时间C为2μs。若用户需要将大小为10个磁盘块的Docl文件逐块从磁盘读入缓冲区，并送用户区进行处理，那么采用双缓冲需要花费的时间为（请作答此空）μs，比使用单缓冲节约了（ ）μs时间。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20180909/1536477335965783.jpg\" title=\"1536477335965783.jpg\" alt=\"3.jpg\"/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 100 ",
      " 108 ",
      " 162 ",
      " 180 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 49903,
      "question_title": "<p>某计算机系统输入/输出采用双缓冲工作方式，其工作过程如下图所示，假设磁盘块与缓冲区大小相同，每个盘块读入缓冲区的时间T为10μs，缓冲区送用户区的时间M为6μs，系统对每个磁盘块数据韵处理时间C为2μs。若用户需要将大小为10个磁盘块的Docl文件逐块从磁盘读入缓冲区，并送用户区进行处理，那么采用双缓冲需要花费的时间为（请作答此空）μs，比使用单缓冲节约了（ ）μs时间。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20180909/1536477335965783.jpg\" title=\"1536477335965783.jpg\" alt=\"3.jpg\"/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49903,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 100 ",
        " 108 ",
        " 162 ",
        " 180 "
      ]
    },
    "crawl_time": 1753176818.778861
  },
  {
    "section_id": "9347",
    "section_name": "计算机系统基础知识（第二版） - 计算机硬件",
    "question_id": 63597,
    "question_title": "<p>目前处理器市场中存在CPU和DSP两种类型处理器，分别用于不同场景，这两种处理器具有不同的体系结构，DSP采用（　）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 冯.诺伊曼结构 ",
      " 哈佛结构 ",
      " FPGA结构 ",
      " 与GPU相同结构 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 63597,
      "question_title": "<p>目前处理器市场中存在CPU和DSP两种类型处理器，分别用于不同场景，这两种处理器具有不同的体系结构，DSP采用（　）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63597,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 冯.诺伊曼结构 ",
        " 哈佛结构 ",
        " FPGA结构 ",
        " 与GPU相同结构 "
      ]
    },
    "crawl_time": 1753176818.778861
  },
  {
    "section_id": "9347",
    "section_name": "计算机系统基础知识（第二版） - 计算机硬件",
    "question_id": 63599,
    "question_title": "<p>以下关于串行总线的说法中，正确的是（　）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 串行总线一般都是全双工总线，适宜于长距离传输数据 ",
      " 串行总线传输的波特率是总线初始化时预先定义好的，使用中不可改变 ",
      " 串行总线是按位（bit）传输数据的，其数据的正确性依赖于校验码纠正 ",
      " 串行总线的数据发送和接收是以软件查询方式工作 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 63599,
      "question_title": "<p>以下关于串行总线的说法中，正确的是（　）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63599,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 串行总线一般都是全双工总线，适宜于长距离传输数据 ",
        " 串行总线传输的波特率是总线初始化时预先定义好的，使用中不可改变 ",
        " 串行总线是按位（bit）传输数据的，其数据的正确性依赖于校验码纠正 ",
        " 串行总线的数据发送和接收是以软件查询方式工作 "
      ]
    },
    "crawl_time": 1753176818.778861
  },
  {
    "section_id": "9347",
    "section_name": "计算机系统基础知识（第二版） - 计算机硬件",
    "question_id": 151251,
    "question_title": "<p>假如有 4 块 80T 的硬盘，采用 RAID6 组建磁盘阵列的容量是（ ）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 40T ",
      " 80T ",
      " 160T ",
      " 240T "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 151251,
      "question_title": "<p>假如有 4 块 80T 的硬盘，采用 RAID6 组建磁盘阵列的容量是（ ）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 151251,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 40T ",
        " 80T ",
        " 160T ",
        " 240T "
      ]
    },
    "crawl_time": 1753176818.778861
  },
  {
    "section_id": "9347",
    "section_name": "计算机系统基础知识（第二版） - 计算机硬件",
    "question_id": 309432,
    "question_title": "<p>执行指令时，将每一节指令都分解为取指、分析和执行三步，已知取指时间t取指=5△t，分析时间t分析= 2△t.执行时间t执行= 3△t如果按照<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210912/1631460578526969.jpg\" title=\"1631460578526969.jpg\" alt=\"1.jpg\"/>重叠的流水线方式执行指令，从头到尾执行完500条指令需（ ）△t.</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 2500 ",
      " 2505 ",
      " 2510 ",
      " 2515 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 309432,
      "question_title": "<p>执行指令时，将每一节指令都分解为取指、分析和执行三步，已知取指时间t取指=5△t，分析时间t分析= 2△t.执行时间t执行= 3△t如果按照<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210912/1631460578526969.jpg\" title=\"1631460578526969.jpg\" alt=\"1.jpg\"/>重叠的流水线方式执行指令，从头到尾执行完500条指令需（ ）△t.</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 309432,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 2500 ",
        " 2505 ",
        " 2510 ",
        " 2515 "
      ]
    },
    "crawl_time": 1753176818.778861
  },
  {
    "section_id": "9347",
    "section_name": "计算机系统基础知识（第二版） - 计算机硬件",
    "question_id": 347028,
    "question_title": "计算机系统中，（）方式是根据所访问的内容来决定要访问的存储单元，常用在（）存储器中。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "顺序存取",
      "直接存取",
      "随机存取",
      "相联存取"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 347028,
      "question_title": "计算机系统中，（）方式是根据所访问的内容来决定要访问的存储单元，常用在（）存储器中。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 347027,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "顺序存取",
        "直接存取",
        "随机存取",
        "相联存取"
      ]
    },
    "crawl_time": 1753176818.778861
  },
  {
    "section_id": "9347",
    "section_name": "计算机系统基础知识（第二版） - 计算机硬件",
    "question_id": 347029,
    "question_title": "计算机系统中，（）方式是根据所访问的内容来决定要访问的存储单元，常用在（）存储器中。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "DRAM",
      "Cache",
      "EEPROM",
      " CD-ROM <div></div>"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 347029,
      "question_title": "计算机系统中，（）方式是根据所访问的内容来决定要访问的存储单元，常用在（）存储器中。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 347027,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "DRAM",
        "Cache",
        "EEPROM",
        " CD-ROM <div></div>"
      ]
    },
    "crawl_time": 1753176818.778861
  },
  {
    "section_id": "9347",
    "section_name": "计算机系统基础知识（第二版） - 计算机硬件",
    "question_id": 350296,
    "question_title": "<p>嵌入式系统中采用中断方式实现输入输出的主要原因是&nbsp;（1） 。在中断时，CPU断点信息一般保存到&nbsp;（2） 中。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 速度最快 ",
      " CPU不参与操作 ",
      " 实现起来比较容易 ",
      " 能对突发事件做出快速响应 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 350296,
      "question_title": "<p>嵌入式系统中采用中断方式实现输入输出的主要原因是&nbsp;（1） 。在中断时，CPU断点信息一般保存到&nbsp;（2） 中。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350295,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 速度最快 ",
        " CPU不参与操作 ",
        " 实现起来比较容易 ",
        " 能对突发事件做出快速响应 "
      ]
    },
    "crawl_time": 1753176818.778861
  },
  {
    "section_id": "9347",
    "section_name": "计算机系统基础知识（第二版） - 计算机硬件",
    "question_id": 350297,
    "question_title": "<p>嵌入式系统中采用中断方式实现输入输出的主要原因是&nbsp;（1） 。在中断时，CPU断点信息一般保存到&nbsp;（2） 中。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 通用寄存器 ",
      " 堆 ",
      " 栈 ",
      " I/O接口 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 350297,
      "question_title": "<p>嵌入式系统中采用中断方式实现输入输出的主要原因是&nbsp;（1） 。在中断时，CPU断点信息一般保存到&nbsp;（2） 中。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350295,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 通用寄存器 ",
        " 堆 ",
        " 栈 ",
        " I/O接口 "
      ]
    },
    "crawl_time": 1753176818.778861
  },
  {
    "section_id": "9347",
    "section_name": "计算机系统基础知识（第二版） - 计算机硬件",
    "question_id": 354808,
    "question_title": "<p>【51CTO学堂-学员回忆版】AI芯片是当前人工智能技术发展的核心技术，其能力要支持训练和推理。通常，AI芯片的技术架构包括(11)等三种。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " GPU、FPGA、ASIC ",
      " CPU、PPGA、DSP ",
      " GPU、CPU、ASIC ",
      " GPU、FPGA、SOC "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 354808,
      "question_title": "<p>【51CTO学堂-学员回忆版】AI芯片是当前人工智能技术发展的核心技术，其能力要支持训练和推理。通常，AI芯片的技术架构包括(11)等三种。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354808,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " GPU、FPGA、ASIC ",
        " CPU、PPGA、DSP ",
        " GPU、CPU、ASIC ",
        " GPU、FPGA、SOC "
      ]
    },
    "crawl_time": 1753176818.778861
  },
  {
    "section_id": "9347",
    "section_name": "计算机系统基础知识（第二版） - 计算机硬件",
    "question_id": 354810,
    "question_title": "<p>【51CTO学堂-学员回忆版】通常，嵌入式中间件没有统一的架构风格，根据应用对象的不同可存在多种类型，比较常见的是消息中间件和分布式对象中间件。以下有关消息中间件的描述中，不正确的是(12)。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 消息中间件是消息传输过程中保存消息的一种容器 ",
      " 消息中间件具有两个基本特点：来用异步处理模式、应用程序和应用程序调用关系为松耦合关系 ",
      " 消息中间件主要由一组对象来提供系统服务，对象间能够跨平台通信 ",
      " 消息中间件的消息传递服务模型有点对点模型和发布-订阅模型之分 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 354810,
      "question_title": "<p>【51CTO学堂-学员回忆版】通常，嵌入式中间件没有统一的架构风格，根据应用对象的不同可存在多种类型，比较常见的是消息中间件和分布式对象中间件。以下有关消息中间件的描述中，不正确的是(12)。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354810,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 消息中间件是消息传输过程中保存消息的一种容器 ",
        " 消息中间件具有两个基本特点：来用异步处理模式、应用程序和应用程序调用关系为松耦合关系 ",
        " 消息中间件主要由一组对象来提供系统服务，对象间能够跨平台通信 ",
        " 消息中间件的消息传递服务模型有点对点模型和发布-订阅模型之分 "
      ]
    },
    "crawl_time": 1753176818.778861
  },
  {
    "section_id": "9347",
    "section_name": "计算机系统基础知识（第二版） - 计算机硬件",
    "question_id": 373629,
    "question_title": "<p>内存按字节编址，地址从B0000H到DFFFFH的内存，共有（1）字节，若用存储容量为64k*4bit的存储器芯片构成该内存空间，至少需要（2）片。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "4",
      "5",
      "6",
      " 8 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 373629,
      "question_title": "<p>内存按字节编址，地址从B0000H到DFFFFH的内存，共有（1）字节，若用存储容量为64k*4bit的存储器芯片构成该内存空间，至少需要（2）片。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373627,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "4",
        "5",
        "6",
        " 8 "
      ]
    },
    "crawl_time": 1753176818.778861
  },
  {
    "section_id": "9347",
    "section_name": "计算机系统基础知识（第二版） - 计算机硬件",
    "question_id": 507273,
    "question_title": "<p>操作系统低优先级进程被高优进程抢占或者时间片用光，由执行态变为 （ ） 状态。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 就绪 ",
      " 挂起 ",
      " 睡眠 ",
      " 阻塞 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 507273,
      "question_title": "<p>操作系统低优先级进程被高优进程抢占或者时间片用光，由执行态变为 （ ） 状态。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507273,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 就绪 ",
        " 挂起 ",
        " 睡眠 ",
        " 阻塞 "
      ]
    },
    "crawl_time": 1753176818.778861
  },
  {
    "section_id": "9347",
    "section_name": "计算机系统基础知识（第二版） - 计算机硬件",
    "question_id": 507322,
    "question_title": "<p>应用程序在用户态使用特权指令进行系统调用，是( )</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 信号中断 ",
      " 溢出中断 ",
      " 访管中断 ",
      " 外部中断 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 507322,
      "question_title": "<p>应用程序在用户态使用特权指令进行系统调用，是( )</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507322,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 信号中断 ",
        " 溢出中断 ",
        " 访管中断 ",
        " 外部中断 "
      ]
    },
    "crawl_time": 1753176818.778861
  },
  {
    "section_id": "9347",
    "section_name": "计算机系统基础知识（第二版） - 计算机硬件",
    "question_id": 523243,
    "question_title": "一次可编程只读存储器的英文缩写是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "ROM",
      "PROM",
      "EPROM",
      "EEPROM"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 523243,
      "question_title": "一次可编程只读存储器的英文缩写是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523243,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "ROM",
        "PROM",
        "EPROM",
        "EEPROM"
      ]
    },
    "crawl_time": 1753176818.778861
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 43736,
    "question_title": "<p>某航空公司机票销售系统有n个售票点，该系统为每个售票点创建一个进程Pi(i=1，2，…，n)管理机票销售。假设Tj(j=1，2，…，m)单元存放某日某航班的机票剩余票数，Temp为Pi进程的临时工作单元，x为某用户的订票张数。初始化时系统应将信号量S赋值为(请作答此空)。Pi进程的工作流程如下图所示，若用P操作和V操作实现进程间的同步与互斥，则图中空(a)、空(b)和空(c)处应分别填入(2)。<br/></p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/201807/57cccc176888e5eec60185719b5dab59225bda.png\"/></p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 0 ",
      " 1 ",
      " 2 ",
      " 3 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43736,
      "question_title": "<p>某航空公司机票销售系统有n个售票点，该系统为每个售票点创建一个进程Pi(i=1，2，…，n)管理机票销售。假设Tj(j=1，2，…，m)单元存放某日某航班的机票剩余票数，Temp为Pi进程的临时工作单元，x为某用户的订票张数。初始化时系统应将信号量S赋值为(请作答此空)。Pi进程的工作流程如下图所示，若用P操作和V操作实现进程间的同步与互斥，则图中空(a)、空(b)和空(c)处应分别填入(2)。<br/></p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/201807/57cccc176888e5eec60185719b5dab59225bda.png\"/></p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43736,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 0 ",
        " 1 ",
        " 2 ",
        " 3 "
      ],
      "user_answer": [
        "A"
      ],
      "is_right": 2,
      "result": "2"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 43738,
    "question_title": "<p><br/></p><p>&nbsp;假设系统采用段式存储管理方法，进程P的段表如下所示。逻辑地址（请作答此空）不能转换为对应的物理地址；不能转换为对应的物理地址的原因是进行（）。 <br/></p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/201807/67ea4dc965f07bbe1d748474b2dc746a39e843.png\"/></p><p><br/></p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " (0，790)和(2，88)&nbsp; ",
      " (1，30)和(3，290) ",
      " (2，88)和(4，98)&nbsp; ",
      " (0，810)和(4，120) "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 43738,
      "question_title": "<p><br/></p><p>&nbsp;假设系统采用段式存储管理方法，进程P的段表如下所示。逻辑地址（请作答此空）不能转换为对应的物理地址；不能转换为对应的物理地址的原因是进行（）。 <br/></p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/201807/67ea4dc965f07bbe1d748474b2dc746a39e843.png\"/></p><p><br/></p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43738,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " (0，790)和(2，88)&nbsp; ",
        " (1，30)和(3，290) ",
        " (2，88)和(4，98)&nbsp; ",
        " (0，810)和(4，120) "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 43739,
    "question_title": "<p><br/></p><p><br/></p><p>&nbsp;假设系统采用段式存储管理方法，进程P的段表如下所示。逻辑地址（）不能转换为对应的物理地址；不能转换为对应的物理地址的原因是进行（请作答此空）。 <br/></p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/201807/31bf20c914c4249718c5733d0b12accfcf2bd0.png\"/></p><p><br/></p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 除法运算时除数为零&nbsp; ",
      " 算术运算时有溢出 ",
      " 逻辑地址到物理地址转换时地址越界 ",
      " 物理地址到逻辑地址转换时地址越界 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 43739,
      "question_title": "<p><br/></p><p><br/></p><p>&nbsp;假设系统采用段式存储管理方法，进程P的段表如下所示。逻辑地址（）不能转换为对应的物理地址；不能转换为对应的物理地址的原因是进行（请作答此空）。 <br/></p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/201807/31bf20c914c4249718c5733d0b12accfcf2bd0.png\"/></p><p><br/></p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43739,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 除法运算时除数为零&nbsp; ",
        " 算术运算时有溢出 ",
        " 逻辑地址到物理地址转换时地址越界 ",
        " 物理地址到逻辑地址转换时地址越界 "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 49933,
    "question_title": "<p>&nbsp;面向构件的编程(Component Oriented Programming，COP)关注于如何支持建立面向构件的解决方案。面向构件的编程所需要的基本支持包括（ &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 继承性、构件管理和绑定、构件标识、访问控制 ",
      " 封装性、信息隐藏、独立部署、模块安全性 ",
      " 多态性、模块封装性、后期绑定和装载、安全性 ",
      " 构件抽象、可替代性、类型安全性、事务管理 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 49933,
      "question_title": "<p>&nbsp;面向构件的编程(Component Oriented Programming，COP)关注于如何支持建立面向构件的解决方案。面向构件的编程所需要的基本支持包括（ &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49933,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 继承性、构件管理和绑定、构件标识、访问控制 ",
        " 封装性、信息隐藏、独立部署、模块安全性 ",
        " 多态性、模块封装性、后期绑定和装载、安全性 ",
        " 构件抽象、可替代性、类型安全性、事务管理 "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 49934,
    "question_title": "<p>CORBA构件模型中，（ 请作答此空&nbsp;）的作用是在底层传输平台与接收调用并返回结果的对象实现之间进行协调，（ ）是最终完成客户请求的服务对象实现。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 伺服对象激活器 ",
      " 适配器激活器 ",
      " 伺服对象定位器 ",
      " 可移植对象适配器POA "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 49934,
      "question_title": "<p>CORBA构件模型中，（ 请作答此空&nbsp;）的作用是在底层传输平台与接收调用并返回结果的对象实现之间进行协调，（ ）是最终完成客户请求的服务对象实现。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49934,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 伺服对象激活器 ",
        " 适配器激活器 ",
        " 伺服对象定位器 ",
        " 可移植对象适配器POA "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 49936,
    "question_title": "<p>关于构件的描述，正确的是（ &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 构件包含了一组需要同时部署的原子构件 ",
      " 构件可以单独部署，原子构件不能被单独部署 ",
      " 一个原子构件可以同时在多个构件家族中共享 ",
      " 一个模块可以看作带有单独资源的原子构件 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 49936,
      "question_title": "<p>关于构件的描述，正确的是（ &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49936,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 构件包含了一组需要同时部署的原子构件 ",
        " 构件可以单独部署，原子构件不能被单独部署 ",
        " 一个原子构件可以同时在多个构件家族中共享 ",
        " 一个模块可以看作带有单独资源的原子构件 "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 54198,
    "question_title": "<p>嵌入式系统中采用中断方式实现输入输出的主要原因是（ ）。在中断时，CPU断点信息一般保存到（请作答此空）中。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 通用寄存器 ",
      " 堆 ",
      " 栈 ",
      " I/O接口 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 54198,
      "question_title": "<p>嵌入式系统中采用中断方式实现输入输出的主要原因是（ ）。在中断时，CPU断点信息一般保存到（请作答此空）中。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54198,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 通用寄存器 ",
        " 堆 ",
        " 栈 ",
        " I/O接口 "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 54201,
    "question_title": "<p>某文件系统采用多级索引结构，若磁盘块的大小为512字节，每个块号需占3字节，那么根索引采用一级索引时的文件最大长度为（请作答此空）K字节；采用二级索引时的文件最大长度为（ &nbsp;）K字节。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 85 ",
      " 170 ",
      " 512 ",
      " 1024 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 54201,
      "question_title": "<p>某文件系统采用多级索引结构，若磁盘块的大小为512字节，每个块号需占3字节，那么根索引采用一级索引时的文件最大长度为（请作答此空）K字节；采用二级索引时的文件最大长度为（ &nbsp;）K字节。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54201,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 85 ",
        " 170 ",
        " 512 ",
        " 1024 "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 54211,
    "question_title": "<p>进程P1、P2、P3、P4和P5的前趋图如下：<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20181012/1539328954814393.jpg\" title=\"1539328954814393.jpg\" alt=\"1.jpg\"/><br/>若用PV操作控制进程P1～P5并发执行的过程，则需要设置6个信号S1、S2、S3、S4、S5和S6，且信号量S1-S6的初值都等于零。下图中a和b处应分别填写（请作答此空）；c和d处应分别填写（ &nbsp;），e和f处应分别填写（ &nbsp;）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20181012/1539328958624472.jpg\" title=\"1539328958624472.jpg\" alt=\"2.jpg\"/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " P（S1）P（S2）和P（S3）P（S4） ",
      " P（S1）V（S2）和P（S2）V（S1） ",
      " V（S1）V（S2）和V（S3）V（S4） ",
      " P（S1）P（S2）和V（S1）V（S2） "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 54211,
      "question_title": "<p>进程P1、P2、P3、P4和P5的前趋图如下：<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20181012/1539328954814393.jpg\" title=\"1539328954814393.jpg\" alt=\"1.jpg\"/><br/>若用PV操作控制进程P1～P5并发执行的过程，则需要设置6个信号S1、S2、S3、S4、S5和S6，且信号量S1-S6的初值都等于零。下图中a和b处应分别填写（请作答此空）；c和d处应分别填写（ &nbsp;），e和f处应分别填写（ &nbsp;）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20181012/1539328958624472.jpg\" title=\"1539328958624472.jpg\" alt=\"2.jpg\"/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54211,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " P（S1）P（S2）和P（S3）P（S4） ",
        " P（S1）V（S2）和P（S2）V（S1） ",
        " V（S1）V（S2）和V（S3）V（S4） ",
        " P（S1）P（S2）和V（S1）V（S2） "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 54214,
    "question_title": "<p>若一个单处理器的计算机系统中同时存在3个并发进程，则同一时刻允许占用处理器的进程数（请作答此空）；如果这3个进程都要求使用2个互斥资源R，那么系统不产生死锁的最少的R 资源数为（ &nbsp;）个。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 至少为 1 个 ",
      " 至少为3个 ",
      " 最多为1个 ",
      " 最多为3个 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 54214,
      "question_title": "<p>若一个单处理器的计算机系统中同时存在3个并发进程，则同一时刻允许占用处理器的进程数（请作答此空）；如果这3个进程都要求使用2个互斥资源R，那么系统不产生死锁的最少的R 资源数为（ &nbsp;）个。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54214,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 至少为 1 个 ",
        " 至少为3个 ",
        " 最多为1个 ",
        " 最多为3个 "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 63583,
    "question_title": "<p>某计算机系统中的进程管理采用三态模型，那么下图所示的PCB（进程控制块）的组织方式采用（请作答此空），图中（　）。<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181127/1543309827919571.jpg\" title=\"1543309827919571.jpg\" alt=\"1.jpg\"/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 顺序方式 ",
      " 链接方式 ",
      " 索引方式 ",
      " Hash "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 63583,
      "question_title": "<p>某计算机系统中的进程管理采用三态模型，那么下图所示的PCB（进程控制块）的组织方式采用（请作答此空），图中（　）。<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181127/1543309827919571.jpg\" title=\"1543309827919571.jpg\" alt=\"1.jpg\"/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63583,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 顺序方式 ",
        " 链接方式 ",
        " 索引方式 ",
        " Hash "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 63642,
    "question_title": "<p>EJB是企业级Java构件，用于开发和部署多层结构的、分布式的、面向对象的Java应用系统。其中，（请作答此空）负责完成服务端与客户端的交互；（　）用于数据持久化来简化数据库开发工作；（　）主要用来处理并发和异步访问操作。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 会话型构件 ",
      " 实体型构件 ",
      " COM构件 ",
      " 消息驱动构件 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 63642,
      "question_title": "<p>EJB是企业级Java构件，用于开发和部署多层结构的、分布式的、面向对象的Java应用系统。其中，（请作答此空）负责完成服务端与客户端的交互；（　）用于数据持久化来简化数据库开发工作；（　）主要用来处理并发和异步访问操作。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63642,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 会话型构件 ",
        " 实体型构件 ",
        " COM构件 ",
        " 消息驱动构件 "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 63647,
    "question_title": "<p>CORBA服务端构件模型中，（　）是CORBA对象的真正实现，负责完成客户端请求。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 伺服对象（Servant） ",
      " 对象适配器（Object Adapter） ",
      " 对象请求代理（Object Request Broker） ",
      " 适配器激活器（Adapter Activator） "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 63647,
      "question_title": "<p>CORBA服务端构件模型中，（　）是CORBA对象的真正实现，负责完成客户端请求。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63647,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 伺服对象（Servant） ",
        " 对象适配器（Object Adapter） ",
        " 对象请求代理（Object Request Broker） ",
        " 适配器激活器（Adapter Activator） "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 63649,
    "question_title": "<p>J2EE应用系统支持五种不同类型的构件模型，包括（　）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " Applet、JFC、JSP、Servlet、EJB ",
      " JNDI、IIOP、RMI、EJB、JSP/Servlet ",
      " JDBC、EJB、JSP、Servlet、JCA ",
      " Applet、Servlet、JSP、EJB、Application Client "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 63649,
      "question_title": "<p>J2EE应用系统支持五种不同类型的构件模型，包括（　）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63649,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " Applet、JFC、JSP、Servlet、EJB ",
        " JNDI、IIOP、RMI、EJB、JSP/Servlet ",
        " JDBC、EJB、JSP、Servlet、JCA ",
        " Applet、Servlet、JSP、EJB、Application Client "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 151188,
    "question_title": "以下关于实时操作系统(RTOS)任务调度器的叙述中，正确的是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 任务之间的公平性是最重要的调度目标 ",
      " 大多数RTOS调度算法都是抢占方式(可剥夺方式) ",
      " RTOS调度器都采用了基于时间片轮转的调度算法 ",
      " 大多数RTOS调度算法只采用一种静态优先级调度算法 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 151188,
      "question_title": "以下关于实时操作系统(RTOS)任务调度器的叙述中，正确的是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 151188,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 任务之间的公平性是最重要的调度目标 ",
        " 大多数RTOS调度算法都是抢占方式(可剥夺方式) ",
        " RTOS调度器都采用了基于时间片轮转的调度算法 ",
        " 大多数RTOS调度算法只采用一种静态优先级调度算法 "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 159203,
    "question_title": "紧耦合多机系统一般通过（请作答此空）实现多机间的通信。对称多处理器结构（SMP）属于（ ）系统。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 因特网 ",
      " 共享内存 ",
      " 进程通信 ",
      " 共享寄存器 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 159203,
      "question_title": "紧耦合多机系统一般通过（请作答此空）实现多机间的通信。对称多处理器结构（SMP）属于（ ）系统。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159203,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 因特网 ",
        " 共享内存 ",
        " 进程通信 ",
        " 共享寄存器 "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 159238,
    "question_title": "<p>微内核的操作系统（OS）结构如下图所示，图中①和②分别工作在（请作答此空）方式下，与传统的OS结构模式相比，采用微内核的OS结构模式的优点是提高了系统的灵活性、可扩充性，（ ）。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191019/1571472462882564.jpg\" title=\"1571472462882564.jpg\" alt=\"2.jpg\"/></p><br/>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 核心态和用户态 ",
      " 用户态和核心态 ",
      " 用户态和用户态 ",
      " 核心态和核心态 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 159238,
      "question_title": "<p>微内核的操作系统（OS）结构如下图所示，图中①和②分别工作在（请作答此空）方式下，与传统的OS结构模式相比，采用微内核的OS结构模式的优点是提高了系统的灵活性、可扩充性，（ ）。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191019/1571472462882564.jpg\" title=\"1571472462882564.jpg\" alt=\"2.jpg\"/></p><br/>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159238,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 核心态和用户态 ",
        " 用户态和核心态 ",
        " 用户态和用户态 ",
        " 核心态和核心态 "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 159252,
    "question_title": "在Linux系统中，一般用（ ）命令来测试另一台主机是否可达。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " ping ",
      " ifconfig ",
      " netstat ",
      " uname "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 18,
      "belong_page": 1,
      "question_id": 159252,
      "question_title": "在Linux系统中，一般用（ ）命令来测试另一台主机是否可达。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159252,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " ping ",
        " ifconfig ",
        " netstat ",
        " uname "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 281177,
    "question_title": "<p><br/></p><p>假设文件系统采用索引节点管理，且索引节点有8个地址项iaddr[0]～iaddr[7]，每个地址项大小为4字节，iaddr[0]～iaddr[4]采用直接地址索引，iaddrl[5]和iaddr[6]采用一级间接地址索引，iaddr[7]采用二级间接地址索引。假设磁盘索引块和磁盘数据块大小均为1KB字节，文件File1的索引节点如图所示。若用户访问文件File1中逻辑块号为5和261的信息，则对应的物理块号分别为（1）；101号物理块存放的是（2）。<br/></p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20200912/1599876213110533.jpg\" title=\"1599876213110533.jpg\" alt=\"1.jpg\"/>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "89和90",
      "89和136",
      "58和187",
      "90和136"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 19,
      "belong_page": 1,
      "question_id": 281177,
      "question_title": "<p><br/></p><p>假设文件系统采用索引节点管理，且索引节点有8个地址项iaddr[0]～iaddr[7]，每个地址项大小为4字节，iaddr[0]～iaddr[4]采用直接地址索引，iaddrl[5]和iaddr[6]采用一级间接地址索引，iaddr[7]采用二级间接地址索引。假设磁盘索引块和磁盘数据块大小均为1KB字节，文件File1的索引节点如图所示。若用户访问文件File1中逻辑块号为5和261的信息，则对应的物理块号分别为（1）；101号物理块存放的是（2）。<br/></p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20200912/1599876213110533.jpg\" title=\"1599876213110533.jpg\" alt=\"1.jpg\"/>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281176,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "89和90",
        "89和136",
        "58和187",
        "90和136"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 281178,
    "question_title": "<p><br/></p><p>假设文件系统采用索引节点管理，且索引节点有8个地址项iaddr[0]～iaddr[7]，每个地址项大小为4字节，iaddr[0]～iaddr[4]采用直接地址索引，iaddrl[5]和iaddr[6]采用一级间接地址索引，iaddr[7]采用二级间接地址索引。假设磁盘索引块和磁盘数据块大小均为1KB字节，文件File1的索引节点如图所示。若用户访问文件File1中逻辑块号为5和261的信息，则对应的物理块号分别为（1）；101号物理块存放的是（2）。<br/></p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20200912/1599876213110533.jpg\" title=\"1599876213110533.jpg\" alt=\"1.jpg\"/>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "Filel的信息",
      "直接地址索引表",
      "一级地址索引表",
      "二级地址索引表"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 20,
      "belong_page": 1,
      "question_id": 281178,
      "question_title": "<p><br/></p><p>假设文件系统采用索引节点管理，且索引节点有8个地址项iaddr[0]～iaddr[7]，每个地址项大小为4字节，iaddr[0]～iaddr[4]采用直接地址索引，iaddrl[5]和iaddr[6]采用一级间接地址索引，iaddr[7]采用二级间接地址索引。假设磁盘索引块和磁盘数据块大小均为1KB字节，文件File1的索引节点如图所示。若用户访问文件File1中逻辑块号为5和261的信息，则对应的物理块号分别为（1）；101号物理块存放的是（2）。<br/></p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20200912/1599876213110533.jpg\" title=\"1599876213110533.jpg\" alt=\"1.jpg\"/>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281176,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "Filel的信息",
        "直接地址索引表",
        "一级地址索引表",
        "二级地址索引表"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 281188,
    "question_title": "<p>进程P1、P2、P3、P4、P5和P6的前趋图如下所示：</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20200912/1599877075202059.jpg\" title=\"1599877075202059.jpg\" alt=\"1.jpg\"/></p><p>若用PV操作控制这6个进程的同步与互斥的程序如下，那么程序中的空a、空b和空c处应分别为（1）；空d和空e处应分别为（2）；空f和空g处应分别为（3）。<br/></p><p>begin</p><p>&nbsp; S1，S2，S3，S4，S5，S6，S7：semaphore； &nbsp; //定义信号量</p><p>&nbsp; S1:=0；S2：=0；S3:=0；S4=0；S5:=0；S6:=0；S7:=0；&nbsp;</p><p>&nbsp; Cobegin<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20200912/1599877117584581.jpg\" title=\"1599877117584581.jpg\" alt=\"1.jpg\"/></p><p>Coend；</p><p>end</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "V(S3)、P(S2)和V(S4)V(S5）",
      "P(S3)、P(S2)和V(S4)V(S5)",
      "V(S2)、P(S3)和P(S4)P(S3）",
      "V(S2)、V(S3)和P(S3)P(S4)"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 21,
      "belong_page": 1,
      "question_id": 281188,
      "question_title": "<p>进程P1、P2、P3、P4、P5和P6的前趋图如下所示：</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20200912/1599877075202059.jpg\" title=\"1599877075202059.jpg\" alt=\"1.jpg\"/></p><p>若用PV操作控制这6个进程的同步与互斥的程序如下，那么程序中的空a、空b和空c处应分别为（1）；空d和空e处应分别为（2）；空f和空g处应分别为（3）。<br/></p><p>begin</p><p>&nbsp; S1，S2，S3，S4，S5，S6，S7：semaphore； &nbsp; //定义信号量</p><p>&nbsp; S1:=0；S2：=0；S3:=0；S4=0；S5:=0；S6:=0；S7:=0；&nbsp;</p><p>&nbsp; Cobegin<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20200912/1599877117584581.jpg\" title=\"1599877117584581.jpg\" alt=\"1.jpg\"/></p><p>Coend；</p><p>end</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281187,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "V(S3)、P(S2)和V(S4)V(S5）",
        "P(S3)、P(S2)和V(S4)V(S5)",
        "V(S2)、P(S3)和P(S4)P(S3）",
        "V(S2)、V(S3)和P(S3)P(S4)"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 284650,
    "question_title": "<p>某文件系统采用链式存储管理方式并应用记录的成组与分解技术，且磁盘块的大小为 4096 字节。若文件 license.doc 由 7 个逻辑记录组成，每个逻辑记录的大小为 2048字节，并依次存放在 58、89、96 和 101 号磁盘块 上，那么要存取文件的第 12288 逻辑字节处的信息，应访问 （11） 号磁盘块。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 58 ",
      " 89 ",
      " 96 ",
      " 101 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 22,
      "belong_page": 1,
      "question_id": 284650,
      "question_title": "<p>某文件系统采用链式存储管理方式并应用记录的成组与分解技术，且磁盘块的大小为 4096 字节。若文件 license.doc 由 7 个逻辑记录组成，每个逻辑记录的大小为 2048字节，并依次存放在 58、89、96 和 101 号磁盘块 上，那么要存取文件的第 12288 逻辑字节处的信息，应访问 （11） 号磁盘块。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 284650,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 58 ",
        " 89 ",
        " 96 ",
        " 101 "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 284652,
    "question_title": "<p>进程 P1、P2、P3、P4、P5 的前趋图如下。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643005134181.jpg\" title=\"1602643005134181.jpg\" alt=\"1.jpg\"/></p><p>若用 PV 操作控制进程并发执行的过程，则需要相应于进程执行过程设置 5 个信号量 S1、S2、S3、S4 和 S5，且信号量初值都等于零。下图中 a 处应填写 （1） ；b 和 c、d 和 e 处应分别填写 （2），f、g 和 h 应分别填写 （3） 。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643009500828.jpg\" title=\"1602643009500828.jpg\" alt=\"2.jpg\"/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " P（S1）和 P（S2） ",
      "V（S1）和 V（S2）",
      "P（S1）和 V（S2）",
      "P（S2）和 V（S1）"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 23,
      "belong_page": 1,
      "question_id": 284652,
      "question_title": "<p>进程 P1、P2、P3、P4、P5 的前趋图如下。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643005134181.jpg\" title=\"1602643005134181.jpg\" alt=\"1.jpg\"/></p><p>若用 PV 操作控制进程并发执行的过程，则需要相应于进程执行过程设置 5 个信号量 S1、S2、S3、S4 和 S5，且信号量初值都等于零。下图中 a 处应填写 （1） ；b 和 c、d 和 e 处应分别填写 （2），f、g 和 h 应分别填写 （3） 。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643009500828.jpg\" title=\"1602643009500828.jpg\" alt=\"2.jpg\"/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 284651,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " P（S1）和 P（S2） ",
        "V（S1）和 V（S2）",
        "P（S1）和 V（S2）",
        "P（S2）和 V（S1）"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 284654,
    "question_title": "<p>进程 P1、P2、P3、P4、P5 的前趋图如下。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643005134181.jpg\" title=\"1602643005134181.jpg\" alt=\"1.jpg\"/></p><p>若用 PV 操作控制进程并发执行的过程，则需要相应于进程执行过程设置 5 个信号量 S1、S2、S3、S4 和 S5，且信号量初值都等于零。下图中 a 处应填写 （1） ；b 和 c、d 和 e 处应分别填写 （2），f、g 和 h 应分别填写 （3） 。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643009500828.jpg\" title=\"1602643009500828.jpg\" alt=\"2.jpg\"/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "P（S3）V（S4）、V（S5）和 P（S5）&nbsp;",
      "V（S3）V（S4）、P（S5）和 V（S5）",
      "P（S3）P（S4）、V（S5）和 P（S5）",
      "V（S3）P（S4）、P（S5）和 V（S5）"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 24,
      "belong_page": 1,
      "question_id": 284654,
      "question_title": "<p>进程 P1、P2、P3、P4、P5 的前趋图如下。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643005134181.jpg\" title=\"1602643005134181.jpg\" alt=\"1.jpg\"/></p><p>若用 PV 操作控制进程并发执行的过程，则需要相应于进程执行过程设置 5 个信号量 S1、S2、S3、S4 和 S5，且信号量初值都等于零。下图中 a 处应填写 （1） ；b 和 c、d 和 e 处应分别填写 （2），f、g 和 h 应分别填写 （3） 。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602643009500828.jpg\" title=\"1602643009500828.jpg\" alt=\"2.jpg\"/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 284651,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "P（S3）V（S4）、V（S5）和 P（S5）&nbsp;",
        "V（S3）V（S4）、P（S5）和 V（S5）",
        "P（S3）P（S4）、V（S5）和 P（S5）",
        "V（S3）P（S4）、P（S5）和 V（S5）"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 309437,
    "question_title": "<p>进程P1、P2、P3、P4、P5和P6的前趋图如下图所示：</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210912/1631460669428645.jpg\" title=\"1631460669428645.jpg\" alt=\"1.jpg\"/></p><p><br/></p><p>若用PV操作控制这6个进程的同步与互斥的程序如下，那么程序中的空①和空②处应分别为（1）；空③和空④处应分别为（2）；空⑤和空⑥处应分别为（3）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210912/1631460674337094.jpg\" title=\"1631460674337094.jpg\" alt=\"2.jpg\"/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "V (S1) V (S2)和P (S2）",
      "P (S1) P (S2)和V (S2)",
      "V (S1) V (S2)和P (S1）",
      "P (S1) P (S2)和V (S1)"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 25,
      "belong_page": 1,
      "question_id": 309437,
      "question_title": "<p>进程P1、P2、P3、P4、P5和P6的前趋图如下图所示：</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210912/1631460669428645.jpg\" title=\"1631460669428645.jpg\" alt=\"1.jpg\"/></p><p><br/></p><p>若用PV操作控制这6个进程的同步与互斥的程序如下，那么程序中的空①和空②处应分别为（1）；空③和空④处应分别为（2）；空⑤和空⑥处应分别为（3）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210912/1631460674337094.jpg\" title=\"1631460674337094.jpg\" alt=\"2.jpg\"/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 309436,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "V (S1) V (S2)和P (S2）",
        "P (S1) P (S2)和V (S2)",
        "V (S1) V (S2)和P (S1）",
        "P (S1) P (S2)和V (S1)"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 309438,
    "question_title": "<p>进程P1、P2、P3、P4、P5和P6的前趋图如下图所示：</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210912/1631460669428645.jpg\" title=\"1631460669428645.jpg\" alt=\"1.jpg\"/></p><p><br/></p><p>若用PV操作控制这6个进程的同步与互斥的程序如下，那么程序中的空①和空②处应分别为（1）；空③和空④处应分别为（2）；空⑤和空⑥处应分别为（3）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210912/1631460674337094.jpg\" title=\"1631460674337094.jpg\" alt=\"2.jpg\"/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "V (S3)和V (S5) V (S6）",
      "P (S3)和V (S5) V (S6)",
      "V (S3)和P (S5) P (S6）",
      "P (S3)和P (S5) P (S6)"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 26,
      "belong_page": 1,
      "question_id": 309438,
      "question_title": "<p>进程P1、P2、P3、P4、P5和P6的前趋图如下图所示：</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210912/1631460669428645.jpg\" title=\"1631460669428645.jpg\" alt=\"1.jpg\"/></p><p><br/></p><p>若用PV操作控制这6个进程的同步与互斥的程序如下，那么程序中的空①和空②处应分别为（1）；空③和空④处应分别为（2）；空⑤和空⑥处应分别为（3）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210912/1631460674337094.jpg\" title=\"1631460674337094.jpg\" alt=\"2.jpg\"/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 309436,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "V (S3)和V (S5) V (S6）",
        "P (S3)和V (S5) V (S6)",
        "V (S3)和P (S5) P (S6）",
        "P (S3)和P (S5) P (S6)"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 309439,
    "question_title": "<p>进程P1、P2、P3、P4、P5和P6的前趋图如下图所示：</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210912/1631460669428645.jpg\" title=\"1631460669428645.jpg\" alt=\"1.jpg\"/></p><p><br/></p><p>若用PV操作控制这6个进程的同步与互斥的程序如下，那么程序中的空①和空②处应分别为（1）；空③和空④处应分别为（2）；空⑤和空⑥处应分别为（3）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210912/1631460674337094.jpg\" title=\"1631460674337094.jpg\" alt=\"2.jpg\"/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "P (S6)和P (S7) V (S8）",
      "V (S6)和V (S7) V (S8)",
      "P (S6)和P (S7) P (S8）",
      "V (S7)和P (S7) P (S8)"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 27,
      "belong_page": 1,
      "question_id": 309439,
      "question_title": "<p>进程P1、P2、P3、P4、P5和P6的前趋图如下图所示：</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210912/1631460669428645.jpg\" title=\"1631460669428645.jpg\" alt=\"1.jpg\"/></p><p><br/></p><p>若用PV操作控制这6个进程的同步与互斥的程序如下，那么程序中的空①和空②处应分别为（1）；空③和空④处应分别为（2）；空⑤和空⑥处应分别为（3）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210912/1631460674337094.jpg\" title=\"1631460674337094.jpg\" alt=\"2.jpg\"/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 309436,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "P (S6)和P (S7) V (S8）",
        "V (S6)和V (S7) V (S8)",
        "P (S6)和P (S7) P (S8）",
        "V (S7)和P (S7) P (S8)"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 312959,
    "question_title": "<p>进程P1、P2、P3、P4、P5的前趋图如图所示。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211013/1634139200190472.jpg\" title=\"1634139200190472.jpg\" alt=\"1.jpg\"/></p><p>若用PV操作控制进程并发执行的过程，则需要设置4个信号量S1、S2、S3和S4，且信号量初值都等于零。图中a和b应分别填写（），c和d应分别填写（），e和f应分别填写（）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211013/1634139205865868.jpg\" title=\"1634139205865868.jpg\" alt=\"2.jpg\"/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "P(S1)和P(S2)",
      "P(S1)和V(S2)",
      "V(S1)和V(S2)",
      "V(S1)和P(S2)"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 28,
      "belong_page": 1,
      "question_id": 312959,
      "question_title": "<p>进程P1、P2、P3、P4、P5的前趋图如图所示。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211013/1634139200190472.jpg\" title=\"1634139200190472.jpg\" alt=\"1.jpg\"/></p><p>若用PV操作控制进程并发执行的过程，则需要设置4个信号量S1、S2、S3和S4，且信号量初值都等于零。图中a和b应分别填写（），c和d应分别填写（），e和f应分别填写（）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211013/1634139205865868.jpg\" title=\"1634139205865868.jpg\" alt=\"2.jpg\"/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 312958,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "P(S1)和P(S2)",
        "P(S1)和V(S2)",
        "V(S1)和V(S2)",
        "V(S1)和P(S2)"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 312960,
    "question_title": "<p>进程P1、P2、P3、P4、P5的前趋图如图所示。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211013/1634139200190472.jpg\" title=\"1634139200190472.jpg\" alt=\"1.jpg\"/></p><p>若用PV操作控制进程并发执行的过程，则需要设置4个信号量S1、S2、S3和S4，且信号量初值都等于零。图中a和b应分别填写（），c和d应分别填写（），e和f应分别填写（）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211013/1634139205865868.jpg\" title=\"1634139205865868.jpg\" alt=\"2.jpg\"/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "P(S1)、P(S2)和V(S3)、V(S4)",
      "P(S1)、P(S2)和P(S3)、P(S4)",
      "V(S1)、V(S2)和P(S3)、P(S4)&nbsp;",
      "V(S1)、V(S2)和V(S3)、V(S4)"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 29,
      "belong_page": 1,
      "question_id": 312960,
      "question_title": "<p>进程P1、P2、P3、P4、P5的前趋图如图所示。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211013/1634139200190472.jpg\" title=\"1634139200190472.jpg\" alt=\"1.jpg\"/></p><p>若用PV操作控制进程并发执行的过程，则需要设置4个信号量S1、S2、S3和S4，且信号量初值都等于零。图中a和b应分别填写（），c和d应分别填写（），e和f应分别填写（）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211013/1634139205865868.jpg\" title=\"1634139205865868.jpg\" alt=\"2.jpg\"/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 312958,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "P(S1)、P(S2)和V(S3)、V(S4)",
        "P(S1)、P(S2)和P(S3)、P(S4)",
        "V(S1)、V(S2)和P(S3)、P(S4)&nbsp;",
        "V(S1)、V(S2)和V(S3)、V(S4)"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 312961,
    "question_title": "<p>进程P1、P2、P3、P4、P5的前趋图如图所示。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211013/1634139200190472.jpg\" title=\"1634139200190472.jpg\" alt=\"1.jpg\"/></p><p>若用PV操作控制进程并发执行的过程，则需要设置4个信号量S1、S2、S3和S4，且信号量初值都等于零。图中a和b应分别填写（），c和d应分别填写（），e和f应分别填写（）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211013/1634139205865868.jpg\" title=\"1634139205865868.jpg\" alt=\"2.jpg\"/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "P(S3)和P(S4)&nbsp;",
      "P(S3)和V(S4)",
      "V(S3)和V(S4)&nbsp;",
      "V(S3)和P(S4)"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 30,
      "belong_page": 1,
      "question_id": 312961,
      "question_title": "<p>进程P1、P2、P3、P4、P5的前趋图如图所示。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211013/1634139200190472.jpg\" title=\"1634139200190472.jpg\" alt=\"1.jpg\"/></p><p>若用PV操作控制进程并发执行的过程，则需要设置4个信号量S1、S2、S3和S4，且信号量初值都等于零。图中a和b应分别填写（），c和d应分别填写（），e和f应分别填写（）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211013/1634139205865868.jpg\" title=\"1634139205865868.jpg\" alt=\"2.jpg\"/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 312958,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "P(S3)和P(S4)&nbsp;",
        "P(S3)和V(S4)",
        "V(S3)和V(S4)&nbsp;",
        "V(S3)和P(S4)"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 352240,
    "question_title": "<p>&nbsp;前趋图是一个有向无环图，记为→=｛（Pi，Pj）pi完成时间先于Pj开始时间｝。假设系统中进P=｛P1，P2，P3，P4，P5，P6，P7，P8｝，且进程的前趋图如下：</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663919241820569.png\" title=\"1663919241820569.png\" alt=\"image.png\"/><br/><p>那么，该前趋图可记为&nbsp;（1） ，图中&nbsp;（2） 。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " →={（P1，P2），（P1，P3），（P1，P4），（P2，P5），（P3，P2），（P3，P4），（P3，P6），（P4，P7），（P5，P8） ",
      " →={（P1，P2），（P1，P4），（P2，P3），（P2，P5），（P3，P4），（P3，P6），（P4，P7），（P5，P6），（P7，P6），（P6，P8）} ",
      " →={（P1，P2），（P1，P4），（P2，P5），（P3，P2），（P3，P4），（P3，P6），（P4，P6），（P4，p7），（p6，p8），（p7，P8）} ",
      " →={（P1，P2），（P1，P4），（P2，P3），（P2，P5），（P3，P4），（P3，P6），（P4，P7），（P5，P6），（P5，P8），（P7，P6），（P6，P8）} "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 31,
      "belong_page": 1,
      "question_id": 352240,
      "question_title": "<p>&nbsp;前趋图是一个有向无环图，记为→=｛（Pi，Pj）pi完成时间先于Pj开始时间｝。假设系统中进P=｛P1，P2，P3，P4，P5，P6，P7，P8｝，且进程的前趋图如下：</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663919241820569.png\" title=\"1663919241820569.png\" alt=\"image.png\"/><br/><p>那么，该前趋图可记为&nbsp;（1） ，图中&nbsp;（2） 。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352239,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " →={（P1，P2），（P1，P3），（P1，P4），（P2，P5），（P3，P2），（P3，P4），（P3，P6），（P4，P7），（P5，P8） ",
        " →={（P1，P2），（P1，P4），（P2，P3），（P2，P5），（P3，P4），（P3，P6），（P4，P7），（P5，P6），（P7，P6），（P6，P8）} ",
        " →={（P1，P2），（P1，P4），（P2，P5），（P3，P2），（P3，P4），（P3，P6），（P4，P6），（P4，p7），（p6，p8），（p7，P8）} ",
        " →={（P1，P2），（P1，P4），（P2，P3），（P2，P5），（P3，P4），（P3，P6），（P4，P7），（P5，P6），（P5，P8），（P7，P6），（P6，P8）} "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 352241,
    "question_title": "<p>&nbsp;前趋图是一个有向无环图，记为→=｛（Pi，Pj）pi完成时间先于Pj开始时间｝。假设系统中进P=｛P1，P2，P3，P4，P5，P6，P7，P8｝，且进程的前趋图如下：</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663919241820569.png\" title=\"1663919241820569.png\" alt=\"image.png\"/><br/><p>那么，该前趋图可记为&nbsp;（1） ，图中&nbsp;（2） 。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 存在着11个前趋关系，P1为初始结点，P8为终止结点 ",
      " 存在着2个前趋关系，P6为初始结点，P2P4为终止结点 ",
      " 存在着9个前趋关系，P6为初始结点，P8为终止结点 ",
      " 在着10个前趋关系，P1为初始结点，P7为终止结点 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 32,
      "belong_page": 1,
      "question_id": 352241,
      "question_title": "<p>&nbsp;前趋图是一个有向无环图，记为→=｛（Pi，Pj）pi完成时间先于Pj开始时间｝。假设系统中进P=｛P1，P2，P3，P4，P5，P6，P7，P8｝，且进程的前趋图如下：</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663919241820569.png\" title=\"1663919241820569.png\" alt=\"image.png\"/><br/><p>那么，该前趋图可记为&nbsp;（1） ，图中&nbsp;（2） 。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352239,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 存在着11个前趋关系，P1为初始结点，P8为终止结点 ",
        " 存在着2个前趋关系，P6为初始结点，P2P4为终止结点 ",
        " 存在着9个前趋关系，P6为初始结点，P8为终止结点 ",
        " 在着10个前趋关系，P1为初始结点，P7为终止结点 "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 352244,
    "question_title": "<p><br/></p><p><br/></p><p><br/></p><p><br/></p><p>&nbsp;假设系统采用段式存储管理方法，进程P的段表如下所示。逻辑地址&nbsp;（1） 不能转换为对应的物理地址，可能的原因是&nbsp;（2） 。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663919367149566.png\" title=\"1663919367149566.png\" alt=\"image.png\"/>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " （0,790）和（2,388） ",
      " （1,30）和（3,290） ",
      " （2,88）和（4,98） ",
      " （0,310）和（4,50） "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 33,
      "belong_page": 1,
      "question_id": 352244,
      "question_title": "<p><br/></p><p><br/></p><p><br/></p><p><br/></p><p>&nbsp;假设系统采用段式存储管理方法，进程P的段表如下所示。逻辑地址&nbsp;（1） 不能转换为对应的物理地址，可能的原因是&nbsp;（2） 。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663919367149566.png\" title=\"1663919367149566.png\" alt=\"image.png\"/>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352243,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " （0,790）和（2,388） ",
        " （1,30）和（3,290） ",
        " （2,88）和（4,98） ",
        " （0,310）和（4,50） "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 352245,
    "question_title": "<p><br/></p><p><br/></p><p><br/></p><p><br/></p><p>&nbsp;假设系统采用段式存储管理方法，进程P的段表如下所示。逻辑地址&nbsp;（1） 不能转换为对应的物理地址，可能的原因是&nbsp;（2） 。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663919367149566.png\" title=\"1663919367149566.png\" alt=\"image.png\"/>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 数组下标运算没有检查是否越界 ",
      " 除零错 ",
      " 内存段分配失败 ",
      " 页面不在内存中 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 34,
      "belong_page": 1,
      "question_id": 352245,
      "question_title": "<p><br/></p><p><br/></p><p><br/></p><p><br/></p><p>&nbsp;假设系统采用段式存储管理方法，进程P的段表如下所示。逻辑地址&nbsp;（1） 不能转换为对应的物理地址，可能的原因是&nbsp;（2） 。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663919367149566.png\" title=\"1663919367149566.png\" alt=\"image.png\"/>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352243,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 数组下标运算没有检查是否越界 ",
        " 除零错 ",
        " 内存段分配失败 ",
        " 页面不在内存中 "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 352363,
    "question_title": "<p>&nbsp;某企业的生产流水线上有2名工人P1和P2，1名检验员P3。P1]将初步加工的半成品放入半成品箱B1；P2从半成品箱B1取出继续加工，加工好的产品放入成品箱B2；P3从成品箱B2取出产品检验。假设B1可存放n件半成品，B2可存放m件产品，并设置6个信号量S1、S2、S3、S4、S5和S6，且S3和S6的初值都为0。采用PV操作实现P1、P2和P3的同步模型如下图所示，则信号量S1和S5 （ ） ；S2、S4的初值分别为 （ ） 。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663934371811290.png\" title=\"1663934371811290.png\" alt=\"image.png\"/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 分别为同步信号量和互斥信号量，初值分别为0和1 ",
      " 都是同步信号量，其初值分别为0和0 ",
      " 都是互斥信号量，其初值分别为1和1 ",
      " 都是互斥信号量，其初值分别为0和1 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 35,
      "belong_page": 1,
      "question_id": 352363,
      "question_title": "<p>&nbsp;某企业的生产流水线上有2名工人P1和P2，1名检验员P3。P1]将初步加工的半成品放入半成品箱B1；P2从半成品箱B1取出继续加工，加工好的产品放入成品箱B2；P3从成品箱B2取出产品检验。假设B1可存放n件半成品，B2可存放m件产品，并设置6个信号量S1、S2、S3、S4、S5和S6，且S3和S6的初值都为0。采用PV操作实现P1、P2和P3的同步模型如下图所示，则信号量S1和S5 （ ） ；S2、S4的初值分别为 （ ） 。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663934371811290.png\" title=\"1663934371811290.png\" alt=\"image.png\"/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352362,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 分别为同步信号量和互斥信号量，初值分别为0和1 ",
        " 都是同步信号量，其初值分别为0和0 ",
        " 都是互斥信号量，其初值分别为1和1 ",
        " 都是互斥信号量，其初值分别为0和1 "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 352364,
    "question_title": "<p>&nbsp;某企业的生产流水线上有2名工人P1和P2，1名检验员P3。P1]将初步加工的半成品放入半成品箱B1；P2从半成品箱B1取出继续加工，加工好的产品放入成品箱B2；P3从成品箱B2取出产品检验。假设B1可存放n件半成品，B2可存放m件产品，并设置6个信号量S1、S2、S3、S4、S5和S6，且S3和S6的初值都为0。采用PV操作实现P1、P2和P3的同步模型如下图所示，则信号量S1和S5 （ ） ；S2、S4的初值分别为 （ ） 。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663934371811290.png\" title=\"1663934371811290.png\" alt=\"image.png\"/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " n、0 ",
      " m、0 ",
      " m、n ",
      " n、m "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 36,
      "belong_page": 1,
      "question_id": 352364,
      "question_title": "<p>&nbsp;某企业的生产流水线上有2名工人P1和P2，1名检验员P3。P1]将初步加工的半成品放入半成品箱B1；P2从半成品箱B1取出继续加工，加工好的产品放入成品箱B2；P3从成品箱B2取出产品检验。假设B1可存放n件半成品，B2可存放m件产品，并设置6个信号量S1、S2、S3、S4、S5和S6，且S3和S6的初值都为0。采用PV操作实现P1、P2和P3的同步模型如下图所示，则信号量S1和S5 （ ） ；S2、S4的初值分别为 （ ） 。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663934371811290.png\" title=\"1663934371811290.png\" alt=\"image.png\"/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352362,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " n、0 ",
        " m、0 ",
        " m、n ",
        " n、m "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 354813,
    "question_title": "【51CTO学堂-学员回忆版】以下关于 HTTPS 和 HTTP协议的描述中，不正确的是(13)",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "HTTPS协议使用加密传输",
      "HTTPS协议默认服务端口号是443",
      "HTTP协议默认服务端口是80",
      "电子支付类网站应使用 HTTP协议"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 37,
      "belong_page": 1,
      "question_id": 354813,
      "question_title": "【51CTO学堂-学员回忆版】以下关于 HTTPS 和 HTTP协议的描述中，不正确的是(13)",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354813,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "HTTPS协议使用加密传输",
        "HTTPS协议默认服务端口号是443",
        "HTTP协议默认服务端口是80",
        "电子支付类网站应使用 HTTP协议"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 354832,
    "question_title": "<p>工作流表示的是业务过程模型，通常使用图形形式来描述，以下不可用来描述工作流的是&nbsp;（28） 。</p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 活动图 ",
      " BPMN ",
      " 用例图 ",
      " Petri-Net "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 38,
      "belong_page": 1,
      "question_id": 354832,
      "question_title": "<p>工作流表示的是业务过程模型，通常使用图形形式来描述，以下不可用来描述工作流的是&nbsp;（28） 。</p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354832,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 活动图 ",
        " BPMN ",
        " 用例图 ",
        " Petri-Net "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 355046,
    "question_title": "<p>【51CTO学堂-学员回忆版】前趋图(PrecedcnceGraph)是一个有向无环图，记为:→={(Pi,Pj)}|Pi must complete before p2 may start}，假设系统中进程P={P1，P2，P3，P4，P5，P6，P7，P8}，且进程的前趋图如下图所示。那么，该前那图可记为（2）<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221106/1667717101577963.png\" title=\"1667717101577963.png\" alt=\"image.png\"/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " A.&nbsp; →={P1，P2)，(P1，P3)，(P1，P4)，(P2，P5)，(P3，P5)，(P4，P7)，(P5，P6)，(P5，P7)，(P7，P 6)，(P4，P5)，(P6，P7)，(P7，P8)} ",
      " B.&nbsp; →={P1，P2)，(P1，P3)，(P1,P4)，(P2，P3)，(P2，P5)，(P3，P4)，(P3，P6)， (P4，P7)， (P5，P6)， (P5，P8)， (P6，P7)， (P7,P8) } ",
      " C.&nbsp; →={P1，P2)，(P1，P3)，(P1，P4)，(P2，P3)，(P2，P5)，(P3，P4)，(P3，P5)，(P4，P6)，(P5，P7)，(P5，P8)， (P6，P7)， (P7,P8)} ",
      " D.&nbsp; →={P1，P2)，(P1，P3)，(P2，P3)，(P2，P5)，(P3，P4)，(P3，P6)，(P4，P7)， (P5，P6)， (P5，P8)， (P6，P7)， (P6,P8)， (P7, P8)} "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 39,
      "belong_page": 1,
      "question_id": 355046,
      "question_title": "<p>【51CTO学堂-学员回忆版】前趋图(PrecedcnceGraph)是一个有向无环图，记为:→={(Pi,Pj)}|Pi must complete before p2 may start}，假设系统中进程P={P1，P2，P3，P4，P5，P6，P7，P8}，且进程的前趋图如下图所示。那么，该前那图可记为（2）<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221106/1667717101577963.png\" title=\"1667717101577963.png\" alt=\"image.png\"/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 355046,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " A.&nbsp; →={P1，P2)，(P1，P3)，(P1，P4)，(P2，P5)，(P3，P5)，(P4，P7)，(P5，P6)，(P5，P7)，(P7，P 6)，(P4，P5)，(P6，P7)，(P7，P8)} ",
        " B.&nbsp; →={P1，P2)，(P1，P3)，(P1,P4)，(P2，P3)，(P2，P5)，(P3，P4)，(P3，P6)， (P4，P7)， (P5，P6)， (P5，P8)， (P6，P7)， (P7,P8) } ",
        " C.&nbsp; →={P1，P2)，(P1，P3)，(P1，P4)，(P2，P3)，(P2，P5)，(P3，P4)，(P3，P5)，(P4，P6)，(P5，P7)，(P5，P8)， (P6，P7)， (P7,P8)} ",
        " D.&nbsp; →={P1，P2)，(P1，P3)，(P2，P3)，(P2，P5)，(P3，P4)，(P3，P6)，(P4，P7)， (P5，P6)， (P5，P8)， (P6，P7)， (P6,P8)， (P7, P8)} "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 355050,
    "question_title": "<p>【51CTO学堂-学员回忆版】数据资产的特征包括(18)</p><p>①可增值②可测试③可共享④可维护⑤可控制⑥可量化</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "①②③④",
      "①②③⑤",
      "①②④⑤",
      "①③⑤⑥"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 40,
      "belong_page": 1,
      "question_id": 355050,
      "question_title": "<p>【51CTO学堂-学员回忆版】数据资产的特征包括(18)</p><p>①可增值②可测试③可共享④可维护⑤可控制⑥可量化</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 355050,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "①②③④",
        "①②③⑤",
        "①②④⑤",
        "①③⑤⑥"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 371452,
    "question_title": "<p>假设系统采用段式存储管理方法，进程P的段表如下所示。逻辑地址 （1） 不能转换为对应的物理地址，可能的原因是 （2） 。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230916/1694865952262531.png\" title=\"1694865952262531.png\" alt=\"image.png\"/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "（0,790）和（2,388）",
      "（1,30）和（3,290）",
      "（2,88）和（4,98）",
      "（0,310）和（4,50）"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 41,
      "belong_page": 1,
      "question_id": 371452,
      "question_title": "<p>假设系统采用段式存储管理方法，进程P的段表如下所示。逻辑地址 （1） 不能转换为对应的物理地址，可能的原因是 （2） 。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230916/1694865952262531.png\" title=\"1694865952262531.png\" alt=\"image.png\"/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371451,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "（0,790）和（2,388）",
        "（1,30）和（3,290）",
        "（2,88）和（4,98）",
        "（0,310）和（4,50）"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 371453,
    "question_title": "<p>假设系统采用段式存储管理方法，进程P的段表如下所示。逻辑地址 （1） 不能转换为对应的物理地址，可能的原因是 （2） 。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230916/1694865952262531.png\" title=\"1694865952262531.png\" alt=\"image.png\"/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "数组下标运算没有检查是否越界",
      "除零错",
      "内存段分配失败",
      "页面不在内存中"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 42,
      "belong_page": 1,
      "question_id": 371453,
      "question_title": "<p>假设系统采用段式存储管理方法，进程P的段表如下所示。逻辑地址 （1） 不能转换为对应的物理地址，可能的原因是 （2） 。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230916/1694865952262531.png\" title=\"1694865952262531.png\" alt=\"image.png\"/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371451,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "数组下标运算没有检查是否越界",
        "除零错",
        "内存段分配失败",
        "页面不在内存中"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 371906,
    "question_title": "<p>软件脆弱性是软件中存在的弱点（或缺陷），利用它可以危害系统安全策略，导致信息丢失、系统价值和可用性降低。嵌入式系统软件架构通常采用分层架构，它可以将问题分解为一系列相对独立的子问题，局部化在每一层中，从而有效地降低单个问题的规模和复杂性，实现复杂系统的分解。但是，分层架构仍然存在脆弱性。常见的分层架构的脆弱性包括（12）等两个方面。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 底层发生错误会导致整个系统无法正常运行、层与层之间功能引用可能导致功能失效 ",
      " 底层发生错误会导致整个系统无法正常运行、层与层之间引入通信机制势必造成性能下降 ",
      " 上层发生错误会导致整个系统无法正常运行、层与层之间引入通信机制势必造成性能下降 ",
      " 上层发生错误会导致整个系统无法正常运行、层与层之间功能引用可能导致功能失效 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 43,
      "belong_page": 1,
      "question_id": 371906,
      "question_title": "<p>软件脆弱性是软件中存在的弱点（或缺陷），利用它可以危害系统安全策略，导致信息丢失、系统价值和可用性降低。嵌入式系统软件架构通常采用分层架构，它可以将问题分解为一系列相对独立的子问题，局部化在每一层中，从而有效地降低单个问题的规模和复杂性，实现复杂系统的分解。但是，分层架构仍然存在脆弱性。常见的分层架构的脆弱性包括（12）等两个方面。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371906,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 底层发生错误会导致整个系统无法正常运行、层与层之间功能引用可能导致功能失效 ",
        " 底层发生错误会导致整个系统无法正常运行、层与层之间引入通信机制势必造成性能下降 ",
        " 上层发生错误会导致整个系统无法正常运行、层与层之间引入通信机制势必造成性能下降 ",
        " 上层发生错误会导致整个系统无法正常运行、层与层之间功能引用可能导致功能失效 "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 371911,
    "question_title": "进行系统监视通常有三种方式：一是通过（1） ，如UNIX／Linux系统中的ps、last等；二是通过系统记录文件查阅系统在特定时间内的运行状态；三是集成命令、文件记录和可视化技术的监控工具，如 （2）。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "系统命令",
      "系统调用",
      "系统接口",
      "系统功能"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 44,
      "belong_page": 1,
      "question_id": 371911,
      "question_title": "进行系统监视通常有三种方式：一是通过（1） ，如UNIX／Linux系统中的ps、last等；二是通过系统记录文件查阅系统在特定时间内的运行状态；三是集成命令、文件记录和可视化技术的监控工具，如 （2）。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371910,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "系统命令",
        "系统调用",
        "系统接口",
        "系统功能"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 371912,
    "question_title": "进行系统监视通常有三种方式：一是通过（1） ，如UNIX／Linux系统中的ps、last等；二是通过系统记录文件查阅系统在特定时间内的运行状态；三是集成命令、文件记录和可视化技术的监控工具，如 （2）。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "Windows的netstat",
      "Linux的iptables",
      "Windows的Perfmon",
      "Linux的top"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 45,
      "belong_page": 1,
      "question_id": 371912,
      "question_title": "进行系统监视通常有三种方式：一是通过（1） ，如UNIX／Linux系统中的ps、last等；二是通过系统记录文件查阅系统在特定时间内的运行状态；三是集成命令、文件记录和可视化技术的监控工具，如 （2）。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371910,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "Windows的netstat",
        "Linux的iptables",
        "Windows的Perfmon",
        "Linux的top"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 371956,
    "question_title": "中间件是提供平台和应用之间的通用服务，这些服务具有标准的程序接口和协议。中间件的基本功能包括：为客户端和服务器之间提供（1）；提供（2）保证交易的一致性；提供应用的 （3） 。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "连接和通信",
      "应用程序接口",
      "通信协议支持",
      "数据交换标准"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 46,
      "belong_page": 1,
      "question_id": 371956,
      "question_title": "中间件是提供平台和应用之间的通用服务，这些服务具有标准的程序接口和协议。中间件的基本功能包括：为客户端和服务器之间提供（1）；提供（2）保证交易的一致性；提供应用的 （3） 。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371955,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "连接和通信",
        "应用程序接口",
        "通信协议支持",
        "数据交换标准"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 371957,
    "question_title": "中间件是提供平台和应用之间的通用服务，这些服务具有标准的程序接口和协议。中间件的基本功能包括：为客户端和服务器之间提供（1）；提供（2）保证交易的一致性；提供应用的 （3） 。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "安全控制机制",
      "交易管理机制",
      "标准消息格式",
      "数据映射机制"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 47,
      "belong_page": 1,
      "question_id": 371957,
      "question_title": "中间件是提供平台和应用之间的通用服务，这些服务具有标准的程序接口和协议。中间件的基本功能包括：为客户端和服务器之间提供（1）；提供（2）保证交易的一致性；提供应用的 （3） 。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371955,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "安全控制机制",
        "交易管理机制",
        "标准消息格式",
        "数据映射机制"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 371958,
    "question_title": "中间件是提供平台和应用之间的通用服务，这些服务具有标准的程序接口和协议。中间件的基本功能包括：为客户端和服务器之间提供（1）；提供（2）保证交易的一致性；提供应用的 （3） 。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "基础硬件平台",
      "操作系统服务",
      " 网络和数据库 ",
      " 负载均衡和高可用性 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 48,
      "belong_page": 1,
      "question_id": 371958,
      "question_title": "中间件是提供平台和应用之间的通用服务，这些服务具有标准的程序接口和协议。中间件的基本功能包括：为客户端和服务器之间提供（1）；提供（2）保证交易的一致性；提供应用的 （3） 。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371955,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "基础硬件平台",
        "操作系统服务",
        " 网络和数据库 ",
        " 负载均衡和高可用性 "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 373637,
    "question_title": "<p>前趋图是一个有向无环图，记为→=｛（Pi,Pj）Pi完成时间先于Pj开始时间｝。假设系统中进程P=｛P1，P2，P3，P4，P5，P6，P7，P8｝，且进程的前趋图如下：</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696264447242874.png\" title=\"1696264447242874.png\" alt=\"image.png\" width=\"344\" height=\"208\"/></p><p><br/></p><p>那么，该前趋图可记为（ 6 ），图中（ 7 ）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "→={（P1,P2）,（P1,P3）,（P1,P4）,（P2,P4）,（P3,P4）,（P3,P5）,（P4,P5）,（P5,P6）,（P5,P7）,（P5,P8）,（P6,P7）}",
      "→={（P1,P2）,（P1,P3）,（P1,P4）,（P2,P3）,（P2,P4）,（P3,P5）,（P4,P5）,（P5,P6）,（P5,P7）,（P5,P8）,（P6,P7）}",
      "→={（P1,P2）,（P1,P3）,（P1,P4）,（P2,P4）,（P3,P4）,（P3,P5）,（P4,P6）,（P5,P6）,（P5,P7）,（P5,P8）,（P6,P7）}",
      "→={（P1,P2）,（P1,P3）,（P1,P4）,（P2,P4）,（P3,P4）,（P3,P5）,（P4,P5）,（P5,P6）,（P5,P7）,（P5,P8）}"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 49,
      "belong_page": 1,
      "question_id": 373637,
      "question_title": "<p>前趋图是一个有向无环图，记为→=｛（Pi,Pj）Pi完成时间先于Pj开始时间｝。假设系统中进程P=｛P1，P2，P3，P4，P5，P6，P7，P8｝，且进程的前趋图如下：</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696264447242874.png\" title=\"1696264447242874.png\" alt=\"image.png\" width=\"344\" height=\"208\"/></p><p><br/></p><p>那么，该前趋图可记为（ 6 ），图中（ 7 ）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373636,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "→={（P1,P2）,（P1,P3）,（P1,P4）,（P2,P4）,（P3,P4）,（P3,P5）,（P4,P5）,（P5,P6）,（P5,P7）,（P5,P8）,（P6,P7）}",
        "→={（P1,P2）,（P1,P3）,（P1,P4）,（P2,P3）,（P2,P4）,（P3,P5）,（P4,P5）,（P5,P6）,（P5,P7）,（P5,P8）,（P6,P7）}",
        "→={（P1,P2）,（P1,P3）,（P1,P4）,（P2,P4）,（P3,P4）,（P3,P5）,（P4,P6）,（P5,P6）,（P5,P7）,（P5,P8）,（P6,P7）}",
        "→={（P1,P2）,（P1,P3）,（P1,P4）,（P2,P4）,（P3,P4）,（P3,P5）,（P4,P5）,（P5,P6）,（P5,P7）,（P5,P8）}"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 373745,
    "question_title": "关于多核CPU环境下进程的调度算法，以下说法正确的是：（26 ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "全局队列调度优点是缓存利用率高",
      "全局队列调度缺点是CPU利用率低",
      "局部队列调度优点是从全局任务等待队列中选取就绪任务并执行",
      "局部队列调度缺点是CPU利用率低"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 50,
      "belong_page": 1,
      "question_id": 373745,
      "question_title": "关于多核CPU环境下进程的调度算法，以下说法正确的是：（26 ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373745,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "全局队列调度优点是缓存利用率高",
        "全局队列调度缺点是CPU利用率低",
        "局部队列调度优点是从全局任务等待队列中选取就绪任务并执行",
        "局部队列调度缺点是CPU利用率低"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 507273,
    "question_title": "<p>操作系统低优先级进程被高优进程抢占或者时间片用光，由执行态变为 （ ） 状态。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 就绪 ",
      " 挂起 ",
      " 睡眠 ",
      " 阻塞 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 51,
      "belong_page": 1,
      "question_id": 507273,
      "question_title": "<p>操作系统低优先级进程被高优进程抢占或者时间片用光，由执行态变为 （ ） 状态。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507273,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 就绪 ",
        " 挂起 ",
        " 睡眠 ",
        " 阻塞 "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 507290,
    "question_title": "段式存储分段的段长是（ ）的。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "固定",
      "相等",
      "可动态变化的",
      "不可变的"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 52,
      "belong_page": 1,
      "question_id": 507290,
      "question_title": "段式存储分段的段长是（ ）的。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507290,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "固定",
        "相等",
        "可动态变化的",
        "不可变的"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 507322,
    "question_title": "<p>应用程序在用户态使用特权指令进行系统调用，是( )</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 信号中断 ",
      " 溢出中断 ",
      " 访管中断 ",
      " 外部中断 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 53,
      "belong_page": 1,
      "question_id": 507322,
      "question_title": "<p>应用程序在用户态使用特权指令进行系统调用，是( )</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507322,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 信号中断 ",
        " 溢出中断 ",
        " 访管中断 ",
        " 外部中断 "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 523233,
    "question_title": "<p>页内大小4KB,存储内存16GB，位示图占用（）KB。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 512KB ",
      " 256KB&nbsp; ",
      " 128KB&nbsp; ",
      " 64KB "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 54,
      "belong_page": 1,
      "question_id": 523233,
      "question_title": "<p>页内大小4KB,存储内存16GB，位示图占用（）KB。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523233,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 512KB ",
        " 256KB&nbsp; ",
        " 128KB&nbsp; ",
        " 64KB "
      ],
      "user_answer": [],
      "is_right": 0,
      "result": 0
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 523241,
    "question_title": "5个进程各需要2个资源，至少提供（）个资源才能避免死锁。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "5个",
      "6个",
      "8个",
      "10个"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 55,
      "belong_page": 1,
      "question_id": 523241,
      "question_title": "5个进程各需要2个资源，至少提供（）个资源才能避免死锁。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523241,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "5个",
        "6个",
        "8个",
        "10个"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": 0
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 523245,
    "question_title": "下列选项中会导致线程从执行态变为就绪态的是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "键盘输入",
      "主动让出CPU",
      "执行信号量的wait（）操作",
      "缺页异常"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 56,
      "belong_page": 1,
      "question_id": 523245,
      "question_title": "下列选项中会导致线程从执行态变为就绪态的是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523245,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "键盘输入",
        "主动让出CPU",
        "执行信号量的wait（）操作",
        "缺页异常"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": 0
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 523297,
    "question_title": "用户首次打开文件时，系统首先执行的操作是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "读FCB到内存",
      "读文件到缓存区",
      "读文件到内存",
      "修改文件权限"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 57,
      "belong_page": 1,
      "question_id": 523297,
      "question_title": "用户首次打开文件时，系统首先执行的操作是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523297,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "读FCB到内存",
        "读文件到缓存区",
        "读文件到内存",
        "修改文件权限"
      ],
      "user_answer": [],
      "is_right": 0,
      "result": 0
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9348",
    "section_name": "计算机系统基础知识（第二版） - 计算机软件",
    "question_id": 309536,
    "question_title": "<p>【问题1】（12分）</p><p>请用300字以内文字说明什么是多核技术和多线程技术，并回答李工的意见是否正确，为什么？</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>多内核是指在一枚处理器中集成两个或多个完整的计算引擎（内核）。多核处理器是单枚芯片（也称为硅核），能够直接插入单一的处理器插槽中，但操作系统会利用所有相关的资源，将它的每个执行内核作为分立的逻辑处理器。通过在多个执行内核之间划分任务，多核处理器可在特定的时钟周期内执行更多任务。</p><p>多线程是指从软件或者硬件上实现多个线程并发执行的技术。具有多线程能力的计算机因有硬件支持而能够在同一时间执行多于一个线程，进而提升整体处理性能。</p><p>李工的意见正确。多核处理器虽然带来了强大的计算能力，但如果无法实现程序的并行，那么，大量计算资源将被闲置，造成巨大的浪费。操作系统完成多核资源的调度，在一定程度上会提高CPU的利用率。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 58,
      "belong_page": 1,
      "question_id": 309536,
      "question_title": "<p>【问题1】（12分）</p><p>请用300字以内文字说明什么是多核技术和多线程技术，并回答李工的意见是否正确，为什么？</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 309535,
      "score_rule": "",
      "material_text": "<p>试题三（共25分）</p><p>阅读以下关于嵌入式多核程序设计技术的描述，回答问题1至问题3。</p><p>【说明】</p><p>近年来，多核技术已被广泛应用于众多安全关键领域（如：航空航天等）的电子设备中，面向多核技术的并行程序设计方法已成为软件人员急需掌握的主要技能之一。某宇航公司长期从事宇航电子设备的研制工作，随着宇航装备能力需求的提升，急需采用多核技术以增强设备的运算能力、降低功耗与体积，快速实现设备的升级与换代。针对面向多核开发，王工认为多核技术是对用户程序透明的，开发应把重点放在多核硬件架构和硬件模块设计上面，而软件方面，仅仅需要选择一款支持多核处理器的操作系统即可。而李工认为，多核架构能够使现有的软件更高效地运行，构建一个完善的软件架构是非常必要的。提高多核的利用率不能仅靠操作系统，还要求软件开发人员在程序设计中考虑多进程或者多线程并行处理的编程问题。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>多内核是指在一枚处理器中集成两个或多个完整的计算引擎（内核）。多核处理器是单枚芯片（也称为硅核），能够直接插入单一的处理器插槽中，但操作系统会利用所有相关的资源，将它的每个执行内核作为分立的逻辑处理器。通过在多个执行内核之间划分任务，多核处理器可在特定的时钟周期内执行更多任务。</p><p>多线程是指从软件或者硬件上实现多个线程并发执行的技术。具有多线程能力的计算机因有硬件支持而能够在同一时间执行多于一个线程，进而提升整体处理性能。</p><p>李工的意见正确。多核处理器虽然带来了强大的计算能力，但如果无法实现程序的并行，那么，大量计算资源将被闲置，造成巨大的浪费。操作系统完成多核资源的调度，在一定程度上会提高CPU的利用率。</p>"
      ],
      "option": null,
      "user_answer": [],
      "is_right": 0,
      "result": "0"
    },
    "crawl_time": 1753176820.0090413
  },
  {
    "section_id": "9349",
    "section_name": "计算机系统基础知识（第二版） - 嵌入式系统及软件",
    "question_id": 43744,
    "question_title": "<p>在嵌入式操作系统中，板级支持包（BSP）作为对硬件的抽象，实现了（ &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 硬件无关性，操作系统无关性 ",
      " 硬件有关性，操作系统有关性 ",
      " 硬件无关性，操作系统有关性 ",
      " 硬件有关性，操作系统无关性 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43744,
      "question_title": "<p>在嵌入式操作系统中，板级支持包（BSP）作为对硬件的抽象，实现了（ &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43744,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 硬件无关性，操作系统无关性 ",
        " 硬件有关性，操作系统有关性 ",
        " 硬件无关性，操作系统有关性 ",
        " 硬件有关性，操作系统无关性 "
      ]
    },
    "crawl_time": 1753176821.2559123
  },
  {
    "section_id": "9349",
    "section_name": "计算机系统基础知识（第二版） - 嵌入式系统及软件",
    "question_id": 43746,
    "question_title": "<p><br/></p><p><br/></p><p class=\"MsoNormal\" style=\"text-indent:20.7000pt;text-align:left;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">嵌入式软件设计需要考虑</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">(11)</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">以保障软件良好的可移植性。</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;mso-hansi-font-family:&#39;Times New Roman&#39;;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 先进性&nbsp; ",
      " 易用性&nbsp; ",
      " 硬件无关性&nbsp; ",
      " 可靠性 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 43746,
      "question_title": "<p><br/></p><p><br/></p><p class=\"MsoNormal\" style=\"text-indent:20.7000pt;text-align:left;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">嵌入式软件设计需要考虑</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">(11)</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">以保障软件良好的可移植性。</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;mso-hansi-font-family:&#39;Times New Roman&#39;;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43746,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 先进性&nbsp; ",
        " 易用性&nbsp; ",
        " 硬件无关性&nbsp; ",
        " 可靠性 "
      ]
    },
    "crawl_time": 1753176821.2559123
  },
  {
    "section_id": "9349",
    "section_name": "计算机系统基础知识（第二版） - 嵌入式系统及软件",
    "question_id": 373663,
    "question_title": "嵌入式操作系统运行在嵌入式智能芯片环境中，对整个智能芯片以及它所操作、控制的各种部件装置等资源进行统一协调、处理、指挥和控制。其特点是：（27 ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "微型化，可定制，易移植性，实时性，可靠性",
      "各结点自治性好，资源共享透明性强但控制机构复杂",
      "多路性、独立性、及时性、交互性和同时性",
      "资源利用率高，系统吞吐量大，但作业的平均周转时间较长"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 373663,
      "question_title": "嵌入式操作系统运行在嵌入式智能芯片环境中，对整个智能芯片以及它所操作、控制的各种部件装置等资源进行统一协调、处理、指挥和控制。其特点是：（27 ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373663,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "微型化，可定制，易移植性，实时性，可靠性",
        "各结点自治性好，资源共享透明性强但控制机构复杂",
        "多路性、独立性、及时性、交互性和同时性",
        "资源利用率高，系统吞吐量大，但作业的平均周转时间较长"
      ]
    },
    "crawl_time": 1753176821.2559123
  },
  {
    "section_id": "9349",
    "section_name": "计算机系统基础知识（第二版） - 嵌入式系统及软件",
    "question_id": 45949,
    "question_title": "<p><br/></p><p style=\"text-indent:32px\">试题三（25分）</p><p>阅读以下关于嵌入式实时系统设计的描述，回答问题1至问题3。</p><p style=\"margin-top:5px;text-indent:28px;text-align:left\">【说明】</p><p>嵌入式系统是当前航空、航天、船舶及工业、医疗等领域的核心技术，嵌入式系统可包括实时系统与非实时系统两种。某宇航公司长期从事航空航天飞行器电子设备的研制工作，随着业务的扩大，需要大量大学毕业生补充到科研生产部门。按照公司规定，大学毕业生必须进行相关基础知识培训，为此，公司经理安排王工对他们进行了长达一个月的培训。</p><p>【问题1】（7分）</p><p>王工在培训中指出：嵌入式系统主要负责对设备的各种传感器进行管理与控制。而航空航天飞行器的电子设备由于对时间具有很强的敏感性，通常由嵌入式实时系统进行管控，请用300字以内文字说明什么是实时系统，实时系统有哪些主要特性。</p><p>【问题2】（8分）</p><p>实时系统根据应用场景、时间特征以及工作方式的不同，存在多种实时特性，大致有三种分类方法，即时间类别、时间需求和工作方式结构。根据自己所掌握的“实时性”知识，将图3-1给出的实时特性按三种分类方式，填写图3-1中(1)～(8)处空白。</p><p>备选答案：时限的危害程度；时间角包；弱；时间响应；固定；时限／反应时间；时间明确；输入输出激励；时间触发；强；周期／零星／非周期；事件触发。</p><p><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20180827/1535370602311148.png\" title=\"1535370602311148.png\" alt=\"图片.png\"/><br/></p><p>【问题3】（10分）</p><p>可靠性是实时系统的关键特性之一，区分软件的错误(Error)、缺陷（Defect）、故障(Fault)和失效(Failure)概念是软件可靠性设计工作的基础。请简要说明错误、缺陷、故障和失效的定义；并在图3-2中标出错误、缺陷和失效出现阶段，说明缺陷、故障和失效的表现形式，填写图3-2中(1)～(6)处的空白。</p><p><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20180827/1535370630642241.png\" title=\"1535370630642241.png\" alt=\"图片.png\"/><br/><br/></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>参考答案：</p><p>实时系统是指向系统发出一指令后，在一个极短的时间内，系统回复结果。</p><p>实时系统的特性：</p><p>（1）时间约束性（及时性）</p><p>（2）可预测性</p><p>（3）高可靠性</p><p>（4）与外部环境的交互作用性</p><p>（5）多任务类型</p><p>（6）约束的复杂性</p><p>（7）具有短暂超载的特点</p><p>参考答案：</p><p>（1）强</p><p>（2）（3）时间响应、时间明确</p><p>（4）（5）（6）时限/反应时间、输入/输出激励、周期/零星/非周期</p><p>（7）（8）时间触发、事件触发</p><p>参考答案：</p><p>软件错误：软件错误是指在软件生存期内的不希望或不可接受的人为错误，其结果是导致软件缺陷的产生。</p><p>软件缺陷：软件缺陷是存在于软件（文档、数据、程序）之中的那些不希望或不可接受的偏差。</p><p>软件故障：软件故障是指软件运行过程中出现的一种不希望或不可接受的内部状态。</p><p>软件失效：软件失效是指软件运行时产生 的一种不希望或不可接受的外部行为结果。</p><p>（1）存在</p><p>（2）引起</p><p>（3）用户经历</p><p>（4）在开发过程中</p><p>（5）在产品中</p><p>（6）在运行时</p><p><br/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 45949,
      "question_title": "<p><br/></p><p style=\"text-indent:32px\">试题三（25分）</p><p>阅读以下关于嵌入式实时系统设计的描述，回答问题1至问题3。</p><p style=\"margin-top:5px;text-indent:28px;text-align:left\">【说明】</p><p>嵌入式系统是当前航空、航天、船舶及工业、医疗等领域的核心技术，嵌入式系统可包括实时系统与非实时系统两种。某宇航公司长期从事航空航天飞行器电子设备的研制工作，随着业务的扩大，需要大量大学毕业生补充到科研生产部门。按照公司规定，大学毕业生必须进行相关基础知识培训，为此，公司经理安排王工对他们进行了长达一个月的培训。</p><p>【问题1】（7分）</p><p>王工在培训中指出：嵌入式系统主要负责对设备的各种传感器进行管理与控制。而航空航天飞行器的电子设备由于对时间具有很强的敏感性，通常由嵌入式实时系统进行管控，请用300字以内文字说明什么是实时系统，实时系统有哪些主要特性。</p><p>【问题2】（8分）</p><p>实时系统根据应用场景、时间特征以及工作方式的不同，存在多种实时特性，大致有三种分类方法，即时间类别、时间需求和工作方式结构。根据自己所掌握的“实时性”知识，将图3-1给出的实时特性按三种分类方式，填写图3-1中(1)～(8)处空白。</p><p>备选答案：时限的危害程度；时间角包；弱；时间响应；固定；时限／反应时间；时间明确；输入输出激励；时间触发；强；周期／零星／非周期；事件触发。</p><p><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20180827/1535370602311148.png\" title=\"1535370602311148.png\" alt=\"图片.png\"/><br/></p><p>【问题3】（10分）</p><p>可靠性是实时系统的关键特性之一，区分软件的错误(Error)、缺陷（Defect）、故障(Fault)和失效(Failure)概念是软件可靠性设计工作的基础。请简要说明错误、缺陷、故障和失效的定义；并在图3-2中标出错误、缺陷和失效出现阶段，说明缺陷、故障和失效的表现形式，填写图3-2中(1)～(6)处的空白。</p><p><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20180827/1535370630642241.png\" title=\"1535370630642241.png\" alt=\"图片.png\"/><br/><br/></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 45949,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>参考答案：</p><p>实时系统是指向系统发出一指令后，在一个极短的时间内，系统回复结果。</p><p>实时系统的特性：</p><p>（1）时间约束性（及时性）</p><p>（2）可预测性</p><p>（3）高可靠性</p><p>（4）与外部环境的交互作用性</p><p>（5）多任务类型</p><p>（6）约束的复杂性</p><p>（7）具有短暂超载的特点</p><p>参考答案：</p><p>（1）强</p><p>（2）（3）时间响应、时间明确</p><p>（4）（5）（6）时限/反应时间、输入/输出激励、周期/零星/非周期</p><p>（7）（8）时间触发、事件触发</p><p>参考答案：</p><p>软件错误：软件错误是指在软件生存期内的不希望或不可接受的人为错误，其结果是导致软件缺陷的产生。</p><p>软件缺陷：软件缺陷是存在于软件（文档、数据、程序）之中的那些不希望或不可接受的偏差。</p><p>软件故障：软件故障是指软件运行过程中出现的一种不希望或不可接受的内部状态。</p><p>软件失效：软件失效是指软件运行时产生 的一种不希望或不可接受的外部行为结果。</p><p>（1）存在</p><p>（2）引起</p><p>（3）用户经历</p><p>（4）在开发过程中</p><p>（5）在产品中</p><p>（6）在运行时</p><p><br/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176821.2559123
  },
  {
    "section_id": "9349",
    "section_name": "计算机系统基础知识（第二版） - 嵌入式系统及软件",
    "question_id": 54271,
    "question_title": "<p>A公司承担了一项嵌入式实时控制系统的软件开发任务，其内容是按系统要求的固定的时间序列采集、处理、输出数据，以实现对多个设备的综合控制。<br/>系统由硬件和软件组成，硬件由处理机（采用PowerPC603e，主频133 MHz）、存储器、定时器、中断控制器、双口存储器（空间大小1024 KB）、4路422半双工串口接口（其中两路的频率115200 Hz，另两路频率38400 Hz）、两路A/D、D/A数模转换器和10路离散量接口组成。系统的软件需求如下：<br/>（1）系统要求以5 ms为周期从双口存储器中采集1024 KB的输入数据，处理任务的时间约为1ms（称为5ms任务）。<br/>（2）系统要求以20 ms为周期从两路422接口（115200 Hz）中采集一定格式的大小为64B的数据，在完成处理（处理时间约为4 ms）任务后，分别输出大小为16 B的控制命令（称为20 ms任务）。<br/>（3）系统要求以60 ms为周期从两路422接口（38400 Hz）中采集一定数据格式的大小为6 B数据，从两路A/D接口采集28位数据，在完成处理（处理时间约为2 ms）任务后，分别输出大小为2 B的控制命令和一个28位D/A数据，输出8路离散量控制数据（称为60ms任务）；<br/>（4）作为系统的安全监控保障，系统要求在每1s内对系统软硬件状态进行测试并完成系统工作的状态记录工作。该任务共需处理时间是5ms（称为1s任务）。<br/>A公司课题组根据用户的硬件环境及软件的需求，就软件的实施方案展开了激烈的讨论，讨论的首要问题就是本系统中软件的运行平台是采用嵌入式实时操作系统还是在裸机上直接开发的方式，李工提出为了保证系统的实时性，应该采用裸机上直接开发的方式，关键部分采用汇编语言编写，而王工提出，由于系统将由多种周期的处理任务组成，为了保证系统的可靠性，应该采用商用嵌入式实时操作系统作为本项目的开发基础，经过充分论证，最后李工接受了王工的建议，并申报课题组组长，课题组长同意采用了操作系统的方案，并指出必须尽快对需求的时间性能做出评估。<br/>【问题1】<br/>请用450字以内文字简要说明王工提出的采用嵌入式实时操作系统的理由或优点，并说明选择操作系统产品时需要重点考虑其哪些功能与性能？<br/>【问题2】<br/>李工和王工通过认真地对需求进行分析，给出了时间性能评估报告，判定在上述硬件平台上可以满足系统要求。请用300字以内文字简要说明嵌入式实时操作系统中时间性能评估中主要考虑哪几项因素；针对本课题的具体数据，叙述系统的工作时序关系。<br/>【问题3】<br/>根据系统需求，请设计出系统的处理流程（按时序），说明所有任务的优先级分配策略，422接口、双口存储器、离散量接口和A/D（D/A）的数据输入输出方法（中断或查询驱动）及理由。请用350字以内文字简要说明。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题1】<br/>采用嵌入式实时操作系统的主要理由及优点：<br/>操作系统提供的任务调度功能，可以有效地管理本系统多周期任务的调度，并且操作系统提供的事件、信号和任务间的通信机制，可以有效地解决本系统中资源共享中的互斥问题。<br/>采用商品化的软件，可提高所开发软件的可靠性，还可简化软件开发成本，提高开发效率。<br/>选择嵌入式实时操作系统，主要考虑操作系统以下功能和性能：<br/>（1）任务的上下文切换时间越短越好、中断响应时间越快越好、内核代码占用空间比较小。<br/>（2）操作系统提供的服务接口应较丰富，有利于灵活使用（接口的开放性）。<br/>（3）操作系统对可靠性有较强的保障支持能力。<br/>（4）使用简单，支撑环境配套好，可配置、可剪裁能力强。<br/>【问题2】<br/>嵌入式实时系统中时间性能评估主要考虑以下几个因素：<br/>（1）系统（操作系统）时间开销，一般不大于整个控制系统运行时间总开销的20%。<br/>（2）保证所有任务在规定的时间期限内完成（或进行可调度性评估）。<br/>（3）任务的上下文切换时间和中断响应时间。<br/>针对本题的具体数据，系统的工作时序关系应该是：<br/>系统的最小时间节拍定义为5ms，系统最大工作周期为1s，在每个5ms起点，5ms任务首先运行，占1ms时间，完成后转入处理被终止的任务；如果这个时刻时间到达20 ms的起点，则启动20ms任务运行，以此类推，确保在1s周期内所有任务按规定的时间序列执行。<br/>【问题3】<br/>优先级策略：小周期优先策略。<br/>数据输入输出处理方式：422接口适合采用中断方式，主要因为处理机速度远远比数据传输速度快，在采集时不易消耗太多的时间，而查询方式由于存在等待数据时间，消耗处理机时间较大。双口存储器和离散量接口由于是直接访问存储器，采用查询较合适。A/D、D/A存在数据的转换时间，应在等待时交出处理机时间（定时查询）。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 54271,
      "question_title": "<p>A公司承担了一项嵌入式实时控制系统的软件开发任务，其内容是按系统要求的固定的时间序列采集、处理、输出数据，以实现对多个设备的综合控制。<br/>系统由硬件和软件组成，硬件由处理机（采用PowerPC603e，主频133 MHz）、存储器、定时器、中断控制器、双口存储器（空间大小1024 KB）、4路422半双工串口接口（其中两路的频率115200 Hz，另两路频率38400 Hz）、两路A/D、D/A数模转换器和10路离散量接口组成。系统的软件需求如下：<br/>（1）系统要求以5 ms为周期从双口存储器中采集1024 KB的输入数据，处理任务的时间约为1ms（称为5ms任务）。<br/>（2）系统要求以20 ms为周期从两路422接口（115200 Hz）中采集一定格式的大小为64B的数据，在完成处理（处理时间约为4 ms）任务后，分别输出大小为16 B的控制命令（称为20 ms任务）。<br/>（3）系统要求以60 ms为周期从两路422接口（38400 Hz）中采集一定数据格式的大小为6 B数据，从两路A/D接口采集28位数据，在完成处理（处理时间约为2 ms）任务后，分别输出大小为2 B的控制命令和一个28位D/A数据，输出8路离散量控制数据（称为60ms任务）；<br/>（4）作为系统的安全监控保障，系统要求在每1s内对系统软硬件状态进行测试并完成系统工作的状态记录工作。该任务共需处理时间是5ms（称为1s任务）。<br/>A公司课题组根据用户的硬件环境及软件的需求，就软件的实施方案展开了激烈的讨论，讨论的首要问题就是本系统中软件的运行平台是采用嵌入式实时操作系统还是在裸机上直接开发的方式，李工提出为了保证系统的实时性，应该采用裸机上直接开发的方式，关键部分采用汇编语言编写，而王工提出，由于系统将由多种周期的处理任务组成，为了保证系统的可靠性，应该采用商用嵌入式实时操作系统作为本项目的开发基础，经过充分论证，最后李工接受了王工的建议，并申报课题组组长，课题组长同意采用了操作系统的方案，并指出必须尽快对需求的时间性能做出评估。<br/>【问题1】<br/>请用450字以内文字简要说明王工提出的采用嵌入式实时操作系统的理由或优点，并说明选择操作系统产品时需要重点考虑其哪些功能与性能？<br/>【问题2】<br/>李工和王工通过认真地对需求进行分析，给出了时间性能评估报告，判定在上述硬件平台上可以满足系统要求。请用300字以内文字简要说明嵌入式实时操作系统中时间性能评估中主要考虑哪几项因素；针对本课题的具体数据，叙述系统的工作时序关系。<br/>【问题3】<br/>根据系统需求，请设计出系统的处理流程（按时序），说明所有任务的优先级分配策略，422接口、双口存储器、离散量接口和A/D（D/A）的数据输入输出方法（中断或查询驱动）及理由。请用350字以内文字简要说明。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 54271,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题1】<br/>采用嵌入式实时操作系统的主要理由及优点：<br/>操作系统提供的任务调度功能，可以有效地管理本系统多周期任务的调度，并且操作系统提供的事件、信号和任务间的通信机制，可以有效地解决本系统中资源共享中的互斥问题。<br/>采用商品化的软件，可提高所开发软件的可靠性，还可简化软件开发成本，提高开发效率。<br/>选择嵌入式实时操作系统，主要考虑操作系统以下功能和性能：<br/>（1）任务的上下文切换时间越短越好、中断响应时间越快越好、内核代码占用空间比较小。<br/>（2）操作系统提供的服务接口应较丰富，有利于灵活使用（接口的开放性）。<br/>（3）操作系统对可靠性有较强的保障支持能力。<br/>（4）使用简单，支撑环境配套好，可配置、可剪裁能力强。<br/>【问题2】<br/>嵌入式实时系统中时间性能评估主要考虑以下几个因素：<br/>（1）系统（操作系统）时间开销，一般不大于整个控制系统运行时间总开销的20%。<br/>（2）保证所有任务在规定的时间期限内完成（或进行可调度性评估）。<br/>（3）任务的上下文切换时间和中断响应时间。<br/>针对本题的具体数据，系统的工作时序关系应该是：<br/>系统的最小时间节拍定义为5ms，系统最大工作周期为1s，在每个5ms起点，5ms任务首先运行，占1ms时间，完成后转入处理被终止的任务；如果这个时刻时间到达20 ms的起点，则启动20ms任务运行，以此类推，确保在1s周期内所有任务按规定的时间序列执行。<br/>【问题3】<br/>优先级策略：小周期优先策略。<br/>数据输入输出处理方式：422接口适合采用中断方式，主要因为处理机速度远远比数据传输速度快，在采集时不易消耗太多的时间，而查询方式由于存在等待数据时间，消耗处理机时间较大。双口存储器和离散量接口由于是直接访问存储器，采用查询较合适。A/D、D/A存在数据的转换时间，应在等待时交出处理机时间（定时查询）。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176821.2559123
  },
  {
    "section_id": "9349",
    "section_name": "计算机系统基础知识（第二版） - 嵌入式系统及软件",
    "question_id": 63704,
    "question_title": "<p>阅读以下关于嵌入式实时系统相关技术的叙述，在答题纸上回答问题l和问题2。</p><p>【说明】&nbsp;</p><p>某公司长期从事宇航领域嵌入式实时系统的软件研制任务。公司为了适应未来嵌入式系统网络化、智能化和综合化的技术发展需要，决定重新考虑新产品的架构问题，经理将论证工作交给王工负责。王工经调研和分析，完成了新产品架构设计方案，提交公司高层讨论。</p><p>【问题1】（14分）</p><p>王工提交的设计方案中指出：由于公司目前研制的嵌入式实时产品属于简单型系统，其嵌入式子系统相互独立、功能单一、时序简单。而未来满足网络化、智能化和综合化的嵌入式实时系统将是一种复杂系统，其核心特征体现为实时任务的机理、状态和行为的复杂性。简单任务和复杂任务的特征区分主要表现在十个方面。请参考表3-1给出的实时任务特征分类，用题干中给出的（a）～（t）20个实时任务特征描述，补充完善表3-1给出的空（l）～（l4）。</p><p>（a）任务属性不会随时间变化而改变；</p><p>（b）任务的属性与时间相关；</p><p>（c）任务仅可以从非连续集中获取特征变量；</p><p>（d）任务变量域是连续的；</p><p>（e）功能原理不依赖于上下文；</p><p>（f）功能原理依赖于上下文；</p><p>（g）任务行为可以用step-by-step顺序分析方法来理解；</p><p>（h）许多任务在产生访问活动时相互间是并发处理的，很难用step-by-step方法分析；</p><p>（i）因果关系相互影响；</p><p>（j）行为特征依赖于大量的反馈机制；</p><p>（k）系统内构成、策略和描述是相似的；</p><p>（l）系统内存在许多不同的构成、策略和描述；</p><p>（m）功能关系是非线性的；</p><p>（n）功能关系是线性的；</p><p>（o）不同的子任务是相互独立的，任务内部仅存在少量的交互操作；</p><p>（p）不同的子任务有很高的交互操作，要把一个单任务的行为隔离开是困难的；</p><p>（q）域特征有非常整齐的原则和规则；</p><p>（r）许多不同的上下文依赖于规则；</p><p>（s）原理和规则在表面属性上很容易被识别；</p><p>（t）原理被覆盖、抽象，而不会在表面属性上被识别。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240917/1726563086350317.png\" title=\"1726563086350317.png\" alt=\"image.png\"/><br/></p><p>【问题2】（11分）</p><p>王工设计方案中指出：要满足未来网络化、智能化和综合化的需求，应该设计一种能够充分表达嵌入式系统行为的，且具有一定通用性的通信架构， 以避免复杂任务的某些特征带来的通信复杂性。通常为了实现嵌入式系统中计算组件间的通信，在架构上需要一种简单的架构风格，用于屏蔽不同协议、不同硬件和不同结构组成所带来的复杂性。图3-l给出了一种“腰（Waistline）”型通信模式的架构风格。腰型架构的关键是基本消息通信（BMTS），通常， BMTS的消息与时间属性相关，支持事件触发消息、速率约束消息和时间触发消息。</p><p>请用400字以内的文字说明基于BMTS的消息通信网络的主要特征，说明三种消息的基本含义，并举例给出两种具有时间触发消息能力的网络总线。&nbsp;</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240917/1726563112180276.png\" title=\"1726563112180276.png\" alt=\"image.png\"/></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>[问题1]</p><p>（1） （c）</p><p>（2） （d）</p><p>（3） （o）</p><p>（4） （p）</p><p>（5） （g）</p><p>（6） （h）</p><p>（7） （k）</p><p>（8） （l）</p><p>（9） （i）</p><p>（10） （j）</p><p>（11） （n）</p><p>（12） （m）</p><p>（13） （e）</p><p>（14） （f）&nbsp;</p><p>[问题2]&nbsp;</p><p>BMTS是从一个计算组件传输消息到另外一个或多个接收组件，这样的传输具有高可靠、低延迟和微小抖动等特点。</p><p>（l）事件触发消息（Event-triggered messages）：此类消息是在发送端有某重要事件发生 时产生的偶发消息。建立消息间不存在最小时间（Minimum Time）。此类消息从发送到接收之间的延迟是不能确定的。在发送产生时， BMTS可能要处理许多消息，要么在发送者或消息被丢失时做相应处理。</p><p>（2）速率约束消息（Rate-constrained messages） ：此类消息是偶发性产生的，而不考虑发送者承诺消息不超出最大消息速率。在给定的故障假设条件内，BMTS承诺不超过最大的传输时延（Latency）。抖动依赖于网络负载或最坏情况下的传输时延和最小传输时延的范围。</p><p>（3）时间触发消息（Time-triggered messages）：此类消息是指发送者和接收者遵循一个精确的时间片周期完成消息的发送与接收。在给定的故障假设条件内， BMTS承诺消息将被在指定的时间片、确定的抖动条件下发送或接收。</p><p>具有时间触发消息能力的网络总线包括： TTE总线、FC总线、AFDX总线。</p><p><br/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 63704,
      "question_title": "<p>阅读以下关于嵌入式实时系统相关技术的叙述，在答题纸上回答问题l和问题2。</p><p>【说明】&nbsp;</p><p>某公司长期从事宇航领域嵌入式实时系统的软件研制任务。公司为了适应未来嵌入式系统网络化、智能化和综合化的技术发展需要，决定重新考虑新产品的架构问题，经理将论证工作交给王工负责。王工经调研和分析，完成了新产品架构设计方案，提交公司高层讨论。</p><p>【问题1】（14分）</p><p>王工提交的设计方案中指出：由于公司目前研制的嵌入式实时产品属于简单型系统，其嵌入式子系统相互独立、功能单一、时序简单。而未来满足网络化、智能化和综合化的嵌入式实时系统将是一种复杂系统，其核心特征体现为实时任务的机理、状态和行为的复杂性。简单任务和复杂任务的特征区分主要表现在十个方面。请参考表3-1给出的实时任务特征分类，用题干中给出的（a）～（t）20个实时任务特征描述，补充完善表3-1给出的空（l）～（l4）。</p><p>（a）任务属性不会随时间变化而改变；</p><p>（b）任务的属性与时间相关；</p><p>（c）任务仅可以从非连续集中获取特征变量；</p><p>（d）任务变量域是连续的；</p><p>（e）功能原理不依赖于上下文；</p><p>（f）功能原理依赖于上下文；</p><p>（g）任务行为可以用step-by-step顺序分析方法来理解；</p><p>（h）许多任务在产生访问活动时相互间是并发处理的，很难用step-by-step方法分析；</p><p>（i）因果关系相互影响；</p><p>（j）行为特征依赖于大量的反馈机制；</p><p>（k）系统内构成、策略和描述是相似的；</p><p>（l）系统内存在许多不同的构成、策略和描述；</p><p>（m）功能关系是非线性的；</p><p>（n）功能关系是线性的；</p><p>（o）不同的子任务是相互独立的，任务内部仅存在少量的交互操作；</p><p>（p）不同的子任务有很高的交互操作，要把一个单任务的行为隔离开是困难的；</p><p>（q）域特征有非常整齐的原则和规则；</p><p>（r）许多不同的上下文依赖于规则；</p><p>（s）原理和规则在表面属性上很容易被识别；</p><p>（t）原理被覆盖、抽象，而不会在表面属性上被识别。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240917/1726563086350317.png\" title=\"1726563086350317.png\" alt=\"image.png\"/><br/></p><p>【问题2】（11分）</p><p>王工设计方案中指出：要满足未来网络化、智能化和综合化的需求，应该设计一种能够充分表达嵌入式系统行为的，且具有一定通用性的通信架构， 以避免复杂任务的某些特征带来的通信复杂性。通常为了实现嵌入式系统中计算组件间的通信，在架构上需要一种简单的架构风格，用于屏蔽不同协议、不同硬件和不同结构组成所带来的复杂性。图3-l给出了一种“腰（Waistline）”型通信模式的架构风格。腰型架构的关键是基本消息通信（BMTS），通常， BMTS的消息与时间属性相关，支持事件触发消息、速率约束消息和时间触发消息。</p><p>请用400字以内的文字说明基于BMTS的消息通信网络的主要特征，说明三种消息的基本含义，并举例给出两种具有时间触发消息能力的网络总线。&nbsp;</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240917/1726563112180276.png\" title=\"1726563112180276.png\" alt=\"image.png\"/></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 63704,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>[问题1]</p><p>（1） （c）</p><p>（2） （d）</p><p>（3） （o）</p><p>（4） （p）</p><p>（5） （g）</p><p>（6） （h）</p><p>（7） （k）</p><p>（8） （l）</p><p>（9） （i）</p><p>（10） （j）</p><p>（11） （n）</p><p>（12） （m）</p><p>（13） （e）</p><p>（14） （f）&nbsp;</p><p>[问题2]&nbsp;</p><p>BMTS是从一个计算组件传输消息到另外一个或多个接收组件，这样的传输具有高可靠、低延迟和微小抖动等特点。</p><p>（l）事件触发消息（Event-triggered messages）：此类消息是在发送端有某重要事件发生 时产生的偶发消息。建立消息间不存在最小时间（Minimum Time）。此类消息从发送到接收之间的延迟是不能确定的。在发送产生时， BMTS可能要处理许多消息，要么在发送者或消息被丢失时做相应处理。</p><p>（2）速率约束消息（Rate-constrained messages） ：此类消息是偶发性产生的，而不考虑发送者承诺消息不超出最大消息速率。在给定的故障假设条件内，BMTS承诺不超过最大的传输时延（Latency）。抖动依赖于网络负载或最坏情况下的传输时延和最小传输时延的范围。</p><p>（3）时间触发消息（Time-triggered messages）：此类消息是指发送者和接收者遵循一个精确的时间片周期完成消息的发送与接收。在给定的故障假设条件内， BMTS承诺消息将被在指定的时间片、确定的抖动条件下发送或接收。</p><p>具有时间触发消息能力的网络总线包括： TTE总线、FC总线、AFDX总线。</p><p><br/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176821.2559123
  },
  {
    "section_id": "9350",
    "section_name": "计算机系统基础知识（第二版） - 计算机网络",
    "question_id": 43216,
    "question_title": "<p><br/></p><p style=\"margin: 0px;\"><span style=\"margin: 0px; font-family: 宋体; font-size: 12pt;\"><span style=\"font-family:宋体\">下列说法中正确的是（</span> &nbsp;<span style=\"font-family:宋体\">）。</span></span></p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 半双工总线只在一个方向上传输信息,全双工总线可在两个方向上轮流传输信息 ",
      " 半双工总线只在一个方向上传输信息，全双工总线可在两个方向上同时传输信息 ",
      " 半双工总线可在两个方向上轮流传输信息，全双工总线可在两个方向上同时传输信息 ",
      " 半双工总线可在两个方向上同时传输信息，全双工总线可在两个方向上轮流传输信息 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43216,
      "question_title": "<p><br/></p><p style=\"margin: 0px;\"><span style=\"margin: 0px; font-family: 宋体; font-size: 12pt;\"><span style=\"font-family:宋体\">下列说法中正确的是（</span> &nbsp;<span style=\"font-family:宋体\">）。</span></span></p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43216,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 半双工总线只在一个方向上传输信息,全双工总线可在两个方向上轮流传输信息 ",
        " 半双工总线只在一个方向上传输信息，全双工总线可在两个方向上同时传输信息 ",
        " 半双工总线可在两个方向上轮流传输信息，全双工总线可在两个方向上同时传输信息 ",
        " 半双工总线可在两个方向上同时传输信息，全双工总线可在两个方向上轮流传输信息 "
      ]
    },
    "crawl_time": 1753176822.4286356
  },
  {
    "section_id": "9350",
    "section_name": "计算机系统基础知识（第二版） - 计算机网络",
    "question_id": 46886,
    "question_title": "<p>网络逻辑结构设计的内容不包括（）</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 逻辑网络设计图 ",
      " IP 地址方案 ",
      " 具体的软硬件、广域网连接和基本服务 ",
      " 用户培训计划 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 46886,
      "question_title": "<p>网络逻辑结构设计的内容不包括（）</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 46886,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 逻辑网络设计图 ",
        " IP 地址方案 ",
        " 具体的软硬件、广域网连接和基本服务 ",
        " 用户培训计划 "
      ]
    },
    "crawl_time": 1753176822.4286356
  },
  {
    "section_id": "9350",
    "section_name": "计算机系统基础知识（第二版） - 计算机网络",
    "question_id": 151254,
    "question_title": "An application architecture specifies the technologies to be used to implement one or more information systems. It serves as an outline for detailed design, construction, and implementation. Given the models and details, include （请作答此空）, we can distribute data and processes to create a general design of application architecture. The design will normally be constrained by architecture standards, project objectives, and （ ）. The first physical DFD to be drawn is the （ ）. The next step is to distribute data stores to different processors. Data（ ）are two types of distributed data which most RDBMSs support. There are many distribution options used in data distribution. In the case of （ ）, we should record each table as a data store on the physical DFD and connect each to the appropriate server.",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " logical DFDs and ERD ",
      " ideal object model and analysis class model ",
      " use case models and interface prototypes ",
      " physical DFDs and database schema "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 151254,
      "question_title": "An application architecture specifies the technologies to be used to implement one or more information systems. It serves as an outline for detailed design, construction, and implementation. Given the models and details, include （请作答此空）, we can distribute data and processes to create a general design of application architecture. The design will normally be constrained by architecture standards, project objectives, and （ ）. The first physical DFD to be drawn is the （ ）. The next step is to distribute data stores to different processors. Data（ ）are two types of distributed data which most RDBMSs support. There are many distribution options used in data distribution. In the case of （ ）, we should record each table as a data store on the physical DFD and connect each to the appropriate server.",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 151254,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " logical DFDs and ERD ",
        " ideal object model and analysis class model ",
        " use case models and interface prototypes ",
        " physical DFDs and database schema "
      ]
    },
    "crawl_time": 1753176822.4286356
  },
  {
    "section_id": "9350",
    "section_name": "计算机系统基础知识（第二版） - 计算机网络",
    "question_id": 159253,
    "question_title": "<p>下列协议中，（ ）定义了组播中组的成员加入和退出机制。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " RARP ",
      " ARP ",
      " IGMP ",
      " ICMP "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 159253,
      "question_title": "<p>下列协议中，（ ）定义了组播中组的成员加入和退出机制。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159253,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " RARP ",
        " ARP ",
        " IGMP ",
        " ICMP "
      ]
    },
    "crawl_time": 1753176822.4286356
  },
  {
    "section_id": "9350",
    "section_name": "计算机系统基础知识（第二版） - 计算机网络",
    "question_id": 159254,
    "question_title": "给定IP地址为140.252.12.120，子网掩码是255.255.255.0，那么主机号是（请作答此空），该子网直接的广播地址是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 0.0.0.120 ",
      " 0.0.12.120 ",
      " 0.0.12.0 ",
      " 0.252.12.120 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 159254,
      "question_title": "给定IP地址为140.252.12.120，子网掩码是255.255.255.0，那么主机号是（请作答此空），该子网直接的广播地址是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159254,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 0.0.0.120 ",
        " 0.0.12.120 ",
        " 0.0.12.0 ",
        " 0.252.12.120 "
      ]
    },
    "crawl_time": 1753176822.4286356
  },
  {
    "section_id": "9350",
    "section_name": "计算机系统基础知识（第二版） - 计算机网络",
    "question_id": 159256,
    "question_title": "<p>下列技术中，不是传输层安全技术的是（ ）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " SSL ",
      " SOCKS ",
      " IPSEC ",
      " 安全RPC "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 159256,
      "question_title": "<p>下列技术中，不是传输层安全技术的是（ ）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159256,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " SSL ",
        " SOCKS ",
        " IPSEC ",
        " 安全RPC "
      ]
    },
    "crawl_time": 1753176822.4286356
  },
  {
    "section_id": "9350",
    "section_name": "计算机系统基础知识（第二版） - 计算机网络",
    "question_id": 283651,
    "question_title": "<p>关于网桥和交换机，下面的描述中正确的是（ ）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 网桥端口数少，因而比交换机转发更快 ",
      " 网桥转发广播帧，而交换机不转发广播帧 ",
      " 交换机是一种多端口网桥 ",
      " 交换机端口多，因而扩大可冲突域的大小 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 283651,
      "question_title": "<p>关于网桥和交换机，下面的描述中正确的是（ ）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 283651,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 网桥端口数少，因而比交换机转发更快 ",
        " 网桥转发广播帧，而交换机不转发广播帧 ",
        " 交换机是一种多端口网桥 ",
        " 交换机端口多，因而扩大可冲突域的大小 "
      ]
    },
    "crawl_time": 1753176822.4286356
  },
  {
    "section_id": "9350",
    "section_name": "计算机系统基础知识（第二版） - 计算机网络",
    "question_id": 350293,
    "question_title": "<p>下列安全协议中&nbsp;（13） 是网络层安全协议。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " IPSec ",
      " L2TP ",
      " PAP ",
      " HTTPS "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 350293,
      "question_title": "<p>下列安全协议中&nbsp;（13） 是网络层安全协议。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350293,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " IPSec ",
        " L2TP ",
        " PAP ",
        " HTTPS "
      ]
    },
    "crawl_time": 1753176822.4286356
  },
  {
    "section_id": "9350",
    "section_name": "计算机系统基础知识（第二版） - 计算机网络",
    "question_id": 352255,
    "question_title": "<p>&nbsp;DHCP 服务器收到客户端的请求时，会向客户端发送&nbsp;（13） 报文。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " DhcpAck ",
      " DhcpOffer ",
      " DhcpDecline ",
      " DhcpNack "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 352255,
      "question_title": "<p>&nbsp;DHCP 服务器收到客户端的请求时，会向客户端发送&nbsp;（13） 报文。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352255,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " DhcpAck ",
        " DhcpOffer ",
        " DhcpDecline ",
        " DhcpNack "
      ]
    },
    "crawl_time": 1753176822.4286356
  },
  {
    "section_id": "9350",
    "section_name": "计算机系统基础知识（第二版） - 计算机网络",
    "question_id": 354818,
    "question_title": "【51CTO学堂-学员回忆版】电子邮件客户端通过发起对(14)服务器的(15)端口的 TCP 连接来进行邮件发送。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "POP3",
      "SMTP",
      "HTTP",
      "IMAP"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 354818,
      "question_title": "【51CTO学堂-学员回忆版】电子邮件客户端通过发起对(14)服务器的(15)端口的 TCP 连接来进行邮件发送。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354817,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "POP3",
        "SMTP",
        "HTTP",
        "IMAP"
      ]
    },
    "crawl_time": 1753176822.4286356
  },
  {
    "section_id": "9350",
    "section_name": "计算机系统基础知识（第二版） - 计算机网络",
    "question_id": 354819,
    "question_title": "【51CTO学堂-学员回忆版】电子邮件客户端通过发起对(14)服务器的(15)端口的 TCP 连接来进行邮件发送。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "23",
      "25",
      "110",
      "143"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 354819,
      "question_title": "【51CTO学堂-学员回忆版】电子邮件客户端通过发起对(14)服务器的(15)端口的 TCP 连接来进行邮件发送。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354817,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "23",
        "25",
        "110",
        "143"
      ]
    },
    "crawl_time": 1753176822.4286356
  },
  {
    "section_id": "9350",
    "section_name": "计算机系统基础知识（第二版） - 计算机网络",
    "question_id": 354829,
    "question_title": "<p>在分布式系统中，中间件通常提供两种不同类型的支持，即(27)</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 数据支持和交互支持 ",
      " 交互支持和提供公共服务 ",
      " 数据支持和提供公共服务 ",
      " 安全支持和提供公共服务 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 354829,
      "question_title": "<p>在分布式系统中，中间件通常提供两种不同类型的支持，即(27)</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354829,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 数据支持和交互支持 ",
        " 交互支持和提供公共服务 ",
        " 数据支持和提供公共服务 ",
        " 安全支持和提供公共服务 "
      ]
    },
    "crawl_time": 1753176822.4286356
  },
  {
    "section_id": "9350",
    "section_name": "计算机系统基础知识（第二版） - 计算机网络",
    "question_id": 355115,
    "question_title": "【51CTO学堂-学员回忆版】以下wifi认证方式中，（65）使用了AES加密算法，安全性更高。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "开放式",
      "WP",
      "WPA2&nbsp;",
      "WEP"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 355115,
      "question_title": "【51CTO学堂-学员回忆版】以下wifi认证方式中，（65）使用了AES加密算法，安全性更高。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 355115,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "开放式",
        "WP",
        "WPA2&nbsp;",
        "WEP"
      ]
    },
    "crawl_time": 1753176822.4286356
  },
  {
    "section_id": "9350",
    "section_name": "计算机系统基础知识（第二版） - 计算机网络",
    "question_id": 371951,
    "question_title": "按照外部形态，构成一个软件系统的构件可以分为五类，其中，（35）是指可以进行版本替换并增加构件新功能。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "装配的构件",
      "可修改的构件",
      "有限制的构件",
      "适应性构件"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 371951,
      "question_title": "按照外部形态，构成一个软件系统的构件可以分为五类，其中，（35）是指可以进行版本替换并增加构件新功能。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371951,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "装配的构件",
        "可修改的构件",
        "有限制的构件",
        "适应性构件"
      ]
    },
    "crawl_time": 1753176822.4286356
  },
  {
    "section_id": "9350",
    "section_name": "计算机系统基础知识（第二版） - 计算机网络",
    "question_id": 507289,
    "question_title": "下面协议属于计算机传输层的协议的是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "TCP和UDP",
      "IP和ICMP",
      "FTP和SMTP",
      "Telnet和NFS"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 507289,
      "question_title": "下面协议属于计算机传输层的协议的是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507289,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "TCP和UDP",
        "IP和ICMP",
        "FTP和SMTP",
        "Telnet和NFS"
      ]
    },
    "crawl_time": 1753176822.4286356
  },
  {
    "section_id": "9350",
    "section_name": "计算机系统基础知识（第二版） - 计算机网络",
    "question_id": 523234,
    "question_title": "调制解调技术的主要功能是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "模拟信道传递模拟信号",
      "模拟信道传递数字信号",
      "数字信道传递模拟信号",
      "数字信道传递数字信号"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 523234,
      "question_title": "调制解调技术的主要功能是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523234,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "模拟信道传递模拟信号",
        "模拟信道传递数字信号",
        "数字信道传递模拟信号",
        "数字信道传递数字信号"
      ]
    },
    "crawl_time": 1753176822.4286356
  },
  {
    "section_id": "9350",
    "section_name": "计算机系统基础知识（第二版） - 计算机网络",
    "question_id": 523237,
    "question_title": "要想实现半双工通讯，通信双方至少需要（）个逻辑通道。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "1个逻辑通道",
      "2个逻辑通道",
      "1个有线信道",
      "2个有线信道"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 523237,
      "question_title": "要想实现半双工通讯，通信双方至少需要（）个逻辑通道。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523237,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "1个逻辑通道",
        "2个逻辑通道",
        "1个有线信道",
        "2个有线信道"
      ]
    },
    "crawl_time": 1753176822.4286356
  },
  {
    "section_id": "9350",
    "section_name": "计算机系统基础知识（第二版） - 计算机网络",
    "question_id": 523242,
    "question_title": "信道带宽3000Hz，32种信号状态，无干扰情况下最大传输速率是（）kbps。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "100",
      "30",
      "500",
      "50"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 18,
      "belong_page": 1,
      "question_id": 523242,
      "question_title": "信道带宽3000Hz，32种信号状态，无干扰情况下最大传输速率是（）kbps。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523242,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "100",
        "30",
        "500",
        "50"
      ]
    },
    "crawl_time": 1753176822.4286356
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 43220,
    "question_title": "<p>在UML提供的系统视图中，（请作答此空）是逻辑视图的一次执行实例，描述了并发与同步结构；（ ）是最基本的需求分析模型。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 进程视图&nbsp; ",
      " 实现视图 ",
      " 部署视图 ",
      " 用例视图 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43220,
      "question_title": "<p>在UML提供的系统视图中，（请作答此空）是逻辑视图的一次执行实例，描述了并发与同步结构；（ ）是最基本的需求分析模型。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43220,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 进程视图&nbsp; ",
        " 实现视图 ",
        " 部署视图 ",
        " 用例视图 "
      ]
    },
    "crawl_time": 1753176823.7588263
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 49968,
    "question_title": "<p>以下关于数学建模的叙述中，不正确的是（ &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 数学模型是对现实世界的一种简化的抽象描述 ",
      " 数学建模时需要在简单性和准确性之间求得平衡 ",
      " 数学模型应该用统一的、普适的标准对其进行评价 ",
      " 数学建模需要从失败和用户的反馈中学习和改进 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 49968,
      "question_title": "<p>以下关于数学建模的叙述中，不正确的是（ &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49968,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 数学模型是对现实世界的一种简化的抽象描述 ",
        " 数学建模时需要在简单性和准确性之间求得平衡 ",
        " 数学模型应该用统一的、普适的标准对其进行评价 ",
        " 数学建模需要从失败和用户的反馈中学习和改进 "
      ]
    },
    "crawl_time": 1753176823.7588263
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 54188,
    "question_title": "<p>UML用系统视图描述系统的组织结构。其中，（ &nbsp;）采用类、子系统、包和用例对系统架构进行设计建模。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 用例视图 ",
      " 逻辑视图 ",
      " 实现视图 ",
      " 部署视图 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 54188,
      "question_title": "<p>UML用系统视图描述系统的组织结构。其中，（ &nbsp;）采用类、子系统、包和用例对系统架构进行设计建模。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54188,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 用例视图 ",
        " 逻辑视图 ",
        " 实现视图 ",
        " 部署视图 "
      ]
    },
    "crawl_time": 1753176823.7588263
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 54259,
    "question_title": "<p>（ &nbsp;）属于Web客户端脚本语言。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " JavaScript ",
      " ASP ",
      " JSP ",
      " PHP "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 54259,
      "question_title": "<p>（ &nbsp;）属于Web客户端脚本语言。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54259,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " JavaScript ",
        " ASP ",
        " JSP ",
        " PHP "
      ]
    },
    "crawl_time": 1753176823.7588263
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 151225,
    "question_title": "<p>在uml图中，（请作答此空）展现了一组类、接口、协作和它们之间的关系。（）强调消息跨越不同对象或参与者的实际时间，而不仅仅只是关心消息的相对顺序。（）软件和硬件组件之间的物理关系以及处理节点的组件分布情况。（）描述由模型本身分解而成的组织单元，以及它们之间的依赖关系。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 类图 ",
      " 对象图 ",
      " 部署图 ",
      " 定时图 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 151225,
      "question_title": "<p>在uml图中，（请作答此空）展现了一组类、接口、协作和它们之间的关系。（）强调消息跨越不同对象或参与者的实际时间，而不仅仅只是关心消息的相对顺序。（）软件和硬件组件之间的物理关系以及处理节点的组件分布情况。（）描述由模型本身分解而成的组织单元，以及它们之间的依赖关系。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 151225,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 类图 ",
        " 对象图 ",
        " 部署图 ",
        " 定时图 "
      ]
    },
    "crawl_time": 1753176823.7588263
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 159189,
    "question_title": "<p>UML的事物是对模型中最具有代表性的成分的抽象，（请作答此空）是模型的静态部分，描述概念或物理元素；（ ）用来描述、说明和标注模型的任何元素。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 结构事物 ",
      " 分组事物 ",
      " 行为事物 ",
      " 注释事物 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 159189,
      "question_title": "<p>UML的事物是对模型中最具有代表性的成分的抽象，（请作答此空）是模型的静态部分，描述概念或物理元素；（ ）用来描述、说明和标注模型的任何元素。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159189,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 结构事物 ",
        " 分组事物 ",
        " 行为事物 ",
        " 注释事物 "
      ]
    },
    "crawl_time": 1753176823.7588263
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 159191,
    "question_title": "UML用关系把事物结合在一起，（请作答此空）描述一个事物发生变化会影响另一个事物的语义；（ &nbsp;）描述特殊元素的对象可替换一般元素的对象。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 聚合关系 ",
      " 关联关系 ",
      " 包含关系 ",
      " 依赖关系 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 159191,
      "question_title": "UML用关系把事物结合在一起，（请作答此空）描述一个事物发生变化会影响另一个事物的语义；（ &nbsp;）描述特殊元素的对象可替换一般元素的对象。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159191,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 聚合关系 ",
        " 关联关系 ",
        " 包含关系 ",
        " 依赖关系 "
      ]
    },
    "crawl_time": 1753176823.7588263
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 190828,
    "question_title": "<p>对软件体系结构风格研究和实践进行了对设计的多用，Garlan和Shaw对经典体系结构风格进行了分类，其中（请作答此空）属于数据流体系结构，（ ）属于虚拟体系结构风格，而下图描述属于（ ）体系结构风格<br/></p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191116/1573919829824089.jpg\" title=\"1573919829824089.jpg\" alt=\"2.jpg\"/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 面向对象 ",
      " 条件系统 ",
      " 规则系统 ",
      " 批量处理 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 190828,
      "question_title": "<p>对软件体系结构风格研究和实践进行了对设计的多用，Garlan和Shaw对经典体系结构风格进行了分类，其中（请作答此空）属于数据流体系结构，（ ）属于虚拟体系结构风格，而下图描述属于（ ）体系结构风格<br/></p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191116/1573919829824089.jpg\" title=\"1573919829824089.jpg\" alt=\"2.jpg\"/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 190828,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 面向对象 ",
        " 条件系统 ",
        " 规则系统 ",
        " 批量处理 "
      ]
    },
    "crawl_time": 1753176823.7588263
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 208422,
    "question_title": "快速应用开发(Rapid Application development，RAD)通过使用基于（请作答此空）的开发方法获得快速开发。当（ ）时，最适合于采用RAD方法。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 用例 ",
      " 数据结构 ",
      " 剧情 ",
      " 构件 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 208422,
      "question_title": "快速应用开发(Rapid Application development，RAD)通过使用基于（请作答此空）的开发方法获得快速开发。当（ ）时，最适合于采用RAD方法。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208422,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 用例 ",
        " 数据结构 ",
        " 剧情 ",
        " 构件 "
      ]
    },
    "crawl_time": 1753176823.7588263
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 352280,
    "question_title": "<p>&nbsp;在 UML 提供的系统视图中，&nbsp;（1） 把构件部署到一组物理节点上，表示软件到硬件的映射和分布结构。&nbsp;（2） 对组成基于系统的物理代码的文件和构件进行建模。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 进程视图&nbsp; ",
      " 实现视图&nbsp; ",
      " 部署视图&nbsp; ",
      " 用例视图&nbsp; "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 352280,
      "question_title": "<p>&nbsp;在 UML 提供的系统视图中，&nbsp;（1） 把构件部署到一组物理节点上，表示软件到硬件的映射和分布结构。&nbsp;（2） 对组成基于系统的物理代码的文件和构件进行建模。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352279,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 进程视图&nbsp; ",
        " 实现视图&nbsp; ",
        " 部署视图&nbsp; ",
        " 用例视图&nbsp; "
      ]
    },
    "crawl_time": 1753176823.7588263
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 352281,
    "question_title": "<p>&nbsp;在 UML 提供的系统视图中，&nbsp;（1） 把构件部署到一组物理节点上，表示软件到硬件的映射和分布结构。&nbsp;（2） 对组成基于系统的物理代码的文件和构件进行建模。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "&nbsp; 进程视图 ",
      " 实现视图&nbsp; ",
      "&nbsp; 部署视图 ",
      " 用例视图 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 352281,
      "question_title": "<p>&nbsp;在 UML 提供的系统视图中，&nbsp;（1） 把构件部署到一组物理节点上，表示软件到硬件的映射和分布结构。&nbsp;（2） 对组成基于系统的物理代码的文件和构件进行建模。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352279,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "&nbsp; 进程视图 ",
        " 实现视图&nbsp; ",
        "&nbsp; 部署视图 ",
        " 用例视图 "
      ]
    },
    "crawl_time": 1753176823.7588263
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 352283,
    "question_title": "<p>&nbsp;面向对象动态分析模型描述系统的动态行为，显示对象在系统运行期间不同时刻的动态交互。其中，UML 2.0的交互模型包括&nbsp;（1） 等，其他动态模型还有&nbsp;（2） 等。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 顺序图和定时图 ",
      " 顺序图和状态图 ",
      " 协作图和活动图 ",
      " 状态图和活动图 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 352283,
      "question_title": "<p>&nbsp;面向对象动态分析模型描述系统的动态行为，显示对象在系统运行期间不同时刻的动态交互。其中，UML 2.0的交互模型包括&nbsp;（1） 等，其他动态模型还有&nbsp;（2） 等。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352282,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 顺序图和定时图 ",
        " 顺序图和状态图 ",
        " 协作图和活动图 ",
        " 状态图和活动图 "
      ]
    },
    "crawl_time": 1753176823.7588263
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 352284,
    "question_title": "<p>&nbsp;面向对象动态分析模型描述系统的动态行为，显示对象在系统运行期间不同时刻的动态交互。其中，UML 2.0的交互模型包括&nbsp;（1） 等，其他动态模型还有&nbsp;（2） 等。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 用例图和类图 ",
      " 活动图和部署图 ",
      " 对象图和复合结构图 ",
      " 状态图和交互概览图 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 352284,
      "question_title": "<p>&nbsp;面向对象动态分析模型描述系统的动态行为，显示对象在系统运行期间不同时刻的动态交互。其中，UML 2.0的交互模型包括&nbsp;（1） 等，其他动态模型还有&nbsp;（2） 等。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352282,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 用例图和类图 ",
        " 活动图和部署图 ",
        " 对象图和复合结构图 ",
        " 状态图和交互概览图 "
      ]
    },
    "crawl_time": 1753176823.7588263
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 352406,
    "question_title": "<p>在uml图中，（）展现了一组对象、接口、协作和它们之间的关系。（）强调消息跨越不同对象或参与者的实际时间，而不仅仅只是关心消息的相对顺序。（）软件和硬件组件之间的物理关系以及处理节点的组件分布情况。（）描述由模型本身分解而成的组织单元，以及它们之间的依赖关系。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 类图 ",
      " 对象图 ",
      " 部署图 ",
      " 定时图 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 352406,
      "question_title": "<p>在uml图中，（）展现了一组对象、接口、协作和它们之间的关系。（）强调消息跨越不同对象或参与者的实际时间，而不仅仅只是关心消息的相对顺序。（）软件和硬件组件之间的物理关系以及处理节点的组件分布情况。（）描述由模型本身分解而成的组织单元，以及它们之间的依赖关系。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352405,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 类图 ",
        " 对象图 ",
        " 部署图 ",
        " 定时图 "
      ]
    },
    "crawl_time": 1753176823.7588263
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 352407,
    "question_title": "<p>在uml图中，（）展现了一组对象、接口、协作和它们之间的关系。（）强调消息跨越不同对象或参与者的实际时间，而不仅仅只是关心消息的相对顺序。（）软件和硬件组件之间的物理关系以及处理节点的组件分布情况。（）描述由模型本身分解而成的组织单元，以及它们之间的依赖关系。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 类图&nbsp;  <br/> ",
      " 包图&nbsp; ",
      " 部署图&nbsp; ",
      " 定时图&nbsp; "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 352407,
      "question_title": "<p>在uml图中，（）展现了一组对象、接口、协作和它们之间的关系。（）强调消息跨越不同对象或参与者的实际时间，而不仅仅只是关心消息的相对顺序。（）软件和硬件组件之间的物理关系以及处理节点的组件分布情况。（）描述由模型本身分解而成的组织单元，以及它们之间的依赖关系。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352405,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 类图&nbsp;  <br/> ",
        " 包图&nbsp; ",
        " 部署图&nbsp; ",
        " 定时图&nbsp; "
      ]
    },
    "crawl_time": 1753176823.7588263
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 352408,
    "question_title": "<p>在uml图中，（）展现了一组对象、接口、协作和它们之间的关系。（）强调消息跨越不同对象或参与者的实际时间，而不仅仅只是关心消息的相对顺序。（）软件和硬件组件之间的物理关系以及处理节点的组件分布情况。（）描述由模型本身分解而成的组织单元，以及它们之间的依赖关系。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 类图 ",
      " 对象图&nbsp; ",
      " 部署图 ",
      " 交互图 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 352408,
      "question_title": "<p>在uml图中，（）展现了一组对象、接口、协作和它们之间的关系。（）强调消息跨越不同对象或参与者的实际时间，而不仅仅只是关心消息的相对顺序。（）软件和硬件组件之间的物理关系以及处理节点的组件分布情况。（）描述由模型本身分解而成的组织单元，以及它们之间的依赖关系。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352405,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 类图 ",
        " 对象图&nbsp; ",
        " 部署图 ",
        " 交互图 "
      ]
    },
    "crawl_time": 1753176823.7588263
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 352409,
    "question_title": "<p>在uml图中，（）展现了一组对象、接口、协作和它们之间的关系。（）强调消息跨越不同对象或参与者的实际时间，而不仅仅只是关心消息的相对顺序。（）软件和硬件组件之间的物理关系以及处理节点的组件分布情况。（）描述由模型本身分解而成的组织单元，以及它们之间的依赖关系。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 类图 ",
      " 包图 ",
      " 部署图&nbsp; ",
      " 交互图&nbsp; "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 352409,
      "question_title": "<p>在uml图中，（）展现了一组对象、接口、协作和它们之间的关系。（）强调消息跨越不同对象或参与者的实际时间，而不仅仅只是关心消息的相对顺序。（）软件和硬件组件之间的物理关系以及处理节点的组件分布情况。（）描述由模型本身分解而成的组织单元，以及它们之间的依赖关系。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352405,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 类图 ",
        " 包图 ",
        " 部署图&nbsp; ",
        " 交互图&nbsp; "
      ]
    },
    "crawl_time": 1753176823.7588263
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 354837,
    "question_title": "<p>【51CTO学堂-学员回忆版】(29)的常见功能包括版本控制、变更管理、配置状态管理、访问控制和安全控制等。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 软件测试工具 ",
      " 版本控制工具 ",
      " 软件维护工具 ",
      " 软件配置管理工具 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 18,
      "belong_page": 1,
      "question_id": 354837,
      "question_title": "<p>【51CTO学堂-学员回忆版】(29)的常见功能包括版本控制、变更管理、配置状态管理、访问控制和安全控制等。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354837,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 软件测试工具 ",
        " 版本控制工具 ",
        " 软件维护工具 ",
        " 软件配置管理工具 "
      ]
    },
    "crawl_time": 1753176823.7588263
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 354842,
    "question_title": "<p>领域驱动设计提出围绕（31）进行软件设计和开发，该模型是由开发人员与领域专家协作构建出的一个反映深层次领域知识的模型。</p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 行为模型 ",
      " 领域模型 ",
      " 专家模型&nbsp; ",
      " 知识库模型 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 19,
      "belong_page": 1,
      "question_id": 354842,
      "question_title": "<p>领域驱动设计提出围绕（31）进行软件设计和开发，该模型是由开发人员与领域专家协作构建出的一个反映深层次领域知识的模型。</p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354842,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 行为模型 ",
        " 领域模型 ",
        " 专家模型&nbsp; ",
        " 知识库模型 "
      ]
    },
    "crawl_time": 1753176823.7588263
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 354862,
    "question_title": "<p>在UML2.0 （Unified Modeling Language）中，顺序图用来描述对象之间的消息交互，其中循环、选择等复杂交互使用（33）表示，对象之间的消息类型包括（34）。</p><p><br/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "&nbsp;嵌套",
      " 泳道 ",
      "组合",
      "序列片段"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 20,
      "belong_page": 1,
      "question_id": 354862,
      "question_title": "<p>在UML2.0 （Unified Modeling Language）中，顺序图用来描述对象之间的消息交互，其中循环、选择等复杂交互使用（33）表示，对象之间的消息类型包括（34）。</p><p><br/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354861,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "&nbsp;嵌套",
        " 泳道 ",
        "组合",
        "序列片段"
      ]
    },
    "crawl_time": 1753176823.7588263
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 354863,
    "question_title": "<p>在UML2.0 （Unified Modeling Language）中，顺序图用来描述对象之间的消息交互，其中循环、选择等复杂交互使用（33）表示，对象之间的消息类型包括（34）。</p><p><br/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "同步消息、异步消息、返回消息、动态消息、静态消息",
      "同步消息、异步消息、动态消息、参与者创建消息、参与者销毁消息",
      "同步消息、异步消息、静态消息、参与者创建消息、参与者销毁消息",
      "同步消息、异步消息、返回消息、参与者创建消息、参与者销毁消息"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 21,
      "belong_page": 1,
      "question_id": 354863,
      "question_title": "<p>在UML2.0 （Unified Modeling Language）中，顺序图用来描述对象之间的消息交互，其中循环、选择等复杂交互使用（33）表示，对象之间的消息类型包括（34）。</p><p><br/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354861,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "同步消息、异步消息、返回消息、动态消息、静态消息",
        "同步消息、异步消息、动态消息、参与者创建消息、参与者销毁消息",
        "同步消息、异步消息、静态消息、参与者创建消息、参与者销毁消息",
        "同步消息、异步消息、返回消息、参与者创建消息、参与者销毁消息"
      ]
    },
    "crawl_time": 1753176823.7588263
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 373653,
    "question_title": "<p>在面向对象系统中，有两个类存在整体与部分的关系，如果部分可能同时属于多个整体，则两者之间的关系称为（1）；如果部分和整体具有统一的生命周期，则两者之间的关系称为（2）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "聚合关系",
      "依赖关系",
      "泛化关系",
      "组合关系"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 22,
      "belong_page": 1,
      "question_id": 373653,
      "question_title": "<p>在面向对象系统中，有两个类存在整体与部分的关系，如果部分可能同时属于多个整体，则两者之间的关系称为（1）；如果部分和整体具有统一的生命周期，则两者之间的关系称为（2）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373652,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "聚合关系",
        "依赖关系",
        "泛化关系",
        "组合关系"
      ]
    },
    "crawl_time": 1753176823.7588263
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 373654,
    "question_title": "<p>在面向对象系统中，有两个类存在整体与部分的关系，如果部分可能同时属于多个整体，则两者之间的关系称为（1）；如果部分和整体具有统一的生命周期，则两者之间的关系称为（2）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "依赖关系",
      "聚合关系",
      "泛化关系",
      "组合关系"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 23,
      "belong_page": 1,
      "question_id": 373654,
      "question_title": "<p>在面向对象系统中，有两个类存在整体与部分的关系，如果部分可能同时属于多个整体，则两者之间的关系称为（1）；如果部分和整体具有统一的生命周期，则两者之间的关系称为（2）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373652,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "依赖关系",
        "聚合关系",
        "泛化关系",
        "组合关系"
      ]
    },
    "crawl_time": 1753176823.7588263
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 507314,
    "question_title": "为提高信号的传输速率，下面选项的组合正确的是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "提升带宽，降低信噪比",
      "提升带宽，提升信噪比",
      "降低带宽，提升信噪比",
      "降低带宽，降低信噪比"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 24,
      "belong_page": 1,
      "question_id": 507314,
      "question_title": "为提高信号的传输速率，下面选项的组合正确的是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507314,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "提升带宽，降低信噪比",
        "提升带宽，提升信噪比",
        "降低带宽，提升信噪比",
        "降低带宽，降低信噪比"
      ]
    },
    "crawl_time": 1753176823.7594612
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 310924,
    "question_title": "<p>问题一（10分）：图2-1采用UML中的类图来描述商品交易平台中的需求，类图中可描述分析类和设计类两种。请问分析类和设计类有什么差异？图中绘制的类是分析类还是设计类？分析类和设计类分别会在软件生命周期模型中的哪个或哪些阶段中产生？</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>分析类主要描述应用领域中的概念，分析类可以从这些概念中得出，或者说分析类图中的类是从需求中获取的。</p><p>设计类图描述软件的接口部分，而不是软件的实现部分，设计类更易于开发者之间的相互理解和交流，设计类通常是在分析类的基础上进行细化和改进的。</p><p>图中的类是分析类。</p><p>分析类主要在需求分析和架构设计中产生，设计类主要在概要设计阶段产生。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 25,
      "belong_page": 1,
      "question_id": 310924,
      "question_title": "<p>问题一（10分）：图2-1采用UML中的类图来描述商品交易平台中的需求，类图中可描述分析类和设计类两种。请问分析类和设计类有什么差异？图中绘制的类是分析类还是设计类？分析类和设计类分别会在软件生命周期模型中的哪个或哪些阶段中产生？</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 310923,
      "score_rule": "",
      "material_text": "<p>试题二</p><p><br/></p><p><br/></p><p><br/></p><p><br/></p>某畜牧饲料公司欲建设一套面向互联网的商品交易平台，该平台可以方便畜牧业养殖户与饲料公司之间的询价与交易。参考目前的电子商务模式，该平台的主要需求可参考下图，需求<p><img src=\"https://s2.51cto.com/images/20210924/1632414857542931.jpg\" title=\"1632414857542931.jpg\" alt=\"1.jpg\"/></p><br/><p>具体描述如下：</p><p>1.&nbsp;平台主要分为商家、顾客和管理员三类用户。商家代表在平台上发布供应和商品的用户，顾客代表在平台上下采购订单的用户，管理员代表平台上的运营和维护人员。</p><p>2.&nbsp;商家在注册账户后获得一个店铺，店铺拥有库存，库存中存放商品记录。商家可以通过添加商品和追加库存的方式，向库存中添加店铺中可销售的商品。通过标记商品上/下架状态或调整库存的方式设置商品是否在店铺中展示和销售。当商品库存为0时，不会出现在商家店铺中。</p><p>3.&nbsp;顾客在浏览商家店铺和商品的过程中可以直接下订单（3.1），或将商品加入购物车（3.2），然后再使用购物车生成订单（3.3）。</p><p>3.1&nbsp;顾客在浏览到某个合意的商品时，可直接填写商品数量并生成订单；</p><p>3.2&nbsp;顾客在浏览到某个合意的商品时，可将商品添加到购物车中。添加时可提前填入商品数量，也可未来在购物车中修改商品数量；</p><p>3.3&nbsp;在购物车中，顾客可以移除商品，也可以调整购买商品的数量。顾客可以通过复选框勾选部分商品或全部商品，然后通过生成订单按钮依据选中商品生成一个新得订单。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>分析类主要描述应用领域中的概念，分析类可以从这些概念中得出，或者说分析类图中的类是从需求中获取的。</p><p>设计类图描述软件的接口部分，而不是软件的实现部分，设计类更易于开发者之间的相互理解和交流，设计类通常是在分析类的基础上进行细化和改进的。</p><p>图中的类是分析类。</p><p>分析类主要在需求分析和架构设计中产生，设计类主要在概要设计阶段产生。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176823.7594612
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 310925,
    "question_title": "<p>问题二（8分）：图2-1中出现了UML类图中的哪几种关系？请简要描述这些关系所代表的涵义。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>顾客、商家和管理员与用户间是泛化关系，泛化关系是一种继承关系，表示一般与特殊的关系，它指定了子类如何特化父类的所有特征和行为。</p><p>商家与库存间是依赖关系，依赖关系是一种使用的关系，即一个类的实现需要另一个类的协助。</p><p>库存与商品间是聚合关系，聚合关系是整体与部分的关系，且部分可以离开整体而单独存在。<br/>购物车与订单之间存在关联关系。<br/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 26,
      "belong_page": 1,
      "question_id": 310925,
      "question_title": "<p>问题二（8分）：图2-1中出现了UML类图中的哪几种关系？请简要描述这些关系所代表的涵义。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 310923,
      "score_rule": "",
      "material_text": "<p>试题二</p><p><br/></p><p><br/></p><p><br/></p><p><br/></p>某畜牧饲料公司欲建设一套面向互联网的商品交易平台，该平台可以方便畜牧业养殖户与饲料公司之间的询价与交易。参考目前的电子商务模式，该平台的主要需求可参考下图，需求<p><img src=\"https://s2.51cto.com/images/20210924/1632414857542931.jpg\" title=\"1632414857542931.jpg\" alt=\"1.jpg\"/></p><br/><p>具体描述如下：</p><p>1.&nbsp;平台主要分为商家、顾客和管理员三类用户。商家代表在平台上发布供应和商品的用户，顾客代表在平台上下采购订单的用户，管理员代表平台上的运营和维护人员。</p><p>2.&nbsp;商家在注册账户后获得一个店铺，店铺拥有库存，库存中存放商品记录。商家可以通过添加商品和追加库存的方式，向库存中添加店铺中可销售的商品。通过标记商品上/下架状态或调整库存的方式设置商品是否在店铺中展示和销售。当商品库存为0时，不会出现在商家店铺中。</p><p>3.&nbsp;顾客在浏览商家店铺和商品的过程中可以直接下订单（3.1），或将商品加入购物车（3.2），然后再使用购物车生成订单（3.3）。</p><p>3.1&nbsp;顾客在浏览到某个合意的商品时，可直接填写商品数量并生成订单；</p><p>3.2&nbsp;顾客在浏览到某个合意的商品时，可将商品添加到购物车中。添加时可提前填入商品数量，也可未来在购物车中修改商品数量；</p><p>3.3&nbsp;在购物车中，顾客可以移除商品，也可以调整购买商品的数量。顾客可以通过复选框勾选部分商品或全部商品，然后通过生成订单按钮依据选中商品生成一个新得订单。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>顾客、商家和管理员与用户间是泛化关系，泛化关系是一种继承关系，表示一般与特殊的关系，它指定了子类如何特化父类的所有特征和行为。</p><p>商家与库存间是依赖关系，依赖关系是一种使用的关系，即一个类的实现需要另一个类的协助。</p><p>库存与商品间是聚合关系，聚合关系是整体与部分的关系，且部分可以离开整体而单独存在。<br/>购物车与订单之间存在关联关系。<br/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176823.7594612
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 310926,
    "question_title": "<p>问题三（7分）：请根据详细描述为图2-1添加合适的类，并为图中的类添加适当属性。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>可添加的类：店铺</p><p>类添加属性：</p><p>商品：标识，名称，描述，单价</p><p>库存：标识，库存明细（商品标识，库存数量）</p><p>订单：标识，订单明细（商品标识，订购数量），订单金额</p><p>购物车：用户标识，购物车明细（商品标识，数量）</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 27,
      "belong_page": 1,
      "question_id": 310926,
      "question_title": "<p>问题三（7分）：请根据详细描述为图2-1添加合适的类，并为图中的类添加适当属性。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 310923,
      "score_rule": "",
      "material_text": "<p>试题二</p><p><br/></p><p><br/></p><p><br/></p><p><br/></p>某畜牧饲料公司欲建设一套面向互联网的商品交易平台，该平台可以方便畜牧业养殖户与饲料公司之间的询价与交易。参考目前的电子商务模式，该平台的主要需求可参考下图，需求<p><img src=\"https://s2.51cto.com/images/20210924/1632414857542931.jpg\" title=\"1632414857542931.jpg\" alt=\"1.jpg\"/></p><br/><p>具体描述如下：</p><p>1.&nbsp;平台主要分为商家、顾客和管理员三类用户。商家代表在平台上发布供应和商品的用户，顾客代表在平台上下采购订单的用户，管理员代表平台上的运营和维护人员。</p><p>2.&nbsp;商家在注册账户后获得一个店铺，店铺拥有库存，库存中存放商品记录。商家可以通过添加商品和追加库存的方式，向库存中添加店铺中可销售的商品。通过标记商品上/下架状态或调整库存的方式设置商品是否在店铺中展示和销售。当商品库存为0时，不会出现在商家店铺中。</p><p>3.&nbsp;顾客在浏览商家店铺和商品的过程中可以直接下订单（3.1），或将商品加入购物车（3.2），然后再使用购物车生成订单（3.3）。</p><p>3.1&nbsp;顾客在浏览到某个合意的商品时，可直接填写商品数量并生成订单；</p><p>3.2&nbsp;顾客在浏览到某个合意的商品时，可将商品添加到购物车中。添加时可提前填入商品数量，也可未来在购物车中修改商品数量；</p><p>3.3&nbsp;在购物车中，顾客可以移除商品，也可以调整购买商品的数量。顾客可以通过复选框勾选部分商品或全部商品，然后通过生成订单按钮依据选中商品生成一个新得订单。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>可添加的类：店铺</p><p>类添加属性：</p><p>商品：标识，名称，描述，单价</p><p>库存：标识，库存明细（商品标识，库存数量）</p><p>订单：标识，订单明细（商品标识，订购数量），订单金额</p><p>购物车：用户标识，购物车明细（商品标识，数量）</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176823.7594612
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 350380,
    "question_title": "<p>【问题2】（3分）</p><p>在面向对象的设计过程中，活动图（activity diagram）阐明了业务用例实现的工作流程。请用300字以内的文字给出活动图与流程图（flow chart）的三个主要区别。</p><p><br/></p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>活动图和流程图的主要区别有以下三点：</p><p>（1）活动图是面向对象的，而流程图是面向过程的。</p><p>（2）活动图描述的是对象活动的顺序关系所遵循的规则，它着重表现的是系统的行为，而非系统的处理过程。流程图着里描述处理过程，它的主要控制结构是顺序、分支和循环，各个处理过程之间有严格的顺序和时间关系。</p><p>（3）活动图能够表示并发活动的情形，而流程图不能。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 28,
      "belong_page": 1,
      "question_id": 350380,
      "question_title": "<p>【问题2】（3分）</p><p>在面向对象的设计过程中，活动图（activity diagram）阐明了业务用例实现的工作流程。请用300字以内的文字给出活动图与流程图（flow chart）的三个主要区别。</p><p><br/></p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 350378,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于系统设计的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某软件公司为知名制造企业开发一套网上销售系统，以增加销售的渠道和效率。在项目之初，项目组决定釆用面向对象的开发方法进行系统开发，并对系统的核心业务功能进行了分析，具体描述如下：</p><p>注册用户通过商品信息页面在线浏览商品，将需要购买的商品添加进购物车内， 点击“结算”按钮后开始录入订单信息。</p><p>用户在订单信息录入页面上选择支付方式，填写并确认收货人、收货地址和联系方式等信息。点击“提交订单”按钮后产生订单，并开始进行订单结算。</p><p>订单需要在30分钟内进行支付，否则会自动取消，用户也可以手工取消订单。</p><p>用户支付完成，经确认后，系统开始备货，扣除该商品可接单数量，并移除用户购物车中的所有商品资料。</p><p>生成订单表单，出货完毕，订单生效。为用户快递商品，等待用户接收。</p><p>用户签收商品，交易完成。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>活动图和流程图的主要区别有以下三点：</p><p>（1）活动图是面向对象的，而流程图是面向过程的。</p><p>（2）活动图描述的是对象活动的顺序关系所遵循的规则，它着重表现的是系统的行为，而非系统的处理过程。流程图着里描述处理过程，它的主要控制结构是顺序、分支和循环，各个处理过程之间有严格的顺序和时间关系。</p><p>（3）活动图能够表示并发活动的情形，而流程图不能。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176823.7594612
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 350381,
    "question_title": "<p>【问题3】（10分）</p><p>在面向对象的设计过程中，状态图（statechart diagram）描述了一个实体基于事件反应的动态行为。请根据题干描述，填写图2-1中的（a）～（e）空白，完成订单处理的状态图。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220909/1662697948195517.png\" title=\"1662697948195517.png\" alt=\"image.png\"/><br/><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 图2-1&nbsp;订单处理状态图</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（a）取消 （b）待结算 （c）大于30分钟 （d）订单生效 （e）用户签收</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 29,
      "belong_page": 1,
      "question_id": 350381,
      "question_title": "<p>【问题3】（10分）</p><p>在面向对象的设计过程中，状态图（statechart diagram）描述了一个实体基于事件反应的动态行为。请根据题干描述，填写图2-1中的（a）～（e）空白，完成订单处理的状态图。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220909/1662697948195517.png\" title=\"1662697948195517.png\" alt=\"image.png\"/><br/><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 图2-1&nbsp;订单处理状态图</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 350378,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于系统设计的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某软件公司为知名制造企业开发一套网上销售系统，以增加销售的渠道和效率。在项目之初，项目组决定釆用面向对象的开发方法进行系统开发，并对系统的核心业务功能进行了分析，具体描述如下：</p><p>注册用户通过商品信息页面在线浏览商品，将需要购买的商品添加进购物车内， 点击“结算”按钮后开始录入订单信息。</p><p>用户在订单信息录入页面上选择支付方式，填写并确认收货人、收货地址和联系方式等信息。点击“提交订单”按钮后产生订单，并开始进行订单结算。</p><p>订单需要在30分钟内进行支付，否则会自动取消，用户也可以手工取消订单。</p><p>用户支付完成，经确认后，系统开始备货，扣除该商品可接单数量，并移除用户购物车中的所有商品资料。</p><p>生成订单表单，出货完毕，订单生效。为用户快递商品，等待用户接收。</p><p>用户签收商品，交易完成。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（a）取消 （b）待结算 （c）大于30分钟 （d）订单生效 （e）用户签收</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176823.7594612
  },
  {
    "section_id": "9351",
    "section_name": "计算机系统基础知识（第二版） - 计算机语言",
    "question_id": 352453,
    "question_title": "<p>【问题2】&nbsp;(6分)</p><p>用例图包括哪几个基本元素，并用300字以内的文字进行简要说明。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）参与者。参与者是指存在于系统外部并与系统进行交互的任何事物，既可以是使用系统的用户，也可以是其他外部系统和设备等外部实体。</p><p>（2）用例。用例表示系统所提供的服务，它定义了系统是如何被参与者所使用的，它描述的是参与者为了使用系统所提供的某一完整功能而与系统之间发生的一段对话。</p><p>（3）通信关联。通信关联表示的是参与者和用例之间的关系，或用例与用例之间的关系。箭头表示在这一关系中哪一方是对话的主动发起者，箭头所指方是对话的被动接受者，箭尾所指方是对话的主动发起者。如果不想强调对话中的主动与被动关系，可以使用不带箭头的关联实线。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 30,
      "belong_page": 1,
      "question_id": 352453,
      "question_title": "<p>【问题2】&nbsp;(6分)</p><p>用例图包括哪几个基本元素，并用300字以内的文字进行简要说明。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 352451,
      "score_rule": "",
      "material_text": "<p style=\"margin-top:21px;text-indent:29px\">试题二（20分）</p><p>&nbsp;阅读下列说明，回答问题 1 至问题 3，将解答填入答题纸的对应栏内。</p><p>【说明】</p><p>某 ETC（ Electronic Toll Collection，不停车收费）系统在高速公路沿线的特</p><p>定位置上设置一个横跨道路上空的龙门架（ Toll gantry），龙门架下包括 6条车道（ Trafficlanes），每条车道上安装有雷达传感器（ Radar sensor）、无线传输器（ Radio transceiver）</p><p>和数码相机（ Digital Camera）等用于不停车收费的设备，以完成正常行驶速度下的收费工作。该系统的基本工作过程如下：</p><p>（1）每辆汽车上安装有车载器，驾驶员（ Driver）将一张具有唯一识别码的磁卡插入车载器中。磁卡中还包含有驾驶员账户的当前信用记录。</p><p>（2）当汽车通过某条车道时，不停车收费设备识别车载器内的特有编码，判断车型，</p><p>将收集到的相关信息发送到该路段所属的区域系统（ Regional center）中，计算通行费用创建收费交易（ Transaction），从驾驶员的专用账户中扣除通行费用。如果驾驶员账户透</p><p>支，则记录透支账户交易信息。区域系统再将交易后的账户信息发送到维护驾驶员账户信息</p><p>的中心系统（ Central system）</p><p>（3）车载器中的磁卡可以使用邮局的付款机进行充值。充值信息会传送至中心系统，以更新驾驶员账户的余额。</p><p>（4）当没有安装车载器或者车载器发生故障的车辆通过车道时，车道上的数码相机将对车辆进行拍照，并将车辆照片及拍摄时间发送到区域系统，记录失败的交易信息；并将该交易信息发送到中心系统。</p><p>（5）区域系统会获取不停车收费设备所记录的交通事件（ Traffic events）；交</p><p>通广播电台（ Traffic advice center）根据这些交通事件进行路况分析并播报路况。</p><p>现采用面向对象方法对上述系统进行分析与设计，得到如表 3－1 所示的用例列</p><p>表以及如图 3－1 所示的用例图和图 3－2 所示的分析类图。</p><img src=\"https://s2.51cto.com/images/20220923/1663936577911380.png\" title=\"1663936577911380.png\" alt=\"image.png\"/><br/><img src=\"https://s2.51cto.com/images/20220923/1663936585804841.png\" title=\"1663936585804841.png\" alt=\"image.png\"/>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）参与者。参与者是指存在于系统外部并与系统进行交互的任何事物，既可以是使用系统的用户，也可以是其他外部系统和设备等外部实体。</p><p>（2）用例。用例表示系统所提供的服务，它定义了系统是如何被参与者所使用的，它描述的是参与者为了使用系统所提供的某一完整功能而与系统之间发生的一段对话。</p><p>（3）通信关联。通信关联表示的是参与者和用例之间的关系，或用例与用例之间的关系。箭头表示在这一关系中哪一方是对话的主动发起者，箭头所指方是对话的被动接受者，箭尾所指方是对话的主动发起者。如果不想强调对话中的主动与被动关系，可以使用不带箭头的关联实线。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176823.7594612
  },
  {
    "section_id": "9353",
    "section_name": "计算机系统基础知识（第二版） - 系统工程",
    "question_id": 43772,
    "question_title": "<p>对于遗留系统的评价框架如下图所示，那么处于“高水平、低价值”区的遗留系统适合于采用的演化策略为（）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211130/1638256629526721.png\" title=\"1638256629526721.png\" alt=\"屏幕截图 2021-11-30.png\"/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 淘汰 ",
      " 继承&nbsp;&nbsp; ",
      " 改造&nbsp; ",
      " 集成 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43772,
      "question_title": "<p>对于遗留系统的评价框架如下图所示，那么处于“高水平、低价值”区的遗留系统适合于采用的演化策略为（）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211130/1638256629526721.png\" title=\"1638256629526721.png\" alt=\"屏幕截图 2021-11-30.png\"/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43772,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 淘汰 ",
        " 继承&nbsp;&nbsp; ",
        " 改造&nbsp; ",
        " 集成 "
      ]
    },
    "crawl_time": 1753176824.9373102
  },
  {
    "section_id": "9353",
    "section_name": "计算机系统基础知识（第二版） - 系统工程",
    "question_id": 63612,
    "question_title": "<p>系统工程利用计算机作为工具，对系统的结构、元素、（请作答此空）和反馈等进行分析，以达到最优（　）、最优设计、最优管理和最优控制的目的。霍尔（A.D. Hall）于1969年提出了系统方法的三维结构体系，通常称为霍尔三维结构，这是系统工程方法论的基础。霍尔三维结构以时间维、（　）维、知识维组成的立体结构概括性地表示出系统工程的各阶段、各步骤以及所涉及的知识范围。其中时间维是系统的工作进程，对于一个具体的工程项目，可以分为7个阶段，在（　）阶段会做出研制方案及生产计划。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 知识 ",
      " 需求 ",
      " 文档 ",
      " 信息 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 63612,
      "question_title": "<p>系统工程利用计算机作为工具，对系统的结构、元素、（请作答此空）和反馈等进行分析，以达到最优（　）、最优设计、最优管理和最优控制的目的。霍尔（A.D. Hall）于1969年提出了系统方法的三维结构体系，通常称为霍尔三维结构，这是系统工程方法论的基础。霍尔三维结构以时间维、（　）维、知识维组成的立体结构概括性地表示出系统工程的各阶段、各步骤以及所涉及的知识范围。其中时间维是系统的工作进程，对于一个具体的工程项目，可以分为7个阶段，在（　）阶段会做出研制方案及生产计划。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63612,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 知识 ",
        " 需求 ",
        " 文档 ",
        " 信息 "
      ]
    },
    "crawl_time": 1753176824.9373102
  },
  {
    "section_id": "9353",
    "section_name": "计算机系统基础知识（第二版） - 系统工程",
    "question_id": 159223,
    "question_title": "模型是现实世界的抽象或近似，主要包括叙述型、物理型、图解型和数学型等。无论开发何种模型，（ ）都是最关键的因素。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 经济性 ",
      " 简单性 ",
      " 灵活性 ",
      " 准确性 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 159223,
      "question_title": "模型是现实世界的抽象或近似，主要包括叙述型、物理型、图解型和数学型等。无论开发何种模型，（ ）都是最关键的因素。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159223,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 经济性 ",
        " 简单性 ",
        " 灵活性 ",
        " 准确性 "
      ]
    },
    "crawl_time": 1753176824.9373102
  },
  {
    "section_id": "9353",
    "section_name": "计算机系统基础知识（第二版） - 系统工程",
    "question_id": 352265,
    "question_title": "<p>&nbsp;系统工程利用计算机作为工具，对系统的结构、&nbsp;（1） 、信息和反馈等进行分析， 以达到最优规划、最优&nbsp;（2） 、最优管理和最优控制的目的。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 知识 ",
      " 需求 ",
      " 文档 ",
      " 要素 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 352265,
      "question_title": "<p>&nbsp;系统工程利用计算机作为工具，对系统的结构、&nbsp;（1） 、信息和反馈等进行分析， 以达到最优规划、最优&nbsp;（2） 、最优管理和最优控制的目的。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352264,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 知识 ",
        " 需求 ",
        " 文档 ",
        " 要素 "
      ]
    },
    "crawl_time": 1753176824.9373102
  },
  {
    "section_id": "9353",
    "section_name": "计算机系统基础知识（第二版） - 系统工程",
    "question_id": 352266,
    "question_title": "<p>&nbsp;系统工程利用计算机作为工具，对系统的结构、&nbsp;（1） 、信息和反馈等进行分析， 以达到最优规划、最优&nbsp;（2） 、最优管理和最优控制的目的。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 战略 ",
      " 设计 ",
      " 实现 ",
      " 处理 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 352266,
      "question_title": "<p>&nbsp;系统工程利用计算机作为工具，对系统的结构、&nbsp;（1） 、信息和反馈等进行分析， 以达到最优规划、最优&nbsp;（2） 、最优管理和最优控制的目的。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352264,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 战略 ",
        " 设计 ",
        " 实现 ",
        " 处理 "
      ]
    },
    "crawl_time": 1753176824.9373102
  },
  {
    "section_id": "9354",
    "section_name": "计算机系统基础知识（第二版） - 系统性能",
    "question_id": 43752,
    "question_title": "<p class=\"MsoNormal\" style=\"text-indent:20.7000pt;text-align:left;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">为了测试新系统的性能，用户必须依靠评价程序来评价机器的性能，以下</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">4</span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">种评价程序，</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">17</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">评测的准确程度最低。</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;mso-hansi-font-family:&#39;Times New Roman&#39;;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 小型基准程序 ",
      " 真实程序&nbsp; ",
      " 核心程序&nbsp; ",
      " 合成基准程序 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43752,
      "question_title": "<p class=\"MsoNormal\" style=\"text-indent:20.7000pt;text-align:left;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">为了测试新系统的性能，用户必须依靠评价程序来评价机器的性能，以下</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">4</span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">种评价程序，</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">17</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">评测的准确程度最低。</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;mso-hansi-font-family:&#39;Times New Roman&#39;;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43752,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 小型基准程序 ",
        " 真实程序&nbsp; ",
        " 核心程序&nbsp; ",
        " 合成基准程序 "
      ]
    },
    "crawl_time": 1753176826.1845517
  },
  {
    "section_id": "9354",
    "section_name": "计算机系统基础知识（第二版） - 系统性能",
    "question_id": 49914,
    "question_title": "<p>把应用程序中应用最频繁的那部分核心程序作为评价计算机性能的标准程序，称为（ &nbsp;）程序。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 仿真测试 ",
      " 核心测试 ",
      " 基准测试 ",
      " 标准测试 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 49914,
      "question_title": "<p>把应用程序中应用最频繁的那部分核心程序作为评价计算机性能的标准程序，称为（ &nbsp;）程序。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49914,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 仿真测试 ",
        " 核心测试 ",
        " 基准测试 ",
        " 标准测试 "
      ]
    },
    "crawl_time": 1753176826.1845517
  },
  {
    "section_id": "9354",
    "section_name": "计算机系统基础知识（第二版） - 系统性能",
    "question_id": 49915,
    "question_title": "<p>（ ）不是对Web服务器进行性能评估的主要指标。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 丢包率 ",
      " 最大并发连接数 ",
      " 响应延迟 ",
      " 吞吐量 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 49915,
      "question_title": "<p>（ ）不是对Web服务器进行性能评估的主要指标。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49915,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 丢包率 ",
        " 最大并发连接数 ",
        " 响应延迟 ",
        " 吞吐量 "
      ]
    },
    "crawl_time": 1753176826.1845517
  },
  {
    "section_id": "9354",
    "section_name": "计算机系统基础知识（第二版） - 系统性能",
    "question_id": 54199,
    "question_title": "<p>衡量计算机的主要性能指标除了字长、存取周期、运算速度之外，通常还包括（请作答此空），因为其反映了（ &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 外部设备的数量 ",
      " 计算机的制造成本 ",
      " 计算机的体积 ",
      " 主存储器容量大小 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 54199,
      "question_title": "<p>衡量计算机的主要性能指标除了字长、存取周期、运算速度之外，通常还包括（请作答此空），因为其反映了（ &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54199,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 外部设备的数量 ",
        " 计算机的制造成本 ",
        " 计算机的体积 ",
        " 主存储器容量大小 "
      ]
    },
    "crawl_time": 1753176826.1845517
  },
  {
    "section_id": "9354",
    "section_name": "计算机系统基础知识（第二版） - 系统性能",
    "question_id": 54200,
    "question_title": "<p>衡量计算机的主要性能指标除了字长、存取周期、运算速度之外，通常还包括（ ），因为其反映了（请作答此空）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 每秒钟所能执行的指令条数 ",
      " 存储器读写速度 ",
      " 计算机即时存储信息的能力 ",
      " 该计算机保存大量信息的能力 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 54200,
      "question_title": "<p>衡量计算机的主要性能指标除了字长、存取周期、运算速度之外，通常还包括（ ），因为其反映了（请作答此空）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54200,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 每秒钟所能执行的指令条数 ",
        " 存储器读写速度 ",
        " 计算机即时存储信息的能力 ",
        " 该计算机保存大量信息的能力 "
      ]
    },
    "crawl_time": 1753176826.1845517
  },
  {
    "section_id": "9354",
    "section_name": "计算机系统基础知识（第二版） - 系统性能",
    "question_id": 54204,
    "question_title": "<p>以下关于基准测试的叙述中，正确的是（ &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 运行某些诊断程序，加大负载，检查哪个设备会发生故障 ",
      " 验证程序模块之间的接口是否正常起作用 ",
      " 运行一个标准程序对多种计算机系统进行检查，以比较和评价它们的性能 ",
      " 根据程序的内部结构和内部逻辑，评价程序是否正确 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 54204,
      "question_title": "<p>以下关于基准测试的叙述中，正确的是（ &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54204,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 运行某些诊断程序，加大负载，检查哪个设备会发生故障 ",
        " 验证程序模块之间的接口是否正常起作用 ",
        " 运行一个标准程序对多种计算机系统进行检查，以比较和评价它们的性能 ",
        " 根据程序的内部结构和内部逻辑，评价程序是否正确 "
      ]
    },
    "crawl_time": 1753176826.1845517
  },
  {
    "section_id": "9354",
    "section_name": "计算机系统基础知识（第二版） - 系统性能",
    "question_id": 54205,
    "question_title": "<p>以下关于计算机性能改进的叙述中，正确的是（ &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 如果某计算机系统的CPU利用率已经达到100%则该系统不可能再进行性能改进 ",
      " 使用虚存的计算机系统如果主存太小，则页面交换的频率将增加，CPU的使用效率就会降低，因此应当增加更多的内存 ",
      " 如果磁盘存取速度低，引起排队，此时应安装更快的CPU.以提高性能 ",
      " 多处理机的性能正比于CPU的数目，增加CPU是改进性能的主要途径 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 54205,
      "question_title": "<p>以下关于计算机性能改进的叙述中，正确的是（ &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54205,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 如果某计算机系统的CPU利用率已经达到100%则该系统不可能再进行性能改进 ",
        " 使用虚存的计算机系统如果主存太小，则页面交换的频率将增加，CPU的使用效率就会降低，因此应当增加更多的内存 ",
        " 如果磁盘存取速度低，引起排队，此时应安装更快的CPU.以提高性能 ",
        " 多处理机的性能正比于CPU的数目，增加CPU是改进性能的主要途径 "
      ]
    },
    "crawl_time": 1753176826.1845517
  },
  {
    "section_id": "9354",
    "section_name": "计算机系统基础知识（第二版） - 系统性能",
    "question_id": 54307,
    "question_title": "<p>某服务器软件系统对可用性（Availability）和性能（Performance）要求较高，（请作答此空）设计策略能提高该系统的可用性，（ &nbsp;）设计策略能够提高该系统的性能。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 限制访问 ",
      " 内置监控器 ",
      " 主动冗余 ",
      " 队列调度 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 54307,
      "question_title": "<p>某服务器软件系统对可用性（Availability）和性能（Performance）要求较高，（请作答此空）设计策略能提高该系统的可用性，（ &nbsp;）设计策略能够提高该系统的性能。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54307,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 限制访问 ",
        " 内置监控器 ",
        " 主动冗余 ",
        " 队列调度 "
      ]
    },
    "crawl_time": 1753176826.1845517
  },
  {
    "section_id": "9354",
    "section_name": "计算机系统基础知识（第二版） - 系统性能",
    "question_id": 54341,
    "question_title": "<p>计算机系统的可用性可从多个方面来评测，但不包括（ &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 故障率 ",
      " 健壮性 ",
      " 可移植性 ",
      " 可恢复性 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 54341,
      "question_title": "<p>计算机系统的可用性可从多个方面来评测，但不包括（ &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54341,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 故障率 ",
        " 健壮性 ",
        " 可移植性 ",
        " 可恢复性 "
      ]
    },
    "crawl_time": 1753176826.1845517
  },
  {
    "section_id": "9354",
    "section_name": "计算机系统基础知识（第二版） - 系统性能",
    "question_id": 151250,
    "question_title": "<p>系统的（ ）性能指标有系统的可靠性、系统的吞吐率（量)、系统响应时间、 系统资源利用率、可移植性。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 计算机 ",
      " 操作系统 ",
      " 数据库 ",
      " web服务器 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 151250,
      "question_title": "<p>系统的（ ）性能指标有系统的可靠性、系统的吞吐率（量)、系统响应时间、 系统资源利用率、可移植性。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 151250,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 计算机 ",
        " 操作系统 ",
        " 数据库 ",
        " web服务器 "
      ]
    },
    "crawl_time": 1753176826.1845517
  },
  {
    "section_id": "9354",
    "section_name": "计算机系统基础知识（第二版） - 系统性能",
    "question_id": 159218,
    "question_title": "下列关于软件可靠性的叙述，不正确的是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 由于影响软件可靠性的因素很复杂，软件可靠性不能通过历史数据和开发数据直接测量和估算出来 ",
      " 软件可靠性是指在特定环境和特定时间内，计算机程序无故障运行的概率 ",
      " 在软件可靠性的讨论中，故障指软件行为与需求的不符，故障有等级之分 ",
      " 排除一个故障可能会引入其他的错误，而这些错误会导致其他的故障 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 159218,
      "question_title": "下列关于软件可靠性的叙述，不正确的是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159218,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 由于影响软件可靠性的因素很复杂，软件可靠性不能通过历史数据和开发数据直接测量和估算出来 ",
        " 软件可靠性是指在特定环境和特定时间内，计算机程序无故障运行的概率 ",
        " 在软件可靠性的讨论中，故障指软件行为与需求的不符，故障有等级之分 ",
        " 排除一个故障可能会引入其他的错误，而这些错误会导致其他的故障 "
      ]
    },
    "crawl_time": 1753176826.1845517
  },
  {
    "section_id": "9354",
    "section_name": "计算机系统基础知识（第二版） - 系统性能",
    "question_id": 177927,
    "question_title": "<p>假如有 4 块 80T 的硬盘，采用 RAID6 的容量是（ &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 40T ",
      " 80T ",
      " 160T ",
      " 240T "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 177927,
      "question_title": "<p>假如有 4 块 80T 的硬盘，采用 RAID6 的容量是（ &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 177927,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 40T ",
        " 80T ",
        " 160T ",
        " 240T "
      ]
    },
    "crawl_time": 1753176826.1845517
  },
  {
    "section_id": "9354",
    "section_name": "计算机系统基础知识（第二版） - 系统性能",
    "question_id": 310844,
    "question_title": "一个进程被唤醒意味着（16）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "该进程重新占有了CPU",
      "它的优先权变为最大",
      "其PCB移至就绪队列队首",
      "进程变为就绪状态"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 310844,
      "question_title": "一个进程被唤醒意味着（16）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310844,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "该进程重新占有了CPU",
        "它的优先权变为最大",
        "其PCB移至就绪队列队首",
        "进程变为就绪状态"
      ]
    },
    "crawl_time": 1753176826.1845517
  },
  {
    "section_id": "9354",
    "section_name": "计算机系统基础知识（第二版） - 系统性能",
    "question_id": 352262,
    "question_title": "<p>&nbsp;对计算机评价的主要性能指标有时钟频率、&nbsp;（1） 、存储器的存取周期和内存容量等，对数据库管理系统评价的主要性能指标有&nbsp;（2） 、数据库所允许的索引数量和最大连接数等。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 丢包率 ",
      " 端口吞吐量 ",
      " 可移植性 ",
      " 运算精度 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 352262,
      "question_title": "<p>&nbsp;对计算机评价的主要性能指标有时钟频率、&nbsp;（1） 、存储器的存取周期和内存容量等，对数据库管理系统评价的主要性能指标有&nbsp;（2） 、数据库所允许的索引数量和最大连接数等。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352261,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 丢包率 ",
        " 端口吞吐量 ",
        " 可移植性 ",
        " 运算精度 "
      ]
    },
    "crawl_time": 1753176826.1845517
  },
  {
    "section_id": "9354",
    "section_name": "计算机系统基础知识（第二版） - 系统性能",
    "question_id": 352263,
    "question_title": "<p>&nbsp;对计算机评价的主要性能指标有时钟频率、&nbsp;（1） 、存储器的存取周期和内存容量等，对数据库管理系统评价的主要性能指标有&nbsp;（2） 、数据库所允许的索引数量和最大连接数等。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " MIPS ",
      " 支持协议和标准 ",
      " 最大并发事务处理能力 ",
      " 时延抖动 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 352263,
      "question_title": "<p>&nbsp;对计算机评价的主要性能指标有时钟频率、&nbsp;（1） 、存储器的存取周期和内存容量等，对数据库管理系统评价的主要性能指标有&nbsp;（2） 、数据库所允许的索引数量和最大连接数等。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352261,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " MIPS ",
        " 支持协议和标准 ",
        " 最大并发事务处理能力 ",
        " 时延抖动 "
      ]
    },
    "crawl_time": 1753176826.1845517
  },
  {
    "section_id": "9354",
    "section_name": "计算机系统基础知识（第二版） - 系统性能",
    "question_id": 352438,
    "question_title": "<p>假如有 4 块 80T 的硬盘，采用 RAID6&nbsp;的容量是（ ）。&nbsp;</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 40T ",
      " &nbsp;80T ",
      " 160T&nbsp; ",
      " 240T "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 352438,
      "question_title": "<p>假如有 4 块 80T 的硬盘，采用 RAID6&nbsp;的容量是（ ）。&nbsp;</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352438,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 40T ",
        " &nbsp;80T ",
        " 160T&nbsp; ",
        " 240T "
      ]
    },
    "crawl_time": 1753176826.1845517
  },
  {
    "section_id": "9354",
    "section_name": "计算机系统基础知识（第二版） - 系统性能",
    "question_id": 371480,
    "question_title": "计算机系统性能评估中， （1） 考虑了各类指令在程序中所占的比例。 （2） 考虑了诸如I/O结构、操作系统、编译程序的效率对系统性能的影响，可以较为准确评估计算机系统的实际性能。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "时钟频率法",
      "等效指令速度法",
      "综合理论性能法",
      "基准程序法"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 371480,
      "question_title": "计算机系统性能评估中， （1） 考虑了各类指令在程序中所占的比例。 （2） 考虑了诸如I/O结构、操作系统、编译程序的效率对系统性能的影响，可以较为准确评估计算机系统的实际性能。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371479,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "时钟频率法",
        "等效指令速度法",
        "综合理论性能法",
        "基准程序法"
      ]
    },
    "crawl_time": 1753176826.1845517
  },
  {
    "section_id": "9354",
    "section_name": "计算机系统基础知识（第二版） - 系统性能",
    "question_id": 373640,
    "question_title": "计算机系统的性能一般包括两个大的方面。一个方面是它的可靠性或可用性，也就是计算机系统能正常工作的时间，其指标是（9），也可以是在一段时间内，能正常工作的时间所占的百分比。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "能够持续工作的时间长度（例如，平均无故障时间）",
      "系统在单位时间内能处理正常作业的个数",
      "从系统得到输入到给出输出之间的时间",
      "在给定的时间区间中，各种部件（包括硬设备和软件系统）被使用的时间与整个时间之比"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 18,
      "belong_page": 1,
      "question_id": 373640,
      "question_title": "计算机系统的性能一般包括两个大的方面。一个方面是它的可靠性或可用性，也就是计算机系统能正常工作的时间，其指标是（9），也可以是在一段时间内，能正常工作的时间所占的百分比。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373640,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "能够持续工作的时间长度（例如，平均无故障时间）",
        "系统在单位时间内能处理正常作业的个数",
        "从系统得到输入到给出输出之间的时间",
        "在给定的时间区间中，各种部件（包括硬设备和软件系统）被使用的时间与整个时间之比"
      ]
    },
    "crawl_time": 1753176826.1845517
  },
  {
    "section_id": "9356",
    "section_name": "信息系统基础知识（第二版） - 信息系统概述",
    "question_id": 373662,
    "question_title": "以下关于信息系统开发方法的叙述中，错误的是（25）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "原型化方法是自顶向下的，它提出了一组提高系统结构合理性的准则",
      "面向对象方法的特点是系统的描述及信息模型的表示与客观实体相对应，符合人们的思维习惯，有利于系统开发过程中用户与开发人员的交流和沟通，缩短开发周期，提供系统开发的准确性和效率",
      "面向服务方法以粗粒度、松散耦合和标准的服务为基础，加强了系统的可复用性和可演化性",
      "原型化方法适用于那些需求不明确，但技术难度不大的系统开发"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 373662,
      "question_title": "以下关于信息系统开发方法的叙述中，错误的是（25）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373662,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "原型化方法是自顶向下的，它提出了一组提高系统结构合理性的准则",
        "面向对象方法的特点是系统的描述及信息模型的表示与客观实体相对应，符合人们的思维习惯，有利于系统开发过程中用户与开发人员的交流和沟通，缩短开发周期，提供系统开发的准确性和效率",
        "面向服务方法以粗粒度、松散耦合和标准的服务为基础，加强了系统的可复用性和可演化性",
        "原型化方法适用于那些需求不明确，但技术难度不大的系统开发"
      ]
    },
    "crawl_time": 1753176827.4404273
  },
  {
    "section_id": "9356",
    "section_name": "信息系统基础知识（第二版） - 信息系统概述",
    "question_id": 507325,
    "question_title": "EAI数据集成有（），数据复制和基于接口的数据集成。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "数据融合",
      "数据联邦",
      "数据抽取",
      "数据复制"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 507325,
      "question_title": "EAI数据集成有（），数据复制和基于接口的数据集成。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507325,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "数据融合",
        "数据联邦",
        "数据抽取",
        "数据复制"
      ]
    },
    "crawl_time": 1753176827.4404273
  },
  {
    "section_id": "9356",
    "section_name": "信息系统基础知识（第二版） - 信息系统概述",
    "question_id": 507341,
    "question_title": "企业集成至下而上的顺序是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 网络集成、服务集成、会聚集成、接口集成 ",
      "数据集成、会聚集成、服务集成、应用集成",
      "会聚集成、数据集成、服务集成、接口集成",
      "数据集成、会聚集成、服务集成、接口集成"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 507341,
      "question_title": "企业集成至下而上的顺序是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507341,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 网络集成、服务集成、会聚集成、接口集成 ",
        "数据集成、会聚集成、服务集成、应用集成",
        "会聚集成、数据集成、服务集成、接口集成",
        "数据集成、会聚集成、服务集成、接口集成"
      ]
    },
    "crawl_time": 1753176827.4404273
  },
  {
    "section_id": "9356",
    "section_name": "信息系统基础知识（第二版） - 信息系统概述",
    "question_id": 507346,
    "question_title": "<p>EAI数据集成有（&nbsp; ），数据复制和基于接口的数据集成。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 数据融合 ",
      " 数据联邦  <br/> ",
      " 数据抽取  <br/> ",
      " 数据复制  <br/> "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 507346,
      "question_title": "<p>EAI数据集成有（&nbsp; ），数据复制和基于接口的数据集成。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507346,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 数据融合 ",
        " 数据联邦  <br/> ",
        " 数据抽取  <br/> ",
        " 数据复制  <br/> "
      ]
    },
    "crawl_time": 1753176827.4404273
  },
  {
    "section_id": "9359",
    "section_name": "信息系统基础知识（第二版） - 决策支持系统（DSS）",
    "question_id": 43759,
    "question_title": "<p><br/></p><p><br/></p><p class=\"MsoNormal\" style=\"text-indent:20.7000pt;text-align:left;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">商业智能系统的处理过程包括四个主要阶段：数据预处理通过</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">实现企业原始数据的初步整合；建立数据仓库是后续数据处理的基础；数据分析是体现系统智能的关键，主要采用</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">和</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（请作答此空</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">技术，前者能够实现数据的上卷、下钻和旋转分析，后者利用隐藏的知识，通过建立分析模型预测企业未来发展趋势；数据展现主要完成数据处理结果的可视化。</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;mso-hansi-font-family:&#39;Times New Roman&#39;;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 知识库&nbsp; ",
      " 数据挖掘&nbsp;&nbsp; ",
      " 联机事务处理&nbsp; ",
      " 联机分析处理 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43759,
      "question_title": "<p><br/></p><p><br/></p><p class=\"MsoNormal\" style=\"text-indent:20.7000pt;text-align:left;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">商业智能系统的处理过程包括四个主要阶段：数据预处理通过</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">实现企业原始数据的初步整合；建立数据仓库是后续数据处理的基础；数据分析是体现系统智能的关键，主要采用</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">和</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（请作答此空</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">技术，前者能够实现数据的上卷、下钻和旋转分析，后者利用隐藏的知识，通过建立分析模型预测企业未来发展趋势；数据展现主要完成数据处理结果的可视化。</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;mso-hansi-font-family:&#39;Times New Roman&#39;;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43759,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 知识库&nbsp; ",
        " 数据挖掘&nbsp;&nbsp; ",
        " 联机事务处理&nbsp; ",
        " 联机分析处理 "
      ]
    },
    "crawl_time": 1753176828.7684054
  },
  {
    "section_id": "9359",
    "section_name": "信息系统基础知识（第二版） - 决策支持系统（DSS）",
    "question_id": 208623,
    "question_title": "<p>论决策支持系统的开发与应用</p><p>决策支持系统(Decision Support Systems，DSS)是以管理科学、运筹学、控制论和行为科学为基础，以计算机技术、仿真技术和信息技术为手段，以人机交互方式进行半结构化和非结构化决策的信息系统。它调用各种信息资源，并提供各种分析工具，为决策者提供分析问题、建立模型、模拟决策过程和方案的环境，帮助决策者提高决策水平和质量。决策支持系统在许多领域得到了广泛的应用，己成为许多行业经营管理中一个不可缺少的现代化支持工具。</p><p>请围绕“决策支持系统的开发与应用”论题，依次从以下三个方面进行论述。</p><p>1．概要叙述你参与管理和开发的决策支持系统项目以及在其中所担任的主要工作。</p><p>2．简要叙述决策支持系统包含的典型组成部件及对应的基本功能。说明在建立决策支持系统时需解决的一般关键问题。</p><p>3．说明你所参与管理和开发的决策支持系统的应用场合以及对决策结果的要求，具体阐述在开发过程中所采用的关键技术、实施过程和实际应用的效果。<span style=\"font-size: 16px;\"></span></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>请看解析</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 208623,
      "question_title": "<p>论决策支持系统的开发与应用</p><p>决策支持系统(Decision Support Systems，DSS)是以管理科学、运筹学、控制论和行为科学为基础，以计算机技术、仿真技术和信息技术为手段，以人机交互方式进行半结构化和非结构化决策的信息系统。它调用各种信息资源，并提供各种分析工具，为决策者提供分析问题、建立模型、模拟决策过程和方案的环境，帮助决策者提高决策水平和质量。决策支持系统在许多领域得到了广泛的应用，己成为许多行业经营管理中一个不可缺少的现代化支持工具。</p><p>请围绕“决策支持系统的开发与应用”论题，依次从以下三个方面进行论述。</p><p>1．概要叙述你参与管理和开发的决策支持系统项目以及在其中所担任的主要工作。</p><p>2．简要叙述决策支持系统包含的典型组成部件及对应的基本功能。说明在建立决策支持系统时需解决的一般关键问题。</p><p>3．说明你所参与管理和开发的决策支持系统的应用场合以及对决策结果的要求，具体阐述在开发过程中所采用的关键技术、实施过程和实际应用的效果。<span style=\"font-size: 16px;\"></span></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 208623,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>请看解析</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176828.7684054
  },
  {
    "section_id": "9360",
    "section_name": "信息系统基础知识（第二版） - 专家系统（ES）",
    "question_id": 507321,
    "question_title": "<p>专家系统能够学习的机制有哪些（ ）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 知识库、推理机 ",
      " 注意力机制、推理机 ",
      " 知识库、注意力机制 ",
      " 解释器、注意力机制 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 507321,
      "question_title": "<p>专家系统能够学习的机制有哪些（ ）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507321,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 知识库、推理机 ",
        " 注意力机制、推理机 ",
        " 知识库、注意力机制 ",
        " 解释器、注意力机制 "
      ]
    },
    "crawl_time": 1753176830.0964265
  },
  {
    "section_id": "9362",
    "section_name": "信息系统基础知识（第二版） - 企业资源规划（ERP）",
    "question_id": 43753,
    "question_title": "<p><br/></p><p><br/></p><p class=\"MsoNormal\" style=\"text-indent:20.7000pt;text-align:left;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">供应链中的信息流覆盖了从供应商、制造商到分销商，再到零售商等供应链中的所有环节，其信息流分为需求信息流和供应信息流，</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（请作答此空</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">属于需求信息流，</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">属于供应信息流。</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;mso-hansi-font-family:&#39;Times New Roman&#39;;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 库存记录&nbsp; ",
      " 生产计划&nbsp; ",
      " 商品入库单&nbsp;&nbsp; ",
      " 提货发运单 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43753,
      "question_title": "<p><br/></p><p><br/></p><p class=\"MsoNormal\" style=\"text-indent:20.7000pt;text-align:left;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">供应链中的信息流覆盖了从供应商、制造商到分销商，再到零售商等供应链中的所有环节，其信息流分为需求信息流和供应信息流，</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（请作答此空</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">属于需求信息流，</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">属于供应信息流。</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;mso-hansi-font-family:&#39;Times New Roman&#39;;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43753,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 库存记录&nbsp; ",
        " 生产计划&nbsp; ",
        " 商品入库单&nbsp;&nbsp; ",
        " 提货发运单 "
      ]
    },
    "crawl_time": 1753176831.2964196
  },
  {
    "section_id": "9362",
    "section_name": "信息系统基础知识（第二版） - 企业资源规划（ERP）",
    "question_id": 43754,
    "question_title": "<p>供应链中的信息流覆盖了从供应商、制造商到分销商，再到零售商等供应链中的所有环节，其信息流分为需求信息流和供应信息流，（）属于需求信息流，（请作答此空）属于供应信息流。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 客户订单&nbsp; ",
      " 采购合同 ",
      " 完工报告单 ",
      " 销售报告 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 43754,
      "question_title": "<p>供应链中的信息流覆盖了从供应商、制造商到分销商，再到零售商等供应链中的所有环节，其信息流分为需求信息流和供应信息流，（）属于需求信息流，（请作答此空）属于供应信息流。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43754,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 客户订单&nbsp; ",
        " 采购合同 ",
        " 完工报告单 ",
        " 销售报告 "
      ]
    },
    "crawl_time": 1753176831.2964196
  },
  {
    "section_id": "9362",
    "section_name": "信息系统基础知识（第二版） - 企业资源规划（ERP）",
    "question_id": 208418,
    "question_title": "以下关于软件生存周期模型的叙述，正确的是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 在瀑布模型中，前一个阶段的错误和疏漏会隐蔽地带到后一个阶段 ",
      " 在任何情况下使用演化模型，都能在一定周期内由原型演化到最终产品 ",
      " 软件生存周期模型的主要目标是为了加快软件开发的速度 ",
      " 当一个软件系统的生存周期结束之后，它就进入到一个新的生存周期模型 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 208418,
      "question_title": "以下关于软件生存周期模型的叙述，正确的是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208418,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 在瀑布模型中，前一个阶段的错误和疏漏会隐蔽地带到后一个阶段 ",
        " 在任何情况下使用演化模型，都能在一定周期内由原型演化到最终产品 ",
        " 软件生存周期模型的主要目标是为了加快软件开发的速度 ",
        " 当一个软件系统的生存周期结束之后，它就进入到一个新的生存周期模型 "
      ]
    },
    "crawl_time": 1753176831.2964196
  },
  {
    "section_id": "9362",
    "section_name": "信息系统基础知识（第二版） - 企业资源规划（ERP）",
    "question_id": 281330,
    "question_title": "<p>软件架构为软件系统提供了一个结构、行为和属性的高级抽象模式。“4+1”视图模型是指用5个视图组成的模型来描述软件架构。其中，______描述了设计的并发和同步特征，支持系统的运行特性。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 物理视图 ",
      " 逻辑视图 ",
      " 进程视图 ",
      " 开发视图 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 281330,
      "question_title": "<p>软件架构为软件系统提供了一个结构、行为和属性的高级抽象模式。“4+1”视图模型是指用5个视图组成的模型来描述软件架构。其中，______描述了设计的并发和同步特征，支持系统的运行特性。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281330,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 物理视图 ",
        " 逻辑视图 ",
        " 进程视图 ",
        " 开发视图 "
      ]
    },
    "crawl_time": 1753176831.2964196
  },
  {
    "section_id": "9362",
    "section_name": "信息系统基础知识（第二版） - 企业资源规划（ERP）",
    "question_id": 523255,
    "question_title": "ERP企业资源管理的三流指（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "物流、资金流、信息流",
      "物流、资金流、税务流",
      "信息流、数据流、业务流",
      "资金流、信息流、税务流"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 523255,
      "question_title": "ERP企业资源管理的三流指（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523255,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "物流、资金流、信息流",
        "物流、资金流、税务流",
        "信息流、数据流、业务流",
        "资金流、信息流、税务流"
      ]
    },
    "crawl_time": 1753176831.2964196
  },
  {
    "section_id": "9363",
    "section_name": "信息系统基础知识（第二版） - 典型信息系统架构模型",
    "question_id": 43755,
    "question_title": "<p>电子政务的主要应用模式中不包括（ ）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 政府对政府(Government&nbsp;To&nbsp;Government) ",
      " 政府对客户(Government&nbsp;To&nbsp;Customer) ",
      " 政府对公务员(Government&nbsp;To&nbsp;Employee) ",
      " 政府对企业(Government&nbsp;To&nbsp;Business) "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43755,
      "question_title": "<p>电子政务的主要应用模式中不包括（ ）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43755,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 政府对政府(Government&nbsp;To&nbsp;Government) ",
        " 政府对客户(Government&nbsp;To&nbsp;Customer) ",
        " 政府对公务员(Government&nbsp;To&nbsp;Employee) ",
        " 政府对企业(Government&nbsp;To&nbsp;Business) "
      ]
    },
    "crawl_time": 1753176832.6628304
  },
  {
    "section_id": "9363",
    "section_name": "信息系统基础知识（第二版） - 典型信息系统架构模型",
    "question_id": 43756,
    "question_title": "<p class=\"MsoNormal\" style=\"text-indent:20.7000pt;text-align:left;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">电子商务系统中参与电子商务活动的实体包括</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">21</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">。</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;mso-hansi-font-family:&#39;Times New Roman&#39;;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 客户、商户、银行和认证中心&nbsp; ",
      " 客户、银行、商户和政府机构 ",
      " 客户、商户、银行和物流企业 ",
      " 客户、商户、政府和物流企业 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 43756,
      "question_title": "<p class=\"MsoNormal\" style=\"text-indent:20.7000pt;text-align:left;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">电子商务系统中参与电子商务活动的实体包括</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">21</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">。</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;mso-hansi-font-family:&#39;Times New Roman&#39;;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43756,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 客户、商户、银行和认证中心&nbsp; ",
        " 客户、银行、商户和政府机构 ",
        " 客户、商户、银行和物流企业 ",
        " 客户、商户、政府和物流企业 "
      ]
    },
    "crawl_time": 1753176832.6628304
  },
  {
    "section_id": "9363",
    "section_name": "信息系统基础知识（第二版） - 典型信息系统架构模型",
    "question_id": 49917,
    "question_title": "<p>国家和地方人口信息的采集、处理和利用，属于（）的电子政务活动。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 政府对政府 ",
      " 政府对居民 ",
      " 居民对居民 ",
      " 居民对政府 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 49917,
      "question_title": "<p>国家和地方人口信息的采集、处理和利用，属于（）的电子政务活动。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49917,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 政府对政府 ",
        " 政府对居民 ",
        " 居民对居民 ",
        " 居民对政府 "
      ]
    },
    "crawl_time": 1753176832.6628304
  },
  {
    "section_id": "9363",
    "section_name": "信息系统基础知识（第二版） - 典型信息系统架构模型",
    "question_id": 208486,
    "question_title": "<p>与电子政务相关的行为主体主要有三个，即（ ），政府的业务活动也主要围绕着这三个行为主体展开。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 政府、数据及电子政务系统 ",
      " 政府、企(事)业单位及中介 ",
      " 政府、服务机构及企事业单位 ",
      " 政府、企(事)业单位及公民 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 208486,
      "question_title": "<p>与电子政务相关的行为主体主要有三个，即（ ），政府的业务活动也主要围绕着这三个行为主体展开。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208486,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 政府、数据及电子政务系统 ",
        " 政府、企(事)业单位及中介 ",
        " 政府、服务机构及企事业单位 ",
        " 政府、企(事)业单位及公民 "
      ]
    },
    "crawl_time": 1753176832.6628304
  },
  {
    "section_id": "9363",
    "section_name": "信息系统基础知识（第二版） - 典型信息系统架构模型",
    "question_id": 208487,
    "question_title": "企业信息化涉及对企业管理理念的创新，按照市场发展的要求，对企业现有的管理流程重新整合，管理核心从对（请作答此空）的管理，转向对（ ）的管理，并延伸到对企业技术创新、工艺设计、产品设计、生产制造过程的管理，进而还要扩展到对（ ）的管理乃至发展到电子商务。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 人力资源和物资 ",
      " 信息技术和知识 ",
      " 财务和物料 ",
      " 业务流程和数据 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 208487,
      "question_title": "企业信息化涉及对企业管理理念的创新，按照市场发展的要求，对企业现有的管理流程重新整合，管理核心从对（请作答此空）的管理，转向对（ ）的管理，并延伸到对企业技术创新、工艺设计、产品设计、生产制造过程的管理，进而还要扩展到对（ ）的管理乃至发展到电子商务。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208487,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 人力资源和物资 ",
        " 信息技术和知识 ",
        " 财务和物料 ",
        " 业务流程和数据 "
      ]
    },
    "crawl_time": 1753176832.6628304
  },
  {
    "section_id": "9363",
    "section_name": "信息系统基础知识（第二版） - 典型信息系统架构模型",
    "question_id": 371489,
    "question_title": "与电子政务相关的行为主体主要有三类， 即政府、企（事）业单位及居民。因此，政府的业务活动也主要围绕着这三类行为主体展开。政府与政府、政府与企（事）业单位以及政府与居民之间的互动构成了5种不同的、却又相互关联的领域。其中缴交个税属于 （1） 领域；参加政府工程投标活动属于 （2） 领域。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "政府对企（事）业单位（G2B）",
      "居民对政府（C2G）",
      "企业对政府（B2G）",
      "政府对居民（G2C）"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 371489,
      "question_title": "与电子政务相关的行为主体主要有三类， 即政府、企（事）业单位及居民。因此，政府的业务活动也主要围绕着这三类行为主体展开。政府与政府、政府与企（事）业单位以及政府与居民之间的互动构成了5种不同的、却又相互关联的领域。其中缴交个税属于 （1） 领域；参加政府工程投标活动属于 （2） 领域。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371488,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "政府对企（事）业单位（G2B）",
        "居民对政府（C2G）",
        "企业对政府（B2G）",
        "政府对居民（G2C）"
      ]
    },
    "crawl_time": 1753176832.6628304
  },
  {
    "section_id": "9363",
    "section_name": "信息系统基础知识（第二版） - 典型信息系统架构模型",
    "question_id": 371490,
    "question_title": "与电子政务相关的行为主体主要有三类， 即政府、企（事）业单位及居民。因此，政府的业务活动也主要围绕着这三类行为主体展开。政府与政府、政府与企（事）业单位以及政府与居民之间的互动构成了5种不同的、却又相互关联的领域。其中缴交个税属于 （1） 领域；参加政府工程投标活动属于 （2） 领域。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "政府与政府（G2G）",
      "政府对企（事）业单位（G2B）",
      "企业对政府（B2G）",
      "政府对居民（G2C）"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 371490,
      "question_title": "与电子政务相关的行为主体主要有三类， 即政府、企（事）业单位及居民。因此，政府的业务活动也主要围绕着这三类行为主体展开。政府与政府、政府与企（事）业单位以及政府与居民之间的互动构成了5种不同的、却又相互关联的领域。其中缴交个税属于 （1） 领域；参加政府工程投标活动属于 （2） 领域。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371488,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "政府与政府（G2G）",
        "政府对企（事）业单位（G2B）",
        "企业对政府（B2G）",
        "政府对居民（G2C）"
      ]
    },
    "crawl_time": 1753176832.6628304
  },
  {
    "section_id": "9365",
    "section_name": "信息安全技术基础知识（第二版） - 信息安全基础知识",
    "question_id": 355103,
    "question_title": "<p>在进行软件系统安全性分折时，（1）保证信息不泄露给末授权的用户、实体或过程；完整性保证信息的完整和准确，防止信息被非法修改；（2）保证对信息的传播及内容具有控制的能力，防止为非法者所用。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "完整性",
      "不可否认性",
      "可控性",
      "机密性"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 355103,
      "question_title": "<p>在进行软件系统安全性分折时，（1）保证信息不泄露给末授权的用户、实体或过程；完整性保证信息的完整和准确，防止信息被非法修改；（2）保证对信息的传播及内容具有控制的能力，防止为非法者所用。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 355102,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "完整性",
        "不可否认性",
        "可控性",
        "机密性"
      ]
    },
    "crawl_time": 1753176834.0131898
  },
  {
    "section_id": "9365",
    "section_name": "信息安全技术基础知识（第二版） - 信息安全基础知识",
    "question_id": 355104,
    "question_title": "<p>在进行软件系统安全性分折时，（1）保证信息不泄露给末授权的用户、实体或过程；完整性保证信息的完整和准确，防止信息被非法修改；（2）保证对信息的传播及内容具有控制的能力，防止为非法者所用。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "完整性",
      "安全审计",
      "加密性",
      "可控性"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 355104,
      "question_title": "<p>在进行软件系统安全性分折时，（1）保证信息不泄露给末授权的用户、实体或过程；完整性保证信息的完整和准确，防止信息被非法修改；（2）保证对信息的传播及内容具有控制的能力，防止为非法者所用。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 355102,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "完整性",
        "安全审计",
        "加密性",
        "可控性"
      ]
    },
    "crawl_time": 1753176834.0131898
  },
  {
    "section_id": "9365",
    "section_name": "信息安全技术基础知识（第二版） - 信息安全基础知识",
    "question_id": 373670,
    "question_title": "信息系统的安全是一个复杂的综合体，涉及系统的方方面面，（1）是指防止系统中的信息被故意或偶然的非法授权访问、更改、破坏或使信息被非法系统识别和控制等；（2）是计算机信息系统安全的重要环节，其实质是保证系统的正常运行，不因偶然的或恶意的侵扰而遭到破坏，使系统可靠、连续地运行，服务不被中断。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "信息安全",
      "人员安全",
      "实体安全",
      "运行安全"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 373670,
      "question_title": "信息系统的安全是一个复杂的综合体，涉及系统的方方面面，（1）是指防止系统中的信息被故意或偶然的非法授权访问、更改、破坏或使信息被非法系统识别和控制等；（2）是计算机信息系统安全的重要环节，其实质是保证系统的正常运行，不因偶然的或恶意的侵扰而遭到破坏，使系统可靠、连续地运行，服务不被中断。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373669,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "信息安全",
        "人员安全",
        "实体安全",
        "运行安全"
      ]
    },
    "crawl_time": 1753176834.0131898
  },
  {
    "section_id": "9365",
    "section_name": "信息安全技术基础知识（第二版） - 信息安全基础知识",
    "question_id": 373671,
    "question_title": "信息系统的安全是一个复杂的综合体，涉及系统的方方面面，（1）是指防止系统中的信息被故意或偶然的非法授权访问、更改、破坏或使信息被非法系统识别和控制等；（2）是计算机信息系统安全的重要环节，其实质是保证系统的正常运行，不因偶然的或恶意的侵扰而遭到破坏，使系统可靠、连续地运行，服务不被中断。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 信息安全 ",
      "人员安全",
      "实体安全",
      "运行安全"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 373671,
      "question_title": "信息系统的安全是一个复杂的综合体，涉及系统的方方面面，（1）是指防止系统中的信息被故意或偶然的非法授权访问、更改、破坏或使信息被非法系统识别和控制等；（2）是计算机信息系统安全的重要环节，其实质是保证系统的正常运行，不因偶然的或恶意的侵扰而遭到破坏，使系统可靠、连续地运行，服务不被中断。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373669,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 信息安全 ",
        "人员安全",
        "实体安全",
        "运行安全"
      ]
    },
    "crawl_time": 1753176834.0131898
  },
  {
    "section_id": "9365",
    "section_name": "信息安全技术基础知识（第二版） - 信息安全基础知识",
    "question_id": 507283,
    "question_title": "（1）保证信息不泄露给未授权的用户、实体或过程；（2）保证信息的完整和准确，防止信息被非法修改。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "可用性",
      "机密性",
      "完整性",
      "可控性"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 507283,
      "question_title": "（1）保证信息不泄露给未授权的用户、实体或过程；（2）保证信息的完整和准确，防止信息被非法修改。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 507282,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "可用性",
        "机密性",
        "完整性",
        "可控性"
      ]
    },
    "crawl_time": 1753176834.0131898
  },
  {
    "section_id": "9365",
    "section_name": "信息安全技术基础知识（第二版） - 信息安全基础知识",
    "question_id": 507284,
    "question_title": "（1）保证信息不泄露给未授权的用户、实体或过程；（2）保证信息的完整和准确，防止信息被非法修改。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "机密性",
      "可用性",
      "完整性",
      "可控性"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 507284,
      "question_title": "（1）保证信息不泄露给未授权的用户、实体或过程；（2）保证信息的完整和准确，防止信息被非法修改。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 507282,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "机密性",
        "可用性",
        "完整性",
        "可控性"
      ]
    },
    "crawl_time": 1753176834.0131898
  },
  {
    "section_id": "9365",
    "section_name": "信息安全技术基础知识（第二版） - 信息安全基础知识",
    "question_id": 507320,
    "question_title": "信息安全审计主要是指对系统中与安全有关的活动的相关信息进行识别、记录、存储和分析。安全审计涉及四个基本要素是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "控制目标、安全漏洞、控制措施和控制测试",
      "控制流程、安全漏洞、控制措施和控制测试",
      "控制目标、安全漏洞、控制开发和控制测试",
      "控制目标、安全漏洞、控制脚本和控制测试"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 507320,
      "question_title": "信息安全审计主要是指对系统中与安全有关的活动的相关信息进行识别、记录、存储和分析。安全审计涉及四个基本要素是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507320,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "控制目标、安全漏洞、控制措施和控制测试",
        "控制流程、安全漏洞、控制措施和控制测试",
        "控制目标、安全漏洞、控制开发和控制测试",
        "控制目标、安全漏洞、控制脚本和控制测试"
      ]
    },
    "crawl_time": 1753176834.0131898
  },
  {
    "section_id": "9365",
    "section_name": "信息安全技术基础知识（第二版） - 信息安全基础知识",
    "question_id": 507340,
    "question_title": "数据分级分类属于的层次是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "战略安全层",
      "权限控制层",
      "应用接口层",
      "基础安全层"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 507340,
      "question_title": "数据分级分类属于的层次是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507340,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "战略安全层",
        "权限控制层",
        "应用接口层",
        "基础安全层"
      ]
    },
    "crawl_time": 1753176834.0131898
  },
  {
    "section_id": "9365",
    "section_name": "信息安全技术基础知识（第二版） - 信息安全基础知识",
    "question_id": 507345,
    "question_title": "数据安全治理框架？",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "合规性检查",
      "用户权限",
      "安全测试",
      "&nbsp;无"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 507345,
      "question_title": "数据安全治理框架？",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507345,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "合规性检查",
        "用户权限",
        "安全测试",
        "&nbsp;无"
      ]
    },
    "crawl_time": 1753176834.0131898
  },
  {
    "section_id": "9368",
    "section_name": "信息安全技术基础知识（第二版） - 信息加解密技术",
    "question_id": 54280,
    "question_title": "<p>某数字签名系统如下图所示。网上传送的报文是（请作答此空），如果A否认发送，作为证据的是（ &nbsp;）。<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181012/1539334762219844.jpg\" title=\"1539334762219844.jpg\" alt=\"1.jpg\"/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " P ",
      " DA(P) ",
      " EB(DA(P)) ",
      " DA "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 54280,
      "question_title": "<p>某数字签名系统如下图所示。网上传送的报文是（请作答此空），如果A否认发送，作为证据的是（ &nbsp;）。<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181012/1539334762219844.jpg\" title=\"1539334762219844.jpg\" alt=\"1.jpg\"/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54280,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " P ",
        " DA(P) ",
        " EB(DA(P)) ",
        " DA "
      ]
    },
    "crawl_time": 1753176835.4696798
  },
  {
    "section_id": "9368",
    "section_name": "信息安全技术基础知识（第二版） - 信息加解密技术",
    "question_id": 309512,
    "question_title": "非对称加密算法中，加密和解密使用不同的密钥，下面的加密算法中（1）属于非对称加密算法。若甲、乙采用非对称密钥体系进行保密通信，甲用乙的公钥加密数据文件,乙使用（2）来对数据文件进行解密。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "AES",
      "RSA",
      "IDEA",
      "DES"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 309512,
      "question_title": "非对称加密算法中，加密和解密使用不同的密钥，下面的加密算法中（1）属于非对称加密算法。若甲、乙采用非对称密钥体系进行保密通信，甲用乙的公钥加密数据文件,乙使用（2）来对数据文件进行解密。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 309511,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "AES",
        "RSA",
        "IDEA",
        "DES"
      ]
    },
    "crawl_time": 1753176835.4696798
  },
  {
    "section_id": "9368",
    "section_name": "信息安全技术基础知识（第二版） - 信息加解密技术",
    "question_id": 355120,
    "question_title": "<p>程序员甲将其编写完成的某软件程序发给同事乙并进行讨论，之后甲放弃该程序并决定重新开发，后来乙将该程序稍加修改并署自已名在某技术论坛发布。以下说法中，正确的是（66）。</p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 乙的行为侵犯了甲对该程序享有的软件著作权 ",
      " 乙行为未侵权，因其发布的场合是以交流学习为目的的技术论坛 ",
      " 乙的行为没有侵犯甲的软件著作权，因为甲已放弃该程序 ",
      " 乙对该程序进行了修政，因此乙享有该序的款件著作权 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 355120,
      "question_title": "<p>程序员甲将其编写完成的某软件程序发给同事乙并进行讨论，之后甲放弃该程序并决定重新开发，后来乙将该程序稍加修改并署自已名在某技术论坛发布。以下说法中，正确的是（66）。</p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 355120,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 乙的行为侵犯了甲对该程序享有的软件著作权 ",
        " 乙行为未侵权，因其发布的场合是以交流学习为目的的技术论坛 ",
        " 乙的行为没有侵犯甲的软件著作权，因为甲已放弃该程序 ",
        " 乙对该程序进行了修政，因此乙享有该序的款件著作权 "
      ]
    },
    "crawl_time": 1753176835.4696798
  },
  {
    "section_id": "9368",
    "section_name": "信息安全技术基础知识（第二版） - 信息加解密技术",
    "question_id": 371466,
    "question_title": "相对于AES算法而言，RSA 算法的 （1） ，因此，RSA （2） 。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "加密密钥和解密密钥是不相同的",
      "加密密钥和解密密钥是相同的",
      "加密速度比AES要高",
      "解密速度比AES要高"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 371466,
      "question_title": "相对于AES算法而言，RSA 算法的 （1） ，因此，RSA （2） 。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371465,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "加密密钥和解密密钥是不相同的",
        "加密密钥和解密密钥是相同的",
        "加密速度比AES要高",
        "解密速度比AES要高"
      ]
    },
    "crawl_time": 1753176835.4696798
  },
  {
    "section_id": "9368",
    "section_name": "信息安全技术基础知识（第二版） - 信息加解密技术",
    "question_id": 371467,
    "question_title": "相对于AES算法而言，RSA 算法的 （1） ，因此，RSA （2） 。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "运算时间更短",
      "保密性不如AES",
      "不容易被破解",
      "常用于大文件加密"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 371467,
      "question_title": "相对于AES算法而言，RSA 算法的 （1） ，因此，RSA （2） 。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371465,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "运算时间更短",
        "保密性不如AES",
        "不容易被破解",
        "常用于大文件加密"
      ]
    },
    "crawl_time": 1753176835.4696798
  },
  {
    "section_id": "9369",
    "section_name": "信息安全技术基础知识（第二版） - 密钥管理技术",
    "question_id": 54193,
    "question_title": "<p>用户A从CA处获取了用户B的数字证书，用户A通过（ &nbsp;）可以确认该数字证书的有效性。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 用户B的公钥 ",
      " 用户B的私钥 ",
      " CA的公钥 ",
      " 用户A的私钥 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 54193,
      "question_title": "<p>用户A从CA处获取了用户B的数字证书，用户A通过（ &nbsp;）可以确认该数字证书的有效性。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54193,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 用户B的公钥 ",
        " 用户B的私钥 ",
        " CA的公钥 ",
        " 用户A的私钥 "
      ]
    },
    "crawl_time": 1753176836.9337494
  },
  {
    "section_id": "9369",
    "section_name": "信息安全技术基础知识（第二版） - 密钥管理技术",
    "question_id": 507312,
    "question_title": "下面关于MD5的说法，错误的是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "任意长度生成128位，不可逆",
      "通过数据碰撞都无法进行解密还原，进行哈希散列时不会出现相同结果",
      "MD5算法可以用来校验数据的完整性",
      "MD5算法可以用来进行加密"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 507312,
      "question_title": "下面关于MD5的说法，错误的是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507312,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "任意长度生成128位，不可逆",
        "通过数据碰撞都无法进行解密还原，进行哈希散列时不会出现相同结果",
        "MD5算法可以用来校验数据的完整性",
        "MD5算法可以用来进行加密"
      ]
    },
    "crawl_time": 1753176836.9337494
  },
  {
    "section_id": "9370",
    "section_name": "信息安全技术基础知识（第二版） - 访问控制及数字签名技术",
    "question_id": 352257,
    "question_title": "<p>&nbsp;数字签名首先需要生成消息摘要， 然后发送方用&nbsp;（1） 对报文摘要进行加密。生成消息摘要的目的是&nbsp;（2） 。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " CA的公钥 ",
      " CA的私钥 ",
      " 自己的公钥 ",
      " 自己的私钥 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 352257,
      "question_title": "<p>&nbsp;数字签名首先需要生成消息摘要， 然后发送方用&nbsp;（1） 对报文摘要进行加密。生成消息摘要的目的是&nbsp;（2） 。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352256,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " CA的公钥 ",
        " CA的私钥 ",
        " 自己的公钥 ",
        " 自己的私钥 "
      ]
    },
    "crawl_time": 1753176838.3012426
  },
  {
    "section_id": "9370",
    "section_name": "信息安全技术基础知识（第二版） - 访问控制及数字签名技术",
    "question_id": 371469,
    "question_title": "用户A从CA获取了自己的数字证书，该数字证书使用 （1） 进行数字签名防止篡改，用户B使用数字证书中包含的 （2） 来加密文件发送给A以保密。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "CA的私钥",
      "CA的公钥",
      "A的私钥",
      "A的公钥"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 371469,
      "question_title": "用户A从CA获取了自己的数字证书，该数字证书使用 （1） 进行数字签名防止篡改，用户B使用数字证书中包含的 （2） 来加密文件发送给A以保密。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371468,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "CA的私钥",
        "CA的公钥",
        "A的私钥",
        "A的公钥"
      ]
    },
    "crawl_time": 1753176838.3012426
  },
  {
    "section_id": "9370",
    "section_name": "信息安全技术基础知识（第二版） - 访问控制及数字签名技术",
    "question_id": 507312,
    "question_title": "下面关于MD5的说法，错误的是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "任意长度生成128位，不可逆",
      "通过数据碰撞都无法进行解密还原，进行哈希散列时不会出现相同结果",
      "MD5算法可以用来校验数据的完整性",
      "MD5算法可以用来进行加密"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 507312,
      "question_title": "下面关于MD5的说法，错误的是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507312,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "任意长度生成128位，不可逆",
        "通过数据碰撞都无法进行解密还原，进行哈希散列时不会出现相同结果",
        "MD5算法可以用来校验数据的完整性",
        "MD5算法可以用来进行加密"
      ]
    },
    "crawl_time": 1753176838.3012426
  },
  {
    "section_id": "9371",
    "section_name": "信息安全技术基础知识（第二版） - 信息安全的抗攻击技术",
    "question_id": 507291,
    "question_title": "关于SQL注入以下说法错误的是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "通过SQL预编译和参数化是避免SQL注入的有效手段",
      "使用ORM可以自动进行参数化查询 ，但无法减少SQL注入的风险",
      "使用UNION关键字可以通过SQL拼接，合并结果集拿到敏感信息",
      "SQL注入是一种典型的攻击手段"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 507291,
      "question_title": "关于SQL注入以下说法错误的是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507291,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "通过SQL预编译和参数化是避免SQL注入的有效手段",
        "使用ORM可以自动进行参数化查询 ，但无法减少SQL注入的风险",
        "使用UNION关键字可以通过SQL拼接，合并结果集拿到敏感信息",
        "SQL注入是一种典型的攻击手段"
      ]
    },
    "crawl_time": 1753176839.8129914
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 43251,
    "question_title": "<p><br/></p><p style=\"margin: 0px; line-height: 150%; layout-grid-mode: char;\"><span style=\"margin: 0px; font-family: 华文楷体; font-size: 11pt;\"><span style=\"font-family:华文楷体\">某广告公司的宣传产品有宣传册、文章、传单等多种形式，宣传产品的出版方式包括纸质方式、</span>CD、DVD、在线发布等。现要求为该广告公司设计一个管理这些宣传产品的应用，采用（</span><span style=\"margin: 0px; font-family: 华文楷体; font-size: 11pt;\">4</span><span style=\"margin: 0px; font-family: 华文楷体; font-size: 11pt;\"><span style=\"font-family:华文楷体\">）设计模式较为合适，该模式（</span></span><span style=\"margin: 0px; font-family: 华文楷体; font-size: 11pt;\">5请作答此空</span><span style=\"margin: 0px; font-family: 华文楷体; font-size: 11pt;\"><span style=\"font-family:华文楷体\">）。</span></span><span style=\"margin: 0px; font-family: 华文楷体; font-size: 11pt;\"></span></p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 将一系列复杂的类包装成一个简单的封闭接口 ",
      " 将抽象部分与它的实现部分分离，使它们都可以独立地变化 ",
      " 可在不影响其他对象的情况下，以动态、透明的方式给单个对象添加职责 ",
      " 将一个接口转换为客户希望的另一个接口 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43251,
      "question_title": "<p><br/></p><p style=\"margin: 0px; line-height: 150%; layout-grid-mode: char;\"><span style=\"margin: 0px; font-family: 华文楷体; font-size: 11pt;\"><span style=\"font-family:华文楷体\">某广告公司的宣传产品有宣传册、文章、传单等多种形式，宣传产品的出版方式包括纸质方式、</span>CD、DVD、在线发布等。现要求为该广告公司设计一个管理这些宣传产品的应用，采用（</span><span style=\"margin: 0px; font-family: 华文楷体; font-size: 11pt;\">4</span><span style=\"margin: 0px; font-family: 华文楷体; font-size: 11pt;\"><span style=\"font-family:华文楷体\">）设计模式较为合适，该模式（</span></span><span style=\"margin: 0px; font-family: 华文楷体; font-size: 11pt;\">5请作答此空</span><span style=\"margin: 0px; font-family: 华文楷体; font-size: 11pt;\"><span style=\"font-family:华文楷体\">）。</span></span><span style=\"margin: 0px; font-family: 华文楷体; font-size: 11pt;\"></span></p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43251,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 将一系列复杂的类包装成一个简单的封闭接口 ",
        " 将抽象部分与它的实现部分分离，使它们都可以独立地变化 ",
        " 可在不影响其他对象的情况下，以动态、透明的方式给单个对象添加职责 ",
        " 将一个接口转换为客户希望的另一个接口 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 43255,
    "question_title": "<p>某软件公司欲开发一个绘图软件，要求使用不同的绘图程序绘制不同的图形。在明确用户需求后，该公司的架构师决定采用Bridge模式实现该软件，并设计UML类图如下图所示。图中与Bridge模式中的“Abstraction”角色相对应的类是（请作答此空），与“Implementor”角色相对应的类是（ ）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211202/1638434226414799.png\" title=\"1638434226414799.png\" alt=\"屏幕截图 2021-12-02.png\"/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " Shape ",
      " Drawing&nbsp; ",
      " Rectangle&nbsp; ",
      " V2Drawing "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 43255,
      "question_title": "<p>某软件公司欲开发一个绘图软件，要求使用不同的绘图程序绘制不同的图形。在明确用户需求后，该公司的架构师决定采用Bridge模式实现该软件，并设计UML类图如下图所示。图中与Bridge模式中的“Abstraction”角色相对应的类是（请作答此空），与“Implementor”角色相对应的类是（ ）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211202/1638434226414799.png\" title=\"1638434226414799.png\" alt=\"屏幕截图 2021-12-02.png\"/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43255,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " Shape ",
        " Drawing&nbsp; ",
        " Rectangle&nbsp; ",
        " V2Drawing "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 49922,
    "question_title": "<p>（ &nbsp;）在软件开发机构中被广泛用来指导软件过程改进。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 能力成熟度模型（Capacity Maturity Model） ",
      " 关键过程领域（Key Process Areas） ",
      " 需求跟踪能力链（Traceability Link） ",
      " 工作分解结构（Work Breakdown Structure） "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 49922,
      "question_title": "<p>（ &nbsp;）在软件开发机构中被广泛用来指导软件过程改进。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49922,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 能力成熟度模型（Capacity Maturity Model） ",
        " 关键过程领域（Key Process Areas） ",
        " 需求跟踪能力链（Traceability Link） ",
        " 工作分解结构（Work Breakdown Structure） "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 49927,
    "question_title": "<p>在软件系统工具中，版本控制工具属于（ ）</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 软件开发工具 ",
      " 软件维护工具 ",
      " 编码与排错工具 ",
      " 软件管理和软件支持工具 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 49927,
      "question_title": "<p>在软件系统工具中，版本控制工具属于（ ）</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49927,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 软件开发工具 ",
        " 软件维护工具 ",
        " 编码与排错工具 ",
        " 软件管理和软件支持工具 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 49928,
    "question_title": "<p>在软件系统工具中，软件评价工具属于（ ）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 逆向工程工具 ",
      " 开发信息库工具 ",
      " 编码与排错工具 ",
      " 软件管理和软件支持工具 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 49928,
      "question_title": "<p>在软件系统工具中，软件评价工具属于（ ）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49928,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 逆向工程工具 ",
        " 开发信息库工具 ",
        " 编码与排错工具 ",
        " 软件管理和软件支持工具 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 63633,
    "question_title": "<p>软件开发环境应支持多种集成机制。其中，（请作答此空）用于存储与系统开发有关的信息，并支持信息的交流与共享； （　）是实现过程集成和控制集成的基础。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 算法模型库 ",
      " 环境信息库 ",
      " 信息模型库 ",
      " 用户界面库 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 63633,
      "question_title": "<p>软件开发环境应支持多种集成机制。其中，（请作答此空）用于存储与系统开发有关的信息，并支持信息的交流与共享； （　）是实现过程集成和控制集成的基础。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63633,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 算法模型库 ",
        " 环境信息库 ",
        " 信息模型库 ",
        " 用户界面库 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 63634,
    "question_title": "<p>软件开发环境应支持多种集成机制。其中，（　）用于存储与系统开发有关的信息，并支持信息的交流与共享； （请作答此空）是实现过程集成和控制集成的基础。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 工作流与日志服务器 ",
      " 进程通信与数据共享服务器 ",
      " 过程控制与消息服务器 ",
      " 同步控制与恢复服务器 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 63634,
      "question_title": "<p>软件开发环境应支持多种集成机制。其中，（　）用于存储与系统开发有关的信息，并支持信息的交流与共享； （请作答此空）是实现过程集成和控制集成的基础。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63634,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 工作流与日志服务器 ",
        " 进程通信与数据共享服务器 ",
        " 过程控制与消息服务器 ",
        " 同步控制与恢复服务器 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 63654,
    "question_title": "<p>体系结构模型的多视图表示是从不同的视角描述特定系统的体系结构。著名的4+1模型支持从（　）描述系统体系结构。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 逻辑视图、开发视图、物理视图、进程视图、统一的场景 ",
      " 逻辑视图、开发视图、物理视图、模块视图、统一的场景 ",
      " 逻辑视图、开发视图、构件视图、进程视图、统一的场景 ",
      " 领域视图、开发视图、构件视图、进程视图、统一的场景 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 63654,
      "question_title": "<p>体系结构模型的多视图表示是从不同的视角描述特定系统的体系结构。著名的4+1模型支持从（　）描述系统体系结构。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63654,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 逻辑视图、开发视图、物理视图、进程视图、统一的场景 ",
        " 逻辑视图、开发视图、物理视图、模块视图、统一的场景 ",
        " 逻辑视图、开发视图、构件视图、进程视图、统一的场景 ",
        " 领域视图、开发视图、构件视图、进程视图、统一的场景 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 88858,
    "question_title": "<p>螺旋模型将整个软件开发过程分为多个阶段，每个阶段都由目标设定、（）、开发和有效性验证以及评审4个部分组成。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 需求分析 ",
      " 风险分析 ",
      " 系统设计 ",
      " 架构设计 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 88858,
      "question_title": "<p>螺旋模型将整个软件开发过程分为多个阶段，每个阶段都由目标设定、（）、开发和有效性验证以及评审4个部分组成。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 88858,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 需求分析 ",
        " 风险分析 ",
        " 系统设计 ",
        " 架构设计 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 151213,
    "question_title": "对于开发模型来说，（请作答此空）复用好、开发过程无间隙、节省时间。（）是瀑布与原型（演化）模型结合体，适用于复杂项目。（）需要用户参与，模块化要求高，不适用新技术。（）是用例驱动、架构为中心、迭代、增量。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " RAD模型 ",
      " 螺旋模型 ",
      " RUP模型 ",
      " 喷泉模型 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 151213,
      "question_title": "对于开发模型来说，（请作答此空）复用好、开发过程无间隙、节省时间。（）是瀑布与原型（演化）模型结合体，适用于复杂项目。（）需要用户参与，模块化要求高，不适用新技术。（）是用例驱动、架构为中心、迭代、增量。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 151213,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " RAD模型 ",
        " 螺旋模型 ",
        " RUP模型 ",
        " 喷泉模型 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 159206,
    "question_title": "软件开发团队欲开发一套管理信息系统，在项目初期，用户提出了软件的一些基本功能，但是没有详细定义输入、处理和输出需求。在这种情况下，该团队在开发过程应采用（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 瀑布模型 ",
      " 增量模型 ",
      " 原型开发模型 ",
      " 快速应用程序开发（RAD） "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 159206,
      "question_title": "软件开发团队欲开发一套管理信息系统，在项目初期，用户提出了软件的一些基本功能，但是没有详细定义输入、处理和输出需求。在这种情况下，该团队在开发过程应采用（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159206,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 瀑布模型 ",
        " 增量模型 ",
        " 原型开发模型 ",
        " 快速应用程序开发（RAD） "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 159207,
    "question_title": "<p>统一软件开发过程是一种基于面向对象技术的软件开发过程，其特点是“用例驱动，以架构为核心，迭代并增量”。统一软件开发过程定义了四种通用的开发阶段，它们按照过程顺序分别是：起始阶段、（请作答此空）、构建阶段和（ ），其中在构建阶段主要产生的文档有（ ）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 分析阶段 ",
      " 细化阶段 ",
      " 设计阶段 ",
      " 交付阶段 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 159207,
      "question_title": "<p>统一软件开发过程是一种基于面向对象技术的软件开发过程，其特点是“用例驱动，以架构为核心，迭代并增量”。统一软件开发过程定义了四种通用的开发阶段，它们按照过程顺序分别是：起始阶段、（请作答此空）、构建阶段和（ ），其中在构建阶段主要产生的文档有（ ）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159207,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 分析阶段 ",
        " 细化阶段 ",
        " 设计阶段 ",
        " 交付阶段 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 159211,
    "question_title": "敏捷软件过程强调：让客户满意和软件尽早增量发布；小而高度自主的项目团队；非正式的方法；最小化软件工程工作产品以及整体精简开发。（ ）不是采用这种软件开发过程的原因。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 难以提前预测哪些需求是稳定的和哪些需求会变化 ",
      " 对于软件项目开发来说，设计和实现可以做到基本分离 ",
      " 从制定计划的角度来看，分析、设计、实现和测试并不容易预测 ",
      " 可执行原型和部分实现的可运行系统是了解用户需求和反馈的有效媒介 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 159211,
      "question_title": "敏捷软件过程强调：让客户满意和软件尽早增量发布；小而高度自主的项目团队；非正式的方法；最小化软件工程工作产品以及整体精简开发。（ ）不是采用这种软件开发过程的原因。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159211,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 难以提前预测哪些需求是稳定的和哪些需求会变化 ",
        " 对于软件项目开发来说，设计和实现可以做到基本分离 ",
        " 从制定计划的角度来看，分析、设计、实现和测试并不容易预测 ",
        " 可执行原型和部分实现的可运行系统是了解用户需求和反馈的有效媒介 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 208420,
    "question_title": "基于UML的需求分析过程的基本步骤为：利用（请作答此空）表示需求；利用（ ）表示目标软件系统的总体架构。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 用例及用例图 ",
      " 包图及类图 ",
      " 剧情及序列图 ",
      " 组件图及部署图 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 208420,
      "question_title": "基于UML的需求分析过程的基本步骤为：利用（请作答此空）表示需求；利用（ ）表示目标软件系统的总体架构。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208420,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 用例及用例图 ",
        " 包图及类图 ",
        " 剧情及序列图 ",
        " 组件图及部署图 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 208423,
    "question_title": "快速应用开发(Rapid Application development，RAD)通过使用基于（ ）的开发方法获得快速开发。当（请作答此空）时，最适合于采用RAD方法。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 一个新系统要采用很多新技术 ",
      " 系统与现有系统有较高的互操作性 ",
      " 系统模块化程度较高 ",
      " 用户不能很好地参与到需求分析中 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 208423,
      "question_title": "快速应用开发(Rapid Application development，RAD)通过使用基于（ ）的开发方法获得快速开发。当（请作答此空）时，最适合于采用RAD方法。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208423,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 一个新系统要采用很多新技术 ",
        " 系统与现有系统有较高的互操作性 ",
        " 系统模块化程度较高 ",
        " 用户不能很好地参与到需求分析中 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 208424,
    "question_title": "以下关于软件开发方法的叙述，错误的是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 对于较为复杂的应用问题，适合采用形式化方法进行需求分析 ",
      " 形式化方法的优势在于能够精确地表述和研究应用问题及其软件实现 ",
      " 净室软件工程将正确性验证作为发现和排除错误的主要机制 ",
      " 净室软件工程强调统计质量控制技术，包括对客户软件使用预期的测试 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 208424,
      "question_title": "以下关于软件开发方法的叙述，错误的是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208424,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 对于较为复杂的应用问题，适合采用形式化方法进行需求分析 ",
        " 形式化方法的优势在于能够精确地表述和研究应用问题及其软件实现 ",
        " 净室软件工程将正确性验证作为发现和排除错误的主要机制 ",
        " 净室软件工程强调统计质量控制技术，包括对客户软件使用预期的测试 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 281331,
    "question_title": "<p>分布性问题强调系统或系统中构件在一个分布的环境中相互通信的方式。解决分布性问题最普通的设计模式是（），CORBA是其一个范例。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " Observer模式 ",
      " Iterator模式 ",
      " Proxy模式 ",
      " Builder模式 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 281331,
      "question_title": "<p>分布性问题强调系统或系统中构件在一个分布的环境中相互通信的方式。解决分布性问题最普通的设计模式是（），CORBA是其一个范例。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281331,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " Observer模式 ",
        " Iterator模式 ",
        " Proxy模式 ",
        " Builder模式 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 281370,
    "question_title": "<p>山区某乡的6个村之间有山路如图所示，其中的数字标明了各条山路的长度（千米）。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20200912/1599885736228486.jpg\" title=\"1599885736228486.jpg\" alt=\"1.jpg\"/></p><p>乡政府决定沿山路架设电话线。为实现村村通电话，电话线总长至少为（）千米。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "11",
      "14",
      "18",
      "33"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 18,
      "belong_page": 1,
      "question_id": 281370,
      "question_title": "<p>山区某乡的6个村之间有山路如图所示，其中的数字标明了各条山路的长度（千米）。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20200912/1599885736228486.jpg\" title=\"1599885736228486.jpg\" alt=\"1.jpg\"/></p><p>乡政府决定沿山路架设电话线。为实现村村通电话，电话线总长至少为（）千米。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281370,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "11",
        "14",
        "18",
        "33"
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 283643,
    "question_title": "<p>在RUP中采用“4+1”视图模型来描述软件系统的体系结构。在该模型中，最终用户侧重于（1），系统工程师侧重于（2）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "实现视图",
      "进程视图",
      "逻辑视图",
      "部署视图"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 19,
      "belong_page": 1,
      "question_id": 283643,
      "question_title": "<p>在RUP中采用“4+1”视图模型来描述软件系统的体系结构。在该模型中，最终用户侧重于（1），系统工程师侧重于（2）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 283642,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "实现视图",
        "进程视图",
        "逻辑视图",
        "部署视图"
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 284649,
    "question_title": "<p>设某进程的段表如下所示，逻辑地址 （ ） 可以转换为对应的物理地址。<br/></p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210416/1618543395921399.png\" title=\"1618543395921399.png\" alt=\"29253.png\"/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " (0, 1597)、(1, 30)和(3, 1390) ",
      " (0, 128)、(1, 30)和(3, 1390) ",
      " (0, 1597)、(2, 98)和(3, 1390) ",
      " (0, 128)、(2, 98)和(4, 1066) "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 20,
      "belong_page": 1,
      "question_id": 284649,
      "question_title": "<p>设某进程的段表如下所示，逻辑地址 （ ） 可以转换为对应的物理地址。<br/></p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210416/1618543395921399.png\" title=\"1618543395921399.png\" alt=\"29253.png\"/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 284649,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " (0, 1597)、(1, 30)和(3, 1390) ",
        " (0, 128)、(1, 30)和(3, 1390) ",
        " (0, 1597)、(2, 98)和(3, 1390) ",
        " (0, 128)、(2, 98)和(4, 1066) "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 284657,
    "question_title": "<p>“4+1”视图主要用于描述系统逻辑架构，最早由Philippe Kruchten于1995年提出。其中（1）视图用于描述对象模型，并说明系统应该为用户提供哪些服务。当采用面向对象的设计方法描述对象模型时，通常使用（2）表达类的内部属性和行为，以及类集合之间的交互关系；采用（3）定义对象的内部行为。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "逻辑",
      "过程",
      "开发",
      "物理"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 21,
      "belong_page": 1,
      "question_id": 284657,
      "question_title": "<p>“4+1”视图主要用于描述系统逻辑架构，最早由Philippe Kruchten于1995年提出。其中（1）视图用于描述对象模型，并说明系统应该为用户提供哪些服务。当采用面向对象的设计方法描述对象模型时，通常使用（2）表达类的内部属性和行为，以及类集合之间的交互关系；采用（3）定义对象的内部行为。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 284656,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "逻辑",
        "过程",
        "开发",
        "物理"
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 284658,
    "question_title": "<p>“4+1”视图主要用于描述系统逻辑架构，最早由Philippe Kruchten于1995年提出。其中（1）视图用于描述对象模型，并说明系统应该为用户提供哪些服务。当采用面向对象的设计方法描述对象模型时，通常使用（2）表达类的内部属性和行为，以及类集合之间的交互关系；采用（3）定义对象的内部行为。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "对象图",
      "活动图",
      "状态图",
      "类图"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 22,
      "belong_page": 1,
      "question_id": 284658,
      "question_title": "<p>“4+1”视图主要用于描述系统逻辑架构，最早由Philippe Kruchten于1995年提出。其中（1）视图用于描述对象模型，并说明系统应该为用户提供哪些服务。当采用面向对象的设计方法描述对象模型时，通常使用（2）表达类的内部属性和行为，以及类集合之间的交互关系；采用（3）定义对象的内部行为。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 284656,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "对象图",
        "活动图",
        "状态图",
        "类图"
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 284659,
    "question_title": "<p>“4+1”视图主要用于描述系统逻辑架构，最早由Philippe Kruchten于1995年提出。其中（1）视图用于描述对象模型，并说明系统应该为用户提供哪些服务。当采用面向对象的设计方法描述对象模型时，通常使用（2）表达类的内部属性和行为，以及类集合之间的交互关系；采用（3）定义对象的内部行为。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "对象图",
      "活动图",
      "状态图",
      "类图"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 23,
      "belong_page": 1,
      "question_id": 284659,
      "question_title": "<p>“4+1”视图主要用于描述系统逻辑架构，最早由Philippe Kruchten于1995年提出。其中（1）视图用于描述对象模型，并说明系统应该为用户提供哪些服务。当采用面向对象的设计方法描述对象模型时，通常使用（2）表达类的内部属性和行为，以及类集合之间的交互关系；采用（3）定义对象的内部行为。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 284656,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "对象图",
        "活动图",
        "状态图",
        "类图"
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 284706,
    "question_title": "<p>螺旋模型是一种演进式的软件过程模型， 结合了原型开发方法的系统性和瀑布模型可控性特点。它有两个显著特 点，一是采用（ ）的方式逐步加深系统定义和实现的深度，降低风险；二是确定一系列 （ ） ，确保项目开发过 程中的相关利益者都支持可行的和令人满意</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "逐步交付",
      "顺序",
      "循环",
      "增量的系统解决方案"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 24,
      "belong_page": 1,
      "question_id": 284706,
      "question_title": "<p>螺旋模型是一种演进式的软件过程模型， 结合了原型开发方法的系统性和瀑布模型可控性特点。它有两个显著特 点，一是采用（ ）的方式逐步加深系统定义和实现的深度，降低风险；二是确定一系列 （ ） ，确保项目开发过 程中的相关利益者都支持可行的和令人满意</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 284705,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "逐步交付",
        "顺序",
        "循环",
        "增量的系统解决方案"
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 284707,
    "question_title": "<p>螺旋模型是一种演进式的软件过程模型， 结合了原型开发方法的系统性和瀑布模型可控性特点。它有两个显著特 点，一是采用（ ）的方式逐步加深系统定义和实现的深度，降低风险；二是确定一系列 （ ） ，确保项目开发过 程中的相关利益者都支持可行的和令人满意</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "实现方案",
      "设计方案",
      "关键点",
      "里程碑"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 25,
      "belong_page": 1,
      "question_id": 284707,
      "question_title": "<p>螺旋模型是一种演进式的软件过程模型， 结合了原型开发方法的系统性和瀑布模型可控性特点。它有两个显著特 点，一是采用（ ）的方式逐步加深系统定义和实现的深度，降低风险；二是确定一系列 （ ） ，确保项目开发过 程中的相关利益者都支持可行的和令人满意</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 284705,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "实现方案",
        "设计方案",
        "关键点",
        "里程碑"
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 310854,
    "question_title": "<p>螺旋模型将瀑布模型和（ ）结合起来，强调项目的风险分析，特别适合大型复杂系统的开发过程。螺旋模型沿着螺线进行若干次迭代，依次经历了计划指定、风险分析、工程实施和（ ）四个主要活动。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "喷泉模型",
      "增量模型",
      "V模型",
      "快速原型模型"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 26,
      "belong_page": 1,
      "question_id": 310854,
      "question_title": "<p>螺旋模型将瀑布模型和（ ）结合起来，强调项目的风险分析，特别适合大型复杂系统的开发过程。螺旋模型沿着螺线进行若干次迭代，依次经历了计划指定、风险分析、工程实施和（ ）四个主要活动。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310853,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "喷泉模型",
        "增量模型",
        "V模型",
        "快速原型模型"
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 310855,
    "question_title": "<p>螺旋模型将瀑布模型和（ ）结合起来，强调项目的风险分析，特别适合大型复杂系统的开发过程。螺旋模型沿着螺线进行若干次迭代，依次经历了计划指定、风险分析、工程实施和（ ）四个主要活动。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "客户评估",
      "客户使用",
      "工程交付",
      "软件测试"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 27,
      "belong_page": 1,
      "question_id": 310855,
      "question_title": "<p>螺旋模型将瀑布模型和（ ）结合起来，强调项目的风险分析，特别适合大型复杂系统的开发过程。螺旋模型沿着螺线进行若干次迭代，依次经历了计划指定、风险分析、工程实施和（ ）四个主要活动。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310853,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "客户评估",
        "客户使用",
        "工程交付",
        "软件测试"
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 350305,
    "question_title": "<p>软件开发环境应支持多种集成机制。根据功能不同，可以将集成机制分为三个部分：</p><p>&nbsp;（1） ，用于存储与系统开发有关的信息，并支持信息的交流与共享；&nbsp;（2） ，是实现过程集成和控制集成的基础；&nbsp;（3） ，它的统一性和一致性是软件开发环境的重要特征。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 算法模型库 ",
      " 环境信息库 ",
      " 信息模型库 ",
      " 用户界面库 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 28,
      "belong_page": 1,
      "question_id": 350305,
      "question_title": "<p>软件开发环境应支持多种集成机制。根据功能不同，可以将集成机制分为三个部分：</p><p>&nbsp;（1） ，用于存储与系统开发有关的信息，并支持信息的交流与共享；&nbsp;（2） ，是实现过程集成和控制集成的基础；&nbsp;（3） ，它的统一性和一致性是软件开发环境的重要特征。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350304,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 算法模型库 ",
        " 环境信息库 ",
        " 信息模型库 ",
        " 用户界面库 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 350306,
    "question_title": "<p>软件开发环境应支持多种集成机制。根据功能不同，可以将集成机制分为三个部分：</p><p>&nbsp;（1） ，用于存储与系统开发有关的信息，并支持信息的交流与共享；&nbsp;（2） ，是实现过程集成和控制集成的基础；&nbsp;（3） ，它的统一性和一致性是软件开发环境的重要特征。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 工作流与日志服务器 ",
      " 进程通信与数据共享服务器 ",
      " 过程控制与消息服务器 ",
      " 同步控制与恢复服务器 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 29,
      "belong_page": 1,
      "question_id": 350306,
      "question_title": "<p>软件开发环境应支持多种集成机制。根据功能不同，可以将集成机制分为三个部分：</p><p>&nbsp;（1） ，用于存储与系统开发有关的信息，并支持信息的交流与共享；&nbsp;（2） ，是实现过程集成和控制集成的基础；&nbsp;（3） ，它的统一性和一致性是软件开发环境的重要特征。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350304,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 工作流与日志服务器 ",
        " 进程通信与数据共享服务器 ",
        " 过程控制与消息服务器 ",
        " 同步控制与恢复服务器 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 350307,
    "question_title": "<p>软件开发环境应支持多种集成机制。根据功能不同，可以将集成机制分为三个部分：</p><p>&nbsp;（1） ，用于存储与系统开发有关的信息，并支持信息的交流与共享；&nbsp;（2） ，是实现过程集成和控制集成的基础；&nbsp;（3） ，它的统一性和一致性是软件开发环境的重要特征。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 底层数据结构 ",
      " 数据处理方法 ",
      " 业务过程模型 ",
      " 环境用户界面 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 30,
      "belong_page": 1,
      "question_id": 350307,
      "question_title": "<p>软件开发环境应支持多种集成机制。根据功能不同，可以将集成机制分为三个部分：</p><p>&nbsp;（1） ，用于存储与系统开发有关的信息，并支持信息的交流与共享；&nbsp;（2） ，是实现过程集成和控制集成的基础；&nbsp;（3） ，它的统一性和一致性是软件开发环境的重要特征。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350304,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 底层数据结构 ",
        " 数据处理方法 ",
        " 业务过程模型 ",
        " 环境用户界面 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 350311,
    "question_title": "<p>快速应用开发（Rapid Application Developmen1，RAD）通过使用基于&nbsp;（1） 的开发方法获得快速开发，当&nbsp;（2） 时，最适合采用RAD方法。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 用例 ",
      " 数据结构 ",
      " 剧情 ",
      " 构件 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 31,
      "belong_page": 1,
      "question_id": 350311,
      "question_title": "<p>快速应用开发（Rapid Application Developmen1，RAD）通过使用基于&nbsp;（1） 的开发方法获得快速开发，当&nbsp;（2） 时，最适合采用RAD方法。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350310,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 用例 ",
        " 数据结构 ",
        " 剧情 ",
        " 构件 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 350314,
    "question_title": "<p>软件过程是制作软件产品的一组活动，以及结果，这些活动主要由软件人员来完成， 主要包括&nbsp;（1） 。软件过程模型是软件开发实际过程的抽象与概括，它应该包括构成软件过程的各种活动。软件过程有各种各样的模型，其中&nbsp;（2） 的活动之间存在因果关系，前一阶段工作的结果是后一段阶段工作的输入描述。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 软件描述、软件开发和软件测试 ",
      " 软件开发、软件有效性验证和软件测试 ",
      " 软件描述、软件设计、软件实现和软件测试 ",
      " 软件描述、软件开发、软件有效性验证和软件进化 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 32,
      "belong_page": 1,
      "question_id": 350314,
      "question_title": "<p>软件过程是制作软件产品的一组活动，以及结果，这些活动主要由软件人员来完成， 主要包括&nbsp;（1） 。软件过程模型是软件开发实际过程的抽象与概括，它应该包括构成软件过程的各种活动。软件过程有各种各样的模型，其中&nbsp;（2） 的活动之间存在因果关系，前一阶段工作的结果是后一段阶段工作的输入描述。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350313,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 软件描述、软件开发和软件测试 ",
        " 软件开发、软件有效性验证和软件测试 ",
        " 软件描述、软件设计、软件实现和软件测试 ",
        " 软件描述、软件开发、软件有效性验证和软件进化 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 350315,
    "question_title": "<p>软件过程是制作软件产品的一组活动，以及结果，这些活动主要由软件人员来完成， 主要包括&nbsp;（1） 。软件过程模型是软件开发实际过程的抽象与概括，它应该包括构成软件过程的各种活动。软件过程有各种各样的模型，其中&nbsp;（2） 的活动之间存在因果关系，前一阶段工作的结果是后一段阶段工作的输入描述。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 瀑布模型 ",
      " 原型模式 ",
      " 螺旋模型 ",
      " 基于构建的模型 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 33,
      "belong_page": 1,
      "question_id": 350315,
      "question_title": "<p>软件过程是制作软件产品的一组活动，以及结果，这些活动主要由软件人员来完成， 主要包括&nbsp;（1） 。软件过程模型是软件开发实际过程的抽象与概括，它应该包括构成软件过程的各种活动。软件过程有各种各样的模型，其中&nbsp;（2） 的活动之间存在因果关系，前一阶段工作的结果是后一段阶段工作的输入描述。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350313,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 瀑布模型 ",
        " 原型模式 ",
        " 螺旋模型 ",
        " 基于构建的模型 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 350317,
    "question_title": "<p>&nbsp;（1） 适用于程序开发人员在地域上分布很广的开发团队，&nbsp;（2） 中，程序开发人员分成首席程序员和“类”程序员。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 水晶系列（Crystal）开发方法 ",
      " 开放式源码（Open Source）开发方法 ",
      " SCRUM开发方法&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; ",
      " 功用驱动开发方法（FDD） "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 34,
      "belong_page": 1,
      "question_id": 350317,
      "question_title": "<p>&nbsp;（1） 适用于程序开发人员在地域上分布很广的开发团队，&nbsp;（2） 中，程序开发人员分成首席程序员和“类”程序员。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350316,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 水晶系列（Crystal）开发方法 ",
        " 开放式源码（Open Source）开发方法 ",
        " SCRUM开发方法&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; ",
        " 功用驱动开发方法（FDD） "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 350318,
    "question_title": "<p>&nbsp;（1） 适用于程序开发人员在地域上分布很广的开发团队，&nbsp;（2） 中，程序开发人员分成首席程序员和“类”程序员。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 自适应软件开发（ASD）&nbsp; &nbsp;&nbsp; ",
      " 极限编程（XP）开发方法&nbsp; ",
      " 开放统一过程开发方法（OpenUP）&nbsp; ",
      " 功用驱动开发方法（FDD） "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 35,
      "belong_page": 1,
      "question_id": 350318,
      "question_title": "<p>&nbsp;（1） 适用于程序开发人员在地域上分布很广的开发团队，&nbsp;（2） 中，程序开发人员分成首席程序员和“类”程序员。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350316,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 自适应软件开发（ASD）&nbsp; &nbsp;&nbsp; ",
        " 极限编程（XP）开发方法&nbsp; ",
        " 开放统一过程开发方法（OpenUP）&nbsp; ",
        " 功用驱动开发方法（FDD） "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 350330,
    "question_title": "<p>应用系统构建中可以采用多种不同的技术，&nbsp;（1） 可以将软件某种形式的描述转换为更高级的抽象表现形式。而利用这些获取的信息，&nbsp;（2） 能够对现有系统进行修改或重构，从而产生系统的一个新版本。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 逆向工程（Reverse Engineering） ",
      " 系统改进（System Improvement） ",
      " 设计恢复（Design Recovery） ",
      " 再工程（Re-engineering） "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 36,
      "belong_page": 1,
      "question_id": 350330,
      "question_title": "<p>应用系统构建中可以采用多种不同的技术，&nbsp;（1） 可以将软件某种形式的描述转换为更高级的抽象表现形式。而利用这些获取的信息，&nbsp;（2） 能够对现有系统进行修改或重构，从而产生系统的一个新版本。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350329,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 逆向工程（Reverse Engineering） ",
        " 系统改进（System Improvement） ",
        " 设计恢复（Design Recovery） ",
        " 再工程（Re-engineering） "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 350331,
    "question_title": "<p>应用系统构建中可以采用多种不同的技术，&nbsp;（1） 可以将软件某种形式的描述转换为更高级的抽象表现形式。而利用这些获取的信息，&nbsp;（2） 能够对现有系统进行修改或重构，从而产生系统的一个新版本。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 逆向工程（Reverse Engineering） ",
      " 系统改进（System Improvement） ",
      " 设计恢复（Design Recovery） ",
      " 再工程（Re-engineering） "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 37,
      "belong_page": 1,
      "question_id": 350331,
      "question_title": "<p>应用系统构建中可以采用多种不同的技术，&nbsp;（1） 可以将软件某种形式的描述转换为更高级的抽象表现形式。而利用这些获取的信息，&nbsp;（2） 能够对现有系统进行修改或重构，从而产生系统的一个新版本。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350329,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 逆向工程（Reverse Engineering） ",
        " 系统改进（System Improvement） ",
        " 设计恢复（Design Recovery） ",
        " 再工程（Re-engineering） "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 352275,
    "question_title": "<p>&nbsp;基于 RUP 的软件过程是一个迭代过程， 一个开发周期包括初始、细化、构建和移交4 个阶段。每次通过这 4 个阶段就会产生一代软件，其中定义最终业务模型是&nbsp;（1） 阶段的任务。采用迭代式开发，&nbsp;（2） 。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 初始 ",
      " 细化 ",
      " 构建 ",
      " 移交 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 38,
      "belong_page": 1,
      "question_id": 352275,
      "question_title": "<p>&nbsp;基于 RUP 的软件过程是一个迭代过程， 一个开发周期包括初始、细化、构建和移交4 个阶段。每次通过这 4 个阶段就会产生一代软件，其中定义最终业务模型是&nbsp;（1） 阶段的任务。采用迭代式开发，&nbsp;（2） 。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352274,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 初始 ",
        " 细化 ",
        " 构建 ",
        " 移交 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 352276,
    "question_title": "<p>&nbsp;基于 RUP 的软件过程是一个迭代过程， 一个开发周期包括初始、细化、构建和移交4 个阶段。每次通过这 4 个阶段就会产生一代软件，其中定义最终业务模型是&nbsp;（1） 阶段的任务。采用迭代式开发，&nbsp;（2） 。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 每一个迭代都是一个完整的开发过程 ",
      " 每一轮迭代的重点是对特定的用例进行部分实现 ",
      " 在后续迭代中强调用户的主动参与 ",
      " 通常以功能分解为基础 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 39,
      "belong_page": 1,
      "question_id": 352276,
      "question_title": "<p>&nbsp;基于 RUP 的软件过程是一个迭代过程， 一个开发周期包括初始、细化、构建和移交4 个阶段。每次通过这 4 个阶段就会产生一代软件，其中定义最终业务模型是&nbsp;（1） 阶段的任务。采用迭代式开发，&nbsp;（2） 。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352274,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 每一个迭代都是一个完整的开发过程 ",
        " 每一轮迭代的重点是对特定的用例进行部分实现 ",
        " 在后续迭代中强调用户的主动参与 ",
        " 通常以功能分解为基础 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 352278,
    "question_title": "<p>&nbsp;在结构化分析方法中，用&nbsp;（31） 表示数据模型。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 用例图 ",
      " E-R图 ",
      " 数据字典 ",
      " 数据流图 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 40,
      "belong_page": 1,
      "question_id": 352278,
      "question_title": "<p>&nbsp;在结构化分析方法中，用&nbsp;（31） 表示数据模型。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352278,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 用例图 ",
        " E-R图 ",
        " 数据字典 ",
        " 数据流图 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 352391,
    "question_title": "<p>对于开发模型来说，（1）复用好、开发过程无间隙、节省时间。（2）是瀑布与原型（演化）模型结合体，适用于复杂项目。（3）需要用户参与，模块化要求高，不适用新技术。（4）是用例驱动、架构为中心、迭代、增量。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " RAD模型&nbsp; ",
      " 螺旋模型&nbsp; ",
      " RUP模型&nbsp; ",
      " 喷泉模型&nbsp; "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 41,
      "belong_page": 1,
      "question_id": 352391,
      "question_title": "<p>对于开发模型来说，（1）复用好、开发过程无间隙、节省时间。（2）是瀑布与原型（演化）模型结合体，适用于复杂项目。（3）需要用户参与，模块化要求高，不适用新技术。（4）是用例驱动、架构为中心、迭代、增量。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352390,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " RAD模型&nbsp; ",
        " 螺旋模型&nbsp; ",
        " RUP模型&nbsp; ",
        " 喷泉模型&nbsp; "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 355056,
    "question_title": "<p>【51CTO学堂-学员回忆版】CMMI是软件企业进行多方面能力评价的、集成的成熟度模型，软件企业在实施过程中，为了达到本地化，应组织体系编写组，建立基于CMMI的软件质量管理体系文件，体系文件的层次结构一般分为四层，包括:①顶层方针②模板类文件③过程文件④规程文件按照自顶向下的塔型排列，以下顺序正确的是(23)。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " ①④③② ",
      " ①④②③ ",
      " ①②③④ ",
      " ①③④② "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 42,
      "belong_page": 1,
      "question_id": 355056,
      "question_title": "<p>【51CTO学堂-学员回忆版】CMMI是软件企业进行多方面能力评价的、集成的成熟度模型，软件企业在实施过程中，为了达到本地化，应组织体系编写组，建立基于CMMI的软件质量管理体系文件，体系文件的层次结构一般分为四层，包括:①顶层方针②模板类文件③过程文件④规程文件按照自顶向下的塔型排列，以下顺序正确的是(23)。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 355056,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " ①④③② ",
        " ①④②③ ",
        " ①②③④ ",
        " ①③④② "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 355057,
    "question_title": "【51CTO学堂-学员回忆版】信息建模方法是从数据的角度对现实世界建立模型，模型是现实系统的一个抽象，信息建模方法的基本工具是(24)。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "流程图",
      "实体联系图",
      "数据流图",
      "数据字典"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 43,
      "belong_page": 1,
      "question_id": 355057,
      "question_title": "【51CTO学堂-学员回忆版】信息建模方法是从数据的角度对现实世界建立模型，模型是现实系统的一个抽象，信息建模方法的基本工具是(24)。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 355057,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "流程图",
        "实体联系图",
        "数据流图",
        "数据字典"
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 371496,
    "question_title": "CMMI中，组织使用从多个项目收集来的数据对整体的组织级绩效进行关注属于 （30） 级别。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "已管理",
      "已定义",
      "量化管理",
      "优化"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 44,
      "belong_page": 1,
      "question_id": 371496,
      "question_title": "CMMI中，组织使用从多个项目收集来的数据对整体的组织级绩效进行关注属于 （30） 级别。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371496,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "已管理",
        "已定义",
        "量化管理",
        "优化"
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 371960,
    "question_title": "应用系统开发中可以采用不同的开发模型，其中， （1）将整个开发流程分为目标设定、风险分析、开发和有效性验证、评审四个部分；（2）则通过重用来提高软件的可靠性和易维护性，程序在进行修改时产生较少的副作用。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "瀑布模型",
      "螺旋模型",
      "构件模型",
      "对象模型"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 45,
      "belong_page": 1,
      "question_id": 371960,
      "question_title": "应用系统开发中可以采用不同的开发模型，其中， （1）将整个开发流程分为目标设定、风险分析、开发和有效性验证、评审四个部分；（2）则通过重用来提高软件的可靠性和易维护性，程序在进行修改时产生较少的副作用。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371959,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "瀑布模型",
        "螺旋模型",
        "构件模型",
        "对象模型"
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 371961,
    "question_title": "应用系统开发中可以采用不同的开发模型，其中， （1）将整个开发流程分为目标设定、风险分析、开发和有效性验证、评审四个部分；（2）则通过重用来提高软件的可靠性和易维护性，程序在进行修改时产生较少的副作用。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "瀑布模型",
      "螺旋模型",
      "构件模型",
      "对象模型"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 46,
      "belong_page": 1,
      "question_id": 371961,
      "question_title": "应用系统开发中可以采用不同的开发模型，其中， （1）将整个开发流程分为目标设定、风险分析、开发和有效性验证、评审四个部分；（2）则通过重用来提高软件的可靠性和易维护性，程序在进行修改时产生较少的副作用。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371959,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "瀑布模型",
        "螺旋模型",
        "构件模型",
        "对象模型"
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 373661,
    "question_title": "下列关于敏捷方法的叙述，错误的是（24）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "敏捷方法强调让客户满意和软件尽早增量发布",
      "敏捷方法强调可工作的软件胜过大量文档",
      "敏捷方法强调遵循计划胜过响应变化",
      "敏捷方法强调个体和交互胜过过程和工具"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 47,
      "belong_page": 1,
      "question_id": 373661,
      "question_title": "下列关于敏捷方法的叙述，错误的是（24）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373661,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "敏捷方法强调让客户满意和软件尽早增量发布",
        "敏捷方法强调可工作的软件胜过大量文档",
        "敏捷方法强调遵循计划胜过响应变化",
        "敏捷方法强调个体和交互胜过过程和工具"
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 507293,
    "question_title": "RUP（Rational Unified Process，统一软件开发过程）是以 （ ） 的。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "数据驱动",
      "用例驱动",
      "场景驱动",
      "模型驱动"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 48,
      "belong_page": 1,
      "question_id": 507293,
      "question_title": "RUP（Rational Unified Process，统一软件开发过程）是以 （ ） 的。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507293,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "数据驱动",
        "用例驱动",
        "场景驱动",
        "模型驱动"
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 507300,
    "question_title": "螺旋模型是基于（ ）的改进模型。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "喷泉模型",
      "快速原型模型",
      "瀑布模型",
      "增量模型"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 49,
      "belong_page": 1,
      "question_id": 507300,
      "question_title": "螺旋模型是基于（ ）的改进模型。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507300,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "喷泉模型",
        "快速原型模型",
        "瀑布模型",
        "增量模型"
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 523235,
    "question_title": "<p>CMMI分为多少个成熟度等级（）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 4 ",
      " 5 ",
      " 6 ",
      " 7 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 50,
      "belong_page": 1,
      "question_id": 523235,
      "question_title": "<p>CMMI分为多少个成熟度等级（）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523235,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 4 ",
        " 5 ",
        " 6 ",
        " 7 "
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 523249,
    "question_title": "Kruchten提出了一个“4+1”的视图模型。“4+1”视图模型从5个不同的视角来描述软件架构，每个视图只关心系统的一个侧面，5个视图结合在一起才能反映软件架构的全部内容。其中，（1）主要考虑如何把软件映射到硬件上；（2）侧重于系统的运行特性。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "场景",
      "模块视图",
      "开发视图",
      "物理视图"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 51,
      "belong_page": 1,
      "question_id": 523249,
      "question_title": "Kruchten提出了一个“4+1”的视图模型。“4+1”视图模型从5个不同的视角来描述软件架构，每个视图只关心系统的一个侧面，5个视图结合在一起才能反映软件架构的全部内容。其中，（1）主要考虑如何把软件映射到硬件上；（2）侧重于系统的运行特性。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 523248,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "场景",
        "模块视图",
        "开发视图",
        "物理视图"
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 523250,
    "question_title": "Kruchten提出了一个“4+1”的视图模型。“4+1”视图模型从5个不同的视角来描述软件架构，每个视图只关心系统的一个侧面，5个视图结合在一起才能反映软件架构的全部内容。其中，（1）主要考虑如何把软件映射到硬件上；（2）侧重于系统的运行特性。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "开发视图",
      "进程视图",
      "场景",
      "物理视图"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 52,
      "belong_page": 1,
      "question_id": 523250,
      "question_title": "Kruchten提出了一个“4+1”的视图模型。“4+1”视图模型从5个不同的视角来描述软件架构，每个视图只关心系统的一个侧面，5个视图结合在一起才能反映软件架构的全部内容。其中，（1）主要考虑如何把软件映射到硬件上；（2）侧重于系统的运行特性。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 523248,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "开发视图",
        "进程视图",
        "场景",
        "物理视图"
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 523252,
    "question_title": "RUP中设计确定系统体系结构，制定计划和资源要求的阶段是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "初始",
      "细化",
      "构造",
      "移交"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 53,
      "belong_page": 1,
      "question_id": 523252,
      "question_title": "RUP中设计确定系统体系结构，制定计划和资源要求的阶段是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523252,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "初始",
        "细化",
        "构造",
        "移交"
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 523254,
    "question_title": "逆向工程中用于恢复信息的方法有四类。其中，用户指导下的搜索与变换方法用于导出（）信息。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "实现级和结构级",
      "功能级和领域级",
      "实现级和领域级",
      "结构级和领域级"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 54,
      "belong_page": 1,
      "question_id": 523254,
      "question_title": "逆向工程中用于恢复信息的方法有四类。其中，用户指导下的搜索与变换方法用于导出（）信息。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523254,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "实现级和结构级",
        "功能级和领域级",
        "实现级和领域级",
        "结构级和领域级"
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 523258,
    "question_title": "以下（）增加了风险评估环节。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "瀑布模型",
      "螺旋模型",
      "V模型",
      "增量模型"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 55,
      "belong_page": 1,
      "question_id": 523258,
      "question_title": "以下（）增加了风险评估环节。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523258,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "瀑布模型",
        "螺旋模型",
        "V模型",
        "增量模型"
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 523287,
    "question_title": "Scrum产品待办列表的排序标准是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "实现难度",
      "技术成熟度",
      "最后期限",
      "商业价值"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 56,
      "belong_page": 1,
      "question_id": 523287,
      "question_title": "Scrum产品待办列表的排序标准是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523287,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "实现难度",
        "技术成熟度",
        "最后期限",
        "商业价值"
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 523292,
    "question_title": "双生命周期模型是一种软件产品线过程模型，分为两个重叠的生命周期，分别是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "领域工程和应用工程",
      "企业工程和应用工程",
      "领域工程和管理工程",
      "企业工程和管理工程"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 57,
      "belong_page": 1,
      "question_id": 523292,
      "question_title": "双生命周期模型是一种软件产品线过程模型，分为两个重叠的生命周期，分别是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523292,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "领域工程和应用工程",
        "企业工程和应用工程",
        "领域工程和管理工程",
        "企业工程和管理工程"
      ]
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 45952,
    "question_title": "<p><br/></p><p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Scrum敏捷开发过程的叙述，在答题纸上回答问题1至问题3。</p><p style=\"margin-top:5px;text-indent:28px;text-align:left\">【说明】</p><p>Scrum是一个增量的、迭代的敏捷软件开发过程。某软件公司计划开发一个基于Web的Scrum项目管理系统，用于支持项目团队采用Scrum敏捷开发方法进行软件开发，辅助主管智能决策。此项目管理系统提供的主要服务包括项目团队的管理、敏捷开发过程管理和工件的管理。</p><p>Scrum敏捷开发中，项目团队由Scrum主管、产品负责人和开发团队人员三种不同的角色组成，其开发过程由若干个Sprint（短的迭代周期，通常为2到4周）活动组成。</p><p>Product Backlog是在Scrum过程初期产生的一个按照商业价值排序的需求列表，该列表条目的体现形式通常为用户故事。在每一个Sprint活动中，项目团队从Product Backlog中挑选最高优先级的用户故事进行开发。被挑选的用户故事在Sprint计划会议上经过细化分解为任务，同时初步估算每一个任务的预计完成时间，编写Sprint Backlog。</p><p>在Sprint活动期间，项目团队每天早晨需举行每日站立会议，重新估算剩余任务的预计完成时间，更新Sprint Backlog、Sprint燃尽图和Release燃尽图。在每个Sprint活动结束时，项目团队召开评审会议和回顾会议，交付产品增量，总结Sprint期间的工作情况和问题。此时，如果Product Backlog中还有未完成的用户故事，则项目团队将开始筹备下一个Sprint活动迭代。</p><p>为完成Scrum项目管理系统，考虑到系统的智能决策需求，公司决定使用MVC架构模式开发该项目管理系统。具体来说，系统采用轻量级J2EE架构和SSH框架进行开发，使用MySQL数据库作为底层存储。</p><p>【问题1】（1 0分）</p><p>Scrum项目管理软件需真实模拟Scrum敏捷开发流程，请根据你的理解完成图5-1给出的Scrum敏捷开发状态图，．填写其中(1)～(5)的内容。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20180827/1535370724856536.png\" title=\"1535370724856536.png\" alt=\"图片.png\"/><br/><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20180827/1535370750689225.png\" title=\"1535370750689225.png\" alt=\"图片.png\"/><br/><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20180827/1535370768351642.png\" title=\"1535370768351642.png\" alt=\"图片.png\"/><br/></p><p>【问题3】（9分）</p><p>根据项目组给出的系统设计方案，将备选答案a~l的内容填写在图5-2中的空(1)～(9)，完成系统架构图。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20180827/1535370803509620.png\" title=\"1535370803509620.png\" alt=\"图片.png\"/><br/><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20181011/1539249747504803.png\" title=\"1539249747504803.png\" alt=\"QQ截图20181011172218.png\"/><br/></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题1参考答案】</p><p>（1）制定Product Backlog <br/></p><p>（2）Sprint计划会议</p><p>（3）每日站立会议</p><p>（4）Product Backlog中还有未完成的用户故事</p><p>（5）已交付Product Backlog中的所有用户故事</p><p>【问题2参考答案】</p><p>（1）b，c，d，h，k， l，m，n</p><p>（2）a，f</p><p>（3）e，j</p><p>注:各空中的项没有次序要求。</p><p>【问题3参考答案】</p><p>（1）d或f</p><p>（2）f或d</p><p>（3）h</p><p>（4）e</p><p>（5）a</p><p>（6）k</p><p>（7）j</p><p>（8）b</p><p>（9）c</p><p>注: （1）、 （2）答案可互换,但不能重复选择。</p><p><br/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 58,
      "belong_page": 1,
      "question_id": 45952,
      "question_title": "<p><br/></p><p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Scrum敏捷开发过程的叙述，在答题纸上回答问题1至问题3。</p><p style=\"margin-top:5px;text-indent:28px;text-align:left\">【说明】</p><p>Scrum是一个增量的、迭代的敏捷软件开发过程。某软件公司计划开发一个基于Web的Scrum项目管理系统，用于支持项目团队采用Scrum敏捷开发方法进行软件开发，辅助主管智能决策。此项目管理系统提供的主要服务包括项目团队的管理、敏捷开发过程管理和工件的管理。</p><p>Scrum敏捷开发中，项目团队由Scrum主管、产品负责人和开发团队人员三种不同的角色组成，其开发过程由若干个Sprint（短的迭代周期，通常为2到4周）活动组成。</p><p>Product Backlog是在Scrum过程初期产生的一个按照商业价值排序的需求列表，该列表条目的体现形式通常为用户故事。在每一个Sprint活动中，项目团队从Product Backlog中挑选最高优先级的用户故事进行开发。被挑选的用户故事在Sprint计划会议上经过细化分解为任务，同时初步估算每一个任务的预计完成时间，编写Sprint Backlog。</p><p>在Sprint活动期间，项目团队每天早晨需举行每日站立会议，重新估算剩余任务的预计完成时间，更新Sprint Backlog、Sprint燃尽图和Release燃尽图。在每个Sprint活动结束时，项目团队召开评审会议和回顾会议，交付产品增量，总结Sprint期间的工作情况和问题。此时，如果Product Backlog中还有未完成的用户故事，则项目团队将开始筹备下一个Sprint活动迭代。</p><p>为完成Scrum项目管理系统，考虑到系统的智能决策需求，公司决定使用MVC架构模式开发该项目管理系统。具体来说，系统采用轻量级J2EE架构和SSH框架进行开发，使用MySQL数据库作为底层存储。</p><p>【问题1】（1 0分）</p><p>Scrum项目管理软件需真实模拟Scrum敏捷开发流程，请根据你的理解完成图5-1给出的Scrum敏捷开发状态图，．填写其中(1)～(5)的内容。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20180827/1535370724856536.png\" title=\"1535370724856536.png\" alt=\"图片.png\"/><br/><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20180827/1535370750689225.png\" title=\"1535370750689225.png\" alt=\"图片.png\"/><br/><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20180827/1535370768351642.png\" title=\"1535370768351642.png\" alt=\"图片.png\"/><br/></p><p>【问题3】（9分）</p><p>根据项目组给出的系统设计方案，将备选答案a~l的内容填写在图5-2中的空(1)～(9)，完成系统架构图。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20180827/1535370803509620.png\" title=\"1535370803509620.png\" alt=\"图片.png\"/><br/><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20181011/1539249747504803.png\" title=\"1539249747504803.png\" alt=\"QQ截图20181011172218.png\"/><br/></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 45952,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题1参考答案】</p><p>（1）制定Product Backlog <br/></p><p>（2）Sprint计划会议</p><p>（3）每日站立会议</p><p>（4）Product Backlog中还有未完成的用户故事</p><p>（5）已交付Product Backlog中的所有用户故事</p><p>【问题2参考答案】</p><p>（1）b，c，d，h，k， l，m，n</p><p>（2）a，f</p><p>（3）e，j</p><p>注:各空中的项没有次序要求。</p><p>【问题3参考答案】</p><p>（1）d或f</p><p>（2）f或d</p><p>（3）h</p><p>（4）e</p><p>（5）a</p><p>（6）k</p><p>（7）j</p><p>（8）b</p><p>（9）c</p><p>注: （1）、 （2）答案可互换,但不能重复选择。</p><p><br/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 54269,
    "question_title": "<p>阅读以下关于软件架构设计的叙述，在答题纸上回答问题1至问题3<br/>某公司要在现场开发一个网站应用系统，该系统的特点是：规模不大；工期短；用户需求不明确；没有大的技术风险；系统中的一些模块可以外包给其他的公司开发。在选择开发过程时，项目组内产生了分歧。<br/>王工提出采用XP（eXtreme Programming，极限编程），理由是XP方法简洁，能减轻开发人员的负担、快速适应市场、缩短投资回收期。<br/>李工认为采用XP在项目开发中存在一些问题，建议考虑原型开发方法。<br/>双方就上述的问题展开了激烈的争论。项目组最后决定采用XP，但同时针对李工提出的XP中存在的问题采取了相应的措施。<br/>【问题1】（8分）<br/>小规模发布（small release）是XP的基本元素之一。请用200字以内文字分别阐明：<br/>（1）原型系统和XP小规模发布的系统的主要差别？<br/>（2）为什么该项目组没有采用原型开发方法？<br/>【问题2】（8分）<br/>请用200字以内文字，简要说明采用XP方法可能会存在哪些问题。<br/>【问题3】（9分）<br/>在项目组的后续讨论中，李工提出，如果项目规模扩大，XP将不再适用。王工对此表示赞同，但同时提出可以将XP方法和传统软件开发过程相结合。请用200字以内的文字简要地说明如何将XP方法和传统软件开发过程相结合。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题1】<br/>（1）原型系统和XP小型发布的系统的主要差别是功能。采用原型系统主要是让用户确认需求，或者用来测试关键的技术，但是它展示的功能并不是实际系统的功能，不能用来评价实际的系统；XP小型发布的系统考试时不包括足够的功能，但是每个功能和可发布的产品的定义是一样的。在完整性上，它配备了一系列实用的功能集；在质量上，它可以健壮地运行。<br/>（2）在该项目中，不需要开发原型系统。<br/>由于项目没有大的技术风险，所以不需要用原型系统来测试关键技术。<br/>网站系统的开发和原型系统的开发在工作量上是相当的，在时间要求短的情况下，直接开发系统可以节省时间。<br/>对于用户需求经常发生变化的情况，可以采用XP开发方法的代码重构、持续集成和小型发布等技术。<br/>【问题2】<br/>（1）开发团队、管理层，以及客户的不理解，阻碍XP方法论实施。<br/>（2）导致开发团队忽视文档，以XP为借口拒绝编写甚至是必须的文档。<br/>（3）XP是针对单一团队设计的，外包方的参与将会为有效的组织带来很大的困难。<br/>（4）缺乏客户的参与，导致用户故事编写、优先级确认等工作遇到困难。<br/>（5）项目规模扩大后，XP方法论将不适应。<br/>（6）对客户、开发人员和管理者的素质要求较高。<br/>【问题3】<br/>（1）可以将XP和传统软件开发过程中的增量式开发过程相结合。<br/>（2）将大规模项目划分为若干个具有共同目标的小规模项目，用XP方法论组织小项目开发，用传统软件过程方法论监控全局。<br/>（3）在此基础上，建立面向目标的项目管理。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 59,
      "belong_page": 1,
      "question_id": 54269,
      "question_title": "<p>阅读以下关于软件架构设计的叙述，在答题纸上回答问题1至问题3<br/>某公司要在现场开发一个网站应用系统，该系统的特点是：规模不大；工期短；用户需求不明确；没有大的技术风险；系统中的一些模块可以外包给其他的公司开发。在选择开发过程时，项目组内产生了分歧。<br/>王工提出采用XP（eXtreme Programming，极限编程），理由是XP方法简洁，能减轻开发人员的负担、快速适应市场、缩短投资回收期。<br/>李工认为采用XP在项目开发中存在一些问题，建议考虑原型开发方法。<br/>双方就上述的问题展开了激烈的争论。项目组最后决定采用XP，但同时针对李工提出的XP中存在的问题采取了相应的措施。<br/>【问题1】（8分）<br/>小规模发布（small release）是XP的基本元素之一。请用200字以内文字分别阐明：<br/>（1）原型系统和XP小规模发布的系统的主要差别？<br/>（2）为什么该项目组没有采用原型开发方法？<br/>【问题2】（8分）<br/>请用200字以内文字，简要说明采用XP方法可能会存在哪些问题。<br/>【问题3】（9分）<br/>在项目组的后续讨论中，李工提出，如果项目规模扩大，XP将不再适用。王工对此表示赞同，但同时提出可以将XP方法和传统软件开发过程相结合。请用200字以内的文字简要地说明如何将XP方法和传统软件开发过程相结合。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 54269,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题1】<br/>（1）原型系统和XP小型发布的系统的主要差别是功能。采用原型系统主要是让用户确认需求，或者用来测试关键的技术，但是它展示的功能并不是实际系统的功能，不能用来评价实际的系统；XP小型发布的系统考试时不包括足够的功能，但是每个功能和可发布的产品的定义是一样的。在完整性上，它配备了一系列实用的功能集；在质量上，它可以健壮地运行。<br/>（2）在该项目中，不需要开发原型系统。<br/>由于项目没有大的技术风险，所以不需要用原型系统来测试关键技术。<br/>网站系统的开发和原型系统的开发在工作量上是相当的，在时间要求短的情况下，直接开发系统可以节省时间。<br/>对于用户需求经常发生变化的情况，可以采用XP开发方法的代码重构、持续集成和小型发布等技术。<br/>【问题2】<br/>（1）开发团队、管理层，以及客户的不理解，阻碍XP方法论实施。<br/>（2）导致开发团队忽视文档，以XP为借口拒绝编写甚至是必须的文档。<br/>（3）XP是针对单一团队设计的，外包方的参与将会为有效的组织带来很大的困难。<br/>（4）缺乏客户的参与，导致用户故事编写、优先级确认等工作遇到困难。<br/>（5）项目规模扩大后，XP方法论将不适应。<br/>（6）对客户、开发人员和管理者的素质要求较高。<br/>【问题3】<br/>（1）可以将XP和传统软件开发过程中的增量式开发过程相结合。<br/>（2）将大规模项目划分为若干个具有共同目标的小规模项目，用XP方法论组织小项目开发，用传统软件过程方法论监控全局。<br/>（3）在此基础上，建立面向目标的项目管理。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9374",
    "section_name": "软件工程基础知识（第二版） - 软件工程",
    "question_id": 208630,
    "question_title": "<p>论软件架构建模技术与应用</p><p>软件架构用来处理软件高层次结构的设计和实施，它以精心选择的形式将若干结构元素进行装配，从而满足系统的主要功能和性能需求。软件架构设计的首要问题是如何表示软件架构，即如何对软件架构建模。根据建模的侧重点不同，可以将软件架构模型分为结构模型、框架模型、动态模型、过程模型和功能模型。Kruchten在1995年提出了“4+1”视图模型，将5种模型有机地统一在一起。</p><p>请围绕“软件架构建模技术与应用”论题，依次从以下三个方面进行论述。</p><p>1．概要叙述你参与管理和开发的软件项目以及你在其中所承担的主要工作。</p><p>2．简要叙述“4+1”视图模型的主要内容。结合你参与项目的实际情况，详细说明该项目需求及所涉及的软件架构(包括使用到的视图模型、创建的架构模型及使用的建模工具等)。</p><p>3．说明该项目软件架构的实施效果，分析其是否满足了项目的需求并说明原因。<span style=\"font-size: 16px;\"></span></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "请看解析"
    ],
    "analysis": "",
    "raw_data": {
      "index": 60,
      "belong_page": 1,
      "question_id": 208630,
      "question_title": "<p>论软件架构建模技术与应用</p><p>软件架构用来处理软件高层次结构的设计和实施，它以精心选择的形式将若干结构元素进行装配，从而满足系统的主要功能和性能需求。软件架构设计的首要问题是如何表示软件架构，即如何对软件架构建模。根据建模的侧重点不同，可以将软件架构模型分为结构模型、框架模型、动态模型、过程模型和功能模型。Kruchten在1995年提出了“4+1”视图模型，将5种模型有机地统一在一起。</p><p>请围绕“软件架构建模技术与应用”论题，依次从以下三个方面进行论述。</p><p>1．概要叙述你参与管理和开发的软件项目以及你在其中所承担的主要工作。</p><p>2．简要叙述“4+1”视图模型的主要内容。结合你参与项目的实际情况，详细说明该项目需求及所涉及的软件架构(包括使用到的视图模型、创建的架构模型及使用的建模工具等)。</p><p>3．说明该项目软件架构的实施效果，分析其是否满足了项目的需求并说明原因。<span style=\"font-size: 16px;\"></span></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 208630,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "请看解析"
      ],
      "option": null
    },
    "crawl_time": 1753176841.4975371
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 43762,
    "question_title": "<p><br/></p><p class=\"MsoNormal\" style=\"text-indent:20.7000pt;text-align:left;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">下列叙述中，不满足好的需求陈述要求的是</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">27</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">。</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;mso-hansi-font-family:&#39;Times New Roman&#39;;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 每一项需求都必须完整、准确地描述即将要开发的功能 ",
      " 需求必须能够在系统及其运行环境的能力和约束条件内实现 ",
      " 每一项需求记录的功能都必须是用户的真正的需要 ",
      " 所有需求都应被视为同等重要 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43762,
      "question_title": "<p><br/></p><p class=\"MsoNormal\" style=\"text-indent:20.7000pt;text-align:left;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">下列叙述中，不满足好的需求陈述要求的是</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">27</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">。</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;mso-hansi-font-family:&#39;Times New Roman&#39;;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43762,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 每一项需求都必须完整、准确地描述即将要开发的功能 ",
        " 需求必须能够在系统及其运行环境的能力和约束条件内实现 ",
        " 每一项需求记录的功能都必须是用户的真正的需要 ",
        " 所有需求都应被视为同等重要 "
      ]
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 49923,
    "question_title": "<p>（ &nbsp;）是关于需求管理正确的说法。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 为达到过程能力成熟度模型第二级，组织机构必须具有3个关键过程域 ",
      " 需求的稳定性不属于需求属性 ",
      " 需求变更的管理过程遵循变更分析和成本计算、问题分析和变更描述、变更实现的顺序 ",
      " 变更控制委员会对项目中任何基线工作产品的变更都可以做出决定 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 49923,
      "question_title": "<p>（ &nbsp;）是关于需求管理正确的说法。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49923,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 为达到过程能力成熟度模型第二级，组织机构必须具有3个关键过程域 ",
        " 需求的稳定性不属于需求属性 ",
        " 需求变更的管理过程遵循变更分析和成本计算、问题分析和变更描述、变更实现的顺序 ",
        " 变更控制委员会对项目中任何基线工作产品的变更都可以做出决定 "
      ]
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 54225,
    "question_title": "<p>软件开发商对软件产品进行持续不断改进的动力主要来自（ &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 用户的反馈意见 ",
      " 反盗版 ",
      " 促销 ",
      " 技术进步 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 54225,
      "question_title": "<p>软件开发商对软件产品进行持续不断改进的动力主要来自（ &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54225,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 用户的反馈意见 ",
        " 反盗版 ",
        " 促销 ",
        " 技术进步 "
      ]
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 54310,
    "question_title": "<p>某软件公司正在承担开发一个字处理器的任务。在需求分析阶段，公司的相关人员整理出一些相关的系统需求，其中，&quot;找出文档中的拼写错误并提供一个替换项列表来供选择替换拼错的词&quot;属于（请作答此空）；&quot;显示提供替换词的对话框以及实现整个文档范围的替换&quot;属于（ &nbsp;）；&quot;用户能有效地纠正文档中的拼写错误&quot;属于（ &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 业务需求 ",
      " 用户需求 ",
      " 功能需求 ",
      " 性能需求 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 54310,
      "question_title": "<p>某软件公司正在承担开发一个字处理器的任务。在需求分析阶段，公司的相关人员整理出一些相关的系统需求，其中，&quot;找出文档中的拼写错误并提供一个替换项列表来供选择替换拼错的词&quot;属于（请作答此空）；&quot;显示提供替换词的对话框以及实现整个文档范围的替换&quot;属于（ &nbsp;）；&quot;用户能有效地纠正文档中的拼写错误&quot;属于（ &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54310,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 业务需求 ",
        " 用户需求 ",
        " 功能需求 ",
        " 性能需求 "
      ]
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 63622,
    "question_title": "<p>需求管理是一个对系统需求变更、了解和控制的过程。以下活动中，（　）不属于需求管理的主要活动。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 文档管理 ",
      " 需求跟踪 ",
      " 版本控制 ",
      " 变更控制 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 63622,
      "question_title": "<p>需求管理是一个对系统需求变更、了解和控制的过程。以下活动中，（　）不属于需求管理的主要活动。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63622,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 文档管理 ",
        " 需求跟踪 ",
        " 版本控制 ",
        " 变更控制 "
      ]
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 309469,
    "question_title": "需求获取是确定和理解不同的项目干系人的需求和约束的过程，需求获取是否科学、准备充分，对获取的结果影响很大。在多种需求获取方式中，（1）方法具有良好的灵活性，有较宽广的应用范围，但存在获取需求时信息量大、记录较为困难、需要足够的领域知识等问题。（2）方法基于数理统计原理，不仅可以用于收集数据，还可以用于采集访谈用户或者是采集观察用户，并可以减少数据收集偏差。（3）方法通过高度组织的群体会议来分析企业内的问题，并从中获取系统需求。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "用户访谈",
      "问卷调查",
      "联合需求计划",
      "采样"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 309469,
      "question_title": "需求获取是确定和理解不同的项目干系人的需求和约束的过程，需求获取是否科学、准备充分，对获取的结果影响很大。在多种需求获取方式中，（1）方法具有良好的灵活性，有较宽广的应用范围，但存在获取需求时信息量大、记录较为困难、需要足够的领域知识等问题。（2）方法基于数理统计原理，不仅可以用于收集数据，还可以用于采集访谈用户或者是采集观察用户，并可以减少数据收集偏差。（3）方法通过高度组织的群体会议来分析企业内的问题，并从中获取系统需求。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 309468,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "用户访谈",
        "问卷调查",
        "联合需求计划",
        "采样"
      ]
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 355059,
    "question_title": "<p>【51CTO学堂-学员回忆版】使用模型驱动的软件开发方法，软件系统被表示为一组可以被自动转换为可执行代码的模型。其中，(26)在不涉及实现的情况下对软件系统进行建模。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 平台无关模型 ",
      " 计算无关模型 ",
      " 平台相关模型 ",
      " 实现相关模型 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 355059,
      "question_title": "<p>【51CTO学堂-学员回忆版】使用模型驱动的软件开发方法，软件系统被表示为一组可以被自动转换为可执行代码的模型。其中，(26)在不涉及实现的情况下对软件系统进行建模。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 355059,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 平台无关模型 ",
        " 计算无关模型 ",
        " 平台相关模型 ",
        " 实现相关模型 "
      ]
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 371925,
    "question_title": "软件需求开发的最终文档经过评审批准后，就定义了开发工作的 （1） ，它在客户和开发者之间构筑了产品功能需求和非功能需求的一个（2），是需求开发和需求管理之间的桥梁。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "需求基线",
      "需求标准",
      "需求用例",
      "需求分析"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 371925,
      "question_title": "软件需求开发的最终文档经过评审批准后，就定义了开发工作的 （1） ，它在客户和开发者之间构筑了产品功能需求和非功能需求的一个（2），是需求开发和需求管理之间的桥梁。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371924,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "需求基线",
        "需求标准",
        "需求用例",
        "需求分析"
      ]
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 371926,
    "question_title": "软件需求开发的最终文档经过评审批准后，就定义了开发工作的 （1） ，它在客户和开发者之间构筑了产品功能需求和非功能需求的一个（2），是需求开发和需求管理之间的桥梁。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "需求管理标准",
      "需求用例",
      "需求约定",
      "需求变更"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 371926,
      "question_title": "软件需求开发的最终文档经过评审批准后，就定义了开发工作的 （1） ，它在客户和开发者之间构筑了产品功能需求和非功能需求的一个（2），是需求开发和需求管理之间的桥梁。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371924,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "需求管理标准",
        "需求用例",
        "需求约定",
        "需求变更"
      ]
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 372002,
    "question_title": "The purpose of systems design is to specify a（n） （1） ，which defines the technologies to be used to build the proposed information systems. This task is accomplished by analyzing the data models and process models that were initially created during （2） . The（3） is used to establish physical processes and data stores across a network .To complete this activity, the analyst may involve a number of system designers and （4） ，which maybe involved in this activity to help address business data，process，and location issues.The key inputs to this task are the facts， recommendations，and opinions that are solicited from var1ous sources and the approved （5） from the decision analysis phase.",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "physical model",
      "prototype system",
      "database schema",
      "application architecture"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 372002,
      "question_title": "The purpose of systems design is to specify a（n） （1） ，which defines the technologies to be used to build the proposed information systems. This task is accomplished by analyzing the data models and process models that were initially created during （2） . The（3） is used to establish physical processes and data stores across a network .To complete this activity, the analyst may involve a number of system designers and （4） ，which maybe involved in this activity to help address business data，process，and location issues.The key inputs to this task are the facts， recommendations，and opinions that are solicited from var1ous sources and the approved （5） from the decision analysis phase.",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 372001,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "physical model",
        "prototype system",
        "database schema",
        "application architecture"
      ]
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 372003,
    "question_title": "The purpose of systems design is to specify a（n） （1） ，which defines the technologies to be used to build the proposed information systems. This task is accomplished by analyzing the data models and process models that were initially created during （2） . The（3） is used to establish physical processes and data stores across a network .To complete this activity, the analyst may involve a number of system designers and （4） ，which maybe involved in this activity to help address business data，process，and location issues.The key inputs to this task are the facts， recommendations，and opinions that are solicited from var1ous sources and the approved （5） from the decision analysis phase.",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "requirements analysis",
      "problem analysis",
      "cause-effect analysis",
      "decision analysis"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 372003,
      "question_title": "The purpose of systems design is to specify a（n） （1） ，which defines the technologies to be used to build the proposed information systems. This task is accomplished by analyzing the data models and process models that were initially created during （2） . The（3） is used to establish physical processes and data stores across a network .To complete this activity, the analyst may involve a number of system designers and （4） ，which maybe involved in this activity to help address business data，process，and location issues.The key inputs to this task are the facts， recommendations，and opinions that are solicited from var1ous sources and the approved （5） from the decision analysis phase.",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 372001,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "requirements analysis",
        "problem analysis",
        "cause-effect analysis",
        "decision analysis"
      ]
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 372004,
    "question_title": "The purpose of systems design is to specify a（n） （1） ，which defines the technologies to be used to build the proposed information systems. This task is accomplished by analyzing the data models and process models that were initially created during （2） . The（3） is used to establish physical processes and data stores across a network .To complete this activity, the analyst may involve a number of system designers and （4） ，which maybe involved in this activity to help address business data，process，and location issues.The key inputs to this task are the facts， recommendations，and opinions that are solicited from var1ous sources and the approved （5） from the decision analysis phase.",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "entity-relation ship diagram",
      "physical data flow diagram",
      "data flow diagram",
      "physical database model"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 372004,
      "question_title": "The purpose of systems design is to specify a（n） （1） ，which defines the technologies to be used to build the proposed information systems. This task is accomplished by analyzing the data models and process models that were initially created during （2） . The（3） is used to establish physical processes and data stores across a network .To complete this activity, the analyst may involve a number of system designers and （4） ，which maybe involved in this activity to help address business data，process，and location issues.The key inputs to this task are the facts， recommendations，and opinions that are solicited from var1ous sources and the approved （5） from the decision analysis phase.",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 372001,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "entity-relation ship diagram",
        "physical data flow diagram",
        "data flow diagram",
        "physical database model"
      ]
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 372005,
    "question_title": "The purpose of systems design is to specify a（n） （1） ，which defines the technologies to be used to build the proposed information systems. This task is accomplished by analyzing the data models and process models that were initially created during （2） . The（3） is used to establish physical processes and data stores across a network .To complete this activity, the analyst may involve a number of system designers and （4） ，which maybe involved in this activity to help address business data，process，and location issues.The key inputs to this task are the facts， recommendations，and opinions that are solicited from var1ous sources and the approved （5） from the decision analysis phase.",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "system users",
      "system analyst",
      "system owner",
      "project manager"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 372005,
      "question_title": "The purpose of systems design is to specify a（n） （1） ，which defines the technologies to be used to build the proposed information systems. This task is accomplished by analyzing the data models and process models that were initially created during （2） . The（3） is used to establish physical processes and data stores across a network .To complete this activity, the analyst may involve a number of system designers and （4） ，which maybe involved in this activity to help address business data，process，and location issues.The key inputs to this task are the facts， recommendations，and opinions that are solicited from var1ous sources and the approved （5） from the decision analysis phase.",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 372001,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "system users",
        "system analyst",
        "system owner",
        "project manager"
      ]
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 372006,
    "question_title": "The purpose of systems design is to specify a（n） （1） ，which defines the technologies to be used to build the proposed information systems. This task is accomplished by analyzing the data models and process models that were initially created during （2） . The（3） is used to establish physical processes and data stores across a network .To complete this activity, the analyst may involve a number of system designers and （4） ，which maybe involved in this activity to help address business data，process，and location issues.The key inputs to this task are the facts， recommendations，and opinions that are solicited from var1ous sources and the approved （5） from the decision analysis phase.",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "system architecture",
      "system proposal",
      "technical model",
      "business procedure"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 372006,
      "question_title": "The purpose of systems design is to specify a（n） （1） ，which defines the technologies to be used to build the proposed information systems. This task is accomplished by analyzing the data models and process models that were initially created during （2） . The（3） is used to establish physical processes and data stores across a network .To complete this activity, the analyst may involve a number of system designers and （4） ，which maybe involved in this activity to help address business data，process，and location issues.The key inputs to this task are the facts， recommendations，and opinions that are solicited from var1ous sources and the approved （5） from the decision analysis phase.",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 372001,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "system architecture",
        "system proposal",
        "technical model",
        "business procedure"
      ]
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 373684,
    "question_title": "某软件公司承担了某金融公司财务管理系统的建设。在需求分析阶段，公司分析人员整理出一些相关的系统需求，其中“登陆用户的密码，30天需要修改一次，而且不能使用最近5次的密码，以提高系统的安全性”属于 （1） ，“要求采用国有自主知识产权的数据库”属于 （2） ，“在凭证录入时对往来款项进行详细的信息录入”属于 （3） ，“用户在凭证录入界面录入信息后，点击保存按钮后，客户认为一般能在3秒钟内保存到数据库中” 属于（45 ） 。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "业务需求",
      "功能需求",
      "设计约束",
      "非功能需求"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 373684,
      "question_title": "某软件公司承担了某金融公司财务管理系统的建设。在需求分析阶段，公司分析人员整理出一些相关的系统需求，其中“登陆用户的密码，30天需要修改一次，而且不能使用最近5次的密码，以提高系统的安全性”属于 （1） ，“要求采用国有自主知识产权的数据库”属于 （2） ，“在凭证录入时对往来款项进行详细的信息录入”属于 （3） ，“用户在凭证录入界面录入信息后，点击保存按钮后，客户认为一般能在3秒钟内保存到数据库中” 属于（45 ） 。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373683,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "业务需求",
        "功能需求",
        "设计约束",
        "非功能需求"
      ]
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 373685,
    "question_title": "某软件公司承担了某金融公司财务管理系统的建设。在需求分析阶段，公司分析人员整理出一些相关的系统需求，其中“登陆用户的密码，30天需要修改一次，而且不能使用最近5次的密码，以提高系统的安全性”属于 （1） ，“要求采用国有自主知识产权的数据库”属于 （2） ，“在凭证录入时对往来款项进行详细的信息录入”属于 （3） ，“用户在凭证录入界面录入信息后，点击保存按钮后，客户认为一般能在3秒钟内保存到数据库中” 属于（45 ） 。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "功能需求",
      "业务需求",
      "设计约束",
      "非功能需求"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 373685,
      "question_title": "某软件公司承担了某金融公司财务管理系统的建设。在需求分析阶段，公司分析人员整理出一些相关的系统需求，其中“登陆用户的密码，30天需要修改一次，而且不能使用最近5次的密码，以提高系统的安全性”属于 （1） ，“要求采用国有自主知识产权的数据库”属于 （2） ，“在凭证录入时对往来款项进行详细的信息录入”属于 （3） ，“用户在凭证录入界面录入信息后，点击保存按钮后，客户认为一般能在3秒钟内保存到数据库中” 属于（45 ） 。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373683,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "功能需求",
        "业务需求",
        "设计约束",
        "非功能需求"
      ]
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 373686,
    "question_title": "某软件公司承担了某金融公司财务管理系统的建设。在需求分析阶段，公司分析人员整理出一些相关的系统需求，其中“登陆用户的密码，30天需要修改一次，而且不能使用最近5次的密码，以提高系统的安全性”属于 （1） ，“要求采用国有自主知识产权的数据库”属于 （2） ，“在凭证录入时对往来款项进行详细的信息录入”属于 （3） ，“用户在凭证录入界面录入信息后，点击保存按钮后，客户认为一般能在3秒钟内保存到数据库中” 属于（45 ） 。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "用户需求",
      "功能需求",
      "业务需求",
      "性能需求"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 373686,
      "question_title": "某软件公司承担了某金融公司财务管理系统的建设。在需求分析阶段，公司分析人员整理出一些相关的系统需求，其中“登陆用户的密码，30天需要修改一次，而且不能使用最近5次的密码，以提高系统的安全性”属于 （1） ，“要求采用国有自主知识产权的数据库”属于 （2） ，“在凭证录入时对往来款项进行详细的信息录入”属于 （3） ，“用户在凭证录入界面录入信息后，点击保存按钮后，客户认为一般能在3秒钟内保存到数据库中” 属于（45 ） 。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373683,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "用户需求",
        "功能需求",
        "业务需求",
        "性能需求"
      ]
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 373687,
    "question_title": "某软件公司承担了某金融公司财务管理系统的建设。在需求分析阶段，公司分析人员整理出一些相关的系统需求，其中“登陆用户的密码，30天需要修改一次，而且不能使用最近5次的密码，以提高系统的安全性”属于 （1） ，“要求采用国有自主知识产权的数据库”属于 （2） ，“在凭证录入时对往来款项进行详细的信息录入”属于 （3） ，“用户在凭证录入界面录入信息后，点击保存按钮后，客户认为一般能在3秒钟内保存到数据库中” 属于（45 ） 。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "业务需求",
      "期望需求",
      "常规需求",
      "&nbsp;意外需求"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 18,
      "belong_page": 1,
      "question_id": 373687,
      "question_title": "某软件公司承担了某金融公司财务管理系统的建设。在需求分析阶段，公司分析人员整理出一些相关的系统需求，其中“登陆用户的密码，30天需要修改一次，而且不能使用最近5次的密码，以提高系统的安全性”属于 （1） ，“要求采用国有自主知识产权的数据库”属于 （2） ，“在凭证录入时对往来款项进行详细的信息录入”属于 （3） ，“用户在凭证录入界面录入信息后，点击保存按钮后，客户认为一般能在3秒钟内保存到数据库中” 属于（45 ） 。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373683,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "业务需求",
        "期望需求",
        "常规需求",
        "&nbsp;意外需求"
      ]
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 373695,
    "question_title": "软件需求管理是软件项目开发过程中控制和维持需求约定的活动，包括需求变更控制、版本控制、需求跟踪、（53）等活动。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "需求发现",
      "需求变更控制",
      "需求排序",
      "需求状态跟踪"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 19,
      "belong_page": 1,
      "question_id": 373695,
      "question_title": "软件需求管理是软件项目开发过程中控制和维持需求约定的活动，包括需求变更控制、版本控制、需求跟踪、（53）等活动。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373695,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "需求发现",
        "需求变更控制",
        "需求排序",
        "需求状态跟踪"
      ]
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 507319,
    "question_title": "功能元素按照特定的次序执行的是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "通信内聚",
      "时间内聚",
      "过程内聚",
      "逻辑内聚"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 20,
      "belong_page": 1,
      "question_id": 507319,
      "question_title": "功能元素按照特定的次序执行的是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507319,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "通信内聚",
        "时间内聚",
        "过程内聚",
        "逻辑内聚"
      ]
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 507333,
    "question_title": "创建型设计模式的概念",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "创建型",
      "结构性",
      "无",
      "无&nbsp;"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 21,
      "belong_page": 1,
      "question_id": 507333,
      "question_title": "创建型设计模式的概念",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507333,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "创建型",
        "结构性",
        "无",
        "无&nbsp;"
      ]
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 523300,
    "question_title": "下列关于需求跟踪的描述不正确的是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "正向跟踪是检查设计文档、代码、测试用例等工作成果是否都能在《产品需求规格说明书》找到出处",
      "需求跟踪的目的是建立与维护“需求-设计-编程-测试”之间的一致性",
      "需求跟踪包括编制每个需求同系统元素之间的联系文档，这些元素包括别的需求、体系结构、其它设计部件、源代码模块、测试、帮助文件和文档等",
      "正向跟踪和逆向跟踪合称为“双向跟踪”"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 22,
      "belong_page": 1,
      "question_id": 523300,
      "question_title": "下列关于需求跟踪的描述不正确的是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523300,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "正向跟踪是检查设计文档、代码、测试用例等工作成果是否都能在《产品需求规格说明书》找到出处",
        "需求跟踪的目的是建立与维护“需求-设计-编程-测试”之间的一致性",
        "需求跟踪包括编制每个需求同系统元素之间的联系文档，这些元素包括别的需求、体系结构、其它设计部件、源代码模块、测试、帮助文件和文档等",
        "正向跟踪和逆向跟踪合称为“双向跟踪”"
      ]
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 286358,
    "question_title": "<p>问题一：</p><p>请按照性能、安全性和可用性三娄非功能需求分类选择题的（a）~（f）填入（1）~（3）非功能性需求归类表：</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201108/1604816587605081.jpg\" title=\"1604816587605081.jpg\" alt=\"1.jpg\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>问题一：（1）a、b,（2）d,f（3）c、e</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 23,
      "belong_page": 1,
      "question_id": 286358,
      "question_title": "<p>问题一：</p><p>请按照性能、安全性和可用性三娄非功能需求分类选择题的（a）~（f）填入（1）~（3）非功能性需求归类表：</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201108/1604816587605081.jpg\" title=\"1604816587605081.jpg\" alt=\"1.jpg\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 286357,
      "score_rule": "",
      "material_text": "<p>试题五</p><p>关于Web系统架构设计的叙述，1-3题</p><p>说明：开发基于Web的基业设备检测系统，以实现对多种工业数据的分类采集，运行状态检测以及相关信息的管理该系统应具备以下功能：</p><p>现场设备状态采集功能，根据数据类型对设备检测指标状态信号进行分类采集，设备采集数据传输功能：9-11月可靠的传输技术，实现将设备数据从制造现场传输到系统后台</p><p>设备检测显示功能：对设备的运行状态工作以及报警状态进行检测并提供相应的图形化界面</p><p>设备信息管理功能：支持设备运行历史状态，报警记录参数信息的查询</p><p>同时，该系统还需满足以下非功能性需求.</p><p>（a）系统应支持大于100个工业设备的进行检测</p><p>（b）设备数据以制造现场传输到系统后台 传输时间小于1S</p><p>（c）系统应在7*24小时工作</p><p>（d）可抵御见XSS攻击</p><p>（e）系统在故障情况下，应在0.5小时内恢复</p><p>（f）支持数据审计</p><p>面对系统需求，公司召开项目计论会议，制定系统设计方案最终决定使用三层拓补结构，即现场设备数据采集层、Web检测服务层和前端Web显示层</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>问题一：（1）a、b,（2）d,f（3）c、e</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 373725,
    "question_title": "<p>【问题1】（8分）</p><p>请说明在架构评估过程关注的质量属性有哪些？</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>①　性能，是指系统的响应能力，即要经过多长时间才能对某个事件做出响应，或者在某段时间内系统所能处理的事件的个数。</p><p>②　可靠性，是软件系统在应用或系统错误面前，在意外或错误使用的情况下维持软件系统的功能特性的基本能力。</p><p>③　可用性，是系统能够正常运行的时间比例。</p><p>④　安全性，是指系统在向合法用户提供服务的同时能够阻止非授权用户使用的企图或拒绝服务的能力。</p><p>⑤　可修改性，是指能够快速地以较高的性价比对系统进行变更的能力。</p><p>⑥　功能性，是系统能完成所期望的工作的能力。</p><p>⑦　可变性，是指架构经扩充或变更而成为新架构的能力。</p><p>⑧　互操作性，作为系统组成部分的软件不是独立存在的，通常与其他系统或自身环境相互作用。</p><p>（回答出属性名称即可）</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 24,
      "belong_page": 1,
      "question_id": 373725,
      "question_title": "<p>【问题1】（8分）</p><p>请说明在架构评估过程关注的质量属性有哪些？</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 373724,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于系统架构开发的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>51CTO委托软件公司开发一套教学用品采购系统，业务涉及供应商注册、采购项目发布、竞价、评选、结果公告等板块，以提升企业的采购信息化水平。该软件公司组织项目组完成了需求调研，现已进入到系统架构设计阶段。考虑到系统需求对架构设计决策的影响，项目组先列出了可能影响系统架构设计的部分需求如下：</p><p>(a) 用户界面支持用户的个性化定制；</p><p>(b) 系统需要支持当前主流的标准和服务，特别是通信协议和平台接口；</p><p>(c) 用户操作的响应时间应不大于3秒，竞价板块不大于1秒；</p><p>(d) 系统具有故障自行诊断和快速恢复能力；</p><p>(e) 用户密码需要加密传输；</p><p>(f) 系统需要存储不少于10T的附件；</p><p>(g) 用户操作停滞时间超过定时限需要重新登录验证；</p><p>(h) 系统能识别供应商异常的报价并防止干扰评选；</p><p>(i) 系统在过载时竞价功能可降级，保证发布和公示不受影响。</p><p>经过评估，项目组提出了两种系统架构设计方案：瘦客户端C/S架构和胖客户端C/S架构，经过对上述需求逐条分析和讨论，最终决定采用瘦客户端C/S架构进行设计。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>①　性能，是指系统的响应能力，即要经过多长时间才能对某个事件做出响应，或者在某段时间内系统所能处理的事件的个数。</p><p>②　可靠性，是软件系统在应用或系统错误面前，在意外或错误使用的情况下维持软件系统的功能特性的基本能力。</p><p>③　可用性，是系统能够正常运行的时间比例。</p><p>④　安全性，是指系统在向合法用户提供服务的同时能够阻止非授权用户使用的企图或拒绝服务的能力。</p><p>⑤　可修改性，是指能够快速地以较高的性价比对系统进行变更的能力。</p><p>⑥　功能性，是系统能完成所期望的工作的能力。</p><p>⑦　可变性，是指架构经扩充或变更而成为新架构的能力。</p><p>⑧　互操作性，作为系统组成部分的软件不是独立存在的，通常与其他系统或自身环境相互作用。</p><p>（回答出属性名称即可）</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 373726,
    "question_title": "<p>【问题2】（9分）</p><p>根据表1-1的分类，将题干所给出的系统需求(a) ~ (h) 分别填入(1) ~ (5)&nbsp;</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696270917308937.png\" title=\"1696270917308937.png\" alt=\"image.png\" width=\"455\" height=\"285\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>(1) (a) (b)</p><p>(2) (c),(f)</p><p>(3) (e) (g)</p><p>(4),(d),(h)</p><p>(5),(i)</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 25,
      "belong_page": 1,
      "question_id": 373726,
      "question_title": "<p>【问题2】（9分）</p><p>根据表1-1的分类，将题干所给出的系统需求(a) ~ (h) 分别填入(1) ~ (5)&nbsp;</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696270917308937.png\" title=\"1696270917308937.png\" alt=\"image.png\" width=\"455\" height=\"285\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 373724,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于系统架构开发的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>51CTO委托软件公司开发一套教学用品采购系统，业务涉及供应商注册、采购项目发布、竞价、评选、结果公告等板块，以提升企业的采购信息化水平。该软件公司组织项目组完成了需求调研，现已进入到系统架构设计阶段。考虑到系统需求对架构设计决策的影响，项目组先列出了可能影响系统架构设计的部分需求如下：</p><p>(a) 用户界面支持用户的个性化定制；</p><p>(b) 系统需要支持当前主流的标准和服务，特别是通信协议和平台接口；</p><p>(c) 用户操作的响应时间应不大于3秒，竞价板块不大于1秒；</p><p>(d) 系统具有故障自行诊断和快速恢复能力；</p><p>(e) 用户密码需要加密传输；</p><p>(f) 系统需要存储不少于10T的附件；</p><p>(g) 用户操作停滞时间超过定时限需要重新登录验证；</p><p>(h) 系统能识别供应商异常的报价并防止干扰评选；</p><p>(i) 系统在过载时竞价功能可降级，保证发布和公示不受影响。</p><p>经过评估，项目组提出了两种系统架构设计方案：瘦客户端C/S架构和胖客户端C/S架构，经过对上述需求逐条分析和讨论，最终决定采用瘦客户端C/S架构进行设计。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>(1) (a) (b)</p><p>(2) (c),(f)</p><p>(3) (e) (g)</p><p>(4),(d),(h)</p><p>(5),(i)</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9375",
    "section_name": "软件工程基础知识（第二版） - 需求工程",
    "question_id": 373727,
    "question_title": "<p>【问题3】（8分）</p><p>请用300字以内的文字说明瘦客户端与胖客户端相比有什么优势与不足？</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>瘦客户端与胖客户端相比有以下优势：</p><p>安全性：瘦客户端的安全性较高，业务逻辑在服务端。</p><p>灵活性：瘦客户端的灵活性较高。</p><p>系统升级与维护：瘦客户端的系统升级与维护成本较低。</p><p>然而，瘦客户端也存在一些不足：</p><p>性能弱：由于瘦客户端的大部分工作都在服务器端进行，服务器的负担很重。</p><p>功能简单：瘦客户端只能完成浏览、查询、数据输入等简单功能，绝大部分工作由服务器承担。</p><p>网络依赖：瘦客户端必须总是具有网络连接才能使用。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 26,
      "belong_page": 1,
      "question_id": 373727,
      "question_title": "<p>【问题3】（8分）</p><p>请用300字以内的文字说明瘦客户端与胖客户端相比有什么优势与不足？</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 373724,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于系统架构开发的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>51CTO委托软件公司开发一套教学用品采购系统，业务涉及供应商注册、采购项目发布、竞价、评选、结果公告等板块，以提升企业的采购信息化水平。该软件公司组织项目组完成了需求调研，现已进入到系统架构设计阶段。考虑到系统需求对架构设计决策的影响，项目组先列出了可能影响系统架构设计的部分需求如下：</p><p>(a) 用户界面支持用户的个性化定制；</p><p>(b) 系统需要支持当前主流的标准和服务，特别是通信协议和平台接口；</p><p>(c) 用户操作的响应时间应不大于3秒，竞价板块不大于1秒；</p><p>(d) 系统具有故障自行诊断和快速恢复能力；</p><p>(e) 用户密码需要加密传输；</p><p>(f) 系统需要存储不少于10T的附件；</p><p>(g) 用户操作停滞时间超过定时限需要重新登录验证；</p><p>(h) 系统能识别供应商异常的报价并防止干扰评选；</p><p>(i) 系统在过载时竞价功能可降级，保证发布和公示不受影响。</p><p>经过评估，项目组提出了两种系统架构设计方案：瘦客户端C/S架构和胖客户端C/S架构，经过对上述需求逐条分析和讨论，最终决定采用瘦客户端C/S架构进行设计。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>瘦客户端与胖客户端相比有以下优势：</p><p>安全性：瘦客户端的安全性较高，业务逻辑在服务端。</p><p>灵活性：瘦客户端的灵活性较高。</p><p>系统升级与维护：瘦客户端的系统升级与维护成本较低。</p><p>然而，瘦客户端也存在一些不足：</p><p>性能弱：由于瘦客户端的大部分工作都在服务器端进行，服务器的负担很重。</p><p>功能简单：瘦客户端只能完成浏览、查询、数据输入等简单功能，绝大部分工作由服务器承担。</p><p>网络依赖：瘦客户端必须总是具有网络连接才能使用。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176842.8632867
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 43257,
    "question_title": "在面向对象设计的原则中，（&nbsp;）原则是指抽象不应该依赖于细节，细节应该依赖于抽象，即应针对接口编程，而不是针对实现编程。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 开闭&nbsp; ",
      " 里氏替换&nbsp; ",
      " 最少知识&nbsp; ",
      " 依赖倒置 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43257,
      "question_title": "在面向对象设计的原则中，（&nbsp;）原则是指抽象不应该依赖于细节，细节应该依赖于抽象，即应针对接口编程，而不是针对实现编程。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43257,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 开闭&nbsp; ",
        " 里氏替换&nbsp; ",
        " 最少知识&nbsp; ",
        " 依赖倒置 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 43765,
    "question_title": "<p><br/></p><p class=\"MsoNormal\" style=\"text-indent:20.7000pt;text-align:left;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">处理流程设计是系统设计的重要内容。以下关于处理流程设计工具的叙述中，不正确的是</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">30</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">。</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;mso-hansi-font-family:&#39;Times New Roman&#39;;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 程序流程图(PFD)用于描述系统中每个模块的输入、输出和数据加工 ",
      " N-S图容易表示嵌套关系和层次关系，并具有强烈的结构化特征 ",
      " IPO图的主体是处理过程说明，可以采用流程图、判定树/表等来进行描述 ",
      " 问题分析图(PAD)包含5种基本控制结构，并允许递归使用 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 43765,
      "question_title": "<p><br/></p><p class=\"MsoNormal\" style=\"text-indent:20.7000pt;text-align:left;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">处理流程设计是系统设计的重要内容。以下关于处理流程设计工具的叙述中，不正确的是</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">30</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">。</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;mso-hansi-font-family:&#39;Times New Roman&#39;;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43765,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 程序流程图(PFD)用于描述系统中每个模块的输入、输出和数据加工 ",
        " N-S图容易表示嵌套关系和层次关系，并具有强烈的结构化特征 ",
        " IPO图的主体是处理过程说明，可以采用流程图、判定树/表等来进行描述 ",
        " 问题分析图(PAD)包含5种基本控制结构，并允许递归使用 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 49859,
    "question_title": "<p>为了使一个接口的规范和实现该接口的构件得到广泛应用，需要实现接口的标准化。接口标准化是对（ ）的标准化。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 保证接口唯一性的命名方案 ",
      " 接口中消息模式、格式和协议 ",
      " 接口中所接收的数据格式 ",
      " 接口消息适用语境 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 49859,
      "question_title": "<p>为了使一个接口的规范和实现该接口的构件得到广泛应用，需要实现接口的标准化。接口标准化是对（ ）的标准化。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49859,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 保证接口唯一性的命名方案 ",
        " 接口中消息模式、格式和协议 ",
        " 接口中所接收的数据格式 ",
        " 接口消息适用语境 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 49952,
    "question_title": "<p>设计模式基于面向对象技术，是人们在长期的开发实践中良好经验的结晶，提供了一个简单、统一的描述方法，使得人们可以复用这些软件设计办法、过程管理经验。按照设计模式的目的进行划分，现有的设计模式可以分为创建型、（请作答此空 &nbsp;）和行为型三种类型。其中（）属于创建型模式，（）属于行为型模式。（）模式可以将一个复杂的组件分成功能性抽象和内部实现两个独立的但又相关的继承层次结构，从而可以实现接口与实现分离。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 合成型 ",
      " 组合型 ",
      " 结构型 ",
      " 聚合型 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 49952,
      "question_title": "<p>设计模式基于面向对象技术，是人们在长期的开发实践中良好经验的结晶，提供了一个简单、统一的描述方法，使得人们可以复用这些软件设计办法、过程管理经验。按照设计模式的目的进行划分，现有的设计模式可以分为创建型、（请作答此空 &nbsp;）和行为型三种类型。其中（）属于创建型模式，（）属于行为型模式。（）模式可以将一个复杂的组件分成功能性抽象和内部实现两个独立的但又相关的继承层次结构，从而可以实现接口与实现分离。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49952,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 合成型 ",
        " 组合型 ",
        " 结构型 ",
        " 聚合型 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 54189,
    "question_title": "<p>面向对象系统分析与设计中，结构图用于描述事物之间的关系，包括（请作答此空）；行为图用于描述参与者与用例之间的交互及参与者如何使用系统，包括（ &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 用例图、类图、对象图和通信图 ",
      " 用例图、类图、对象图和部署图 ",
      " 类图、对象图、组件图和部署图 ",
      " 类图、对象图、组件图和通信图 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 54189,
      "question_title": "<p>面向对象系统分析与设计中，结构图用于描述事物之间的关系，包括（请作答此空）；行为图用于描述参与者与用例之间的交互及参与者如何使用系统，包括（ &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54189,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 用例图、类图、对象图和通信图 ",
        " 用例图、类图、对象图和部署图 ",
        " 类图、对象图、组件图和部署图 ",
        " 类图、对象图、组件图和通信图 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 54226,
    "question_title": "<p>&quot;置于用户控制之下&quot;是用户界面设计的&quot;黄金三原则&quot;之一。下列叙述中，不满足该原则的情形是（ &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 不能中断或撤销正在进行的人机交互操作 ",
      " 不强迫用户采用不情愿的方式来进行操作 ",
      " 用户可以定制交互方式 ",
      " 用户可以和出现在屏幕上的对象直接进行交互 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 54226,
      "question_title": "<p>&quot;置于用户控制之下&quot;是用户界面设计的&quot;黄金三原则&quot;之一。下列叙述中，不满足该原则的情形是（ &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54226,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 不能中断或撤销正在进行的人机交互操作 ",
        " 不强迫用户采用不情愿的方式来进行操作 ",
        " 用户可以定制交互方式 ",
        " 用户可以和出现在屏幕上的对象直接进行交互 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 54233,
    "question_title": "<p>系统输入设计中应尽可能考虑人的因素，以下关于输入设计的一般原理中，错误的是（ &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 只让用户输入变化的数据 ",
      " 使用创新的模式吸引用户的眼球 ",
      " 表格中各个数据项应有提示信息 ",
      " 尽可能使用选择而不是键盘输入的方式获取数据 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 54233,
      "question_title": "<p>系统输入设计中应尽可能考虑人的因素，以下关于输入设计的一般原理中，错误的是（ &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54233,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 只让用户输入变化的数据 ",
        " 使用创新的模式吸引用户的眼球 ",
        " 表格中各个数据项应有提示信息 ",
        " 尽可能使用选择而不是键盘输入的方式获取数据 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 54276,
    "question_title": "<p>在面向对象方法中，信息流是通过向参与者或内部对象发送消息形成的。（ &nbsp;）用于描述进出系统的信息流。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 状态图 ",
      " 顺序图 ",
      " 数据流图 ",
      " 流程图 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 54276,
      "question_title": "<p>在面向对象方法中，信息流是通过向参与者或内部对象发送消息形成的。（ &nbsp;）用于描述进出系统的信息流。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54276,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 状态图 ",
        " 顺序图 ",
        " 数据流图 ",
        " 流程图 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 63636,
    "question_title": "<p>软件概要设计包括设计软件的结构、确定系统功能模块及其相互关系，主要采用（　）描述程序的结构。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 程序流程图、PAD图和伪代码 ",
      " 模块结构图、数据流图和盒图 ",
      " 模块结构图、层次图和HIPO图 ",
      " 程序流程图、 数据流图和层次图 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 63636,
      "question_title": "<p>软件概要设计包括设计软件的结构、确定系统功能模块及其相互关系，主要采用（　）描述程序的结构。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63636,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 程序流程图、PAD图和伪代码 ",
        " 模块结构图、数据流图和盒图 ",
        " 模块结构图、层次图和HIPO图 ",
        " 程序流程图、 数据流图和层次图 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 63638,
    "question_title": "<p>软件设计包括了四个既独立又相互联系的活动：高质量的（　）将改善程序结构和模块划分，降低过程复杂性；（请作答此空）的主要目标是开发一个模块化的程序结构，并表示出模块间的控制关系；（　）描述了软件与用户之间的交互关系。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 软件结构设计 ",
      " 数据结构设计 ",
      " 数据流设计 ",
      " 分布式设计 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 63638,
      "question_title": "<p>软件设计包括了四个既独立又相互联系的活动：高质量的（　）将改善程序结构和模块划分，降低过程复杂性；（请作答此空）的主要目标是开发一个模块化的程序结构，并表示出模块间的控制关系；（　）描述了软件与用户之间的交互关系。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63638,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 软件结构设计 ",
        " 数据结构设计 ",
        " 数据流设计 ",
        " 分布式设计 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 63669,
    "question_title": "<p>设计模式描述了一个出现在特定设计语境中的设计再现问题，并为它的解决方案提供了一个经过充分验证的通用方案，不同的设计模式关注解决不同的问题。例如，抽象工厂模式提供一个接口，可以创建一系列相关或相互依赖的对象， 而无需指定它们具体的类，它是一种（请作答此空）模式；（　）模式将类的抽象部分和它的实现部分分离出来，使它们可以独立变化，它属于（　）模式；（　）模式将一个请求封装为一个对象，从而可用不同的请求对客户进行参数化，将请求排队或记录请求日志，支持可撤销的操作。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 组合型 ",
      " 结构型 ",
      " 行为型 ",
      " 创建型 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 63669,
      "question_title": "<p>设计模式描述了一个出现在特定设计语境中的设计再现问题，并为它的解决方案提供了一个经过充分验证的通用方案，不同的设计模式关注解决不同的问题。例如，抽象工厂模式提供一个接口，可以创建一系列相关或相互依赖的对象， 而无需指定它们具体的类，它是一种（请作答此空）模式；（　）模式将类的抽象部分和它的实现部分分离出来，使它们可以独立变化，它属于（　）模式；（　）模式将一个请求封装为一个对象，从而可用不同的请求对客户进行参数化，将请求排队或记录请求日志，支持可撤销的操作。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63669,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 组合型 ",
        " 结构型 ",
        " 行为型 ",
        " 创建型 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 88859,
    "question_title": "<p>( 回答此空 )的开发过程一般是先把系统功能视作一个大的模块,再根据系统分析与设计的要求对其进行进一步的模块分解或组含。(&nbsp;&nbsp;)使用了建模的思想,讨论如何建立一个实际的应用模型,包括对象模型、动态模型和功能模型,其功能模型主要用(&nbsp;&nbsp;)实现。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 面向对象方法 ",
      " OMT方法 ",
      " 结构化方法 ",
      " Booch方法 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 88859,
      "question_title": "<p>( 回答此空 )的开发过程一般是先把系统功能视作一个大的模块,再根据系统分析与设计的要求对其进行进一步的模块分解或组含。(&nbsp;&nbsp;)使用了建模的思想,讨论如何建立一个实际的应用模型,包括对象模型、动态模型和功能模型,其功能模型主要用(&nbsp;&nbsp;)实现。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 88859,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 面向对象方法 ",
        " OMT方法 ",
        " 结构化方法 ",
        " Booch方法 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 151217,
    "question_title": "在面向对象分析中，利用（请作答此空）表示需求，并从中提炼出中（），以上两者形成（），之后再进行后续的开发工作。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 类图 ",
      " 数据流图 ",
      " 包图 ",
      " 用例与用例图 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 151217,
      "question_title": "在面向对象分析中，利用（请作答此空）表示需求，并从中提炼出中（），以上两者形成（），之后再进行后续的开发工作。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 151217,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 类图 ",
        " 数据流图 ",
        " 包图 ",
        " 用例与用例图 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 151222,
    "question_title": "（请作答此空）设计模式能够动态地给一个对象添加一些额外的职责而无须修改此对象的结构；（）设计模式定义一个用于创建对象的接口，让子类决定实例化哪一个类；欲使一个后端数据模型能够被多个前端用户界面连接，采用（）模式最适合。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 组合 ",
      " 外观 ",
      " 享元 ",
      " 装饰器 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 151222,
      "question_title": "（请作答此空）设计模式能够动态地给一个对象添加一些额外的职责而无须修改此对象的结构；（）设计模式定义一个用于创建对象的接口，让子类决定实例化哪一个类；欲使一个后端数据模型能够被多个前端用户界面连接，采用（）模式最适合。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 151222,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 组合 ",
        " 外观 ",
        " 享元 ",
        " 装饰器 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 159188,
    "question_title": "某订单处理系统中，“创建新订单”和“更新订单”两个用例都需要检查客户的账号是否正确，为此定义一个通用的用例“核查客户账户”。用例“创建新订单”和“更新订单”与用例“核查客户账户”之间是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 包含关系 ",
      " 聚合关系 ",
      " 泛化关系 ",
      " 关联关系 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 159188,
      "question_title": "某订单处理系统中，“创建新订单”和“更新订单”两个用例都需要检查客户的账号是否正确，为此定义一个通用的用例“核查客户账户”。用例“创建新订单”和“更新订单”与用例“核查客户账户”之间是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159188,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 包含关系 ",
        " 聚合关系 ",
        " 泛化关系 ",
        " 关联关系 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 159212,
    "question_title": "软件的逆向工程是一个恢复设计的过程，从现有的程序中抽取数据、体系结构和过程的设计信息。逆向工程的完备性可以用在某一个抽象层次上提供信息的详细程度来描述，在大多数情况下，抽象层次越高，完备性就越低。下列可以通过逆向工程恢复的制品中，完备性最低的是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 过程的设计模型 ",
      " 程序和数据结构 ",
      " 对象模型、数据和控制流 ",
      " UML状态图和部署图 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 159212,
      "question_title": "软件的逆向工程是一个恢复设计的过程，从现有的程序中抽取数据、体系结构和过程的设计信息。逆向工程的完备性可以用在某一个抽象层次上提供信息的详细程度来描述，在大多数情况下，抽象层次越高，完备性就越低。下列可以通过逆向工程恢复的制品中，完备性最低的是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159212,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 过程的设计模型 ",
        " 程序和数据结构 ",
        " 对象模型、数据和控制流 ",
        " UML状态图和部署图 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 159216,
    "question_title": "<p>企业应用集成是一个战略意义上的方法，它从服务和信息角度将多个信息系统绑定在一起，提供实时交换信息和影响流程的能力。（请作答此空）提供企业之间的信息共享能力，（ ）在用户使用角度能够对集成系统产生一个“整体”的感觉。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " API集成 ",
      " 数据集成 ",
      " 界面集成 ",
      " 过程集成 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 159216,
      "question_title": "<p>企业应用集成是一个战略意义上的方法，它从服务和信息角度将多个信息系统绑定在一起，提供实时交换信息和影响流程的能力。（请作答此空）提供企业之间的信息共享能力，（ ）在用户使用角度能够对集成系统产生一个“整体”的感觉。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159216,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " API集成 ",
        " 数据集成 ",
        " 界面集成 ",
        " 过程集成 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 159258,
    "question_title": "Accelerated analysis approaches emphasize the construction of（请作答此空）to more rapidly identify business and user requirements for a new system. As an accelerated analysis technology，（ ）reads the program code and automatically generates the equivalent system model， and the code can be obtained from （ ）. All system analysis approaches require some form of（ ）which includes those techniques to be used to identify or extract system problems and solution &nbsp;requirements &nbsp;from user community. （ ）is a classical set of &nbsp;techniques used &nbsp;to collect information about system problems， opportunities， solution requirements， and priorities.",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " object models ",
      " prototypes ",
      " use cases ",
      " components "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 18,
      "belong_page": 1,
      "question_id": 159258,
      "question_title": "Accelerated analysis approaches emphasize the construction of（请作答此空）to more rapidly identify business and user requirements for a new system. As an accelerated analysis technology，（ ）reads the program code and automatically generates the equivalent system model， and the code can be obtained from （ ）. All system analysis approaches require some form of（ ）which includes those techniques to be used to identify or extract system problems and solution &nbsp;requirements &nbsp;from user community. （ ）is a classical set of &nbsp;techniques used &nbsp;to collect information about system problems， opportunities， solution requirements， and priorities.",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159258,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " object models ",
        " prototypes ",
        " use cases ",
        " components "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 190821,
    "question_title": "<p>软件逆向工程就是分析已有的程序，寻求比源代码更高级的抽象表现形式。在逆向工程导出信息的四个抽象层次中,（请作答此空）包括反映程序各部分之间相关依赖关系的信息:（ ）包括反映程序段功能及程序段之间关系的信息。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 实现级 ",
      " 结构级 ",
      " 功能级 ",
      " 领域级 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 19,
      "belong_page": 1,
      "question_id": 190821,
      "question_title": "<p>软件逆向工程就是分析已有的程序，寻求比源代码更高级的抽象表现形式。在逆向工程导出信息的四个抽象层次中,（请作答此空）包括反映程序各部分之间相关依赖关系的信息:（ ）包括反映程序段功能及程序段之间关系的信息。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 190821,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 实现级 ",
        " 结构级 ",
        " 功能级 ",
        " 领域级 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 190823,
    "question_title": "<p>( )是在逆向工程所获取信息的基础上修改或重构已有的系统，产生系统的一个新版本。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 逆向分析（Revconse Analysis) ",
      " 重组(Restructuring) ",
      " 设计恢复(Design Recover) ",
      " 重构工程(Re-engineering) "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 20,
      "belong_page": 1,
      "question_id": 190823,
      "question_title": "<p>( )是在逆向工程所获取信息的基础上修改或重构已有的系统，产生系统的一个新版本。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 190823,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 逆向分析（Revconse Analysis) ",
        " 重组(Restructuring) ",
        " 设计恢复(Design Recover) ",
        " 重构工程(Re-engineering) "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 208429,
    "question_title": "以下关于黑盒测试用例设计方法的叙述，错误的是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 边界值分析通过选择等价类边界作为测试用例，不仅重视输入条件边界，而且也必须考虑输出域边界 ",
      " 因果图方法是从用自然语言书写的程序规格说明的描述中找出因(输入条件)和果(输出或程序状态的改变)，可以通过因果图转换为判定表 ",
      " 正交试验设计法，就是使用已经造好了的正交表格来安排试验并进行数据分析的一种方法，目的是用最少的测试用例达到最高的测试覆盖率 ",
      " 等价类划分法根据软件的功能说明，对每一个输入条件确定若干个有效等价类和无效等价类，但只能为有效等价类设计测试用例 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 21,
      "belong_page": 1,
      "question_id": 208429,
      "question_title": "以下关于黑盒测试用例设计方法的叙述，错误的是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208429,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 边界值分析通过选择等价类边界作为测试用例，不仅重视输入条件边界，而且也必须考虑输出域边界 ",
        " 因果图方法是从用自然语言书写的程序规格说明的描述中找出因(输入条件)和果(输出或程序状态的改变)，可以通过因果图转换为判定表 ",
        " 正交试验设计法，就是使用已经造好了的正交表格来安排试验并进行数据分析的一种方法，目的是用最少的测试用例达到最高的测试覆盖率 ",
        " 等价类划分法根据软件的功能说明，对每一个输入条件确定若干个有效等价类和无效等价类，但只能为有效等价类设计测试用例 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 281209,
    "question_title": "<p>基于SOA和Web Service技术的企业应用集成(EAI)模式是______。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 面向信息的集成技术 ",
      " 面向过程的集成技术 ",
      " 面向计划的集成技术 ",
      " 面向服务的集成技术 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 22,
      "belong_page": 1,
      "question_id": 281209,
      "question_title": "<p>基于SOA和Web Service技术的企业应用集成(EAI)模式是______。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281209,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 面向信息的集成技术 ",
        " 面向过程的集成技术 ",
        " 面向计划的集成技术 ",
        " 面向服务的集成技术 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 281327,
    "question_title": "<p>（ ）是互联网时代信息基础设施与应用服务模式的重要形态，是新一代信息技术集约化发展的必然趋势。它以资源聚合和虚拟化、应用服务和专业化、按需供给和灵便使用的服务模式，提供高效能、低成本、低功耗的计算与数据服务，支撑各类信息化的应用。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 物联网 ",
      " 云计算 ",
      " 智慧城市 ",
      " 商业智能 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 23,
      "belong_page": 1,
      "question_id": 281327,
      "question_title": "<p>（ ）是互联网时代信息基础设施与应用服务模式的重要形态，是新一代信息技术集约化发展的必然趋势。它以资源聚合和虚拟化、应用服务和专业化、按需供给和灵便使用的服务模式，提供高效能、低成本、低功耗的计算与数据服务，支撑各类信息化的应用。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281327,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 物联网 ",
        " 云计算 ",
        " 智慧城市 ",
        " 商业智能 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 281335,
    "question_title": "<p><br/></p><p>如下图所示的UML类图描绘的是设计模式中的（ &nbsp;）模式。如第二个图所示的UML类图描述了该模式的一种应用，其中与第一个图中的“Abstraction”对应的类是（ &nbsp;）。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20200912/1599884972554701.jpg\" title=\"1599884972554701.jpg\" alt=\"1.jpg\"/>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "Composite(组合)",
      "Proxy(代理)",
      "Bridge(桥接)",
      "Command(命令)"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 24,
      "belong_page": 1,
      "question_id": 281335,
      "question_title": "<p><br/></p><p>如下图所示的UML类图描绘的是设计模式中的（ &nbsp;）模式。如第二个图所示的UML类图描述了该模式的一种应用，其中与第一个图中的“Abstraction”对应的类是（ &nbsp;）。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20200912/1599884972554701.jpg\" title=\"1599884972554701.jpg\" alt=\"1.jpg\"/>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281334,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "Composite(组合)",
        "Proxy(代理)",
        "Bridge(桥接)",
        "Command(命令)"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 281336,
    "question_title": "<p><br/></p><p>如下图所示的UML类图描绘的是设计模式中的（ &nbsp;）模式。如第二个图所示的UML类图描述了该模式的一种应用，其中与第一个图中的“Abstraction”对应的类是（ &nbsp;）。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20200912/1599884972554701.jpg\" title=\"1599884972554701.jpg\" alt=\"1.jpg\"/>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "DataAccess",
      "AccountDM",
      "CustomerDM",
      "DataAccessImpl"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 25,
      "belong_page": 1,
      "question_id": 281336,
      "question_title": "<p><br/></p><p>如下图所示的UML类图描绘的是设计模式中的（ &nbsp;）模式。如第二个图所示的UML类图描述了该模式的一种应用，其中与第一个图中的“Abstraction”对应的类是（ &nbsp;）。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20200912/1599884972554701.jpg\" title=\"1599884972554701.jpg\" alt=\"1.jpg\"/>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281334,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "DataAccess",
        "AccountDM",
        "CustomerDM",
        "DataAccessImpl"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 283649,
    "question_title": "<p>某公司欲开发一个用于分布式登录的服务端程序，使用面向连接的TCP协议并发地处理多客户端登录请求。用户要求该服务端程序运行在Linux、Solaris和Windows NT等多种操作系统平台之上，而不同的操作系统的相关API函数和数据都有所不同。针对这种情况，公司的架构师决定采用“包装器外观(Wrapper Facade)”架构模式解决操作系统的差异问题。具体来说，服务端程序应该在包装器外观的实例上调用需要的方法，然后将请求和请求的参数发送给()，调用成功后将结果返回。使用该模式（）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "客户端程序",
      "操作系统API函数",
      "TCP协议API函数",
      "登录连接程序"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 26,
      "belong_page": 1,
      "question_id": 283649,
      "question_title": "<p>某公司欲开发一个用于分布式登录的服务端程序，使用面向连接的TCP协议并发地处理多客户端登录请求。用户要求该服务端程序运行在Linux、Solaris和Windows NT等多种操作系统平台之上，而不同的操作系统的相关API函数和数据都有所不同。针对这种情况，公司的架构师决定采用“包装器外观(Wrapper Facade)”架构模式解决操作系统的差异问题。具体来说，服务端程序应该在包装器外观的实例上调用需要的方法，然后将请求和请求的参数发送给()，调用成功后将结果返回。使用该模式（）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 283648,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "客户端程序",
        "操作系统API函数",
        "TCP协议API函数",
        "登录连接程序"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 284643,
    "question_title": "<p>UML的事物是对模型中最具有代表性的成分的抽象，（1）是模型的静态部分，描述概念或物理元素；（2）用来描述、说明和标注模型的任何元素。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "结构事物",
      "分组事物",
      "行为事物",
      "注释事物"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 27,
      "belong_page": 1,
      "question_id": 284643,
      "question_title": "<p>UML的事物是对模型中最具有代表性的成分的抽象，（1）是模型的静态部分，描述概念或物理元素；（2）用来描述、说明和标注模型的任何元素。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 284642,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "结构事物",
        "分组事物",
        "行为事物",
        "注释事物"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 284644,
    "question_title": "<p>UML的事物是对模型中最具有代表性的成分的抽象，（1）是模型的静态部分，描述概念或物理元素；（2）用来描述、说明和标注模型的任何元素。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "分组事物",
      "注释事物",
      "结构事物",
      "行为事物"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 28,
      "belong_page": 1,
      "question_id": 284644,
      "question_title": "<p>UML的事物是对模型中最具有代表性的成分的抽象，（1）是模型的静态部分，描述概念或物理元素；（2）用来描述、说明和标注模型的任何元素。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 284642,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "分组事物",
        "注释事物",
        "结构事物",
        "行为事物"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 284646,
    "question_title": "<p>UML用关系把事物结合在一起，（1）描述一个事物发生变化会影响另一个事物的语义；（2）描述特殊元素的对象可替换一般元素的对象。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "聚合关系",
      "关联关系",
      "包含关系",
      "依赖关系"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 29,
      "belong_page": 1,
      "question_id": 284646,
      "question_title": "<p>UML用关系把事物结合在一起，（1）描述一个事物发生变化会影响另一个事物的语义；（2）描述特殊元素的对象可替换一般元素的对象。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 284645,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "聚合关系",
        "关联关系",
        "包含关系",
        "依赖关系"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 284647,
    "question_title": "<p>UML用关系把事物结合在一起，（1）描述一个事物发生变化会影响另一个事物的语义；（2）描述特殊元素的对象可替换一般元素的对象。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "实现关系",
      "聚合关系",
      "泛化关系",
      "关联关系"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 30,
      "belong_page": 1,
      "question_id": 284647,
      "question_title": "<p>UML用关系把事物结合在一起，（1）描述一个事物发生变化会影响另一个事物的语义；（2）描述特殊元素的对象可替换一般元素的对象。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 284645,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "实现关系",
        "聚合关系",
        "泛化关系",
        "关联关系"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 284690,
    "question_title": "<p>如下图所示的UML类图描绘的是设计模式中的（1）模式。如第二个图所示的UML类图描述了该模式的一种应用，其中与第一个图中的“Abstraction”对应的类是（2）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602644363183181.jpg\" title=\"1602644363183181.jpg\" alt=\"1.jpg\"/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "Composite(组合)",
      "Proxy(代理)",
      "Bridge(桥接)",
      "Command(命令)"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 31,
      "belong_page": 1,
      "question_id": 284690,
      "question_title": "<p>如下图所示的UML类图描绘的是设计模式中的（1）模式。如第二个图所示的UML类图描述了该模式的一种应用，其中与第一个图中的“Abstraction”对应的类是（2）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602644363183181.jpg\" title=\"1602644363183181.jpg\" alt=\"1.jpg\"/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 284689,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "Composite(组合)",
        "Proxy(代理)",
        "Bridge(桥接)",
        "Command(命令)"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 286404,
    "question_title": "<p>软件设计包括4个既独立又相互联系的活动（1）、软件结构设计，人机界面设计和（2）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "用例设计",
      "数据设计",
      "程序设计",
      "模块设计"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 32,
      "belong_page": 1,
      "question_id": 286404,
      "question_title": "<p>软件设计包括4个既独立又相互联系的活动（1）、软件结构设计，人机界面设计和（2）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 286403,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "用例设计",
        "数据设计",
        "程序设计",
        "模块设计"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 286405,
    "question_title": "<p>软件设计包括4个既独立又相互联系的活动（1）、软件结构设计，人机界面设计和（2）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "接口设计",
      "操作设计",
      "输入输出设计",
      "过程设计"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 33,
      "belong_page": 1,
      "question_id": 286405,
      "question_title": "<p>软件设计包括4个既独立又相互联系的活动（1）、软件结构设计，人机界面设计和（2）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 286403,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "接口设计",
        "操作设计",
        "输入输出设计",
        "过程设计"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 309462,
    "question_title": "<p>如下所示的UML图是（1），图中（Ⅰ）表示（2），（Ⅱ）表示（3）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210912/1631461431232850.jpg\" title=\"1631461431232850.jpg\" alt=\"1.jpg\"/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "序列图",
      "状态图",
      "通信图",
      "活动图"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 34,
      "belong_page": 1,
      "question_id": 309462,
      "question_title": "<p>如下所示的UML图是（1），图中（Ⅰ）表示（2），（Ⅱ）表示（3）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210912/1631461431232850.jpg\" title=\"1631461431232850.jpg\" alt=\"1.jpg\"/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 309461,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "序列图",
        "状态图",
        "通信图",
        "活动图"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 309463,
    "question_title": "<p>如下所示的UML图是（1），图中（Ⅰ）表示（2），（Ⅱ）表示（3）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210912/1631461431232850.jpg\" title=\"1631461431232850.jpg\" alt=\"1.jpg\"/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "并发分叉",
      "分支",
      "并发汇合",
      "流"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 35,
      "belong_page": 1,
      "question_id": 309463,
      "question_title": "<p>如下所示的UML图是（1），图中（Ⅰ）表示（2），（Ⅱ）表示（3）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210912/1631461431232850.jpg\" title=\"1631461431232850.jpg\" alt=\"1.jpg\"/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 309461,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "并发分叉",
        "分支",
        "并发汇合",
        "流"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 309464,
    "question_title": "<p>如下所示的UML图是（1），图中（Ⅰ）表示（2），（Ⅱ）表示（3）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210912/1631461431232850.jpg\" title=\"1631461431232850.jpg\" alt=\"1.jpg\"/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "分支条件",
      "监护表达式",
      "动作名",
      "流名称"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 36,
      "belong_page": 1,
      "question_id": 309464,
      "question_title": "<p>如下所示的UML图是（1），图中（Ⅰ）表示（2），（Ⅱ）表示（3）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210912/1631461431232850.jpg\" title=\"1631461431232850.jpg\" alt=\"1.jpg\"/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 309461,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "分支条件",
        "监护表达式",
        "动作名",
        "流名称"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 309466,
    "question_title": "在采用结构化开发方法进行软件开发时，设计阶段接口设计主要依据需求分析阶段的（1）。接口设计的任务主要是（2）。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "数据流图",
      "E-R图",
      "状态-迁移图",
      "加工规格说明"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 37,
      "belong_page": 1,
      "question_id": 309466,
      "question_title": "在采用结构化开发方法进行软件开发时，设计阶段接口设计主要依据需求分析阶段的（1）。接口设计的任务主要是（2）。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 309465,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "数据流图",
        "E-R图",
        "状态-迁移图",
        "加工规格说明"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 309467,
    "question_title": "在采用结构化开发方法进行软件开发时，设计阶段接口设计主要依据需求分析阶段的（1）。接口设计的任务主要是（2）。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "定义软件的主要结构元素及其之间的关系",
      "确定软件涉及的文件系统的结构及数据库的表结构",
      "描述软件与外部环境之间的交互关系，软件内模块之间的调用关系",
      "确定软件各个模块内部的算法和数据结构"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 38,
      "belong_page": 1,
      "question_id": 309467,
      "question_title": "在采用结构化开发方法进行软件开发时，设计阶段接口设计主要依据需求分析阶段的（1）。接口设计的任务主要是（2）。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 309465,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "定义软件的主要结构元素及其之间的关系",
        "确定软件涉及的文件系统的结构及数据库的表结构",
        "描述软件与外部环境之间的交互关系，软件内模块之间的调用关系",
        "确定软件各个模块内部的算法和数据结构"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 309473,
    "question_title": "<p>耦合表示模块之间联系的程度。模块的耦合类型通常可分为7 种。其中，一组模块通过参数传递信息属于(33 )。 一个模块可直接访问另一个模块的内部数据属于( 34)。(35 )表示模块之间的关联程度最高。<br/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "内容耦合",
      "标记耦合",
      "数据耦合",
      "控制耦合"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 39,
      "belong_page": 1,
      "question_id": 309473,
      "question_title": "<p>耦合表示模块之间联系的程度。模块的耦合类型通常可分为7 种。其中，一组模块通过参数传递信息属于(33 )。 一个模块可直接访问另一个模块的内部数据属于( 34)。(35 )表示模块之间的关联程度最高。<br/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 309472,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "内容耦合",
        "标记耦合",
        "数据耦合",
        "控制耦合"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 309474,
    "question_title": "<p>耦合表示模块之间联系的程度。模块的耦合类型通常可分为7 种。其中，一组模块通过参数传递信息属于(33 )。 一个模块可直接访问另一个模块的内部数据属于( 34)。(35 )表示模块之间的关联程度最高。<br/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "内容耦合",
      "数据耦合",
      "标记耦合",
      "控制耦合"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 40,
      "belong_page": 1,
      "question_id": 309474,
      "question_title": "<p>耦合表示模块之间联系的程度。模块的耦合类型通常可分为7 种。其中，一组模块通过参数传递信息属于(33 )。 一个模块可直接访问另一个模块的内部数据属于( 34)。(35 )表示模块之间的关联程度最高。<br/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 309472,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "内容耦合",
        "数据耦合",
        "标记耦合",
        "控制耦合"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 309475,
    "question_title": "<p>耦合表示模块之间联系的程度。模块的耦合类型通常可分为7 种。其中，一组模块通过参数传递信息属于(33 )。 一个模块可直接访问另一个模块的内部数据属于( 34)。(35 )表示模块之间的关联程度最高。<br/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "内容耦合",
      "控制耦合",
      "数据耦合",
      "标记耦合"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 41,
      "belong_page": 1,
      "question_id": 309475,
      "question_title": "<p>耦合表示模块之间联系的程度。模块的耦合类型通常可分为7 种。其中，一组模块通过参数传递信息属于(33 )。 一个模块可直接访问另一个模块的内部数据属于( 34)。(35 )表示模块之间的关联程度最高。<br/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 309472,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "内容耦合",
        "控制耦合",
        "数据耦合",
        "标记耦合"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 310860,
    "question_title": "以下不是嵌入式操作系统应用领域的是（28）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "智能手机",
      "车载系统",
      "办公系统",
      "军工航天"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 42,
      "belong_page": 1,
      "question_id": 310860,
      "question_title": "以下不是嵌入式操作系统应用领域的是（28）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310860,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "智能手机",
        "车载系统",
        "办公系统",
        "军工航天"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 310866,
    "question_title": "<p>股票交易中，股票代理（Broker）根据客户发出的股票操作指示进行股票的买卖操作，设计如下所示类图。该设计采用 （1） 模式将一个请求封装为一个对象，从而使得可以用不同的请求对客户进行参数化；对请求排队或记录请求日志，以及支持可撤销的操作。其中， （2） 声明执行操作的接口。该模式属于 （3） 模式，该模式适用于： （4） 。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210924/1632412892310507.jpg\" title=\"1632412892310507.jpg\" alt=\"1.jpg\"/>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "命令（Command）&nbsp;",
      "观察者（Observer）",
      "状态（State）",
      "中介者（Mediator）"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 43,
      "belong_page": 1,
      "question_id": 310866,
      "question_title": "<p>股票交易中，股票代理（Broker）根据客户发出的股票操作指示进行股票的买卖操作，设计如下所示类图。该设计采用 （1） 模式将一个请求封装为一个对象，从而使得可以用不同的请求对客户进行参数化；对请求排队或记录请求日志，以及支持可撤销的操作。其中， （2） 声明执行操作的接口。该模式属于 （3） 模式，该模式适用于： （4） 。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210924/1632412892310507.jpg\" title=\"1632412892310507.jpg\" alt=\"1.jpg\"/>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310865,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "命令（Command）&nbsp;",
        "观察者（Observer）",
        "状态（State）",
        "中介者（Mediator）"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 310869,
    "question_title": "<p>股票交易中，股票代理（Broker）根据客户发出的股票操作指示进行股票的买卖操作，设计如下所示类图。该设计采用 （1） 模式将一个请求封装为一个对象，从而使得可以用不同的请求对客户进行参数化；对请求排队或记录请求日志，以及支持可撤销的操作。其中， （2） 声明执行操作的接口。该模式属于 （3） 模式，该模式适用于： （4） 。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210924/1632412892310507.jpg\" title=\"1632412892310507.jpg\" alt=\"1.jpg\"/>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "一个对象必须通知其他对象，而它又不能假定其他对象是谁",
      "抽象出待执行的动作以参数化某对象",
      "一个对象的行为决定于其状态且必须在运行时刻根据状态改变行为",
      "一个对象引用其他对象并且直接与这些对象通信而导致难以复用该对象"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 44,
      "belong_page": 1,
      "question_id": 310869,
      "question_title": "<p>股票交易中，股票代理（Broker）根据客户发出的股票操作指示进行股票的买卖操作，设计如下所示类图。该设计采用 （1） 模式将一个请求封装为一个对象，从而使得可以用不同的请求对客户进行参数化；对请求排队或记录请求日志，以及支持可撤销的操作。其中， （2） 声明执行操作的接口。该模式属于 （3） 模式，该模式适用于： （4） 。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210924/1632412892310507.jpg\" title=\"1632412892310507.jpg\" alt=\"1.jpg\"/>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310865,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "一个对象必须通知其他对象，而它又不能假定其他对象是谁",
        "抽象出待执行的动作以参数化某对象",
        "一个对象的行为决定于其状态且必须在运行时刻根据状态改变行为",
        "一个对象引用其他对象并且直接与这些对象通信而导致难以复用该对象"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 312940,
    "question_title": "面向对象设计是模型驱动和用例驱动的，整个设计过程将 （） 作为输入，并生成 （ ） 作为输出。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "逻辑数据流图",
      "设计文档和用户说明",
      "需求类图",
      "需求模型"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 45,
      "belong_page": 1,
      "question_id": 312940,
      "question_title": "面向对象设计是模型驱动和用例驱动的，整个设计过程将 （） 作为输入，并生成 （ ） 作为输出。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 312939,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "逻辑数据流图",
        "设计文档和用户说明",
        "需求类图",
        "需求模型"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 312941,
    "question_title": "面向对象设计是模型驱动和用例驱动的，整个设计过程将 （） 作为输入，并生成 （ ） 作为输出。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "物理数据流图",
      "设计文档和用户说明",
      "设计类图和系统顺序图",
      "设计模型"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 46,
      "belong_page": 1,
      "question_id": 312941,
      "question_title": "面向对象设计是模型驱动和用例驱动的，整个设计过程将 （） 作为输入，并生成 （ ） 作为输出。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 312939,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "物理数据流图",
        "设计文档和用户说明",
        "设计类图和系统顺序图",
        "设计模型"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 350320,
    "question_title": "<p>面向对象的分析模型主要由顶层架构图、用例与用例图和&nbsp;（1） 构成，设计模型则包含以&nbsp;（2） 表示的软件体系结构图、以交互图表示的用例实现图、完整精确的类图、描述复杂对象的&nbsp;（3） 和用于描述流程化处理过程的活动图等。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 数据流模型 ",
      " 领域概念模型 ",
      " 功能分解图 ",
      " 功能需求模型 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 47,
      "belong_page": 1,
      "question_id": 350320,
      "question_title": "<p>面向对象的分析模型主要由顶层架构图、用例与用例图和&nbsp;（1） 构成，设计模型则包含以&nbsp;（2） 表示的软件体系结构图、以交互图表示的用例实现图、完整精确的类图、描述复杂对象的&nbsp;（3） 和用于描述流程化处理过程的活动图等。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350319,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 数据流模型 ",
        " 领域概念模型 ",
        " 功能分解图 ",
        " 功能需求模型 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 350325,
    "question_title": "<p>某网站系统在用户登录时使用数字校验码。为了增强安全性，现在要求在登录校验码中增加字母或图片。如果直接修改原有的生成登录校验码的程序代码，则违反了面向对象设计原则中的&nbsp;（37） 。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 开闭原则 ",
      " 里氏替换原则 ",
      " 最少知识原则 ",
      " 组合复用原则 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 48,
      "belong_page": 1,
      "question_id": 350325,
      "question_title": "<p>某网站系统在用户登录时使用数字校验码。为了增强安全性，现在要求在登录校验码中增加字母或图片。如果直接修改原有的生成登录校验码的程序代码，则违反了面向对象设计原则中的&nbsp;（37） 。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350325,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 开闭原则 ",
        " 里氏替换原则 ",
        " 最少知识原则 ",
        " 组合复用原则 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 350327,
    "question_title": "<p>在面向对象设计中，&nbsp;（1） 可以实现界面控制、外部接口和环境隔离。&nbsp;（2） 作为完成用例业务的责任承担者，协调、控制其他类共同完成用例规定的功能或行为。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 实体类 ",
      " 控制类 ",
      " 边界类 ",
      " 交互类 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 49,
      "belong_page": 1,
      "question_id": 350327,
      "question_title": "<p>在面向对象设计中，&nbsp;（1） 可以实现界面控制、外部接口和环境隔离。&nbsp;（2） 作为完成用例业务的责任承担者，协调、控制其他类共同完成用例规定的功能或行为。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350326,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 实体类 ",
        " 控制类 ",
        " 边界类 ",
        " 交互类 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 352286,
    "question_title": "<p>&nbsp;软件设计活动中，&nbsp;（1） 描述了软件内部、软件和操作系统之间如何通信；&nbsp;（2） 定义软件系统各主要部件之间的关系。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 数据架构设计 ",
      " 算法设计 ",
      " 过程设计 ",
      " 接口设计 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 50,
      "belong_page": 1,
      "question_id": 352286,
      "question_title": "<p>&nbsp;软件设计活动中，&nbsp;（1） 描述了软件内部、软件和操作系统之间如何通信；&nbsp;（2） 定义软件系统各主要部件之间的关系。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352285,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 数据架构设计 ",
        " 算法设计 ",
        " 过程设计 ",
        " 接口设计 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 352287,
    "question_title": "<p>&nbsp;软件设计活动中，&nbsp;（1） 描述了软件内部、软件和操作系统之间如何通信；&nbsp;（2） 定义软件系统各主要部件之间的关系。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 性能设计 ",
      " 模块化设计 ",
      " 软件结构设计 ",
      " 数据流设计 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 51,
      "belong_page": 1,
      "question_id": 352287,
      "question_title": "<p>&nbsp;软件设计活动中，&nbsp;（1） 描述了软件内部、软件和操作系统之间如何通信；&nbsp;（2） 定义软件系统各主要部件之间的关系。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352285,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 性能设计 ",
        " 模块化设计 ",
        " 软件结构设计 ",
        " 数据流设计 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 352288,
    "question_title": "<p>&nbsp;在面向对象设计的原则中，&nbsp;（38） 原则允许一个类可以在可以在不改变原有代码的情况下来变更它的行为。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 开闭 ",
      " 里氏替换 ",
      " 最少知识 ",
      " 依赖倒置 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 52,
      "belong_page": 1,
      "question_id": 352288,
      "question_title": "<p>&nbsp;在面向对象设计的原则中，&nbsp;（38） 原则允许一个类可以在可以在不改变原有代码的情况下来变更它的行为。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352288,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 开闭 ",
        " 里氏替换 ",
        " 最少知识 ",
        " 依赖倒置 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 352290,
    "question_title": "<p>&nbsp;类封装了信息和行为，是面向对象的重要组成部分。在系统设计过程中，类可以分为实体类、边界类和控制类。下面用例描述中属于边界类的是&nbsp;（1） ，属于实体类的是&nbsp;（2） 。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 身份验证 ",
      " 用户 ",
      " 通信协议 ",
      " 查询余额 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 53,
      "belong_page": 1,
      "question_id": 352290,
      "question_title": "<p>&nbsp;类封装了信息和行为，是面向对象的重要组成部分。在系统设计过程中，类可以分为实体类、边界类和控制类。下面用例描述中属于边界类的是&nbsp;（1） ，属于实体类的是&nbsp;（2） 。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352289,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 身份验证 ",
        " 用户 ",
        " 通信协议 ",
        " 查询余额 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 352291,
    "question_title": "<p>&nbsp;类封装了信息和行为，是面向对象的重要组成部分。在系统设计过程中，类可以分为实体类、边界类和控制类。下面用例描述中属于边界类的是&nbsp;（1） ，属于实体类的是&nbsp;（2） 。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 身份验证 ",
      " 用户 ",
      " 通信协议 ",
      " 查询余额 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 54,
      "belong_page": 1,
      "question_id": 352291,
      "question_title": "<p>&nbsp;类封装了信息和行为，是面向对象的重要组成部分。在系统设计过程中，类可以分为实体类、边界类和控制类。下面用例描述中属于边界类的是&nbsp;（1） ，属于实体类的是&nbsp;（2） 。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352289,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 身份验证 ",
        " 用户 ",
        " 通信协议 ",
        " 查询余额 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 352396,
    "question_title": "<p>在面向对象分析中，利用（）表示需求，并从中提炼出中（），以上两者形成（），之后再进行后续的开发工作。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 类图 ",
      " 数据流图 ",
      " 包图 ",
      " 用例与用例图 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 55,
      "belong_page": 1,
      "question_id": 352396,
      "question_title": "<p>在面向对象分析中，利用（）表示需求，并从中提炼出中（），以上两者形成（），之后再进行后续的开发工作。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352395,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 类图 ",
        " 数据流图 ",
        " 包图 ",
        " 用例与用例图 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 352397,
    "question_title": "<p>在面向对象分析中，利用（）表示需求，并从中提炼出中（），以上两者形成（），之后再进行后续的开发工作。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 领域模型 ",
      " 架构模型 ",
      " 体系结构图&nbsp; ",
      " 类图 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 56,
      "belong_page": 1,
      "question_id": 352397,
      "question_title": "<p>在面向对象分析中，利用（）表示需求，并从中提炼出中（），以上两者形成（），之后再进行后续的开发工作。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352395,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 领域模型 ",
        " 架构模型 ",
        " 体系结构图&nbsp; ",
        " 类图 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 352398,
    "question_title": "<p>在面向对象分析中，利用（）表示需求，并从中提炼出中（），以上两者形成（），之后再进行后续的开发工作。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 领域模型 ",
      " 包图 ",
      " 体系结构图&nbsp; ",
      " 类图 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 57,
      "belong_page": 1,
      "question_id": 352398,
      "question_title": "<p>在面向对象分析中，利用（）表示需求，并从中提炼出中（），以上两者形成（），之后再进行后续的开发工作。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352395,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 领域模型 ",
        " 包图 ",
        " 体系结构图&nbsp; ",
        " 类图 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 352431,
    "question_title": "<p>在软件设计中，（1）的主要任务是将系统的功能需求分配给软件模块，确定每个模块的功能和调用关系，形成软件（2）。而为每个具体任务选择适当的技术手段和处理方法的过程称为（3）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 数据流图 ",
      " 4+1视图 ",
      " IPO图 ",
      " 系统结构图 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 58,
      "belong_page": 1,
      "question_id": 352431,
      "question_title": "<p>在软件设计中，（1）的主要任务是将系统的功能需求分配给软件模块，确定每个模块的功能和调用关系，形成软件（2）。而为每个具体任务选择适当的技术手段和处理方法的过程称为（3）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352429,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 数据流图 ",
        " 4+1视图 ",
        " IPO图 ",
        " 系统结构图 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 352442,
    "question_title": "<p>&nbsp;&nbsp;An application architecture specifies the technologies to be used to implement one or more information systems. It serves as an outline for detailed design, construction, and implementation. Given the models and details, include （1）, we can distribute data and processes to create a general design of application architecture. The design will normally be constrained by architecture standards, project objectives, and （2）. The first physical DFD to be drawn is the （3）. The next step is to distribute data stores to different processors. Data（4）are two types of distributed data which most RDBMSs support. There are many distribution options used in data distribution. In the case of （5）, we should record each table as a data store on the physical DFD and connect each to the appropriate server.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " &nbsp;logical DFDs and ERD ",
      " ideal object model and analysis class model ",
      " &nbsp;use case models and interface prototypes ",
      " physical DFDs and database schema "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 59,
      "belong_page": 1,
      "question_id": 352442,
      "question_title": "<p>&nbsp;&nbsp;An application architecture specifies the technologies to be used to implement one or more information systems. It serves as an outline for detailed design, construction, and implementation. Given the models and details, include （1）, we can distribute data and processes to create a general design of application architecture. The design will normally be constrained by architecture standards, project objectives, and （2）. The first physical DFD to be drawn is the （3）. The next step is to distribute data stores to different processors. Data（4）are two types of distributed data which most RDBMSs support. There are many distribution options used in data distribution. In the case of （5）, we should record each table as a data store on the physical DFD and connect each to the appropriate server.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352441,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " &nbsp;logical DFDs and ERD ",
        " ideal object model and analysis class model ",
        " &nbsp;use case models and interface prototypes ",
        " physical DFDs and database schema "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 352443,
    "question_title": "<p>&nbsp;&nbsp;An application architecture specifies the technologies to be used to implement one or more information systems. It serves as an outline for detailed design, construction, and implementation. Given the models and details, include （1）, we can distribute data and processes to create a general design of application architecture. The design will normally be constrained by architecture standards, project objectives, and （2）. The first physical DFD to be drawn is the （3）. The next step is to distribute data stores to different processors. Data（4）are two types of distributed data which most RDBMSs support. There are many distribution options used in data distribution. In the case of （5）, we should record each table as a data store on the physical DFD and connect each to the appropriate server.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " the database management system ",
      " the feasibility of techniques used ",
      " the network topology and technology ",
      " the user interface and process methods "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 60,
      "belong_page": 1,
      "question_id": 352443,
      "question_title": "<p>&nbsp;&nbsp;An application architecture specifies the technologies to be used to implement one or more information systems. It serves as an outline for detailed design, construction, and implementation. Given the models and details, include （1）, we can distribute data and processes to create a general design of application architecture. The design will normally be constrained by architecture standards, project objectives, and （2）. The first physical DFD to be drawn is the （3）. The next step is to distribute data stores to different processors. Data（4）are two types of distributed data which most RDBMSs support. There are many distribution options used in data distribution. In the case of （5）, we should record each table as a data store on the physical DFD and connect each to the appropriate server.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352441,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " the database management system ",
        " the feasibility of techniques used ",
        " the network topology and technology ",
        " the user interface and process methods "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 352444,
    "question_title": "<p>&nbsp;&nbsp;An application architecture specifies the technologies to be used to implement one or more information systems. It serves as an outline for detailed design, construction, and implementation. Given the models and details, include （1）, we can distribute data and processes to create a general design of application architecture. The design will normally be constrained by architecture standards, project objectives, and （2）. The first physical DFD to be drawn is the （3）. The next step is to distribute data stores to different processors. Data（4）are two types of distributed data which most RDBMSs support. There are many distribution options used in data distribution. In the case of （5）, we should record each table as a data store on the physical DFD and connect each to the appropriate server.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " context DFD&nbsp; &nbsp; ",
      " system DFD ",
      " network architecture DFD&nbsp; ",
      " event-response DFD "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 61,
      "belong_page": 1,
      "question_id": 352444,
      "question_title": "<p>&nbsp;&nbsp;An application architecture specifies the technologies to be used to implement one or more information systems. It serves as an outline for detailed design, construction, and implementation. Given the models and details, include （1）, we can distribute data and processes to create a general design of application architecture. The design will normally be constrained by architecture standards, project objectives, and （2）. The first physical DFD to be drawn is the （3）. The next step is to distribute data stores to different processors. Data（4）are two types of distributed data which most RDBMSs support. There are many distribution options used in data distribution. In the case of （5）, we should record each table as a data store on the physical DFD and connect each to the appropriate server.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352441,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " context DFD&nbsp; &nbsp; ",
        " system DFD ",
        " network architecture DFD&nbsp; ",
        " event-response DFD "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 352445,
    "question_title": "<p>&nbsp;&nbsp;An application architecture specifies the technologies to be used to implement one or more information systems. It serves as an outline for detailed design, construction, and implementation. Given the models and details, include （1）, we can distribute data and processes to create a general design of application architecture. The design will normally be constrained by architecture standards, project objectives, and （2）. The first physical DFD to be drawn is the （3）. The next step is to distribute data stores to different processors. Data（4）are two types of distributed data which most RDBMSs support. There are many distribution options used in data distribution. In the case of （5）, we should record each table as a data store on the physical DFD and connect each to the appropriate server.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " vertical partitioning and horizontal replication ",
      " vertical replication and horizontal partitioning ",
      " integration and distribution ",
      " partitioning and replication "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 62,
      "belong_page": 1,
      "question_id": 352445,
      "question_title": "<p>&nbsp;&nbsp;An application architecture specifies the technologies to be used to implement one or more information systems. It serves as an outline for detailed design, construction, and implementation. Given the models and details, include （1）, we can distribute data and processes to create a general design of application architecture. The design will normally be constrained by architecture standards, project objectives, and （2）. The first physical DFD to be drawn is the （3）. The next step is to distribute data stores to different processors. Data（4）are two types of distributed data which most RDBMSs support. There are many distribution options used in data distribution. In the case of （5）, we should record each table as a data store on the physical DFD and connect each to the appropriate server.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352441,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " vertical partitioning and horizontal replication ",
        " vertical replication and horizontal partitioning ",
        " integration and distribution ",
        " partitioning and replication "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 352446,
    "question_title": "<p>&nbsp;&nbsp;An application architecture specifies the technologies to be used to implement one or more information systems. It serves as an outline for detailed design, construction, and implementation. Given the models and details, include （1）, we can distribute data and processes to create a general design of application architecture. The design will normally be constrained by architecture standards, project objectives, and （2）. The first physical DFD to be drawn is the （3）. The next step is to distribute data stores to different processors. Data（4）are two types of distributed data which most RDBMSs support. There are many distribution options used in data distribution. In the case of （5）, we should record each table as a data store on the physical DFD and connect each to the appropriate server.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " storing all data on a single server ",
      " storing specific tables on different servers ",
      " storing subsets of specific tables on different servers ",
      " duplicating specific tables or subsets on different servers "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 63,
      "belong_page": 1,
      "question_id": 352446,
      "question_title": "<p>&nbsp;&nbsp;An application architecture specifies the technologies to be used to implement one or more information systems. It serves as an outline for detailed design, construction, and implementation. Given the models and details, include （1）, we can distribute data and processes to create a general design of application architecture. The design will normally be constrained by architecture standards, project objectives, and （2）. The first physical DFD to be drawn is the （3）. The next step is to distribute data stores to different processors. Data（4）are two types of distributed data which most RDBMSs support. There are many distribution options used in data distribution. In the case of （5）, we should record each table as a data store on the physical DFD and connect each to the appropriate server.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352441,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " storing all data on a single server ",
        " storing specific tables on different servers ",
        " storing subsets of specific tables on different servers ",
        " duplicating specific tables or subsets on different servers "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 355058,
    "question_title": "<p>（25）通常为一个迭代过程，其中的活动包括需求发现、需求分类和组织、需求协商、需求文档化。</p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 需求确认 ",
      " 需求管理 ",
      " 需求抽取 ",
      " 需求规格说明 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 64,
      "belong_page": 1,
      "question_id": 355058,
      "question_title": "<p>（25）通常为一个迭代过程，其中的活动包括需求发现、需求分类和组织、需求协商、需求文档化。</p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 355058,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 需求确认 ",
        " 需求管理 ",
        " 需求抽取 ",
        " 需求规格说明 "
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 373659,
    "question_title": "采用面向对象技术设计51CTO在线教育平台系统，“学员类”和“课程类”应设计为（22 ），“窗口”应设计为（23 ）。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "控制类",
      "边界类",
      "接口类",
      "实体类"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 65,
      "belong_page": 1,
      "question_id": 373659,
      "question_title": "采用面向对象技术设计51CTO在线教育平台系统，“学员类”和“课程类”应设计为（22 ），“窗口”应设计为（23 ）。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373658,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "控制类",
        "边界类",
        "接口类",
        "实体类"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 373660,
    "question_title": "采用面向对象技术设计51CTO在线教育平台系统，“学员类”和“课程类”应设计为（22 ），“窗口”应设计为（23 ）。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "控制类",
      "边界类",
      "实体类",
      "接口类"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 66,
      "belong_page": 1,
      "question_id": 373660,
      "question_title": "采用面向对象技术设计51CTO在线教育平台系统，“学员类”和“课程类”应设计为（22 ），“窗口”应设计为（23 ）。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373658,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "控制类",
        "边界类",
        "实体类",
        "接口类"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 507295,
    "question_title": "关于设计模式的描述，正确的是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "装饰器模式属于行为模式",
      "原型模式属于创建型模式",
      "解释器和代理模式是同一类模式",
      "观察者模式属于结构型模式"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 67,
      "belong_page": 1,
      "question_id": 507295,
      "question_title": "关于设计模式的描述，正确的是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507295,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "装饰器模式属于行为模式",
        "原型模式属于创建型模式",
        "解释器和代理模式是同一类模式",
        "观察者模式属于结构型模式"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 507302,
    "question_title": "UML中用例的参与者的关系有（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "包含",
      "聚合",
      "扩展",
      "继承"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 68,
      "belong_page": 1,
      "question_id": 507302,
      "question_title": "UML中用例的参与者的关系有（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507302,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "包含",
        "聚合",
        "扩展",
        "继承"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 507319,
    "question_title": "功能元素按照特定的次序执行的是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "通信内聚",
      "时间内聚",
      "过程内聚",
      "逻辑内聚"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 69,
      "belong_page": 1,
      "question_id": 507319,
      "question_title": "功能元素按照特定的次序执行的是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507319,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "通信内聚",
        "时间内聚",
        "过程内聚",
        "逻辑内聚"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 507333,
    "question_title": "创建型设计模式的概念",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "创建型",
      "结构性",
      "无",
      "无&nbsp;"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 70,
      "belong_page": 1,
      "question_id": 507333,
      "question_title": "创建型设计模式的概念",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507333,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "创建型",
        "结构性",
        "无",
        "无&nbsp;"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 523238,
    "question_title": "内聚类型从高到低的正确排序是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "顺序、通信、过程、逻辑、功能、时间",
      "功能、顺序、通信、过程、时间、逻辑、偶然",
      "逻辑、顺序、过程、功能、时间、通信",
      "时间、功能、过程、通信、顺序、逻辑"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 71,
      "belong_page": 1,
      "question_id": 523238,
      "question_title": "内聚类型从高到低的正确排序是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523238,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "顺序、通信、过程、逻辑、功能、时间",
        "功能、顺序、通信、过程、时间、逻辑、偶然",
        "逻辑、顺序、过程、功能、时间、通信",
        "时间、功能、过程、通信、顺序、逻辑"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 523257,
    "question_title": "UML用例模型不包含（）关系。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "包含",
      "扩展",
      "泛化",
      "聚合"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 72,
      "belong_page": 1,
      "question_id": 523257,
      "question_title": "UML用例模型不包含（）关系。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523257,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "包含",
        "扩展",
        "泛化",
        "聚合"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 523260,
    "question_title": "结构化分析的特点是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "自底向上",
      "面向数据流",
      "非直接耦合",
      "数据耦合"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 73,
      "belong_page": 1,
      "question_id": 523260,
      "question_title": "结构化分析的特点是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523260,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "自底向上",
        "面向数据流",
        "非直接耦合",
        "数据耦合"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 523261,
    "question_title": "在UML活动图中，（）是原子的，不能被分解、没有内部转移、没有内部活动，它的工作所占用的时间可以忽略。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 初始状态 ",
      "原子状态",
      "活动状态",
      "动作状态"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 74,
      "belong_page": 1,
      "question_id": 523261,
      "question_title": "在UML活动图中，（）是原子的，不能被分解、没有内部转移、没有内部活动，它的工作所占用的时间可以忽略。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523261,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 初始状态 ",
        "原子状态",
        "活动状态",
        "动作状态"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 523271,
    "question_title": "数据流图中表示“异或”（互斥关系）的符号是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "+",
      "＋&nbsp;",
      "*",
      "○"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 75,
      "belong_page": 1,
      "question_id": 523271,
      "question_title": "数据流图中表示“异或”（互斥关系）的符号是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523271,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "+",
        "＋&nbsp;",
        "*",
        "○"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 523286,
    "question_title": "数据流图中表示数据加工和转换的组件是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "外部实体",
      "处理",
      "数据流",
      "数据存储"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 76,
      "belong_page": 1,
      "question_id": 523286,
      "question_title": "数据流图中表示数据加工和转换的组件是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523286,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "外部实体",
        "处理",
        "数据流",
        "数据存储"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 523291,
    "question_title": "一个对象将另一个对象的能力与特点进行完全的继承之后，又继承了其他对象的相应内容，使得这个对象所具有的能力与特点大于等于父对象，这种继承属于（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "包含继承",
      "特化继承",
      "取代继承",
      "受限继承"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 77,
      "belong_page": 1,
      "question_id": 523291,
      "question_title": "一个对象将另一个对象的能力与特点进行完全的继承之后，又继承了其他对象的相应内容，使得这个对象所具有的能力与特点大于等于父对象，这种继承属于（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523291,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "包含继承",
        "特化继承",
        "取代继承",
        "受限继承"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 523303,
    "question_title": "在数据流图中，数据流A经过处理后可以生成数据流B或者数据流C，但不能同时生成数据流B和数据流C，那么B和C之间用()关系表示。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " - ",
      "+&nbsp;",
      "*",
      "○"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 78,
      "belong_page": 1,
      "question_id": 523303,
      "question_title": "在数据流图中，数据流A经过处理后可以生成数据流B或者数据流C，但不能同时生成数据流B和数据流C，那么B和C之间用()关系表示。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523303,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " - ",
        "+&nbsp;",
        "*",
        "○"
      ]
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 45920,
    "question_title": "<p>试题二(共 25 分)</p><p>阅读以下关于软件系统设计的叙述，在答题纸上回答问题 1 至问题 3.</p><p>【说明】</p><p>某软件企业受该省教育部门委托建设高校数字化教育教学资源共享平台，实现以众筹众创的方式组织省内普通高校联合开展教育教学资源内容建设，实现全省优质教学资 源整合和共享。该资源共享平台的主要功能模块包括:</p><p>(1)统一身份认证模块，提供统一的认证入口，为平台其他核心业务模块提供用 户管理、身份认证、权限分级和单点登录等功能:</p><p>(2) 共享资源管理模块:提供教学资源申报流程服务，包括了资源申报、分类定制、资料上传、资源审核和资源发布等功能:</p><p>(3)共享资源展示模块:提供教育教学共享资源的展示服务，包括资源导航、视 频点播、资源检索、分类展示、资源评价和推荐等功能:</p><p>(4) 资源元模型管理模块:依据资源类型提供共享资源的描述属性、内容属性和展示属性，包括共享资源统一标准和规范、资源加工和在线编辑工具、数字水印和模板定制等功能:</p><p>(5) 系统综合管理模块:提供系统管理和维护服务，包括系统配置、数据备份恢复、资源导入导出和统计分析等功能。</p><p>项目组经过分析和讨论，决定采用基于 Java EE 的 MVC 模式设计资源共享平台的 软件架构，如图 2-1 所示。</p><p><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20180827/1535368417112986.png\" title=\"1535368417112986.png\" alt=\"图片.png\"/> </p><p>图2-1</p><p>【问题 1】 (9 分)</p><p>MVC 架构中包含哪三种元素，它们的作用分别是什么?请根据图 2-1 所示架构将 JavaEE 中JSP、Servlet、Service、JavaBean、DAO 五种构件分别填入空 (1)--(5) 所示位置。</p><p>【问题 2】(6 分)</p><p>项百组架构师王工提出在图 2-1 所示架构设计中加入 EJ B 构件，采用企业级 JavaEE架构开发资源共享平台。请说明 EJB 构件中的 Bean (构件)分为哪三种类型，每种类型Bean 的职责是什么。</p><br/><p>【问题 3】(10 分)</p><p>如果采用王工提出的企业级 JavaEE 架构，请说明下列(a)-(e) 所给出的业务功能构件中，有状态和无状态构件分别包括哪些。</p><p>（a）Identification Bean(身份认证构件〉</p><p>（b）ResPublish Bean(资源发布构件)</p><p>（c）ResRetrieval Bean(资源检索构件)</p><p>（d）OnlineEdit Bean(在线编辑构件)</p><p>（e）Statistics Bean(统计分析构件)</p><p><br/></p><br/><p><br/></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>参考答案：</p><p>MVC架构风格最初是Smalltalk-80中用来构建用户界面时采用的架构设计风格。其中M代表模型(Model)，V代表视图(View)，C代表控制器(Controller)。在该风格中，模型表示待展示的对象，视图表示模型的展示，并能接收用户的输入数据，但是它不进行任何实际业务处理，控制器负责把用户的动作转成针对模型的操作。模型通过更新视图的数据来反映自身的变化。</p><p>(1)JSP　（２）Servlet &nbsp;(3)Service &nbsp;(4)JavaBean &nbsp;(5)DAO</p><p>参考答案:</p><p>EJB中Bean分这三种类型：Session Bean ,Entity Bean,Message-Driven Bean.</p><p>Session Bean的职责：维护一个短暂会话，当客户端执行完成后，Session Bean和它的数据会消失。</p><p>Entity Bean的职责：维护一行持久稳固的数据，如果客户端终止或者服务结束，底层的服务会负责entity Bean数据的存储。</p><p>Message-Driven Bean的职责：结合了Session Bean 和JMS，允许异步接收消息。</p><p>&nbsp;</p><p>参考答案：</p><p>有状态构件包含：(a)、 (b) 、(d)</p><p>无状态构件包含：(c)、(e)</p><p><br/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 79,
      "belong_page": 1,
      "question_id": 45920,
      "question_title": "<p>试题二(共 25 分)</p><p>阅读以下关于软件系统设计的叙述，在答题纸上回答问题 1 至问题 3.</p><p>【说明】</p><p>某软件企业受该省教育部门委托建设高校数字化教育教学资源共享平台，实现以众筹众创的方式组织省内普通高校联合开展教育教学资源内容建设，实现全省优质教学资 源整合和共享。该资源共享平台的主要功能模块包括:</p><p>(1)统一身份认证模块，提供统一的认证入口，为平台其他核心业务模块提供用 户管理、身份认证、权限分级和单点登录等功能:</p><p>(2) 共享资源管理模块:提供教学资源申报流程服务，包括了资源申报、分类定制、资料上传、资源审核和资源发布等功能:</p><p>(3)共享资源展示模块:提供教育教学共享资源的展示服务，包括资源导航、视 频点播、资源检索、分类展示、资源评价和推荐等功能:</p><p>(4) 资源元模型管理模块:依据资源类型提供共享资源的描述属性、内容属性和展示属性，包括共享资源统一标准和规范、资源加工和在线编辑工具、数字水印和模板定制等功能:</p><p>(5) 系统综合管理模块:提供系统管理和维护服务，包括系统配置、数据备份恢复、资源导入导出和统计分析等功能。</p><p>项目组经过分析和讨论，决定采用基于 Java EE 的 MVC 模式设计资源共享平台的 软件架构，如图 2-1 所示。</p><p><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20180827/1535368417112986.png\" title=\"1535368417112986.png\" alt=\"图片.png\"/> </p><p>图2-1</p><p>【问题 1】 (9 分)</p><p>MVC 架构中包含哪三种元素，它们的作用分别是什么?请根据图 2-1 所示架构将 JavaEE 中JSP、Servlet、Service、JavaBean、DAO 五种构件分别填入空 (1)--(5) 所示位置。</p><p>【问题 2】(6 分)</p><p>项百组架构师王工提出在图 2-1 所示架构设计中加入 EJ B 构件，采用企业级 JavaEE架构开发资源共享平台。请说明 EJB 构件中的 Bean (构件)分为哪三种类型，每种类型Bean 的职责是什么。</p><br/><p>【问题 3】(10 分)</p><p>如果采用王工提出的企业级 JavaEE 架构，请说明下列(a)-(e) 所给出的业务功能构件中，有状态和无状态构件分别包括哪些。</p><p>（a）Identification Bean(身份认证构件〉</p><p>（b）ResPublish Bean(资源发布构件)</p><p>（c）ResRetrieval Bean(资源检索构件)</p><p>（d）OnlineEdit Bean(在线编辑构件)</p><p>（e）Statistics Bean(统计分析构件)</p><p><br/></p><br/><p><br/></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 45920,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>参考答案：</p><p>MVC架构风格最初是Smalltalk-80中用来构建用户界面时采用的架构设计风格。其中M代表模型(Model)，V代表视图(View)，C代表控制器(Controller)。在该风格中，模型表示待展示的对象，视图表示模型的展示，并能接收用户的输入数据，但是它不进行任何实际业务处理，控制器负责把用户的动作转成针对模型的操作。模型通过更新视图的数据来反映自身的变化。</p><p>(1)JSP　（２）Servlet &nbsp;(3)Service &nbsp;(4)JavaBean &nbsp;(5)DAO</p><p>参考答案:</p><p>EJB中Bean分这三种类型：Session Bean ,Entity Bean,Message-Driven Bean.</p><p>Session Bean的职责：维护一个短暂会话，当客户端执行完成后，Session Bean和它的数据会消失。</p><p>Entity Bean的职责：维护一行持久稳固的数据，如果客户端终止或者服务结束，底层的服务会负责entity Bean数据的存储。</p><p>Message-Driven Bean的职责：结合了Session Bean 和JMS，允许异步接收消息。</p><p>&nbsp;</p><p>参考答案：</p><p>有状态构件包含：(a)、 (b) 、(d)</p><p>无状态构件包含：(c)、(e)</p><p><br/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 45945,
    "question_title": "<p><br/></p><p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于软件系统建模的叙述，在答题纸上回答问题1至问题3。</p><p style=\"margin-top:5px;text-indent:28px;text-align:left\">【说明】</p><p>某软件公司计划开发一套教学管理系统，用于为高校提供教学管理服务。该教学管理系统基本的需求包括：</p><p>(1)系统用户必须成功登录到系统后才能使用系统的各项功能服务；</p><p>(2)管理员（Registrar）使用该系统管理学校（University）、系（Department）、教师（Lecturer）、学生（Student）和课程(Course)等教学基础信息；</p><p>(3)学生使用系统选择并注册课程，必须通过所选课程的考试才能获得学分；如果考试不及格，必须参加补考，通过后才能获得课程学分；</p><p>(4)教师使用该系统选择所要教的课程，并从系统获得选择该课程的学生名单；</p><p>(5)管理员使用系统生成课程课表，维护系统所需的有关课程、学生和教师的信息；</p><p>(6)每个月到了月底系统会通过打印机打印学生的考勤信息。</p><p>项目组经过分析和讨论，决定采用面向对象开发技术对系统各项需求建模。</p><p>【问题1】（7分）</p><p>用例建模用来描述待开发系统的功能需求，主要元素是用例和参与者。请根据题目所述需求，说明教学服务系统中有哪些参与者。</p><p><br/></p><p>【问题2】（7分）</p><p>用例是对系统行为的动态描述，用例获取是需求分析阶段的主要任务之一。请指出在面向对象系统建模中，用例之间的关系有哪几种类型？对题目所述教学服务系统的需求建模时， “登录系统”用例与“注册课程”用例之间、“参加考试”用例与“参加补考”用例之间的关系分别属于哪种类型？</p><p>&nbsp;</p><p>【问题3】（11分）</p><p>类图主要用来描述系统的静态结构，是组件图和配置图的基础。请指出在面向对象系统建模中，类之间的关系有哪几种类型？对题目所述教学服务系统的需求建模时，类University与类Student之间、类University和类Department之间、类Student和类Course之间的关系分别属于哪种类型？</p><p><br/></p><br/><br/>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>参考答案：</p><p>学生、教师、管理员、时间、打印机。</p><p>参考答案：</p><p>用例之间的关系包括：包含、扩展。</p><p>“登录系统”用例与“注册课程”用例之间的关系为：包含关系。</p><p>“参加考试”用例与“参加补考”用例之间的关系为：扩展关系。</p><p>&nbsp;</p><p>参考答案：</p><p>类之间的关系包括：关联、聚合、组合、依赖、泛化。</p><p>类University与类Student之间的关系是：聚合关系。</p><p>类University与类Department之间的关系是：组合关系。</p><p>类Student与类Course之间的关系是：关联关系。<br/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 80,
      "belong_page": 1,
      "question_id": 45945,
      "question_title": "<p><br/></p><p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于软件系统建模的叙述，在答题纸上回答问题1至问题3。</p><p style=\"margin-top:5px;text-indent:28px;text-align:left\">【说明】</p><p>某软件公司计划开发一套教学管理系统，用于为高校提供教学管理服务。该教学管理系统基本的需求包括：</p><p>(1)系统用户必须成功登录到系统后才能使用系统的各项功能服务；</p><p>(2)管理员（Registrar）使用该系统管理学校（University）、系（Department）、教师（Lecturer）、学生（Student）和课程(Course)等教学基础信息；</p><p>(3)学生使用系统选择并注册课程，必须通过所选课程的考试才能获得学分；如果考试不及格，必须参加补考，通过后才能获得课程学分；</p><p>(4)教师使用该系统选择所要教的课程，并从系统获得选择该课程的学生名单；</p><p>(5)管理员使用系统生成课程课表，维护系统所需的有关课程、学生和教师的信息；</p><p>(6)每个月到了月底系统会通过打印机打印学生的考勤信息。</p><p>项目组经过分析和讨论，决定采用面向对象开发技术对系统各项需求建模。</p><p>【问题1】（7分）</p><p>用例建模用来描述待开发系统的功能需求，主要元素是用例和参与者。请根据题目所述需求，说明教学服务系统中有哪些参与者。</p><p><br/></p><p>【问题2】（7分）</p><p>用例是对系统行为的动态描述，用例获取是需求分析阶段的主要任务之一。请指出在面向对象系统建模中，用例之间的关系有哪几种类型？对题目所述教学服务系统的需求建模时， “登录系统”用例与“注册课程”用例之间、“参加考试”用例与“参加补考”用例之间的关系分别属于哪种类型？</p><p>&nbsp;</p><p>【问题3】（11分）</p><p>类图主要用来描述系统的静态结构，是组件图和配置图的基础。请指出在面向对象系统建模中，类之间的关系有哪几种类型？对题目所述教学服务系统的需求建模时，类University与类Student之间、类University和类Department之间、类Student和类Course之间的关系分别属于哪种类型？</p><p><br/></p><br/><br/>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 45945,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>参考答案：</p><p>学生、教师、管理员、时间、打印机。</p><p>参考答案：</p><p>用例之间的关系包括：包含、扩展。</p><p>“登录系统”用例与“注册课程”用例之间的关系为：包含关系。</p><p>“参加考试”用例与“参加补考”用例之间的关系为：扩展关系。</p><p>&nbsp;</p><p>参考答案：</p><p>类之间的关系包括：关联、聚合、组合、依赖、泛化。</p><p>类University与类Student之间的关系是：聚合关系。</p><p>类University与类Department之间的关系是：组合关系。</p><p>类Student与类Course之间的关系是：关联关系。<br/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 54270,
    "question_title": "<p>某公司拟开发一个商业情报处理系统，使公司能够及时针对市场环境的变化及时调整发展战略，以获取最大的商业利益。项目组经过讨论，决定采用结构化分析和设计方法。在系统分析阶段，为了更好地对情报数据处理流程及其与外部角色的关联进行建模，项目组成员分别给出了自己的设计思路：<br/>（1）小张提出先构建系统流程图（System Flowcharts），以便更精确地反映系统的业务处理过程及数据的输入和输出；<br/>（2）小李提出先构建系统数据流图（Data Flow Diagrams），来展现系统的处理过程和定义业务功能边界，并给出了情报分类子系统的0层和1层数据流图，后者如图2-1所示。<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181012/1539331194120751.jpg\" title=\"1539331194120751.jpg\" alt=\"1.jpg\"/><br/>项目组经讨论确定以数据流图作为本阶段的建模手段。工程师老王详细说明了流程图和数据流图之间的区别与联系，并指出了图2-1的数据流图中存在的错误。<br/>【问题1】（11分）<br/>流程图和数据流图是软件系统分析设计中常用的两种手段，请用300字以内文字简要说明流程图与数据流图的含义及其区别，并说明项目组为何确定采用数据流图作为建模手段。<br/>【问题2】（8分）<br/>请分析指出图2-1所示的数据流图中存在的错误及其原因，并针对图2-1的1层数据流图绘制出情报分类子系统的0层数据流图。<br/>【问题3】（6分）<br/>高质量的数据流图是可读的、内部一致的并能够准确表示系统需求。请用300字以内文字说明在设计高质量的数据流图时应考虑的三个原则。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题1】<br/>数据流图作为一种图形化工具，用来说明业务处理过程、系统边界内所包含的功能和系统中的数据流。<br/>流程图以图形化的方式展示应用程序从数据输入开始到获得输出为止的逻辑过程，描述处理过程的控制流。<br/>两者的区别主要包括：<br/>（1）数据流图中的处理过程可并行；流程图在某个时间点只能处于一个处理过程。<br/>（2）数据流图展现系统的数据流；流程图展现系统的控制流。<br/>（3）数据流图展现全局的处理过程，过程之间遵循不同的计时标准；流程图中处理过程遵循一致的计时标准。<br/>（4）数据流图适用于系统分析中的逻辑建模阶段；流程图适用于系统设计中的物理模阶段。<br/>【问题2】<br/>如图所示的数据流图中存在的错误有以下4种：<br/>（1）&quot;分类训练&quot;加工：只有输入没有输出，产生数据黑洞；<br/>（2）&quot;分类处理&quot;加工：有输出没有输入，无中生有；<br/>（3）&quot;规则文件&quot;数据流：外部实体没有经过加工处理，直接到数据存储；<br/>（4）&quot;配置信息&quot;数据流：外部实体之间没有加工处理，存在直接数据流。<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181012/1539331217728457.jpg\" title=\"1539331217728457.jpg\" alt=\"1.jpg\"/><br/>【问题3】<br/>高质量数据流图设计时应考虑的三个原则：<br/>（1）复杂性最小化原则。DFD分层结构就是把信息划分为小的且相对独立的一大批子集例子，这样就可以单独考查每一个DFD。如果要了解某个过程更加详的信息，可以跳转到该过程的下一层；如果要知道一个DFD如何与其他DFD相关联，可以跳转到上一层的DFD进行考查。<br/>（2）接口最小化原则。接口最小化是复杂性最小化的一种具体规则。在设计模式时，应使得模型中各个元素之间的接口数或连接数最小化。<br/>（3）数据流一致性原则。一个过程和它的过程分解在数据流内容中是否有差别？是否存在有数据流出但没有相应的数据流入的加工？是否存在有数据流入但没有相应的数据流出的加工？</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 81,
      "belong_page": 1,
      "question_id": 54270,
      "question_title": "<p>某公司拟开发一个商业情报处理系统，使公司能够及时针对市场环境的变化及时调整发展战略，以获取最大的商业利益。项目组经过讨论，决定采用结构化分析和设计方法。在系统分析阶段，为了更好地对情报数据处理流程及其与外部角色的关联进行建模，项目组成员分别给出了自己的设计思路：<br/>（1）小张提出先构建系统流程图（System Flowcharts），以便更精确地反映系统的业务处理过程及数据的输入和输出；<br/>（2）小李提出先构建系统数据流图（Data Flow Diagrams），来展现系统的处理过程和定义业务功能边界，并给出了情报分类子系统的0层和1层数据流图，后者如图2-1所示。<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181012/1539331194120751.jpg\" title=\"1539331194120751.jpg\" alt=\"1.jpg\"/><br/>项目组经讨论确定以数据流图作为本阶段的建模手段。工程师老王详细说明了流程图和数据流图之间的区别与联系，并指出了图2-1的数据流图中存在的错误。<br/>【问题1】（11分）<br/>流程图和数据流图是软件系统分析设计中常用的两种手段，请用300字以内文字简要说明流程图与数据流图的含义及其区别，并说明项目组为何确定采用数据流图作为建模手段。<br/>【问题2】（8分）<br/>请分析指出图2-1所示的数据流图中存在的错误及其原因，并针对图2-1的1层数据流图绘制出情报分类子系统的0层数据流图。<br/>【问题3】（6分）<br/>高质量的数据流图是可读的、内部一致的并能够准确表示系统需求。请用300字以内文字说明在设计高质量的数据流图时应考虑的三个原则。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 54270,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题1】<br/>数据流图作为一种图形化工具，用来说明业务处理过程、系统边界内所包含的功能和系统中的数据流。<br/>流程图以图形化的方式展示应用程序从数据输入开始到获得输出为止的逻辑过程，描述处理过程的控制流。<br/>两者的区别主要包括：<br/>（1）数据流图中的处理过程可并行；流程图在某个时间点只能处于一个处理过程。<br/>（2）数据流图展现系统的数据流；流程图展现系统的控制流。<br/>（3）数据流图展现全局的处理过程，过程之间遵循不同的计时标准；流程图中处理过程遵循一致的计时标准。<br/>（4）数据流图适用于系统分析中的逻辑建模阶段；流程图适用于系统设计中的物理模阶段。<br/>【问题2】<br/>如图所示的数据流图中存在的错误有以下4种：<br/>（1）&quot;分类训练&quot;加工：只有输入没有输出，产生数据黑洞；<br/>（2）&quot;分类处理&quot;加工：有输出没有输入，无中生有；<br/>（3）&quot;规则文件&quot;数据流：外部实体没有经过加工处理，直接到数据存储；<br/>（4）&quot;配置信息&quot;数据流：外部实体之间没有加工处理，存在直接数据流。<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181012/1539331217728457.jpg\" title=\"1539331217728457.jpg\" alt=\"1.jpg\"/><br/>【问题3】<br/>高质量数据流图设计时应考虑的三个原则：<br/>（1）复杂性最小化原则。DFD分层结构就是把信息划分为小的且相对独立的一大批子集例子，这样就可以单独考查每一个DFD。如果要了解某个过程更加详的信息，可以跳转到该过程的下一层；如果要知道一个DFD如何与其他DFD相关联，可以跳转到上一层的DFD进行考查。<br/>（2）接口最小化原则。接口最小化是复杂性最小化的一种具体规则。在设计模式时，应使得模型中各个元素之间的接口数或连接数最小化。<br/>（3）数据流一致性原则。一个过程和它的过程分解在数据流内容中是否有差别？是否存在有数据流出但没有相应的数据流入的加工？是否存在有数据流入但没有相应的数据流出的加工？</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 63700,
    "question_title": "<p>阅读以下关于软件系统建模的叙述，在答题纸上回答问题1至问题3。</p><p>[说明]某公司欲建设-一个房屋租赁服务系统，统一管理房主和租赁者的信息，提供快捷的租赁服务。本系统的主要功能描述如下:&nbsp;</p><p>1.登记房主信息。记录房主的姓名、住址、身份证号和联系电话等信息，并写入房主信息文件。</p><p>2.登记房屋信息。记录房屋的地址、房屋类型(如平房、带阳台的楼房、独立式住宅等)、楼层、租金及房屋状态(待租赁、已出租)等信息，并写入房屋信息文件。-名房主可以在系统中登记多套待租赁的房屋。</p><p>3.登记租赁者信息。记录租赁者的个人信息，包括:姓名、性别、住址、身份证号和电话号码等，并写入租赁者信息文件。</p><p>4.安排看房。已经登记在系统中的租赁者，可以从待租赁房屋列表中查询待租赁房屋信息。租赁者可以提出看房请求，系统安排租赁者看房。对于每次看房，系统会生成一条看房记录并将其写入看房记录文件中。</p><p>5.收取手续费。房主登记完房屋后，系统会生成一份费用单，房主根据费用单交纳相应的费用。</p><p>6.变更房屋状态。当租赁者与房主达成租房或退房协议后，房主向系统提交变更房屋状态的请求。系统将根据房主的请求，修改房屋信息文件。</p><p><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181127/1543312351968704.jpg\" title=\"1543312351968704.jpg\" alt=\"1.jpg\"/></p><p>[问题1](12分)<br/></p><p>若来用结构化方法对房屋租赁服务系统进行分析，得到如图2-1所示的顶层DFD,使用题干中给出的词语，给出图2-1中外部实体E1~E2、加工P1~P6以及数据存储D1~D4的名称。</p><p>[问题2] (5分)</p><p>若采用信息工程(Information Engineering)方法对房屋租赁服务系统进行分析，得到如图2-2所示的ERD.请给出图2-2中实体(1) ~ (5) 的名称。</p><p>[问题3](8分)</p><p>(1)信息工程方法中的&#39;实体(entity) ”与面向对象方法中的“类(class) ”之间有哪些不同之处?</p><p>(2)在面向对象方法中通常采用用例(Use Case)来捕获系统的功能需求。用例可以按照不同的层次来进行划分,其中的Essential Use Cases和Real Use Cases有哪些区别?<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181127/1543312360520122.jpg\" title=\"1543312360520122.jpg\" alt=\"2.jpg\"/></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>[问题1]</p><p>E1:房主</p><p>E2:租赁者</p><p>P1:登记房主信息</p><p>P2:登记房屋信息</p><p>P3:登记租赁者信息</p><p>P4:查询租赁房屋信息</p><p>P5:安排看房</p><p>P6:变更房屋状态</p><p>D1:房主信息文件</p><p>D2:租赁者信息文件</p><p>D3:房屋信息文件</p><p>D4:看房记录文件</p><p>[问题2]</p><p>(1) 房主</p><p>(2) 房屋</p><p>(3) 房屋信息文件</p><p>(4) 租赁者</p><p>(5) 看房记录</p><p>[问题3]</p><p>(1)实体用于数据建模，而类用于面向对象建模。实体只有属性，而类有属性和操作。</p><p>(2) Essential Use Cases可翻译为抽象用例，Real Use Cases可翻译为基础用例。他们是区别在于: 基础用例是实实在在与用户需求有对应关系的用例，是从用户需求获取的渠道得到的，而抽象用例是从基础用例中抽取的用例的公共部分，是为了避免重复工作，优化结构而提出的用例。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 82,
      "belong_page": 1,
      "question_id": 63700,
      "question_title": "<p>阅读以下关于软件系统建模的叙述，在答题纸上回答问题1至问题3。</p><p>[说明]某公司欲建设-一个房屋租赁服务系统，统一管理房主和租赁者的信息，提供快捷的租赁服务。本系统的主要功能描述如下:&nbsp;</p><p>1.登记房主信息。记录房主的姓名、住址、身份证号和联系电话等信息，并写入房主信息文件。</p><p>2.登记房屋信息。记录房屋的地址、房屋类型(如平房、带阳台的楼房、独立式住宅等)、楼层、租金及房屋状态(待租赁、已出租)等信息，并写入房屋信息文件。-名房主可以在系统中登记多套待租赁的房屋。</p><p>3.登记租赁者信息。记录租赁者的个人信息，包括:姓名、性别、住址、身份证号和电话号码等，并写入租赁者信息文件。</p><p>4.安排看房。已经登记在系统中的租赁者，可以从待租赁房屋列表中查询待租赁房屋信息。租赁者可以提出看房请求，系统安排租赁者看房。对于每次看房，系统会生成一条看房记录并将其写入看房记录文件中。</p><p>5.收取手续费。房主登记完房屋后，系统会生成一份费用单，房主根据费用单交纳相应的费用。</p><p>6.变更房屋状态。当租赁者与房主达成租房或退房协议后，房主向系统提交变更房屋状态的请求。系统将根据房主的请求，修改房屋信息文件。</p><p><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181127/1543312351968704.jpg\" title=\"1543312351968704.jpg\" alt=\"1.jpg\"/></p><p>[问题1](12分)<br/></p><p>若来用结构化方法对房屋租赁服务系统进行分析，得到如图2-1所示的顶层DFD,使用题干中给出的词语，给出图2-1中外部实体E1~E2、加工P1~P6以及数据存储D1~D4的名称。</p><p>[问题2] (5分)</p><p>若采用信息工程(Information Engineering)方法对房屋租赁服务系统进行分析，得到如图2-2所示的ERD.请给出图2-2中实体(1) ~ (5) 的名称。</p><p>[问题3](8分)</p><p>(1)信息工程方法中的&#39;实体(entity) ”与面向对象方法中的“类(class) ”之间有哪些不同之处?</p><p>(2)在面向对象方法中通常采用用例(Use Case)来捕获系统的功能需求。用例可以按照不同的层次来进行划分,其中的Essential Use Cases和Real Use Cases有哪些区别?<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181127/1543312360520122.jpg\" title=\"1543312360520122.jpg\" alt=\"2.jpg\"/></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 63700,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>[问题1]</p><p>E1:房主</p><p>E2:租赁者</p><p>P1:登记房主信息</p><p>P2:登记房屋信息</p><p>P3:登记租赁者信息</p><p>P4:查询租赁房屋信息</p><p>P5:安排看房</p><p>P6:变更房屋状态</p><p>D1:房主信息文件</p><p>D2:租赁者信息文件</p><p>D3:房屋信息文件</p><p>D4:看房记录文件</p><p>[问题2]</p><p>(1) 房主</p><p>(2) 房屋</p><p>(3) 房屋信息文件</p><p>(4) 租赁者</p><p>(5) 看房记录</p><p>[问题3]</p><p>(1)实体用于数据建模，而类用于面向对象建模。实体只有属性，而类有属性和操作。</p><p>(2) Essential Use Cases可翻译为抽象用例，Real Use Cases可翻译为基础用例。他们是区别在于: 基础用例是实实在在与用户需求有对应关系的用例，是从用户需求获取的渠道得到的，而抽象用例是从基础用例中抽取的用例的公共部分，是为了避免重复工作，优化结构而提出的用例。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 208619,
    "question_title": "<p>阅读以下关于面向对象系统建模的叙述，回答问题。</p><p>【说明】</p><p>某软件企业为影音产品销售公司W开发一套在线销售系统，以提升服务的质量和效率。项目组经过讨论后决定采用面向对象方法开发该系统。在设计建模阶段需要满足以下设计要求：</p><p>W公司经常进行促销活动。根据不同的条件(如订单总额、商品数量、产品种类等)，公司可以提供百分比折扣或现金减免等多种促销方式供提交订单的用户选择。实现每种促销活动的代码量很大，且会随促销策略不同经常修改。系统设计中需要考虑现有的促销和新的促销，而不用经常地重写控制器类代码。</p><p>该在线销售系统需要计算每个订单的税率，不同商品的税率及计算方式会有所区别。所以W公司决定在系统中直接调用不同商品供应商提供的税率计算类，但每个供应商的类提供了不同的调用方法。系统设计中需要考虑如果公司更换了供应商，应该尽可能少地在系统中修改或创建新类。</p><p>项目组架构师决定采用设计模式来满足上述设计要求，并确定从当前已经熟练掌握的设计模式中进行选择，这些设计模式包括：适配器模式(Adapter)、构造器模式(Builder)、命令模式(Command)、外观模式(Facade)、中介模式(Mediator)、原型模式(Prototype)、代理模式(Proxy)、状态模式(State)和策略模式(Strategy)等。</p><p>【问题1】</p><p>设计模式按照其应用模式可以分为三类：创建型、结构型和行为型，请用200字以内文字说明三者的作用。</p><p>【问题2】</p><p>请将项目组已经掌握的设计模式按照其作用分别归类到创建型、结构型和行为型模式中。</p><p>【问题3】</p><p>针对题目中所提出的设计要求(1)和(2)，项目组应该分别选择何种设计模式?请分别用200字以内文字说明具体的解决方案。<span style=\"font-size: 16px;\"></span></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题1】答案：</p><p>创建型模式主要用于创建对象，为设计类实例化新对象提供指南。</p><p>结构型模式主要用于处理类或对象的组合，对类如何设计以形成更大的结构提供指南。</p><p>行为型模式主要用于描述类或对象的交互以及职责的分配，对类之间交互以及分配责任的方式提供指南。</p><p>【问题2】答案：</p><p>创建型模式：构造器模式、原型模式。</p><p>结构型模式：适配器模式、外观模式、代理模式。</p><p>行为型模式：命令模式、中介模式、状态模式和策略模式。</p><p>【问题3】答案：</p><p>(1)策略模式</p><p>解决方案：在具有公共接口的独立类中定义每个计算。可以利用该模式创建各种促销类，它们从同一个超类继承。每个类都有相同名称的标准接口方法，用于根据订单编号计算将要折扣的金额总数。计算每个促销的内部代码对促销类来说完全不同。</p><p>(2)适配器模式</p><p>解决方案：增加一个类作为适配器，转换类的接口到客户端类期望的另一个接口。实现一个适配器类，这个类为系统的其他部分提供了一个不变的方法供调用，为了集成不同商品供应商提供的税率计算类，编写一个适配器类的子类，包含调用购买类所需的代码。该子类将系统的调用映射到某个供应商的税率计算类。如果要更换供应商，那么只需要写一个新的适配器子类，其他保持不变。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 83,
      "belong_page": 1,
      "question_id": 208619,
      "question_title": "<p>阅读以下关于面向对象系统建模的叙述，回答问题。</p><p>【说明】</p><p>某软件企业为影音产品销售公司W开发一套在线销售系统，以提升服务的质量和效率。项目组经过讨论后决定采用面向对象方法开发该系统。在设计建模阶段需要满足以下设计要求：</p><p>W公司经常进行促销活动。根据不同的条件(如订单总额、商品数量、产品种类等)，公司可以提供百分比折扣或现金减免等多种促销方式供提交订单的用户选择。实现每种促销活动的代码量很大，且会随促销策略不同经常修改。系统设计中需要考虑现有的促销和新的促销，而不用经常地重写控制器类代码。</p><p>该在线销售系统需要计算每个订单的税率，不同商品的税率及计算方式会有所区别。所以W公司决定在系统中直接调用不同商品供应商提供的税率计算类，但每个供应商的类提供了不同的调用方法。系统设计中需要考虑如果公司更换了供应商，应该尽可能少地在系统中修改或创建新类。</p><p>项目组架构师决定采用设计模式来满足上述设计要求，并确定从当前已经熟练掌握的设计模式中进行选择，这些设计模式包括：适配器模式(Adapter)、构造器模式(Builder)、命令模式(Command)、外观模式(Facade)、中介模式(Mediator)、原型模式(Prototype)、代理模式(Proxy)、状态模式(State)和策略模式(Strategy)等。</p><p>【问题1】</p><p>设计模式按照其应用模式可以分为三类：创建型、结构型和行为型，请用200字以内文字说明三者的作用。</p><p>【问题2】</p><p>请将项目组已经掌握的设计模式按照其作用分别归类到创建型、结构型和行为型模式中。</p><p>【问题3】</p><p>针对题目中所提出的设计要求(1)和(2)，项目组应该分别选择何种设计模式?请分别用200字以内文字说明具体的解决方案。<span style=\"font-size: 16px;\"></span></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 208619,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题1】答案：</p><p>创建型模式主要用于创建对象，为设计类实例化新对象提供指南。</p><p>结构型模式主要用于处理类或对象的组合，对类如何设计以形成更大的结构提供指南。</p><p>行为型模式主要用于描述类或对象的交互以及职责的分配，对类之间交互以及分配责任的方式提供指南。</p><p>【问题2】答案：</p><p>创建型模式：构造器模式、原型模式。</p><p>结构型模式：适配器模式、外观模式、代理模式。</p><p>行为型模式：命令模式、中介模式、状态模式和策略模式。</p><p>【问题3】答案：</p><p>(1)策略模式</p><p>解决方案：在具有公共接口的独立类中定义每个计算。可以利用该模式创建各种促销类，它们从同一个超类继承。每个类都有相同名称的标准接口方法，用于根据订单编号计算将要折扣的金额总数。计算每个促销的内部代码对促销类来说完全不同。</p><p>(2)适配器模式</p><p>解决方案：增加一个类作为适配器，转换类的接口到客户端类期望的另一个接口。实现一个适配器类，这个类为系统的其他部分提供了一个不变的方法供调用，为了集成不同商品供应商提供的税率计算类，编写一个适配器类的子类，包含调用购买类所需的代码。该子类将系统的调用映射到某个供应商的税率计算类。如果要更换供应商，那么只需要写一个新的适配器子类，其他保持不变。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 281376,
    "question_title": "<p>[问题1]（11分）</p><p>流程图和数据流图是软件系统分析设计中常用的两种手段，请用300字以内文字简要说明流程图与数据流图的含义及其区别，并说明项目组为何确定采用数据流图作为建模手段。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>[问题1]<br/>数据流图作为一种图形化工具，用来说明业务处理过程、系统边界内所包含的功能和系统中的数据流。</p><p>流程图以图形化的方式展示应用程序从数据输入开始到获得输出为止的逻辑过程，描述处理过程的控制流。</p><p>两者的区别主要包括：</p><p>(1) 数据流图中的处理过程可并行；流程图在某个时间点只能处于一个处理过程。</p><p>(2) 数据流图展现系统的数据流；流程图展现系统的控制流。</p><p>(3) 数据流图展现全局的处理过程，过程之间遵循不同的计时标准；流程图中处理过程遵循一致的计时标准。</p><p>(4) 数据流图适用于系统分析中的逻辑建模阶段；流程图适用于系统设计中的物理建模阶段。<br/>本题项目组为了更好地对情报数据处理流程及其与外部角色的关联进行建模，符合数据流图的应用场景要求，因此，首先构建数据流图以反映数据流向和系统边界。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 84,
      "belong_page": 1,
      "question_id": 281376,
      "question_title": "<p>[问题1]（11分）</p><p>流程图和数据流图是软件系统分析设计中常用的两种手段，请用300字以内文字简要说明流程图与数据流图的含义及其区别，并说明项目组为何确定采用数据流图作为建模手段。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 281375,
      "score_rule": "",
      "material_text": "<p>试题二（25分）</p><p>某公司拟开发一个商业情报处理系统，使公司能够及时针对市场环境的变化及时调整发展战略，以获取最大的商业利益。项目组经过讨论，决定采用结构化分析和设计方法。在系统分析阶段，为了更好地对情报数据处理流程及其与外部角色的关联进行建模，项目组成员分别给出了自己的设计思路：<br/>(1) 小张提出先构建系统流程图(System Flowcharts)，以便更精确地反映系统的业务处理过程及数据的输入和输出。<br/>(2) 小李提出先构建系统数据流图(Data Flow Diagrams)，来展现系统的处理过程和定义业务功能边界，并给出了情报分类子系统的0层和1层数据流图，后者如下图所示。</p><img src=\"https://s2.51cto.com/images/20200912/1599890567689303.jpg\" title=\"1599890567689303.jpg\" alt=\"1.jpg\"/><br/><p>项目组经讨论确定以数据流图作为本阶段的建模手段。工程师老王详细说明了流程图和数据流图之间的区别与联系，并指出了上图所示数据流图中存在的错误。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>[问题1]<br/>数据流图作为一种图形化工具，用来说明业务处理过程、系统边界内所包含的功能和系统中的数据流。</p><p>流程图以图形化的方式展示应用程序从数据输入开始到获得输出为止的逻辑过程，描述处理过程的控制流。</p><p>两者的区别主要包括：</p><p>(1) 数据流图中的处理过程可并行；流程图在某个时间点只能处于一个处理过程。</p><p>(2) 数据流图展现系统的数据流；流程图展现系统的控制流。</p><p>(3) 数据流图展现全局的处理过程，过程之间遵循不同的计时标准；流程图中处理过程遵循一致的计时标准。</p><p>(4) 数据流图适用于系统分析中的逻辑建模阶段；流程图适用于系统设计中的物理建模阶段。<br/>本题项目组为了更好地对情报数据处理流程及其与外部角色的关联进行建模，符合数据流图的应用场景要求，因此，首先构建数据流图以反映数据流向和系统边界。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 281377,
    "question_title": "<p>[问题2]（8分）</p><p>请分析指出上图所示的数据流图中存在的错误及其原因。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "【问题二】<br/><p>如图所示的数据流图中存在的错误有以下4种：</p><p>(1) “分类训练”加工：只有输入没有输出，产生数据黑洞；</p><p>(2) “分类处理”加工：只有输出没有输入，无中生有；</p><p>(3) “规则文件”数据流：外部实体没有经过加工处理，直接到数据存储；</p><p>(4) “配置信息”数据流：外部实体之间没有加工处理，存在直接数据流。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 85,
      "belong_page": 1,
      "question_id": 281377,
      "question_title": "<p>[问题2]（8分）</p><p>请分析指出上图所示的数据流图中存在的错误及其原因。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 281375,
      "score_rule": "",
      "material_text": "<p>试题二（25分）</p><p>某公司拟开发一个商业情报处理系统，使公司能够及时针对市场环境的变化及时调整发展战略，以获取最大的商业利益。项目组经过讨论，决定采用结构化分析和设计方法。在系统分析阶段，为了更好地对情报数据处理流程及其与外部角色的关联进行建模，项目组成员分别给出了自己的设计思路：<br/>(1) 小张提出先构建系统流程图(System Flowcharts)，以便更精确地反映系统的业务处理过程及数据的输入和输出。<br/>(2) 小李提出先构建系统数据流图(Data Flow Diagrams)，来展现系统的处理过程和定义业务功能边界，并给出了情报分类子系统的0层和1层数据流图，后者如下图所示。</p><img src=\"https://s2.51cto.com/images/20200912/1599890567689303.jpg\" title=\"1599890567689303.jpg\" alt=\"1.jpg\"/><br/><p>项目组经讨论确定以数据流图作为本阶段的建模手段。工程师老王详细说明了流程图和数据流图之间的区别与联系，并指出了上图所示数据流图中存在的错误。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "【问题二】<br/><p>如图所示的数据流图中存在的错误有以下4种：</p><p>(1) “分类训练”加工：只有输入没有输出，产生数据黑洞；</p><p>(2) “分类处理”加工：只有输出没有输入，无中生有；</p><p>(3) “规则文件”数据流：外部实体没有经过加工处理，直接到数据存储；</p><p>(4) “配置信息”数据流：外部实体之间没有加工处理，存在直接数据流。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 281378,
    "question_title": "<p>[问题3]（6分）</p><p>高质量的数据流图是可读的、内部一致的并能够准确表示系统需求。请用300字以内文字说明在设计高质量的数据流图时应考虑的三个原则。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "【问题三】<br/><p>高质量数据流图设计时应考虑的三个原则：</p><p>(1) 复杂性最小化原则。DFD分层结构就是把信息划分为小的且相对独立的一大批子集例子，这样就可以单独考查每一个DFD。如果要了解某个过程更加详细的信息，可以跳转到该过程的下一层；如果要知道一个DFD如何与其他DFD相关联，可以跳转到上一层的DFD进行考查。</p><p>(2) 接口最小化原则。接口最小化是复杂性最小化的一种具体规则，在设计模型时，应使得模型中各个元素之间的接口数或连接数最小化。</p><p>(3) 数据流一致性原则。一个过程和它的过程分解在数据流内容中是否有差别 是否存在有数据流出但没有相应的数据流入的加工 是否存在有数据流入但没有相应的数据流出的加工。</p><p>以上所有答案意思表达正确即可。<span style=\"font-size: 16px;\"></span></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 86,
      "belong_page": 1,
      "question_id": 281378,
      "question_title": "<p>[问题3]（6分）</p><p>高质量的数据流图是可读的、内部一致的并能够准确表示系统需求。请用300字以内文字说明在设计高质量的数据流图时应考虑的三个原则。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 281375,
      "score_rule": "",
      "material_text": "<p>试题二（25分）</p><p>某公司拟开发一个商业情报处理系统，使公司能够及时针对市场环境的变化及时调整发展战略，以获取最大的商业利益。项目组经过讨论，决定采用结构化分析和设计方法。在系统分析阶段，为了更好地对情报数据处理流程及其与外部角色的关联进行建模，项目组成员分别给出了自己的设计思路：<br/>(1) 小张提出先构建系统流程图(System Flowcharts)，以便更精确地反映系统的业务处理过程及数据的输入和输出。<br/>(2) 小李提出先构建系统数据流图(Data Flow Diagrams)，来展现系统的处理过程和定义业务功能边界，并给出了情报分类子系统的0层和1层数据流图，后者如下图所示。</p><img src=\"https://s2.51cto.com/images/20200912/1599890567689303.jpg\" title=\"1599890567689303.jpg\" alt=\"1.jpg\"/><br/><p>项目组经讨论确定以数据流图作为本阶段的建模手段。工程师老王详细说明了流程图和数据流图之间的区别与联系，并指出了上图所示数据流图中存在的错误。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "【问题三】<br/><p>高质量数据流图设计时应考虑的三个原则：</p><p>(1) 复杂性最小化原则。DFD分层结构就是把信息划分为小的且相对独立的一大批子集例子，这样就可以单独考查每一个DFD。如果要了解某个过程更加详细的信息，可以跳转到该过程的下一层；如果要知道一个DFD如何与其他DFD相关联，可以跳转到上一层的DFD进行考查。</p><p>(2) 接口最小化原则。接口最小化是复杂性最小化的一种具体规则，在设计模型时，应使得模型中各个元素之间的接口数或连接数最小化。</p><p>(3) 数据流一致性原则。一个过程和它的过程分解在数据流内容中是否有差别 是否存在有数据流出但没有相应的数据流入的加工 是否存在有数据流入但没有相应的数据流出的加工。</p><p>以上所有答案意思表达正确即可。<span style=\"font-size: 16px;\"></span></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 284738,
    "question_title": "<p>【问题 1】（15分）</p><p>根据说明中的描述，给出图 3－1 中 A1～A4 所对应的参与者名称。</p><p>根据说明中的描述及表 3－1，给出图 3－1 中 U1－U5 所对应的用例名称。</p><p>根据说明中的描述，给出图 3－2 中 C1~C6 所对应的类名。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题 1】（15分）</p><p>参与者：</p><p>A1:Central system/Driver</p><p>A2:Driver/Central system</p><p>A3:Regional center/Traffic advice center</p><p>A4:Traffic advice center/Regional center</p><p>用例：</p><p>U1:Underpaid transaction/Record Illegal use</p><p>U2:Record Illegal use/Underpaid transaction</p><p>U3:Create transaction</p><p>U4:Record traffic event</p><p>U5:Charge card</p><p>类：</p><p>C1:Center system</p><p>C2: Toll gantry</p><p>C3: Traffic lanes</p><p>C4:Radar sensor/Radio transceiver/Digital Camera</p><p>C5:Radio transceiver/Radar sensor/Digital Camera</p><p>C6: Digital Camera/Radar sensor/Radio transceiver</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 87,
      "belong_page": 1,
      "question_id": 284738,
      "question_title": "<p>【问题 1】（15分）</p><p>根据说明中的描述，给出图 3－1 中 A1～A4 所对应的参与者名称。</p><p>根据说明中的描述及表 3－1，给出图 3－1 中 U1－U5 所对应的用例名称。</p><p>根据说明中的描述，给出图 3－2 中 C1~C6 所对应的类名。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 284737,
      "score_rule": "",
      "material_text": "<p style=\"margin-top:20px;text-indent:28px\">试题二（25分）</p><p>&nbsp;阅读下列说明，回答问题 1 至问题 3，将解答填入答题纸的对应栏内。</p><p>【说明】</p><p>某 ETC（ Electronic Toll Collection，不停车收费）系统在高速公路沿线的特</p><p>定位置上设置一个横跨道路上空的龙门架（ Toll gantry），龙门架下包括 6条车道（ Trafficlanes），每条车道上安装有雷达传感器（ Radar sensor）、无线传输器（ Radio transceiver）</p><p>和数码相机（ Digital Camera）等用于不停车收费的设备，以完成正常行驶速度下的收费工作。该系统的基本工作过程如下：</p><p>（1）每辆汽车上安装有车载器，驾驶员（ Driver）将一张具有唯一识别码的磁卡插入车载器中。磁卡中还包含有驾驶员账户的当前信用记录。</p><p>（2）当汽车通过某条车道时，不停车收费设备识别车载器内的特有编码，判断车型，</p><p>将收集到的相关信息发送到该路段所属的区域系统（ Regional center）中，计算通行费用创建收费交易（ Transaction），从驾驶员的专用账户中扣除通行费用。如果驾驶员账户透</p><p>支，则记录透支账户交易信息。区域系统再将交易后的账户信息发送到维护驾驶员账户信息</p><p>的中心系统（ Central system）</p><p>（3）车载器中的磁卡可以使用邮局的付款机进行充值。充值信息会传送至中心系统，以更新驾驶员账户的余额。</p><p>（4）当没有安装车载器或者车载器发生故障的车辆通过车道时，车道上的数码相机将对车辆进行拍照，并将车辆照片及拍摄时间发送到区域系统，记录失败的交易信息；并将该交易信息发送到中心系统。</p><p>（5）区域系统会获取不停车收费设备所记录的交通事件（ Traffic events）；交</p><p>通广播电台（ Traffic advice center）根据这些交通事件进行路况分析并播报路况。</p><p>现采用面向对象方法对上述系统进行分析与设计，得到如表 3－1 所示的用例列</p><p>表以及如图 3－1 所示的用例图和图 3－2 所示的分析类图。<br/><img src=\"https://s2.51cto.com/images/20201014/1602646057768296.jpg\" title=\"1602646057768296.jpg\" alt=\"1.jpg\"/><br/><img src=\"https://s2.51cto.com/images/20201014/1602646060888111.jpg\" title=\"1602646060888111.jpg\" alt=\"2.jpg\"/></p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题 1】（15分）</p><p>参与者：</p><p>A1:Central system/Driver</p><p>A2:Driver/Central system</p><p>A3:Regional center/Traffic advice center</p><p>A4:Traffic advice center/Regional center</p><p>用例：</p><p>U1:Underpaid transaction/Record Illegal use</p><p>U2:Record Illegal use/Underpaid transaction</p><p>U3:Create transaction</p><p>U4:Record traffic event</p><p>U5:Charge card</p><p>类：</p><p>C1:Center system</p><p>C2: Toll gantry</p><p>C3: Traffic lanes</p><p>C4:Radar sensor/Radio transceiver/Digital Camera</p><p>C5:Radio transceiver/Radar sensor/Digital Camera</p><p>C6: Digital Camera/Radar sensor/Radio transceiver</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 284739,
    "question_title": "<p>【问题2】 (6分)</p><p>用例图包括哪几个基本元素，并用300字以内的文字进行简要说明。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题2】 (6分)</p><p>（1）参与者。参与者是指存在于系统外部并与系统进行交互的任何事物，既可以是使用系统的用户，也可以是其他外部系统和设备等外部实体。</p><p>（2）用例。用例表示系统所提供的服务，它定义了系统是如何被参与者所使用的，它描述的是参与者为了使用系统所提供的某一完整功能而与系统之间发生的一段对话。</p><p>（3）通信关联。通信关联表示的是参与者和用例之间的关系，或用例与用例之间的关系。箭头表示在这一关系中哪一方是对话的主动发起者，箭头所指方是对话的被动接受者，箭尾所指方是对话的主动发起者。如果不想强调对话中的主动与被动关系，可以使用不带箭头的关联实线。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 88,
      "belong_page": 1,
      "question_id": 284739,
      "question_title": "<p>【问题2】 (6分)</p><p>用例图包括哪几个基本元素，并用300字以内的文字进行简要说明。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 284737,
      "score_rule": "",
      "material_text": "<p style=\"margin-top:20px;text-indent:28px\">试题二（25分）</p><p>&nbsp;阅读下列说明，回答问题 1 至问题 3，将解答填入答题纸的对应栏内。</p><p>【说明】</p><p>某 ETC（ Electronic Toll Collection，不停车收费）系统在高速公路沿线的特</p><p>定位置上设置一个横跨道路上空的龙门架（ Toll gantry），龙门架下包括 6条车道（ Trafficlanes），每条车道上安装有雷达传感器（ Radar sensor）、无线传输器（ Radio transceiver）</p><p>和数码相机（ Digital Camera）等用于不停车收费的设备，以完成正常行驶速度下的收费工作。该系统的基本工作过程如下：</p><p>（1）每辆汽车上安装有车载器，驾驶员（ Driver）将一张具有唯一识别码的磁卡插入车载器中。磁卡中还包含有驾驶员账户的当前信用记录。</p><p>（2）当汽车通过某条车道时，不停车收费设备识别车载器内的特有编码，判断车型，</p><p>将收集到的相关信息发送到该路段所属的区域系统（ Regional center）中，计算通行费用创建收费交易（ Transaction），从驾驶员的专用账户中扣除通行费用。如果驾驶员账户透</p><p>支，则记录透支账户交易信息。区域系统再将交易后的账户信息发送到维护驾驶员账户信息</p><p>的中心系统（ Central system）</p><p>（3）车载器中的磁卡可以使用邮局的付款机进行充值。充值信息会传送至中心系统，以更新驾驶员账户的余额。</p><p>（4）当没有安装车载器或者车载器发生故障的车辆通过车道时，车道上的数码相机将对车辆进行拍照，并将车辆照片及拍摄时间发送到区域系统，记录失败的交易信息；并将该交易信息发送到中心系统。</p><p>（5）区域系统会获取不停车收费设备所记录的交通事件（ Traffic events）；交</p><p>通广播电台（ Traffic advice center）根据这些交通事件进行路况分析并播报路况。</p><p>现采用面向对象方法对上述系统进行分析与设计，得到如表 3－1 所示的用例列</p><p>表以及如图 3－1 所示的用例图和图 3－2 所示的分析类图。<br/><img src=\"https://s2.51cto.com/images/20201014/1602646057768296.jpg\" title=\"1602646057768296.jpg\" alt=\"1.jpg\"/><br/><img src=\"https://s2.51cto.com/images/20201014/1602646060888111.jpg\" title=\"1602646060888111.jpg\" alt=\"2.jpg\"/></p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题2】 (6分)</p><p>（1）参与者。参与者是指存在于系统外部并与系统进行交互的任何事物，既可以是使用系统的用户，也可以是其他外部系统和设备等外部实体。</p><p>（2）用例。用例表示系统所提供的服务，它定义了系统是如何被参与者所使用的，它描述的是参与者为了使用系统所提供的某一完整功能而与系统之间发生的一段对话。</p><p>（3）通信关联。通信关联表示的是参与者和用例之间的关系，或用例与用例之间的关系。箭头表示在这一关系中哪一方是对话的主动发起者，箭头所指方是对话的被动接受者，箭尾所指方是对话的主动发起者。如果不想强调对话中的主动与被动关系，可以使用不带箭头的关联实线。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 284740,
    "question_title": "<p>【问题 3】（4分）</p><p>在OOA方法中，构建用例模型一般需要经历几个阶段。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题 3】（4分）</p><p>在OOA方法中，构建用例模型一般需要经历4个阶段，分别是识别参与者、合并需求获得用例、细化用例描述和调整用例模型，其中前三个阶段是必需的。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 89,
      "belong_page": 1,
      "question_id": 284740,
      "question_title": "<p>【问题 3】（4分）</p><p>在OOA方法中，构建用例模型一般需要经历几个阶段。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 284737,
      "score_rule": "",
      "material_text": "<p style=\"margin-top:20px;text-indent:28px\">试题二（25分）</p><p>&nbsp;阅读下列说明，回答问题 1 至问题 3，将解答填入答题纸的对应栏内。</p><p>【说明】</p><p>某 ETC（ Electronic Toll Collection，不停车收费）系统在高速公路沿线的特</p><p>定位置上设置一个横跨道路上空的龙门架（ Toll gantry），龙门架下包括 6条车道（ Trafficlanes），每条车道上安装有雷达传感器（ Radar sensor）、无线传输器（ Radio transceiver）</p><p>和数码相机（ Digital Camera）等用于不停车收费的设备，以完成正常行驶速度下的收费工作。该系统的基本工作过程如下：</p><p>（1）每辆汽车上安装有车载器，驾驶员（ Driver）将一张具有唯一识别码的磁卡插入车载器中。磁卡中还包含有驾驶员账户的当前信用记录。</p><p>（2）当汽车通过某条车道时，不停车收费设备识别车载器内的特有编码，判断车型，</p><p>将收集到的相关信息发送到该路段所属的区域系统（ Regional center）中，计算通行费用创建收费交易（ Transaction），从驾驶员的专用账户中扣除通行费用。如果驾驶员账户透</p><p>支，则记录透支账户交易信息。区域系统再将交易后的账户信息发送到维护驾驶员账户信息</p><p>的中心系统（ Central system）</p><p>（3）车载器中的磁卡可以使用邮局的付款机进行充值。充值信息会传送至中心系统，以更新驾驶员账户的余额。</p><p>（4）当没有安装车载器或者车载器发生故障的车辆通过车道时，车道上的数码相机将对车辆进行拍照，并将车辆照片及拍摄时间发送到区域系统，记录失败的交易信息；并将该交易信息发送到中心系统。</p><p>（5）区域系统会获取不停车收费设备所记录的交通事件（ Traffic events）；交</p><p>通广播电台（ Traffic advice center）根据这些交通事件进行路况分析并播报路况。</p><p>现采用面向对象方法对上述系统进行分析与设计，得到如表 3－1 所示的用例列</p><p>表以及如图 3－1 所示的用例图和图 3－2 所示的分析类图。<br/><img src=\"https://s2.51cto.com/images/20201014/1602646057768296.jpg\" title=\"1602646057768296.jpg\" alt=\"1.jpg\"/><br/><img src=\"https://s2.51cto.com/images/20201014/1602646060888111.jpg\" title=\"1602646060888111.jpg\" alt=\"2.jpg\"/></p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题 3】（4分）</p><p>在OOA方法中，构建用例模型一般需要经历4个阶段，分别是识别参与者、合并需求获得用例、细化用例描述和调整用例模型，其中前三个阶段是必需的。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 303759,
    "question_title": "<p>试题一 &nbsp;论软件设计方法及其应用</p><p>软件设计（Software Design，SD)根据软件需求规格说明书设计软件系统的整体结构、划分功能模块、确定每个模块的实现算法以及程序流程等，形成软件的具体设计方案。软件设计把许多事物和问题按不同的层次和角度进行抽象，将问题或事物进行模块化分解，以便更容易解决问题。分解得越细，模块数量也就越多，设计者需要考虑模块之间的耦合度。</p><p>&nbsp;</p><p>请围绕“论软件设计方法及其应用”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你所参与管理或开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.详细阐述有哪些不同的软件设计方法，并说明每种方法的适用场景。</p><p>3.详细说明你所参与的软件开发项目中，使用了哪种软件设计方法，具体实施效果如何。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>1．简要描述所参与设计的软件系统，并明确指出在系统设计过程种承担的主要工作。</p><p>2．分析系统设计的主要方法，并详细阐述每种设计方法。</p><p>1) 净室方法</p><p>净室软件工程(净室方法)是软件开发的一种形式化方法,它可以生成高质量的软件。它使用盒结构规约进行分析和设计建模,并且强调将正确性验证(而不是测试)作为发现和消除错误的主要机制,使用统计的测试来获取认证被交付的软件的可靠性所必需的出错率信息。</p><p>净室方法从使用盒结构表示的分析和设计模型入手,一个“盒”在某特定的抽象层次上封装系统(或系统的某些方面)。通过逐步求精的过程,盒被精化为层次,其中每个盒具有引用透明性:每个盒规约的信息内容对定义其精华是足够的,不需要信赖于任何其他盒的实现。这使得分析人员能够层次地划分一个系统,从在顶层的本质表示转移向在底层的实现特定的细节。净室方法主要使用三种盒类型：黑盒、状态盒和清晰盒。</p><p>净室方法是一种严格的软件工程方法,它是一种强调正确性的数学验证和软件可靠性认证的软件过程模型,其目标和结果是非常低的出错率,这是使用非形式化方法难于或不可能达到的。</p><p>2)&nbsp;结构化设计</p><p>结构化方法由结构化分析、结构化设计、结构化程序设计构成，它是一种面向数据流的开发方法。结构化分析是根据分解与抽象的原则，按照系统中数据处理的流程，用数据流图来建立系统的功能模型，从而完成需求分析工作。</p><p>①&nbsp;结构化设计原则</p><p>②&nbsp;结构化设计步骤</p><p>③ 结构化缺点</p><p>在结构化设计中，模块和模块之间的关系局限于信息流，限制了对模块之间众多关系的表达，也无法体现模块和模块之间其他的众多关系，包含各种各样的结构、行为、依赖、包含（在结构化设计中这种关系隐含在分层中）、继承、关联关系等等。结构化设计仅解决了模块在封装和信息隐藏方面的问题。</p><p>④ 结构化设计适合场景</p><p>3) 面向对象设计</p><p>面向对象的设计模型包含以包图表示的软件体系结构图、以交互图表示的用例实现图、完整精确的类图、针对复杂对象的状态图和用以描述流程化处理过程的活动图等。</p><p>①&nbsp;UML与4+1视图</p><p>②&nbsp;设计原则</p><p>③ 设计模式</p><p>④ 面向对象设计适合场景</p><p>4) 原型法</p><p>结构化方法和面向对象方法有一个共同点：在系统开发初期必须明确系统的功能要求，确定系统边界。从工程学角度来看，这是十分自然的：解决问题之前必须明确要解决的问题是什么，然而对于信息系统建设而言，明确问题本身不是一件轻松的事情。</p><p>①&nbsp;原型分类</p><p>水平原型和垂直原型，抛弃原型、演进原型和递增原型</p><p>②&nbsp;原型类型的选择</p><p>③ 原型法适合场景</p><p>3．结合项目实践。针对实际参与的软件设计过程，说明所采用的设计方法，并描述其具体实施过程和效果。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 90,
      "belong_page": 1,
      "question_id": 303759,
      "question_title": "<p>试题一 &nbsp;论软件设计方法及其应用</p><p>软件设计（Software Design，SD)根据软件需求规格说明书设计软件系统的整体结构、划分功能模块、确定每个模块的实现算法以及程序流程等，形成软件的具体设计方案。软件设计把许多事物和问题按不同的层次和角度进行抽象，将问题或事物进行模块化分解，以便更容易解决问题。分解得越细，模块数量也就越多，设计者需要考虑模块之间的耦合度。</p><p>&nbsp;</p><p>请围绕“论软件设计方法及其应用”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你所参与管理或开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.详细阐述有哪些不同的软件设计方法，并说明每种方法的适用场景。</p><p>3.详细说明你所参与的软件开发项目中，使用了哪种软件设计方法，具体实施效果如何。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 303759,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>1．简要描述所参与设计的软件系统，并明确指出在系统设计过程种承担的主要工作。</p><p>2．分析系统设计的主要方法，并详细阐述每种设计方法。</p><p>1) 净室方法</p><p>净室软件工程(净室方法)是软件开发的一种形式化方法,它可以生成高质量的软件。它使用盒结构规约进行分析和设计建模,并且强调将正确性验证(而不是测试)作为发现和消除错误的主要机制,使用统计的测试来获取认证被交付的软件的可靠性所必需的出错率信息。</p><p>净室方法从使用盒结构表示的分析和设计模型入手,一个“盒”在某特定的抽象层次上封装系统(或系统的某些方面)。通过逐步求精的过程,盒被精化为层次,其中每个盒具有引用透明性:每个盒规约的信息内容对定义其精华是足够的,不需要信赖于任何其他盒的实现。这使得分析人员能够层次地划分一个系统,从在顶层的本质表示转移向在底层的实现特定的细节。净室方法主要使用三种盒类型：黑盒、状态盒和清晰盒。</p><p>净室方法是一种严格的软件工程方法,它是一种强调正确性的数学验证和软件可靠性认证的软件过程模型,其目标和结果是非常低的出错率,这是使用非形式化方法难于或不可能达到的。</p><p>2)&nbsp;结构化设计</p><p>结构化方法由结构化分析、结构化设计、结构化程序设计构成，它是一种面向数据流的开发方法。结构化分析是根据分解与抽象的原则，按照系统中数据处理的流程，用数据流图来建立系统的功能模型，从而完成需求分析工作。</p><p>①&nbsp;结构化设计原则</p><p>②&nbsp;结构化设计步骤</p><p>③ 结构化缺点</p><p>在结构化设计中，模块和模块之间的关系局限于信息流，限制了对模块之间众多关系的表达，也无法体现模块和模块之间其他的众多关系，包含各种各样的结构、行为、依赖、包含（在结构化设计中这种关系隐含在分层中）、继承、关联关系等等。结构化设计仅解决了模块在封装和信息隐藏方面的问题。</p><p>④ 结构化设计适合场景</p><p>3) 面向对象设计</p><p>面向对象的设计模型包含以包图表示的软件体系结构图、以交互图表示的用例实现图、完整精确的类图、针对复杂对象的状态图和用以描述流程化处理过程的活动图等。</p><p>①&nbsp;UML与4+1视图</p><p>②&nbsp;设计原则</p><p>③ 设计模式</p><p>④ 面向对象设计适合场景</p><p>4) 原型法</p><p>结构化方法和面向对象方法有一个共同点：在系统开发初期必须明确系统的功能要求，确定系统边界。从工程学角度来看，这是十分自然的：解决问题之前必须明确要解决的问题是什么，然而对于信息系统建设而言，明确问题本身不是一件轻松的事情。</p><p>①&nbsp;原型分类</p><p>水平原型和垂直原型，抛弃原型、演进原型和递增原型</p><p>②&nbsp;原型类型的选择</p><p>③ 原型法适合场景</p><p>3．结合项目实践。针对实际参与的软件设计过程，说明所采用的设计方法，并描述其具体实施过程和效果。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 309531,
    "question_title": "【问题 1】（8 分） 使用说明中的词语，给出图 1－1 中的实体 E1～E3 的名称。&nbsp;",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "【问题,1】E1：客户,&nbsp;E2：医生,&nbsp;E3：主管"
    ],
    "analysis": "",
    "raw_data": {
      "index": 91,
      "belong_page": 1,
      "question_id": 309531,
      "question_title": "【问题 1】（8 分） 使用说明中的词语，给出图 1－1 中的实体 E1～E3 的名称。&nbsp;",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 309530,
      "score_rule": "",
      "material_text": "<p>试题二（共25分）</p><p>阅读下列说明，回答问题 1 至问题 4，将解答填入答题纸的对应栏内。</p><p>【说明】</p><p>某医疗护理机构为老年人或有护理需求者提供专业护理，现欲开发一基于 web 的医疗管理系统，以改善医疗护理效率，该系统的主要要功能如下：</p><p>（1）通用信息查询，客户提交通用信息查询请求，查询通用信息表，返回查询结果。</p><p>（2）医生聘用。医生提出应聘／辞职申请，交由主管进行聘用/解聘审批，更新医生表，并给医生反馈聘用/解聘结果：删除解聘医生的出诊安排。</p><p>（3）预约处理。医生安排出诊时间，存入医生出诊时间表，根据客户提交的预约查询请求，查询在职医生及其出诊时间等预约所需数据并返回：创建预约，提交预约请求，在预约表中新增预约记录，更新所约医生出诊时间并给医生发送预约通知；给客户反馈预约结果。</p><p>（4）药品管理。医生提交处方，根据药品名称从药品数据中查询相关药品库存信息，开出药品，更新对应药品的库存以及预约表中的治疗信息；给医生发送“药品已开出”反馈。</p><p>（5）报表创建。根据主管提交的报表查询请求（报表类型和时间段），从预约数据、通用信息、药品库存数据、医生以及医生出诊时间中进行查询，生成报表返回给主管。</p><p>现采用结构化方法对医疗管理系统进行分析与设计，获得如图 1-1 所示的上下文数据流图和图 1-2 所示的 0 层数据流图。<br/><img src=\"https://s2.51cto.com/images/20210913/1631463264880944.jpg\" title=\"1631463264880944.jpg\" alt=\"1.jpg\"/><img src=\"https://s2.51cto.com/images/20210913/1631463277844925.jpg\" title=\"1631463277844925.jpg\" alt=\"1.jpg\"/></p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "【问题,1】E1：客户,&nbsp;E2：医生,&nbsp;E3：主管"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 309532,
    "question_title": "【问题 2】（5 分） 使用说明中的词语，给出图 1－2 中的数据存储 D1～D5 的名称。",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题,2】D1：通用信息表,&nbsp;D2：预约表,&nbsp;,D3：在职医生表,&nbsp;,&nbsp;D4：出诊时间表</p><p>&nbsp;,&nbsp;,&nbsp;,&nbsp;,&nbsp;,D5：药品库存信息表</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 92,
      "belong_page": 1,
      "question_id": 309532,
      "question_title": "【问题 2】（5 分） 使用说明中的词语，给出图 1－2 中的数据存储 D1～D5 的名称。",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 309530,
      "score_rule": "",
      "material_text": "<p>试题二（共25分）</p><p>阅读下列说明，回答问题 1 至问题 4，将解答填入答题纸的对应栏内。</p><p>【说明】</p><p>某医疗护理机构为老年人或有护理需求者提供专业护理，现欲开发一基于 web 的医疗管理系统，以改善医疗护理效率，该系统的主要要功能如下：</p><p>（1）通用信息查询，客户提交通用信息查询请求，查询通用信息表，返回查询结果。</p><p>（2）医生聘用。医生提出应聘／辞职申请，交由主管进行聘用/解聘审批，更新医生表，并给医生反馈聘用/解聘结果：删除解聘医生的出诊安排。</p><p>（3）预约处理。医生安排出诊时间，存入医生出诊时间表，根据客户提交的预约查询请求，查询在职医生及其出诊时间等预约所需数据并返回：创建预约，提交预约请求，在预约表中新增预约记录，更新所约医生出诊时间并给医生发送预约通知；给客户反馈预约结果。</p><p>（4）药品管理。医生提交处方，根据药品名称从药品数据中查询相关药品库存信息，开出药品，更新对应药品的库存以及预约表中的治疗信息；给医生发送“药品已开出”反馈。</p><p>（5）报表创建。根据主管提交的报表查询请求（报表类型和时间段），从预约数据、通用信息、药品库存数据、医生以及医生出诊时间中进行查询，生成报表返回给主管。</p><p>现采用结构化方法对医疗管理系统进行分析与设计，获得如图 1-1 所示的上下文数据流图和图 1-2 所示的 0 层数据流图。<br/><img src=\"https://s2.51cto.com/images/20210913/1631463264880944.jpg\" title=\"1631463264880944.jpg\" alt=\"1.jpg\"/><img src=\"https://s2.51cto.com/images/20210913/1631463277844925.jpg\" title=\"1631463277844925.jpg\" alt=\"1.jpg\"/></p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题,2】D1：通用信息表,&nbsp;D2：预约表,&nbsp;,D3：在职医生表,&nbsp;,&nbsp;D4：出诊时间表</p><p>&nbsp;,&nbsp;,&nbsp;,&nbsp;,&nbsp;,D5：药品库存信息表</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 309533,
    "question_title": "【问题 3】（8分） 使用说明和图中术语，补充图 1－2 中缺失的数据流及其起点和终点。&nbsp;",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题,3】<br/>数据流名称：删除解聘医生的预约信息，起点：P2，终点：D2</p><p>数据流名称：删除解聘医生的出诊安排，起点：P2，终点：D4</p><p>数据流名称：查询相关药品库存信息，起点：D5，终点：P4</p><p>数据流名称：更新预约治疗信息，起点：P4，终点：D2</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 93,
      "belong_page": 1,
      "question_id": 309533,
      "question_title": "【问题 3】（8分） 使用说明和图中术语，补充图 1－2 中缺失的数据流及其起点和终点。&nbsp;",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 309530,
      "score_rule": "",
      "material_text": "<p>试题二（共25分）</p><p>阅读下列说明，回答问题 1 至问题 4，将解答填入答题纸的对应栏内。</p><p>【说明】</p><p>某医疗护理机构为老年人或有护理需求者提供专业护理，现欲开发一基于 web 的医疗管理系统，以改善医疗护理效率，该系统的主要要功能如下：</p><p>（1）通用信息查询，客户提交通用信息查询请求，查询通用信息表，返回查询结果。</p><p>（2）医生聘用。医生提出应聘／辞职申请，交由主管进行聘用/解聘审批，更新医生表，并给医生反馈聘用/解聘结果：删除解聘医生的出诊安排。</p><p>（3）预约处理。医生安排出诊时间，存入医生出诊时间表，根据客户提交的预约查询请求，查询在职医生及其出诊时间等预约所需数据并返回：创建预约，提交预约请求，在预约表中新增预约记录，更新所约医生出诊时间并给医生发送预约通知；给客户反馈预约结果。</p><p>（4）药品管理。医生提交处方，根据药品名称从药品数据中查询相关药品库存信息，开出药品，更新对应药品的库存以及预约表中的治疗信息；给医生发送“药品已开出”反馈。</p><p>（5）报表创建。根据主管提交的报表查询请求（报表类型和时间段），从预约数据、通用信息、药品库存数据、医生以及医生出诊时间中进行查询，生成报表返回给主管。</p><p>现采用结构化方法对医疗管理系统进行分析与设计，获得如图 1-1 所示的上下文数据流图和图 1-2 所示的 0 层数据流图。<br/><img src=\"https://s2.51cto.com/images/20210913/1631463264880944.jpg\" title=\"1631463264880944.jpg\" alt=\"1.jpg\"/><img src=\"https://s2.51cto.com/images/20210913/1631463277844925.jpg\" title=\"1631463277844925.jpg\" alt=\"1.jpg\"/></p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题,3】<br/>数据流名称：删除解聘医生的预约信息，起点：P2，终点：D2</p><p>数据流名称：删除解聘医生的出诊安排，起点：P2，终点：D4</p><p>数据流名称：查询相关药品库存信息，起点：D5，终点：P4</p><p>数据流名称：更新预约治疗信息，起点：P4，终点：D2</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 309534,
    "question_title": "【问题 4】（4分） 使用说明中的词语，说明“预约处理”可以分解为哪些子加工，并说明建模 图 1－1 和图 1－2 是如何保持数据流图平衡。",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题,4】</p><p>“预约处理”可以分为预约就诊、安排出诊时间两个子加工。</p><p>父图与子图要在数据流的数量与流向上保持一致。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 94,
      "belong_page": 1,
      "question_id": 309534,
      "question_title": "【问题 4】（4分） 使用说明中的词语，说明“预约处理”可以分解为哪些子加工，并说明建模 图 1－1 和图 1－2 是如何保持数据流图平衡。",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 309530,
      "score_rule": "",
      "material_text": "<p>试题二（共25分）</p><p>阅读下列说明，回答问题 1 至问题 4，将解答填入答题纸的对应栏内。</p><p>【说明】</p><p>某医疗护理机构为老年人或有护理需求者提供专业护理，现欲开发一基于 web 的医疗管理系统，以改善医疗护理效率，该系统的主要要功能如下：</p><p>（1）通用信息查询，客户提交通用信息查询请求，查询通用信息表，返回查询结果。</p><p>（2）医生聘用。医生提出应聘／辞职申请，交由主管进行聘用/解聘审批，更新医生表，并给医生反馈聘用/解聘结果：删除解聘医生的出诊安排。</p><p>（3）预约处理。医生安排出诊时间，存入医生出诊时间表，根据客户提交的预约查询请求，查询在职医生及其出诊时间等预约所需数据并返回：创建预约，提交预约请求，在预约表中新增预约记录，更新所约医生出诊时间并给医生发送预约通知；给客户反馈预约结果。</p><p>（4）药品管理。医生提交处方，根据药品名称从药品数据中查询相关药品库存信息，开出药品，更新对应药品的库存以及预约表中的治疗信息；给医生发送“药品已开出”反馈。</p><p>（5）报表创建。根据主管提交的报表查询请求（报表类型和时间段），从预约数据、通用信息、药品库存数据、医生以及医生出诊时间中进行查询，生成报表返回给主管。</p><p>现采用结构化方法对医疗管理系统进行分析与设计，获得如图 1-1 所示的上下文数据流图和图 1-2 所示的 0 层数据流图。<br/><img src=\"https://s2.51cto.com/images/20210913/1631463264880944.jpg\" title=\"1631463264880944.jpg\" alt=\"1.jpg\"/><img src=\"https://s2.51cto.com/images/20210913/1631463277844925.jpg\" title=\"1631463277844925.jpg\" alt=\"1.jpg\"/></p>",
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题,4】</p><p>“预约处理”可以分为预约就诊、安排出诊时间两个子加工。</p><p>父图与子图要在数据流的数量与流向上保持一致。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 313000,
    "question_title": "<p>【问题1】（5分）</p><p>流程图和数据流图是软件系统分析设计中常用的两种手段，请用300字以内文字简要说明流程图与数据流图的含义及其区别，并说明项目组为何确定采用数据流图作为建模手段。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题1】</p><p>数据流图作为一种图形化工具，用来说明业务处理过程、系统边界内所包含的功能和系统中的数据流。</p><p>流程图以图形化的方式展示应用程序从数据输入开始到获得输出为止的逻辑过程，描述处理过程的控制流。</p><p>两者的区别主要包括：</p><p>（1）数据流图中的处理过程可并行；流程图在某个时间点只能处于一个处理过程。</p><p>（2）数据流图展现系统的数据流；流程图展现系统的控制流。</p><p>（3）数据流图展现全局的处理过程，过程之间遵循不同的计时标准；流程图中处理过程遵循一致的计时标准。</p><p>（4）数据流图适用于系统分析中的逻辑建模阶段；流程图适用于系统设计中的物理模阶段。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 95,
      "belong_page": 1,
      "question_id": 313000,
      "question_title": "<p>【问题1】（5分）</p><p>流程图和数据流图是软件系统分析设计中常用的两种手段，请用300字以内文字简要说明流程图与数据流图的含义及其区别，并说明项目组为何确定采用数据流图作为建模手段。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 312999,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（15分）</p><p>某公司拟开发一个商业情报处理系统，使公司能够及时针对市场环境的变化及时调整发展战略，以获取最大的商业利益。项目组经过讨论，决定采用结构化分析和设计方法。在系统分析阶段，为了更好地对情报数据处理流程及其与外部角色的关联进行建模，项目组成员分别给出了自己的设计思路：<br/>（1）小张提出先构建系统流程图（System Flowcharts），以便更精确地反映系统的业务处理过程及数据的输入和输出；<br/>（2）小李提出先构建系统数据流图（Data Flow Diagrams），来展现系统的处理过程和定义业务功能边界，并给出了情报分类子系统的0层和1层数据流图，后者如图2-1所示。<br/><img src=\"https://s2.51cto.com/images/20211014/1634142945425189.jpg\" title=\"1634142945425189.jpg\" alt=\"1.jpg\"/><br/>项目组经讨论确定以数据流图作为本阶段的建模手段。工程师老王详细说明了流程图和数据流图之间的区别与联系，并指出了图2-1的数据流图中存在的错误。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题1】</p><p>数据流图作为一种图形化工具，用来说明业务处理过程、系统边界内所包含的功能和系统中的数据流。</p><p>流程图以图形化的方式展示应用程序从数据输入开始到获得输出为止的逻辑过程，描述处理过程的控制流。</p><p>两者的区别主要包括：</p><p>（1）数据流图中的处理过程可并行；流程图在某个时间点只能处于一个处理过程。</p><p>（2）数据流图展现系统的数据流；流程图展现系统的控制流。</p><p>（3）数据流图展现全局的处理过程，过程之间遵循不同的计时标准；流程图中处理过程遵循一致的计时标准。</p><p>（4）数据流图适用于系统分析中的逻辑建模阶段；流程图适用于系统设计中的物理模阶段。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 313001,
    "question_title": "<p>【问题2】（5分）</p><p>请分析指出图2-1所示的数据流图中存在的错误及其原因，并针对图2-1的1层数据流图绘制出情报分类子系统的0层数据流图。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题2】</p><p>如图所示的数据流图中存在的错误有以下4种：</p><p>（1）“分类训练”加工：只有输入没有输出，产生数据黑洞；</p><p>（2）“分类处理”加工：有输出没有输入，无中生有；</p><p>（3）“规则文件”数据流：外部实体没有经过加工处理，直接到数据存储；</p><p>（4）“配置信息”数据流：外部实体之间没有加工处理，存在直接数据流<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211014/1634142997644995.jpg\" title=\"1634142997644995.jpg\" alt=\"1.jpg\"/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 96,
      "belong_page": 1,
      "question_id": 313001,
      "question_title": "<p>【问题2】（5分）</p><p>请分析指出图2-1所示的数据流图中存在的错误及其原因，并针对图2-1的1层数据流图绘制出情报分类子系统的0层数据流图。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 312999,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（15分）</p><p>某公司拟开发一个商业情报处理系统，使公司能够及时针对市场环境的变化及时调整发展战略，以获取最大的商业利益。项目组经过讨论，决定采用结构化分析和设计方法。在系统分析阶段，为了更好地对情报数据处理流程及其与外部角色的关联进行建模，项目组成员分别给出了自己的设计思路：<br/>（1）小张提出先构建系统流程图（System Flowcharts），以便更精确地反映系统的业务处理过程及数据的输入和输出；<br/>（2）小李提出先构建系统数据流图（Data Flow Diagrams），来展现系统的处理过程和定义业务功能边界，并给出了情报分类子系统的0层和1层数据流图，后者如图2-1所示。<br/><img src=\"https://s2.51cto.com/images/20211014/1634142945425189.jpg\" title=\"1634142945425189.jpg\" alt=\"1.jpg\"/><br/>项目组经讨论确定以数据流图作为本阶段的建模手段。工程师老王详细说明了流程图和数据流图之间的区别与联系，并指出了图2-1的数据流图中存在的错误。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题2】</p><p>如图所示的数据流图中存在的错误有以下4种：</p><p>（1）“分类训练”加工：只有输入没有输出，产生数据黑洞；</p><p>（2）“分类处理”加工：有输出没有输入，无中生有；</p><p>（3）“规则文件”数据流：外部实体没有经过加工处理，直接到数据存储；</p><p>（4）“配置信息”数据流：外部实体之间没有加工处理，存在直接数据流<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211014/1634142997644995.jpg\" title=\"1634142997644995.jpg\" alt=\"1.jpg\"/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 313002,
    "question_title": "<p>【问题3】（5分）</p><p>高质量的数据流图是可读的、内部一致的并能够准确表示系统需求。请用300字以内文字说明在设计高质量的数据流图时应考虑的三个原则。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题3】</p><p>高质量数据流图设计时应考虑的三个原则：</p><p>（1）复杂性最小化原则。DFD分层结构就是把信息划分为小的且相对独立的一大批子集例子，这样就可以单独考查每一个DFD。如果要了解某个过程更加详的信息，可以跳转到该过程的下一层；如果要知道一个DFD如何与其他DFD相关联，可以跳转到上一层的DFD进行考查。</p><p>（2）接口最小化原则。接口最小化是复杂性最小化的一种具体规则。在设计模式时，应使得模型中各个元素之间的接口数或连接数最小化。</p><p>（3）数据流一致性原则。一个过程和它的过程分解在数据流内容中是否有差别？是否存在有数据流出但没有相应的数据流入的加工？是否存在有数据流入但没有相应的数据流出的加工？</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 97,
      "belong_page": 1,
      "question_id": 313002,
      "question_title": "<p>【问题3】（5分）</p><p>高质量的数据流图是可读的、内部一致的并能够准确表示系统需求。请用300字以内文字说明在设计高质量的数据流图时应考虑的三个原则。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 312999,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（15分）</p><p>某公司拟开发一个商业情报处理系统，使公司能够及时针对市场环境的变化及时调整发展战略，以获取最大的商业利益。项目组经过讨论，决定采用结构化分析和设计方法。在系统分析阶段，为了更好地对情报数据处理流程及其与外部角色的关联进行建模，项目组成员分别给出了自己的设计思路：<br/>（1）小张提出先构建系统流程图（System Flowcharts），以便更精确地反映系统的业务处理过程及数据的输入和输出；<br/>（2）小李提出先构建系统数据流图（Data Flow Diagrams），来展现系统的处理过程和定义业务功能边界，并给出了情报分类子系统的0层和1层数据流图，后者如图2-1所示。<br/><img src=\"https://s2.51cto.com/images/20211014/1634142945425189.jpg\" title=\"1634142945425189.jpg\" alt=\"1.jpg\"/><br/>项目组经讨论确定以数据流图作为本阶段的建模手段。工程师老王详细说明了流程图和数据流图之间的区别与联系，并指出了图2-1的数据流图中存在的错误。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题3】</p><p>高质量数据流图设计时应考虑的三个原则：</p><p>（1）复杂性最小化原则。DFD分层结构就是把信息划分为小的且相对独立的一大批子集例子，这样就可以单独考查每一个DFD。如果要了解某个过程更加详的信息，可以跳转到该过程的下一层；如果要知道一个DFD如何与其他DFD相关联，可以跳转到上一层的DFD进行考查。</p><p>（2）接口最小化原则。接口最小化是复杂性最小化的一种具体规则。在设计模式时，应使得模型中各个元素之间的接口数或连接数最小化。</p><p>（3）数据流一致性原则。一个过程和它的过程分解在数据流内容中是否有差别？是否存在有数据流出但没有相应的数据流入的加工？是否存在有数据流入但没有相应的数据流出的加工？</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 314779,
    "question_title": "<p>试题一 论面向方面的编程技术及其应用</p><p><br/>针对应用开发所面临的规模不断扩大、复杂度不断提升的问题，面向方面的编程（Aspect Oriented Programming,AOP）技术提供了一种有效的程序开发方法。为了理解和完成一个复杂的程序，通常要把程序进行功能划分和封装。一般系统中的某些通用功能，如安全性、持续性、日志记录等等，其代码是分散的，较难实现模块化，不利于程序演变、维护和更新。AOP技术将逻辑上关系松散的代码封装到一个具有某种公共行为的可重用模块，并将其命名为方面（Aspect）.</p><p><br/>请围绕“面向方面的编程技术及其应用”论题，依次从以下三个方面进行论述。</p><p><br/>1.概要叙述你参与实施的应用AOP技术的软件项目以及你在其中所担任的主要工作。</p><p>2.叙述在软件项目实践过程使用AOP技术开发的具体步骤。</p><p>3.结合项目内容，论述该项目使用AOP技术的原因，开发过程中存在的问题和解决方法，以及使用AOP技术带来的实际应用效果。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>无</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 98,
      "belong_page": 1,
      "question_id": 314779,
      "question_title": "<p>试题一 论面向方面的编程技术及其应用</p><p><br/>针对应用开发所面临的规模不断扩大、复杂度不断提升的问题，面向方面的编程（Aspect Oriented Programming,AOP）技术提供了一种有效的程序开发方法。为了理解和完成一个复杂的程序，通常要把程序进行功能划分和封装。一般系统中的某些通用功能，如安全性、持续性、日志记录等等，其代码是分散的，较难实现模块化，不利于程序演变、维护和更新。AOP技术将逻辑上关系松散的代码封装到一个具有某种公共行为的可重用模块，并将其命名为方面（Aspect）.</p><p><br/>请围绕“面向方面的编程技术及其应用”论题，依次从以下三个方面进行论述。</p><p><br/>1.概要叙述你参与实施的应用AOP技术的软件项目以及你在其中所担任的主要工作。</p><p>2.叙述在软件项目实践过程使用AOP技术开发的具体步骤。</p><p>3.结合项目内容，论述该项目使用AOP技术的原因，开发过程中存在的问题和解决方法，以及使用AOP技术带来的实际应用效果。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 314779,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>无</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 350379,
    "question_title": "<p>【问题1】（12分）</p><p>识别设计类是面向对象设计过程中的重要工作，设计类表达了类的职责，即该类所担任的任务。请用300字以内的文字说明设计类通常分为哪三种类型，每种类型的主要职责，并针对题干描述案例涉及的具体类为每种类型的设计类举出2个实例。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>在系统设计过程中，类可以分为三种类型：实体类、边界类（或接口类）和控制类。</p><p>实体类映射需求中的每个实体，实体类保存需要存储在永久存储体中的信息。题干描述中商品、订单、注册用户、送货信息、购物车等都是实体类。</p><p>边界类用于封装在用例内、外流动的信息或数据流。题干描述中商品信息页面、订单信息录入页面和订单表单都属于边界类。</p><p>控制类是用于控制用例工作的类，—般是由动宾结构的短语（“动词+名词”或“名词+动词”）转化来的名词。题干描述中订单结算、订单支付、备货、出货等都属于控制类。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 99,
      "belong_page": 1,
      "question_id": 350379,
      "question_title": "<p>【问题1】（12分）</p><p>识别设计类是面向对象设计过程中的重要工作，设计类表达了类的职责，即该类所担任的任务。请用300字以内的文字说明设计类通常分为哪三种类型，每种类型的主要职责，并针对题干描述案例涉及的具体类为每种类型的设计类举出2个实例。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 350378,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于系统设计的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某软件公司为知名制造企业开发一套网上销售系统，以增加销售的渠道和效率。在项目之初，项目组决定釆用面向对象的开发方法进行系统开发，并对系统的核心业务功能进行了分析，具体描述如下：</p><p>注册用户通过商品信息页面在线浏览商品，将需要购买的商品添加进购物车内， 点击“结算”按钮后开始录入订单信息。</p><p>用户在订单信息录入页面上选择支付方式，填写并确认收货人、收货地址和联系方式等信息。点击“提交订单”按钮后产生订单，并开始进行订单结算。</p><p>订单需要在30分钟内进行支付，否则会自动取消，用户也可以手工取消订单。</p><p>用户支付完成，经确认后，系统开始备货，扣除该商品可接单数量，并移除用户购物车中的所有商品资料。</p><p>生成订单表单，出货完毕，订单生效。为用户快递商品，等待用户接收。</p><p>用户签收商品，交易完成。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>在系统设计过程中，类可以分为三种类型：实体类、边界类（或接口类）和控制类。</p><p>实体类映射需求中的每个实体，实体类保存需要存储在永久存储体中的信息。题干描述中商品、订单、注册用户、送货信息、购物车等都是实体类。</p><p>边界类用于封装在用例内、外流动的信息或数据流。题干描述中商品信息页面、订单信息录入页面和订单表单都属于边界类。</p><p>控制类是用于控制用例工作的类，—般是由动宾结构的短语（“动词+名词”或“名词+动词”）转化来的名词。题干描述中订单结算、订单支付、备货、出货等都属于控制类。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 352340,
    "question_title": "<p>【问题1】（10分）</p><p>使用说明中的词语，给出图1-1中的实体E1～E5。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>E1：供应商 &nbsp;&nbsp;&nbsp;E2：采购部门 &nbsp;&nbsp;&nbsp;E3：检验员 &nbsp;&nbsp;&nbsp;E4：库管员 &nbsp;&nbsp;&nbsp;E5：S/R职员</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 100,
      "belong_page": 1,
      "question_id": 352340,
      "question_title": "<p>【问题1】（10分）</p><p>使用说明中的词语，给出图1-1中的实体E1～E5。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 352339,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二</p><p>阅读下列说明和图，回答问题1至问题4，将解答填入答题纸的对应栏内。</p><p>【说明】</p><p>某医疗器械公司作为复杂医疗产品的集成商，必须保持高质量部件的及时供应。为了实现这一目标，该公司欲开发一采购系统。系统的主要功能如下。</p><p>1. 检查库存水平。采购部门每天检查部件库存量，当特定部件的库存量降至其订货点时，返回低存量部件及库存量。</p><p>2. 下达采购订单。采购部门针对低存量部件及库存量提交采购请求，向其供应商（通过供应商文件访问供应商数据）下达采购订单，并存储于采购订单文件中。</p><p>3. 交运部件。当供应商提交提单并交运部件时，运输和接收（S/R）部门通过执行以下三步过程接收货物：</p><p>（1）验证装运部件。通过访问采购订单并将其与提单进行比较来验证装运的部件，并将提单信息发给S/R职员。如果收货部件项目出现在采购订单和提单上，则已验证的提单和收货部件项目将被送去检验。否则，将S/R职员提交的装运错误信息生成装运错误通知发送给供应商。</p><p>（2）检验部件质量。通过访问质量标准来检查装运部件的质量，并将已验证的提单发给检验员。如果部件满足所有质量标准，则将其添加到接受的部件列表用于更新部件库存。如果部件未通过检查，则将检验员创建的缺陷装运信息生成缺陷装运通知发送给供应商。</p><p>（3）更新部件库存。库管员根据收到的接受的部件列表添加本次采购数量，与原有库存量累加来更新库存部件中的库存量。标记订单采购完成。</p><p>现采用结构化方法对该采购系统进行分析与设计，获得如图1-1所示的顶层图和图1-2所示的0层数据流图。<br/><img src=\"https://s2.51cto.com/images/20220923/1663933349962304.png\" title=\"1663933349962304.png\" alt=\"image.png\"/><br/></p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 图1-1 &nbsp;顶层图<br/><img src=\"https://s2.51cto.com/images/20220923/1663933366826720.png\" title=\"1663933366826720.png\" alt=\"image.png\"/><br/></p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;图1-2 &nbsp;0层数据流图</p><p><br/></p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>E1：供应商 &nbsp;&nbsp;&nbsp;E2：采购部门 &nbsp;&nbsp;&nbsp;E3：检验员 &nbsp;&nbsp;&nbsp;E4：库管员 &nbsp;&nbsp;&nbsp;E5：S/R职员</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 352341,
    "question_title": "<p>【问题2】（8分）</p><p>使用说明中的词语，给出图1-2中的数据存储D1～D4的名称。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>D1：库存表 &nbsp;&nbsp;&nbsp;D2：采购订单表 &nbsp;&nbsp;&nbsp;&nbsp;D3：质量标准表 &nbsp;&nbsp;&nbsp;&nbsp;D4：供应商表</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 101,
      "belong_page": 1,
      "question_id": 352341,
      "question_title": "<p>【问题2】（8分）</p><p>使用说明中的词语，给出图1-2中的数据存储D1～D4的名称。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 352339,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二</p><p>阅读下列说明和图，回答问题1至问题4，将解答填入答题纸的对应栏内。</p><p>【说明】</p><p>某医疗器械公司作为复杂医疗产品的集成商，必须保持高质量部件的及时供应。为了实现这一目标，该公司欲开发一采购系统。系统的主要功能如下。</p><p>1. 检查库存水平。采购部门每天检查部件库存量，当特定部件的库存量降至其订货点时，返回低存量部件及库存量。</p><p>2. 下达采购订单。采购部门针对低存量部件及库存量提交采购请求，向其供应商（通过供应商文件访问供应商数据）下达采购订单，并存储于采购订单文件中。</p><p>3. 交运部件。当供应商提交提单并交运部件时，运输和接收（S/R）部门通过执行以下三步过程接收货物：</p><p>（1）验证装运部件。通过访问采购订单并将其与提单进行比较来验证装运的部件，并将提单信息发给S/R职员。如果收货部件项目出现在采购订单和提单上，则已验证的提单和收货部件项目将被送去检验。否则，将S/R职员提交的装运错误信息生成装运错误通知发送给供应商。</p><p>（2）检验部件质量。通过访问质量标准来检查装运部件的质量，并将已验证的提单发给检验员。如果部件满足所有质量标准，则将其添加到接受的部件列表用于更新部件库存。如果部件未通过检查，则将检验员创建的缺陷装运信息生成缺陷装运通知发送给供应商。</p><p>（3）更新部件库存。库管员根据收到的接受的部件列表添加本次采购数量，与原有库存量累加来更新库存部件中的库存量。标记订单采购完成。</p><p>现采用结构化方法对该采购系统进行分析与设计，获得如图1-1所示的顶层图和图1-2所示的0层数据流图。<br/><img src=\"https://s2.51cto.com/images/20220923/1663933349962304.png\" title=\"1663933349962304.png\" alt=\"image.png\"/><br/></p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 图1-1 &nbsp;顶层图<br/><img src=\"https://s2.51cto.com/images/20220923/1663933366826720.png\" title=\"1663933366826720.png\" alt=\"image.png\"/><br/></p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;图1-2 &nbsp;0层数据流图</p><p><br/></p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>D1：库存表 &nbsp;&nbsp;&nbsp;D2：采购订单表 &nbsp;&nbsp;&nbsp;&nbsp;D3：质量标准表 &nbsp;&nbsp;&nbsp;&nbsp;D4：供应商表</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 352342,
    "question_title": "<p>【问题3】（7分）</p><p>根据说明和图中术语，补充图1-2中缺失的数据流及其起点和终点。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>原有部件库存量：D1（库存）——P5（更新部件库存）</p><p>产品送检： &nbsp;&nbsp;&nbsp;P3（验证装运部件）——P4（校验部件质量） &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>装运错误通知：P3（验证装运部件）——E1（供应商）</p><p>缺陷装运通知：P4（校验部件质量）——E1（供应商）&nbsp;</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 102,
      "belong_page": 1,
      "question_id": 352342,
      "question_title": "<p>【问题3】（7分）</p><p>根据说明和图中术语，补充图1-2中缺失的数据流及其起点和终点。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 352339,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二</p><p>阅读下列说明和图，回答问题1至问题4，将解答填入答题纸的对应栏内。</p><p>【说明】</p><p>某医疗器械公司作为复杂医疗产品的集成商，必须保持高质量部件的及时供应。为了实现这一目标，该公司欲开发一采购系统。系统的主要功能如下。</p><p>1. 检查库存水平。采购部门每天检查部件库存量，当特定部件的库存量降至其订货点时，返回低存量部件及库存量。</p><p>2. 下达采购订单。采购部门针对低存量部件及库存量提交采购请求，向其供应商（通过供应商文件访问供应商数据）下达采购订单，并存储于采购订单文件中。</p><p>3. 交运部件。当供应商提交提单并交运部件时，运输和接收（S/R）部门通过执行以下三步过程接收货物：</p><p>（1）验证装运部件。通过访问采购订单并将其与提单进行比较来验证装运的部件，并将提单信息发给S/R职员。如果收货部件项目出现在采购订单和提单上，则已验证的提单和收货部件项目将被送去检验。否则，将S/R职员提交的装运错误信息生成装运错误通知发送给供应商。</p><p>（2）检验部件质量。通过访问质量标准来检查装运部件的质量，并将已验证的提单发给检验员。如果部件满足所有质量标准，则将其添加到接受的部件列表用于更新部件库存。如果部件未通过检查，则将检验员创建的缺陷装运信息生成缺陷装运通知发送给供应商。</p><p>（3）更新部件库存。库管员根据收到的接受的部件列表添加本次采购数量，与原有库存量累加来更新库存部件中的库存量。标记订单采购完成。</p><p>现采用结构化方法对该采购系统进行分析与设计，获得如图1-1所示的顶层图和图1-2所示的0层数据流图。<br/><img src=\"https://s2.51cto.com/images/20220923/1663933349962304.png\" title=\"1663933349962304.png\" alt=\"image.png\"/><br/></p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 图1-1 &nbsp;顶层图<br/><img src=\"https://s2.51cto.com/images/20220923/1663933366826720.png\" title=\"1663933366826720.png\" alt=\"image.png\"/><br/></p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;图1-2 &nbsp;0层数据流图</p><p><br/></p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>原有部件库存量：D1（库存）——P5（更新部件库存）</p><p>产品送检： &nbsp;&nbsp;&nbsp;P3（验证装运部件）——P4（校验部件质量） &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>装运错误通知：P3（验证装运部件）——E1（供应商）</p><p>缺陷装运通知：P4（校验部件质量）——E1（供应商）&nbsp;</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 352452,
    "question_title": "<p>【问题 1】（15分）</p><p>根据说明中的描述，给出图 3－1 中 A1～A4 所对应的参与者名称。</p><p>根据说明中的描述及表 3－1，给出图 3－1 中 U1－U5 所对应的用例名称。</p><p>根据说明中的描述，给出图 3－2 中 C1~C6 所对应的类名。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>参与者：</p><p>A1:Central system/Driver</p><p>A2:Driver/Central system</p><p>A3:Regional center/Traffic advice center</p><p>A4:Traffic advice center/Regional center</p><p>用例：</p><p>U1:Underpaid transaction/Record Illegal use</p><p>U2:Record Illegal use/Underpaid transaction</p><p>U3:Create transaction</p><p>U4:Record traffic event</p><p>U5:Charge card</p><p>类：</p><p>C1:Center system</p><p>C2: Toll gantry</p><p>C3: Traffic lanes</p><p>C4:Radar sensor/Radio transceiver/Digital Camera</p><p>C5:Radio transceiver/Radar sensor/Digital Camera</p><p>C6: Digital Camera/Radar sensor/Radio transceiver</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 103,
      "belong_page": 1,
      "question_id": 352452,
      "question_title": "<p>【问题 1】（15分）</p><p>根据说明中的描述，给出图 3－1 中 A1～A4 所对应的参与者名称。</p><p>根据说明中的描述及表 3－1，给出图 3－1 中 U1－U5 所对应的用例名称。</p><p>根据说明中的描述，给出图 3－2 中 C1~C6 所对应的类名。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 352451,
      "score_rule": "",
      "material_text": "<p style=\"margin-top:21px;text-indent:29px\">试题二（20分）</p><p>&nbsp;阅读下列说明，回答问题 1 至问题 3，将解答填入答题纸的对应栏内。</p><p>【说明】</p><p>某 ETC（ Electronic Toll Collection，不停车收费）系统在高速公路沿线的特</p><p>定位置上设置一个横跨道路上空的龙门架（ Toll gantry），龙门架下包括 6条车道（ Trafficlanes），每条车道上安装有雷达传感器（ Radar sensor）、无线传输器（ Radio transceiver）</p><p>和数码相机（ Digital Camera）等用于不停车收费的设备，以完成正常行驶速度下的收费工作。该系统的基本工作过程如下：</p><p>（1）每辆汽车上安装有车载器，驾驶员（ Driver）将一张具有唯一识别码的磁卡插入车载器中。磁卡中还包含有驾驶员账户的当前信用记录。</p><p>（2）当汽车通过某条车道时，不停车收费设备识别车载器内的特有编码，判断车型，</p><p>将收集到的相关信息发送到该路段所属的区域系统（ Regional center）中，计算通行费用创建收费交易（ Transaction），从驾驶员的专用账户中扣除通行费用。如果驾驶员账户透</p><p>支，则记录透支账户交易信息。区域系统再将交易后的账户信息发送到维护驾驶员账户信息</p><p>的中心系统（ Central system）</p><p>（3）车载器中的磁卡可以使用邮局的付款机进行充值。充值信息会传送至中心系统，以更新驾驶员账户的余额。</p><p>（4）当没有安装车载器或者车载器发生故障的车辆通过车道时，车道上的数码相机将对车辆进行拍照，并将车辆照片及拍摄时间发送到区域系统，记录失败的交易信息；并将该交易信息发送到中心系统。</p><p>（5）区域系统会获取不停车收费设备所记录的交通事件（ Traffic events）；交</p><p>通广播电台（ Traffic advice center）根据这些交通事件进行路况分析并播报路况。</p><p>现采用面向对象方法对上述系统进行分析与设计，得到如表 3－1 所示的用例列</p><p>表以及如图 3－1 所示的用例图和图 3－2 所示的分析类图。</p><img src=\"https://s2.51cto.com/images/20220923/1663936577911380.png\" title=\"1663936577911380.png\" alt=\"image.png\"/><br/><img src=\"https://s2.51cto.com/images/20220923/1663936585804841.png\" title=\"1663936585804841.png\" alt=\"image.png\"/>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>参与者：</p><p>A1:Central system/Driver</p><p>A2:Driver/Central system</p><p>A3:Regional center/Traffic advice center</p><p>A4:Traffic advice center/Regional center</p><p>用例：</p><p>U1:Underpaid transaction/Record Illegal use</p><p>U2:Record Illegal use/Underpaid transaction</p><p>U3:Create transaction</p><p>U4:Record traffic event</p><p>U5:Charge card</p><p>类：</p><p>C1:Center system</p><p>C2: Toll gantry</p><p>C3: Traffic lanes</p><p>C4:Radar sensor/Radio transceiver/Digital Camera</p><p>C5:Radio transceiver/Radar sensor/Digital Camera</p><p>C6: Digital Camera/Radar sensor/Radio transceiver</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 352454,
    "question_title": "<p>【问题 3】（4分）</p><p>在OOA方法中，构建用例模型一般需要经历几个阶段。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>在OOA方法中，构建用例模型一般需要经历4个阶段，分别是识别参与者、合并需求获得用例、细化用例描述和调整用例模型，其中前三个阶段是必需的。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 104,
      "belong_page": 1,
      "question_id": 352454,
      "question_title": "<p>【问题 3】（4分）</p><p>在OOA方法中，构建用例模型一般需要经历几个阶段。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 352451,
      "score_rule": "",
      "material_text": "<p style=\"margin-top:21px;text-indent:29px\">试题二（20分）</p><p>&nbsp;阅读下列说明，回答问题 1 至问题 3，将解答填入答题纸的对应栏内。</p><p>【说明】</p><p>某 ETC（ Electronic Toll Collection，不停车收费）系统在高速公路沿线的特</p><p>定位置上设置一个横跨道路上空的龙门架（ Toll gantry），龙门架下包括 6条车道（ Trafficlanes），每条车道上安装有雷达传感器（ Radar sensor）、无线传输器（ Radio transceiver）</p><p>和数码相机（ Digital Camera）等用于不停车收费的设备，以完成正常行驶速度下的收费工作。该系统的基本工作过程如下：</p><p>（1）每辆汽车上安装有车载器，驾驶员（ Driver）将一张具有唯一识别码的磁卡插入车载器中。磁卡中还包含有驾驶员账户的当前信用记录。</p><p>（2）当汽车通过某条车道时，不停车收费设备识别车载器内的特有编码，判断车型，</p><p>将收集到的相关信息发送到该路段所属的区域系统（ Regional center）中，计算通行费用创建收费交易（ Transaction），从驾驶员的专用账户中扣除通行费用。如果驾驶员账户透</p><p>支，则记录透支账户交易信息。区域系统再将交易后的账户信息发送到维护驾驶员账户信息</p><p>的中心系统（ Central system）</p><p>（3）车载器中的磁卡可以使用邮局的付款机进行充值。充值信息会传送至中心系统，以更新驾驶员账户的余额。</p><p>（4）当没有安装车载器或者车载器发生故障的车辆通过车道时，车道上的数码相机将对车辆进行拍照，并将车辆照片及拍摄时间发送到区域系统，记录失败的交易信息；并将该交易信息发送到中心系统。</p><p>（5）区域系统会获取不停车收费设备所记录的交通事件（ Traffic events）；交</p><p>通广播电台（ Traffic advice center）根据这些交通事件进行路况分析并播报路况。</p><p>现采用面向对象方法对上述系统进行分析与设计，得到如表 3－1 所示的用例列</p><p>表以及如图 3－1 所示的用例图和图 3－2 所示的分析类图。</p><img src=\"https://s2.51cto.com/images/20220923/1663936577911380.png\" title=\"1663936577911380.png\" alt=\"image.png\"/><br/><img src=\"https://s2.51cto.com/images/20220923/1663936585804841.png\" title=\"1663936585804841.png\" alt=\"image.png\"/>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>在OOA方法中，构建用例模型一般需要经历4个阶段，分别是识别参与者、合并需求获得用例、细化用例描述和调整用例模型，其中前三个阶段是必需的。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 356277,
    "question_title": "<p>【问题1】(9分)</p><p>王工根据煤矿建设项目安全预警系统的功能要求，设计完成了系统的数据流图，如</p><p>图2-1所示。请使用题干中描述的功能(a)~(h)，补充完善空(1)~(6)处的内容，</p><p>并简要介绍数据流图在分层细化过程中遵循的数据平衡原则。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221122/1669110107340350.png\" title=\"1669110107340350.png\" alt=\"image.png\"/><br/><p>图2-1 煤矿建设项目安全预警系统数据流图</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>(1)f (2)g (3)h (4)d (5)b (6)e</p><p>层间平衡：数据流个数一致，方向一致</p><p>图内平衡：有输入无输出的黑洞，有输出无输入的奇迹，输入不足的灰洞</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 105,
      "belong_page": 1,
      "question_id": 356277,
      "question_title": "<p>【问题1】(9分)</p><p>王工根据煤矿建设项目安全预警系统的功能要求，设计完成了系统的数据流图，如</p><p>图2-1所示。请使用题干中描述的功能(a)~(h)，补充完善空(1)~(6)处的内容，</p><p>并简要介绍数据流图在分层细化过程中遵循的数据平衡原则。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221122/1669110107340350.png\" title=\"1669110107340350.png\" alt=\"image.png\"/><br/><p>图2-1 煤矿建设项目安全预警系统数据流图</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 356276,
      "score_rule": "",
      "material_text": "<p>试题二(共25分)</p><p>阅读以下关于软件系统设计与建模的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>煤炭生产是国民经济发展的主要领域之一，其煤矿的安全非常重要。某能源企业拟</p><p>开发一套煤矿建设项目安全预警系统，以保护煤矿建设项目从业人员生命安全。本系统</p><p>的主要功能包括如下(a)~(h)所述。</p><p>(a)项目信息维护</p><p>(b)影响因素录入</p><p>(c)关联事故录入</p><p>(d)安全评价得分</p><p>(e)项目指标预警分析</p><p>(f)项目指标填报</p><p>(g)项目指标审核</p><p>(h)项目指标确认</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>(1)f (2)g (3)h (4)d (5)b (6)e</p><p>层间平衡：数据流个数一致，方向一致</p><p>图内平衡：有输入无输出的黑洞，有输出无输入的奇迹，输入不足的灰洞</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 356278,
    "question_title": "<p>【问题2】(9分)</p><p>请根据【问题1】中数据流图表示的相关信息，补充完善煤矿建设项目安全预警系统总体ER图(见图2-2)中实体(1)-(6)的具体内容，将正确答案填在答题纸上。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221122/1669110130371509.png\" title=\"1669110130371509.png\" alt=\"image.png\"/><br/><p>图2-2 煤矿建设项目安全预警系统总体E-R图</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>(1)项目管理员&nbsp;&nbsp;&nbsp;&nbsp;(2)项目经理&nbsp;&nbsp;&nbsp;&nbsp;(3)项目指标&nbsp;&nbsp;&nbsp;&nbsp;(4)项目信息&nbsp;&nbsp;&nbsp;&nbsp;(5)影响因素&nbsp;&nbsp;&nbsp;&nbsp;(6)关联事故</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 106,
      "belong_page": 1,
      "question_id": 356278,
      "question_title": "<p>【问题2】(9分)</p><p>请根据【问题1】中数据流图表示的相关信息，补充完善煤矿建设项目安全预警系统总体ER图(见图2-2)中实体(1)-(6)的具体内容，将正确答案填在答题纸上。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221122/1669110130371509.png\" title=\"1669110130371509.png\" alt=\"image.png\"/><br/><p>图2-2 煤矿建设项目安全预警系统总体E-R图</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 356276,
      "score_rule": "",
      "material_text": "<p>试题二(共25分)</p><p>阅读以下关于软件系统设计与建模的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>煤炭生产是国民经济发展的主要领域之一，其煤矿的安全非常重要。某能源企业拟</p><p>开发一套煤矿建设项目安全预警系统，以保护煤矿建设项目从业人员生命安全。本系统</p><p>的主要功能包括如下(a)~(h)所述。</p><p>(a)项目信息维护</p><p>(b)影响因素录入</p><p>(c)关联事故录入</p><p>(d)安全评价得分</p><p>(e)项目指标预警分析</p><p>(f)项目指标填报</p><p>(g)项目指标审核</p><p>(h)项目指标确认</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>(1)项目管理员&nbsp;&nbsp;&nbsp;&nbsp;(2)项目经理&nbsp;&nbsp;&nbsp;&nbsp;(3)项目指标&nbsp;&nbsp;&nbsp;&nbsp;(4)项目信息&nbsp;&nbsp;&nbsp;&nbsp;(5)影响因素&nbsp;&nbsp;&nbsp;&nbsp;(6)关联事故</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 356279,
    "question_title": "<p>【问题3】(7分)</p><p>在结构化分析和设计过程中，数据流图和数据字典是常用的技术手段，请用200字</p><p>以内的文字简要说明它们在软件需求分析和设计阶段的作用。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>在分析阶段：</p><p>数据流图用于界定系统上下文范围和建立业务流程的加工说明，自顶向下对系统进行功能分解；指明数据在系统内移动变换；描述功能及加工规约。</p><p>数据字典用于建立业务概念有组织的集合，是模型核心库，有组织的系统相关数据元素列表，使涉众对模型中元素有共同的理解。</p><p>在设计阶段</p><p>结构化设计根据不同的数据流图类别分别做变换和事务映射来初始化系统结构图；根据数据字典中的数据存储描述来建立数据库存储设计。</p><p>&nbsp;</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 107,
      "belong_page": 1,
      "question_id": 356279,
      "question_title": "<p>【问题3】(7分)</p><p>在结构化分析和设计过程中，数据流图和数据字典是常用的技术手段，请用200字</p><p>以内的文字简要说明它们在软件需求分析和设计阶段的作用。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 356276,
      "score_rule": "",
      "material_text": "<p>试题二(共25分)</p><p>阅读以下关于软件系统设计与建模的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>煤炭生产是国民经济发展的主要领域之一，其煤矿的安全非常重要。某能源企业拟</p><p>开发一套煤矿建设项目安全预警系统，以保护煤矿建设项目从业人员生命安全。本系统</p><p>的主要功能包括如下(a)~(h)所述。</p><p>(a)项目信息维护</p><p>(b)影响因素录入</p><p>(c)关联事故录入</p><p>(d)安全评价得分</p><p>(e)项目指标预警分析</p><p>(f)项目指标填报</p><p>(g)项目指标审核</p><p>(h)项目指标确认</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>在分析阶段：</p><p>数据流图用于界定系统上下文范围和建立业务流程的加工说明，自顶向下对系统进行功能分解；指明数据在系统内移动变换；描述功能及加工规约。</p><p>数据字典用于建立业务概念有组织的集合，是模型核心库，有组织的系统相关数据元素列表，使涉众对模型中元素有共同的理解。</p><p>在设计阶段</p><p>结构化设计根据不同的数据流图类别分别做变换和事务映射来初始化系统结构图；根据数据字典中的数据存储描述来建立数据库存储设计。</p><p>&nbsp;</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 371567,
    "question_title": "<p>【问题1】（10分）</p><p>使用说明中的词语，给出图1-1中的实体E1～E5。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>E1：供应商 &nbsp;&nbsp;&nbsp;E2：采购部门 &nbsp;&nbsp;&nbsp;E3：检验员 &nbsp;&nbsp;&nbsp;E4：库管员 &nbsp;&nbsp;&nbsp;E5：S/R职员</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 108,
      "belong_page": 1,
      "question_id": 371567,
      "question_title": "<p>【问题1】（10分）</p><p>使用说明中的词语，给出图1-1中的实体E1～E5。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 371566,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读下列说明和图，回答问题1至问题4，将解答填入答题纸的对应栏内。</p><p>【说明】</p><p>某医疗器械公司作为复杂医疗产品的集成商，必须保持高质量部件的及时供应。为了实现这一目标，该公司欲开发一采购系统。系统的主要功能如下。</p><p>1. 检查库存水平。采购部门每天检查部件库存量，当特定部件的库存量降至其订货点时，返回低存量部件及库存量。</p><p>2. 下达采购订单。采购部门针对低存量部件及库存量提交采购请求，向其供应商（通过供应商文件访问供应商数据）下达采购订单，并存储于采购订单文件中。</p><p>3. 交运部件。当供应商提交提单并交运部件时，运输和接收（S/R）部门通过执行以下三步过程接收货物：</p><p>（1）验证装运部件。通过访问采购订单并将其与提单进行比较来验证装运的部件，并将提单信息发给S/R职员。如果收货部件项目出现在采购订单和提单上，则已验证的提单和收货部件项目将被送去检验。否则，将S/R职员提交的装运错误信息生成装运错误通知发送给供应商。</p><p>（2）检验部件质量。通过访问质量标准来检查装运部件的质量，并将已验证的提单发给检验员。如果部件满足所有质量标准，则将其添加到接受的部件列表用于更新部件库存。如果部件未通过检查，则将检验员创建的缺陷装运信息生成缺陷装运通知发送给供应商。</p><p>（3）更新部件库存。库管员根据收到的接受的部件列表添加本次采购数量，与原有库存量累加来更新库存部件中的库存量。标记订单采购完成。</p><p>现采用结构化方法对该采购系统进行分析与设计，获得如图1-1所示的顶层图和图1-2所示的0层数据流图。</p><img src=\"https://s2.51cto.com/images/20230916/1694870813556645.png\" title=\"1694870813556645.png\" alt=\"image.png\"/><br/><img src=\"https://s2.51cto.com/images/20230916/1694870849576669.png\" title=\"1694870849576669.png\" alt=\"image.png\"/>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>E1：供应商 &nbsp;&nbsp;&nbsp;E2：采购部门 &nbsp;&nbsp;&nbsp;E3：检验员 &nbsp;&nbsp;&nbsp;E4：库管员 &nbsp;&nbsp;&nbsp;E5：S/R职员</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 371568,
    "question_title": "<p>【问题2】（8分）</p><p>使用说明中的词语，给出图1-2中的数据存储D1～D4的名称。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>D1：库存表 &nbsp;&nbsp;&nbsp;D2：采购订单表 &nbsp;&nbsp;&nbsp;&nbsp;D3：质量标准表 &nbsp;&nbsp;&nbsp;&nbsp;D4：供应商表</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 109,
      "belong_page": 1,
      "question_id": 371568,
      "question_title": "<p>【问题2】（8分）</p><p>使用说明中的词语，给出图1-2中的数据存储D1～D4的名称。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 371566,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读下列说明和图，回答问题1至问题4，将解答填入答题纸的对应栏内。</p><p>【说明】</p><p>某医疗器械公司作为复杂医疗产品的集成商，必须保持高质量部件的及时供应。为了实现这一目标，该公司欲开发一采购系统。系统的主要功能如下。</p><p>1. 检查库存水平。采购部门每天检查部件库存量，当特定部件的库存量降至其订货点时，返回低存量部件及库存量。</p><p>2. 下达采购订单。采购部门针对低存量部件及库存量提交采购请求，向其供应商（通过供应商文件访问供应商数据）下达采购订单，并存储于采购订单文件中。</p><p>3. 交运部件。当供应商提交提单并交运部件时，运输和接收（S/R）部门通过执行以下三步过程接收货物：</p><p>（1）验证装运部件。通过访问采购订单并将其与提单进行比较来验证装运的部件，并将提单信息发给S/R职员。如果收货部件项目出现在采购订单和提单上，则已验证的提单和收货部件项目将被送去检验。否则，将S/R职员提交的装运错误信息生成装运错误通知发送给供应商。</p><p>（2）检验部件质量。通过访问质量标准来检查装运部件的质量，并将已验证的提单发给检验员。如果部件满足所有质量标准，则将其添加到接受的部件列表用于更新部件库存。如果部件未通过检查，则将检验员创建的缺陷装运信息生成缺陷装运通知发送给供应商。</p><p>（3）更新部件库存。库管员根据收到的接受的部件列表添加本次采购数量，与原有库存量累加来更新库存部件中的库存量。标记订单采购完成。</p><p>现采用结构化方法对该采购系统进行分析与设计，获得如图1-1所示的顶层图和图1-2所示的0层数据流图。</p><img src=\"https://s2.51cto.com/images/20230916/1694870813556645.png\" title=\"1694870813556645.png\" alt=\"image.png\"/><br/><img src=\"https://s2.51cto.com/images/20230916/1694870849576669.png\" title=\"1694870849576669.png\" alt=\"image.png\"/>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>D1：库存表 &nbsp;&nbsp;&nbsp;D2：采购订单表 &nbsp;&nbsp;&nbsp;&nbsp;D3：质量标准表 &nbsp;&nbsp;&nbsp;&nbsp;D4：供应商表</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 371569,
    "question_title": "<p>【问题3】（7分）</p><p>根据说明和图中术语，补充图1-2中缺失的数据流及其起点和终点。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>原有部件库存量：D1（库存）——P5（更新部件库存） &nbsp;&nbsp;</p><p>产品送检： &nbsp;&nbsp;&nbsp;P3（验证装运部件）——P4（校验部件质量） &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>装运错误通知：P3（验证装运部件）——E1（供应商）</p><p>缺陷装运通知：P4（校验部件质量）——E1（供应商）&nbsp;</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 110,
      "belong_page": 1,
      "question_id": 371569,
      "question_title": "<p>【问题3】（7分）</p><p>根据说明和图中术语，补充图1-2中缺失的数据流及其起点和终点。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 371566,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读下列说明和图，回答问题1至问题4，将解答填入答题纸的对应栏内。</p><p>【说明】</p><p>某医疗器械公司作为复杂医疗产品的集成商，必须保持高质量部件的及时供应。为了实现这一目标，该公司欲开发一采购系统。系统的主要功能如下。</p><p>1. 检查库存水平。采购部门每天检查部件库存量，当特定部件的库存量降至其订货点时，返回低存量部件及库存量。</p><p>2. 下达采购订单。采购部门针对低存量部件及库存量提交采购请求，向其供应商（通过供应商文件访问供应商数据）下达采购订单，并存储于采购订单文件中。</p><p>3. 交运部件。当供应商提交提单并交运部件时，运输和接收（S/R）部门通过执行以下三步过程接收货物：</p><p>（1）验证装运部件。通过访问采购订单并将其与提单进行比较来验证装运的部件，并将提单信息发给S/R职员。如果收货部件项目出现在采购订单和提单上，则已验证的提单和收货部件项目将被送去检验。否则，将S/R职员提交的装运错误信息生成装运错误通知发送给供应商。</p><p>（2）检验部件质量。通过访问质量标准来检查装运部件的质量，并将已验证的提单发给检验员。如果部件满足所有质量标准，则将其添加到接受的部件列表用于更新部件库存。如果部件未通过检查，则将检验员创建的缺陷装运信息生成缺陷装运通知发送给供应商。</p><p>（3）更新部件库存。库管员根据收到的接受的部件列表添加本次采购数量，与原有库存量累加来更新库存部件中的库存量。标记订单采购完成。</p><p>现采用结构化方法对该采购系统进行分析与设计，获得如图1-1所示的顶层图和图1-2所示的0层数据流图。</p><img src=\"https://s2.51cto.com/images/20230916/1694870813556645.png\" title=\"1694870813556645.png\" alt=\"image.png\"/><br/><img src=\"https://s2.51cto.com/images/20230916/1694870849576669.png\" title=\"1694870849576669.png\" alt=\"image.png\"/>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>原有部件库存量：D1（库存）——P5（更新部件库存） &nbsp;&nbsp;</p><p>产品送检： &nbsp;&nbsp;&nbsp;P3（验证装运部件）——P4（校验部件质量） &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>装运错误通知：P3（验证装运部件）——E1（供应商）</p><p>缺陷装运通知：P4（校验部件质量）——E1（供应商）&nbsp;</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9376",
    "section_name": "软件工程基础知识（第二版） - 系统分析与设计",
    "question_id": 373729,
    "question_title": "<p>【问题1】（15分）</p><p>请根据题目所述需求，说明教学服务系统中有哪些参与者。并列举项目中使用的所有实体类。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【参考答案】</p><p>参与者有：系统用户、管理员、教师、学生、时间、打印机。</p><p>实体类有：系统用户、管理员、专业、班级、教师、学生、课程、模拟试题、答卷、成绩单。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 111,
      "belong_page": 1,
      "question_id": 373729,
      "question_title": "<p>【问题1】（15分）</p><p>请根据题目所述需求，说明教学服务系统中有哪些参与者。并列举项目中使用的所有实体类。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 373728,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于软件系统建模的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>51CTO公司计划开发一套教学管理系统，用于加强教学管理服务。该教学管理系统基本的需求包括：</p><p>(1)系统用户必须成功登录到系统后才能使用系统的各项功能服务；</p><p>(2)管理员使用该系统管理专业、班级、教师、学生和课程等教学基础信息；</p><p>(3)学生使用系统注册并选择专业，缴费后才能参与在线学习；</p><p>(4)教师使用该系统发布模拟试卷；</p><p>(5)学生在线做模拟试卷，在规定时间段内只能提交一次答卷；</p><p>(6)教师使用该系统批阅答卷；</p><p>(7)模拟考到期结束后，系统自动生成成绩单，管理员可以通过打印机打印成绩单。</p><p>项目组经过分析和讨论，决定采用面向对象开发技术对系统各项需求建模。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【参考答案】</p><p>参与者有：系统用户、管理员、教师、学生、时间、打印机。</p><p>实体类有：系统用户、管理员、专业、班级、教师、学生、课程、模拟试题、答卷、成绩单。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176844.1291587
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 54224,
    "question_title": "<p>测试用例由测试输入数据和与之对应的预期输出结果组成。 人们常用白盒法和黑盒法设计测试用例，其中白盒法主要是为了检查（ &nbsp;）等。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 是否有错误的功能或遗漏的功能 ",
      " 性能是否能够接受 ",
      " 是否有数据结构或外部数据库访问错误 ",
      " 程序内部结构是否有效 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 54224,
      "question_title": "<p>测试用例由测试输入数据和与之对应的预期输出结果组成。 人们常用白盒法和黑盒法设计测试用例，其中白盒法主要是为了检查（ &nbsp;）等。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54224,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 是否有错误的功能或遗漏的功能 ",
        " 性能是否能够接受 ",
        " 是否有数据结构或外部数据库访问错误 ",
        " 程序内部结构是否有效 "
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 190826,
    "question_title": "<p>一个完整的软件系统需从不同视角进行描述下图属于软件架构设计中的(请作答此空)，用于( )视图来描述软件系统。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191116/1573919634334270.jpg\" title=\"1573919634334270.jpg\" alt=\"1.jpg\"/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 对象图 ",
      " 时序图 ",
      " 构件图的 ",
      " 类图 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 190826,
      "question_title": "<p>一个完整的软件系统需从不同视角进行描述下图属于软件架构设计中的(请作答此空)，用于( )视图来描述软件系统。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191116/1573919634334270.jpg\" title=\"1573919634334270.jpg\" alt=\"1.jpg\"/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 190826,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 对象图 ",
        " 时序图 ",
        " 构件图的 ",
        " 类图 "
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 208430,
    "question_title": "以下关于软件测试工具的叙述，错误的是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 静态测试工具可用于对软件需求、结构设计、详细设计和代码进行评审、走查和审查 ",
      " 静态测试工具可对软件的复杂度分析、数据流分析、控制流分析和接口分析提供支持 ",
      " 动态测试工具可用于软件的覆盖分析和性能分析 ",
      " 动态测试工具不支持软件的仿真测试和变异测试 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 208430,
      "question_title": "以下关于软件测试工具的叙述，错误的是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208430,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 静态测试工具可用于对软件需求、结构设计、详细设计和代码进行评审、走查和审查 ",
        " 静态测试工具可对软件的复杂度分析、数据流分析、控制流分析和接口分析提供支持 ",
        " 动态测试工具可用于软件的覆盖分析和性能分析 ",
        " 动态测试工具不支持软件的仿真测试和变异测试 "
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 208431,
    "question_title": "架构描述语言(Architecture Description Language，ADL)是一种为明确说明软件系统的概念架构和对这些概念架构建模提供功能的语言。ADL主要包括以下组成部分：组件、组件接口、（ ）和架构配置。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 架构风格 ",
      " 架构实现 ",
      " 连接件 ",
      " 组件实现 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 208431,
      "question_title": "架构描述语言(Architecture Description Language，ADL)是一种为明确说明软件系统的概念架构和对这些概念架构建模提供功能的语言。ADL主要包括以下组成部分：组件、组件接口、（ ）和架构配置。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208431,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 架构风格 ",
        " 架构实现 ",
        " 连接件 ",
        " 组件实现 "
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 208508,
    "question_title": "软件系统架构是关于软件系统的结构、（请作答此空）和属性的高级抽象。在描述阶段，主要描述直接构成系统的抽象组件以及各个组件之间的连接规则，特别是相对细致地描述组件的（ ）。在实现阶段，这些抽象组件被细化为实际的组件，比如具体类或者对象。软件系统架构不仅指定了软件系统的组织和（ ）结构，而且显示了系统需求和组件之间的对应关系，包括设计决策的基本方法和基本原理。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 行为 ",
      " 组织 ",
      " 性能 ",
      " 功能 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 208508,
      "question_title": "软件系统架构是关于软件系统的结构、（请作答此空）和属性的高级抽象。在描述阶段，主要描述直接构成系统的抽象组件以及各个组件之间的连接规则，特别是相对细致地描述组件的（ ）。在实现阶段，这些抽象组件被细化为实际的组件，比如具体类或者对象。软件系统架构不仅指定了软件系统的组织和（ ）结构，而且显示了系统需求和组件之间的对应关系，包括设计决策的基本方法和基本原理。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208508,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 行为 ",
        " 组织 ",
        " 性能 ",
        " 功能 "
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 309481,
    "question_title": "下面不属于ABSD方法的三个基础的是（41）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "功能的分解，使用已有的基于模块的内聚和耦合技术；",
      "通过选择架构风格来实现质量和业务需求；",
      "软件模板的使用，软件模板利用了一些软件系统的结构。",
      "强调由业务、质量和功能需求的组合驱动架构设计"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 309481,
      "question_title": "下面不属于ABSD方法的三个基础的是（41）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 309481,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "功能的分解，使用已有的基于模块的内聚和耦合技术；",
        "通过选择架构风格来实现质量和业务需求；",
        "软件模板的使用，软件模板利用了一些软件系统的结构。",
        "强调由业务、质量和功能需求的组合驱动架构设计"
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 350333,
    "question_title": "<p>面向对象系统的单元测试包括方法层次的测试、类层次的测试和类树层次的测试。在常见的测试技术中，&nbsp;（1） 属于方法层次的测试，&nbsp;（2） 属于类层次的测试。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 等价类划分测试和多态消息测试 ",
      " 不变式边界测试和递归函数测试 ",
      " 组合功能测试和非模态类测试 ",
      " 不变式边界测试和模态类测试 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 350333,
      "question_title": "<p>面向对象系统的单元测试包括方法层次的测试、类层次的测试和类树层次的测试。在常见的测试技术中，&nbsp;（1） 属于方法层次的测试，&nbsp;（2） 属于类层次的测试。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350332,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 等价类划分测试和多态消息测试 ",
        " 不变式边界测试和递归函数测试 ",
        " 组合功能测试和非模态类测试 ",
        " 不变式边界测试和模态类测试 "
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 350334,
    "question_title": "<p>面向对象系统的单元测试包括方法层次的测试、类层次的测试和类树层次的测试。在常见的测试技术中，&nbsp;（1） 属于方法层次的测试，&nbsp;（2） 属于类层次的测试。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 等价类划分测试和多态消息测试&nbsp; ",
      " 不变式边界测试和递归函数测试 ",
      " 组合功能测试和非模态类测试 ",
      " 不变式边界测试和模态类测试 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 350334,
      "question_title": "<p>面向对象系统的单元测试包括方法层次的测试、类层次的测试和类树层次的测试。在常见的测试技术中，&nbsp;（1） 属于方法层次的测试，&nbsp;（2） 属于类层次的测试。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350332,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 等价类划分测试和多态消息测试&nbsp; ",
        " 不变式边界测试和递归函数测试 ",
        " 组合功能测试和非模态类测试 ",
        " 不变式边界测试和模态类测试 "
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 352296,
    "question_title": "<p>&nbsp;在静态测试中，主要是对程序代码进行静态分析， &nbsp;“引用未定义的变量、对以前未使用的变量再次赋值等”属于静态分析中的&nbsp;（44） 。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 控制流分析 ",
      " 数据流分析 ",
      " 接口分析 ",
      " 表达式分析 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 352296,
      "question_title": "<p>&nbsp;在静态测试中，主要是对程序代码进行静态分析， &nbsp;“引用未定义的变量、对以前未使用的变量再次赋值等”属于静态分析中的&nbsp;（44） 。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352296,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 控制流分析 ",
        " 数据流分析 ",
        " 接口分析 ",
        " 表达式分析 "
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 354908,
    "question_title": "<p>在黑盒测试方法中，（ ）方法最适合描述在多个逻辑条件取值组合所构成的负载情况下，分别要执行哪些不同的动作。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 等价类 ",
      " 边界值 ",
      " 判定表 ",
      " 因果图 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 354908,
      "question_title": "<p>在黑盒测试方法中，（ ）方法最适合描述在多个逻辑条件取值组合所构成的负载情况下，分别要执行哪些不同的动作。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354908,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 等价类 ",
        " 边界值 ",
        " 判定表 ",
        " 因果图 "
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 354911,
    "question_title": "<p>（42）的目的是测试软件变更之后，变更部分的正确性和对变更需求的符合性，以及软件原有的、正确的功能、性能和其它规定的要求的不损害性。</p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 验收测试 ",
      " Alpha测试 ",
      " Beta测试 ",
      " 回归测试 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 354911,
      "question_title": "<p>（42）的目的是测试软件变更之后，变更部分的正确性和对变更需求的符合性，以及软件原有的、正确的功能、性能和其它规定的要求的不损害性。</p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354911,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 验收测试 ",
        " Alpha测试 ",
        " Beta测试 ",
        " 回归测试 "
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 354915,
    "question_title": "<p>【51CTO学堂-学员回忆版】在对遗留系统进行评估时，对于技术含量较高、业务价值较低且仅能完成某个部门的业务管理的遗留系统，一般采用的遗留系统演化策略是(43)策略</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 淘汰 ",
      " 继承 ",
      " 集成 ",
      " 改造 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 354915,
      "question_title": "<p>【51CTO学堂-学员回忆版】在对遗留系统进行评估时，对于技术含量较高、业务价值较低且仅能完成某个部门的业务管理的遗留系统，一般采用的遗留系统演化策略是(43)策略</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354915,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 淘汰 ",
        " 继承 ",
        " 集成 ",
        " 改造 "
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 371964,
    "question_title": "自动化测试工具主要使用脚本技术来生成测试用例，其中， （1）是录制手工测试的测试用例时得到的脚本； （2）是将测试输入存储在独立的数据文件中，而不是在脚本中。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "线性脚本",
      "结构化脚本",
      "数据驱动脚本",
      "共享脚本"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 371964,
      "question_title": "自动化测试工具主要使用脚本技术来生成测试用例，其中， （1）是录制手工测试的测试用例时得到的脚本； （2）是将测试输入存储在独立的数据文件中，而不是在脚本中。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371963,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "线性脚本",
        "结构化脚本",
        "数据驱动脚本",
        "共享脚本"
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 371965,
    "question_title": "自动化测试工具主要使用脚本技术来生成测试用例，其中， （1）是录制手工测试的测试用例时得到的脚本； （2）是将测试输入存储在独立的数据文件中，而不是在脚本中。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "结构化脚本",
      "线性脚本",
      "数据驱动脚本",
      "共享脚本"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 371965,
      "question_title": "自动化测试工具主要使用脚本技术来生成测试用例，其中， （1）是录制手工测试的测试用例时得到的脚本； （2）是将测试输入存储在独立的数据文件中，而不是在脚本中。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371963,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "结构化脚本",
        "线性脚本",
        "数据驱动脚本",
        "共享脚本"
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 373700,
    "question_title": "<p>白盒测试也称为结构测试，主要用于软件单元测试阶段。白盒测试可以分为控制流测试、数据流测试以及程序变异测试，而控制流测试又包括语句覆盖、判定覆盖、条件覆盖等。请问控制流测试中覆盖能力最强和最弱的分别是（58）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 语句覆盖和判定覆盖 ",
      " 条件判定覆盖和条件覆盖 ",
      " 路径覆盖和语句覆盖 ",
      " 条件覆盖和路径覆盖 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 373700,
      "question_title": "<p>白盒测试也称为结构测试，主要用于软件单元测试阶段。白盒测试可以分为控制流测试、数据流测试以及程序变异测试，而控制流测试又包括语句覆盖、判定覆盖、条件覆盖等。请问控制流测试中覆盖能力最强和最弱的分别是（58）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373700,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 语句覆盖和判定覆盖 ",
        " 条件判定覆盖和条件覆盖 ",
        " 路径覆盖和语句覆盖 ",
        " 条件覆盖和路径覆盖 "
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 507296,
    "question_title": "<p>下面选项不属于白盒测试的是（ ）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 控制流分析 ",
      " 数据流分析 ",
      " 程序变异测试 ",
      " 功能测试 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 507296,
      "question_title": "<p>下面选项不属于白盒测试的是（ ）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507296,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 控制流分析 ",
        " 数据流分析 ",
        " 程序变异测试 ",
        " 功能测试 "
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 507327,
    "question_title": "测试脚本写在（ ）里。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "数据文件",
      "脚本文件",
      "程序文件",
      "系统文件"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 507327,
      "question_title": "测试脚本写在（ ）里。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507327,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "数据文件",
        "脚本文件",
        "程序文件",
        "系统文件"
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 507331,
    "question_title": "<p>下面关于测试覆盖范围关系，（ ）是不正确的。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 路径覆盖包含语句覆盖 ",
      " 路径覆盖可以代替条件和判断覆盖 ",
      " 路径覆盖比语句覆盖强 ",
      " 路径覆盖不可以代替判断覆盖和条件组合覆盖 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 18,
      "belong_page": 1,
      "question_id": 507331,
      "question_title": "<p>下面关于测试覆盖范围关系，（ ）是不正确的。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507331,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 路径覆盖包含语句覆盖 ",
        " 路径覆盖可以代替条件和判断覆盖 ",
        " 路径覆盖比语句覆盖强 ",
        " 路径覆盖不可以代替判断覆盖和条件组合覆盖 "
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 507348,
    "question_title": "系统测试是为了发现（ ）环节出现的错误。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "需求分析",
      "概要设计",
      "详细设计",
      "编码"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 19,
      "belong_page": 1,
      "question_id": 507348,
      "question_title": "系统测试是为了发现（ ）环节出现的错误。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507348,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "需求分析",
        "概要设计",
        "详细设计",
        "编码"
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 523247,
    "question_title": "Web服务器性能评测方法不包括（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "基准测试",
      "压力测试",
      "可靠性测试",
      "UI测试"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 20,
      "belong_page": 1,
      "question_id": 523247,
      "question_title": "Web服务器性能评测方法不包括（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523247,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "基准测试",
        "压力测试",
        "可靠性测试",
        "UI测试"
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 523259,
    "question_title": "调试和测试的区别，以下说法错误的是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "调试在测试前面",
      "测试用于检查需求",
      "调试起始于不明确的条件",
      "测试可以预估周期"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 21,
      "belong_page": 1,
      "question_id": 523259,
      "question_title": "调试和测试的区别，以下说法错误的是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523259,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "调试在测试前面",
        "测试用于检查需求",
        "调试起始于不明确的条件",
        "测试可以预估周期"
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 523262,
    "question_title": "以下（）不属于测试度量指标。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "故障率",
      "平均故障恢复时间",
      "测试准备时间",
      "测试完成时间"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 22,
      "belong_page": 1,
      "question_id": 523262,
      "question_title": "以下（）不属于测试度量指标。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523262,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "故障率",
        "平均故障恢复时间",
        "测试准备时间",
        "测试完成时间"
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 523275,
    "question_title": "关于AB测试的描述正确的是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "同一时间相似用户",
      "不同时间相同用户",
      "同一时间不同用户",
      "不同时间不同用户"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 23,
      "belong_page": 1,
      "question_id": 523275,
      "question_title": "关于AB测试的描述正确的是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523275,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "同一时间相似用户",
        "不同时间相同用户",
        "同一时间不同用户",
        "不同时间不同用户"
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 523282,
    "question_title": "软件测试中回归测试的目的是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "确保修正过程中没有引入新的错误",
      "提高测试覆盖率",
      "验证需求实现",
      "发现系统缺陷"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 24,
      "belong_page": 1,
      "question_id": 523282,
      "question_title": "软件测试中回归测试的目的是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523282,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "确保修正过程中没有引入新的错误",
        "提高测试覆盖率",
        "验证需求实现",
        "发现系统缺陷"
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 523284,
    "question_title": "条件覆盖与判定覆盖的关系是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "条件覆盖强于判定覆盖",
      "判定覆盖强于条件覆盖",
      "条件覆盖不一定包含判定覆盖，判定覆盖也不一定包含条件覆盖",
      "两者等价"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 25,
      "belong_page": 1,
      "question_id": 523284,
      "question_title": "条件覆盖与判定覆盖的关系是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523284,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "条件覆盖强于判定覆盖",
        "判定覆盖强于条件覆盖",
        "条件覆盖不一定包含判定覆盖，判定覆盖也不一定包含条件覆盖",
        "两者等价"
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 523288,
    "question_title": "以下关于软件测试与调试说法错误的是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "测试是调试之后的活动，测试和调试在目标、方法和思路上都有所不同",
      "测试从一个已知的条件开始，使用预先定义的过程，有预知的结果;调试从一个未知的条件开始，结束的过程不可预计",
      "测试过程可以事先设计，进度可以事先确定，而调试不能描述过程或持续时间",
      "测试的目的是找出程序中存在的错误，而调试的目的是定位错误并且修改程序以修正错误"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 26,
      "belong_page": 1,
      "question_id": 523288,
      "question_title": "以下关于软件测试与调试说法错误的是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523288,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "测试是调试之后的活动，测试和调试在目标、方法和思路上都有所不同",
        "测试从一个已知的条件开始，使用预先定义的过程，有预知的结果;调试从一个未知的条件开始，结束的过程不可预计",
        "测试过程可以事先设计，进度可以事先确定，而调试不能描述过程或持续时间",
        "测试的目的是找出程序中存在的错误，而调试的目的是定位错误并且修改程序以修正错误"
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 523293,
    "question_title": "单元测试的依据是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "需求分析文档",
      "概要设计",
      "详细设计",
      "用户需求"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 27,
      "belong_page": 1,
      "question_id": 523293,
      "question_title": "单元测试的依据是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523293,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "需求分析文档",
        "概要设计",
        "详细设计",
        "用户需求"
      ]
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9377",
    "section_name": "软件工程基础知识（第二版） - 软件测试",
    "question_id": 286363,
    "question_title": "<p>围绕“论软件测试中缺陷管理及其应用”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你参与管理和开发的软件项目以及承担的工作</p><p>2.详细论述常见的缺陷种类及级别，论述缺陷管理和基本流程</p><p>3.结合你具体参与管理和开发的实际项目，说明是如何进行缺陷管理的。请具体说明实施过程及应用效果。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>写作要点</p><p>企业集成架构有三类，分别是数据集成、应用集成、企业集成。</p><p>1、 数据集成，是为了解决不同应用和系统间的数据共享和交换需求，具体包括共享信息管理、共享模型管理和数据操作管理三个部分。共享信息管理通过定义统一的集成服务模型和共享信息访问机制，完成对集成平台运行过程中产生数据信息的共享、分发和存储管理；共享模型管理则提供数据资源配置管理、集成资源关系管理、资源运行生命周期管理及相应的业务数据协同监控管理等功能；数据操作管理则为集成平台用户提供数据操作服务，包括多通道的异构模型之间的数据转换、数据映射、数据传递和数据操作等功能服务。数据集成的模式包括：数据联邦、数据复制模式、基于结构的数据集成模式。</p><p>2、 应用集成，是指两个或多个应用系统根据业务逻辑的需要而进行的功能之间的互相调用和互操作。应用集成需要在数据集成的基础上完成。应用集成在底层的网络集成和数据集成的基础上实现异构应用系统之间应用层次上的互操作。它们共同构成了实现企业集成化运行最顶层集成所需要的技术层次上的支持。应用集成的模式包括：集成适配器模式、集成信使模式、集成面板模式和集成代理模式。</p><p>3、 企业集成，应用软件系统从功能逻辑上可以分为表示、业务逻辑和数据三个层次。其中表示层负责完成系统与用户交互的接口定义；业务逻辑层主要根据具体业务规则完成相应业务数据的处理；数据层负责存储由业务逻辑层处理所产生的业务数据，它是系统中相对稳定的部分。支持企业间应用集成和交互的集成平台通常采用多层结构，其目的是在最大程度上提高系统的柔性。在集成平台的具体设计开发中，还需要按照功能的通用程度对系统实现模块进行分层。企业集成的模式包括：前端集成模式、后端集成模式和混合集成模式。</p><p><br/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 28,
      "belong_page": 1,
      "question_id": 286363,
      "question_title": "<p>围绕“论软件测试中缺陷管理及其应用”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你参与管理和开发的软件项目以及承担的工作</p><p>2.详细论述常见的缺陷种类及级别，论述缺陷管理和基本流程</p><p>3.结合你具体参与管理和开发的实际项目，说明是如何进行缺陷管理的。请具体说明实施过程及应用效果。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 286363,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>写作要点</p><p>企业集成架构有三类，分别是数据集成、应用集成、企业集成。</p><p>1、 数据集成，是为了解决不同应用和系统间的数据共享和交换需求，具体包括共享信息管理、共享模型管理和数据操作管理三个部分。共享信息管理通过定义统一的集成服务模型和共享信息访问机制，完成对集成平台运行过程中产生数据信息的共享、分发和存储管理；共享模型管理则提供数据资源配置管理、集成资源关系管理、资源运行生命周期管理及相应的业务数据协同监控管理等功能；数据操作管理则为集成平台用户提供数据操作服务，包括多通道的异构模型之间的数据转换、数据映射、数据传递和数据操作等功能服务。数据集成的模式包括：数据联邦、数据复制模式、基于结构的数据集成模式。</p><p>2、 应用集成，是指两个或多个应用系统根据业务逻辑的需要而进行的功能之间的互相调用和互操作。应用集成需要在数据集成的基础上完成。应用集成在底层的网络集成和数据集成的基础上实现异构应用系统之间应用层次上的互操作。它们共同构成了实现企业集成化运行最顶层集成所需要的技术层次上的支持。应用集成的模式包括：集成适配器模式、集成信使模式、集成面板模式和集成代理模式。</p><p>3、 企业集成，应用软件系统从功能逻辑上可以分为表示、业务逻辑和数据三个层次。其中表示层负责完成系统与用户交互的接口定义；业务逻辑层主要根据具体业务规则完成相应业务数据的处理；数据层负责存储由业务逻辑层处理所产生的业务数据，它是系统中相对稳定的部分。支持企业间应用集成和交互的集成平台通常采用多层结构，其目的是在最大程度上提高系统的柔性。在集成平台的具体设计开发中，还需要按照功能的通用程度对系统实现模块进行分层。企业集成的模式包括：前端集成模式、后端集成模式和混合集成模式。</p><p><br/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176845.4662185
  },
  {
    "section_id": "9378",
    "section_name": "软件工程基础知识（第二版） - 净室软件工程",
    "question_id": 523251,
    "question_title": "净室软件工程的理论基础是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "函数理论和抽样理论",
      "概率统计",
      "迭代模型",
      "瀑布模型"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 523251,
      "question_title": "净室软件工程的理论基础是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523251,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "函数理论和抽样理论",
        "概率统计",
        "迭代模型",
        "瀑布模型"
      ]
    },
    "crawl_time": 1753176846.8777895
  },
  {
    "section_id": "9379",
    "section_name": "软件工程基础知识（第二版） - 基于构件的软件工程",
    "question_id": 354880,
    "question_title": "<p>在构件的定义中，(36)是一个已命名的一组操作的集合。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 接口 ",
      " 对象 ",
      " 函数 ",
      " 模块 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 354880,
      "question_title": "<p>在构件的定义中，(36)是一个已命名的一组操作的集合。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354880,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 接口 ",
        " 对象 ",
        " 函数 ",
        " 模块 "
      ]
    },
    "crawl_time": 1753176848.342693
  },
  {
    "section_id": "9379",
    "section_name": "软件工程基础知识（第二版） - 基于构件的软件工程",
    "question_id": 354884,
    "question_title": "<p>在服务端构件模型的典型解决方案中，(37)较为适用于应用服务器。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " EJB和COM+模型 ",
      " EJB和servlet模型 ",
      " COM+和ASP模型 ",
      " COM+和servlet模型 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 354884,
      "question_title": "<p>在服务端构件模型的典型解决方案中，(37)较为适用于应用服务器。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354884,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " EJB和COM+模型 ",
        " EJB和servlet模型 ",
        " COM+和ASP模型 ",
        " COM+和servlet模型 "
      ]
    },
    "crawl_time": 1753176848.342693
  },
  {
    "section_id": "9379",
    "section_name": "软件工程基础知识（第二版） - 基于构件的软件工程",
    "question_id": 354890,
    "question_title": "<p>以下有关构件演化的描述中，说法不正确的是（38）</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 安装新版本构件可能与现有系统发生冲突 ",
      " 构件通常也会经历一般软件产品具有的演化过程 ",
      " 解决遗留系统移植问题，还需要通过使用包裹器构件，更适配旧版软件 ",
      " 为安装新版本的构建，必须终止系统中所有已有版本构件后运行 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 354890,
      "question_title": "<p>以下有关构件演化的描述中，说法不正确的是（38）</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354890,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 安装新版本构件可能与现有系统发生冲突 ",
        " 构件通常也会经历一般软件产品具有的演化过程 ",
        " 解决遗留系统移植问题，还需要通过使用包裹器构件，更适配旧版软件 ",
        " 为安装新版本的构建，必须终止系统中所有已有版本构件后运行 "
      ]
    },
    "crawl_time": 1753176848.342693
  },
  {
    "section_id": "9379",
    "section_name": "软件工程基础知识（第二版） - 基于构件的软件工程",
    "question_id": 354896,
    "question_title": "<p>软件复杂性度量中，（39）可以反映源代码结构的复杂度。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 模块数 ",
      " 环路数 ",
      " 用户数 ",
      " 对象数 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 354896,
      "question_title": "<p>软件复杂性度量中，（39）可以反映源代码结构的复杂度。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354896,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 模块数 ",
        " 环路数 ",
        " 用户数 ",
        " 对象数 "
      ]
    },
    "crawl_time": 1753176848.342693
  },
  {
    "section_id": "9379",
    "section_name": "软件工程基础知识（第二版） - 基于构件的软件工程",
    "question_id": 373657,
    "question_title": "CBSE体现了（21）的哲学，将软件开发的重点从程序编写转移到了基于已有构件的组装，以更快地构造系统，减轻用来支持和升级大型系统所需要的维护负担，从而降低软件开发的费用。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "预测与分解",
      "抽象是有层次的",
      "购买而不是重新构造",
      "万物皆对象"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 373657,
      "question_title": "CBSE体现了（21）的哲学，将软件开发的重点从程序编写转移到了基于已有构件的组装，以更快地构造系统，减轻用来支持和升级大型系统所需要的维护负担，从而降低软件开发的费用。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373657,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "预测与分解",
        "抽象是有层次的",
        "购买而不是重新构造",
        "万物皆对象"
      ]
    },
    "crawl_time": 1753176848.342693
  },
  {
    "section_id": "9379",
    "section_name": "软件工程基础知识（第二版） - 基于构件的软件工程",
    "question_id": 373693,
    "question_title": "（51）是一个自包容、可复用的程序集，外界通过接口访问其提供的服务。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "面向对象系统中的对象（Object）",
      "模块化程序设计中的子程序（Subroutine）",
      "基于构件开发中的构件（Component）",
      "面向服务开发中的服务（Service）"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 373693,
      "question_title": "（51）是一个自包容、可复用的程序集，外界通过接口访问其提供的服务。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373693,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "面向对象系统中的对象（Object）",
        "模块化程序设计中的子程序（Subroutine）",
        "基于构件开发中的构件（Component）",
        "面向服务开发中的服务（Service）"
      ]
    },
    "crawl_time": 1753176848.342693
  },
  {
    "section_id": "9379",
    "section_name": "软件工程基础知识（第二版） - 基于构件的软件工程",
    "question_id": 355321,
    "question_title": "<p>从下列的4道试题(试题一至试题四) 中任选1道解答。请在答题纸上的指定位置处将所选择试题的题号框涂黑。若多涂或者未涂题号框，则对题号最小的一道试题进行评分。</p><p><br/></p><p class=\"paragraph text-align-type-left pap-line-1.7 pap-line-rule-auto pap-spacing-before-0pt pap-spacing-after-0pt tco-title-heading 3\" style=\"line-height: 1.989px;margin-top: 0px;margin-bottom: 0px\">试题一 论基于构件的软件开发方法及其应用</p><p>基于构作的软件开发 (Component-Based Software Development，CBSD) 是一种基于分布对象技术、强调通过可复用构件设计与构造软件系统的软件复用途径。基于构件的软件系统中的构件可以是COTS （Commercial-Off-the-Shelf）构件，也可以是通过其它途径获得的构件(如自行开发)。CBSD将软件开发的重点从程序编写转移到了基于已有构件的组装，以更快地构造系统，减轻用来支持和升级大型系统所需要的维护负担，从而降低软件开发的费用。</p><p><br/></p><p>请围绕“基于构件的软件开发方法及其应用&quot;论题，依次从以下三个方面进行论述。</p><p><br/></p><p>1.&nbsp; 概要叙述你参与管理和开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.&nbsp; 详细论述基于构件的软件开发方法的主要过程。</p><p>3.&nbsp; 结合你具体参与管理和开发的实际项目，请说明具体实施过程以及碰到的主要问题。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>一、概要叙述你所参与管理或开发的软件项目以及你在其中所承担的主要工作。</p><p>二、详细论述基于构件的软件开发方法的主要过程。</p><p>CBSD方法使得软件开发不再一切从头开发，开发的过程就是构件组装的过程，维护的过程就是构件升级、替换和扩充的过程，其优点是提高了软件开发的效率；构件可由一方定义其规格说明，被另一方实现，然后供给第三方使用，CBSD允许多个项目同时开发，降低了费用，提高了可维护性，可实现分步提交软件产品。</p><p>CBSD方法由软件的需求分析和定义、架构设计、构件库的建立、应用软件构建、测试和发布五个阶段组成。</p><p>（1）需求分析和定义：在这阶段需要重点说明系统跟曾经开发过的其他系统类似，具有大量可复用的成熟构件。</p><p>（2）架构设计：结合实际项目，根据上一阶段获得的需求和定义提出架构模型。</p><p>（3）构件库的建立：这是本论文主题的重点。构件的获得有四个途径：</p><p>1）从现有构件中获得符合要求的构件，直接使用或作适应性修改，得到可复用的构件。</p><p>2）通过遗留工程（Legacy Engineering），将具有潜在复用价值的构件提取出来，得到可复用的构件。</p><p>3）从市场上购买现成的商业构件，即 COTS（Commercial Off-The-Shell）构件。</p><p>4）开发新的符合要求的构件。</p><p>而构件库的检索方法有3种</p><p>1）基于关键字的检索。</p><p>2）刻面检索法。</p><p>3）超文本检索法。</p><p>（4）应用软件构建：构建过程主要是构件的组装过程，而大致有三种技术：</p><p>1）基于功能的组装技术。基于功能的组装技术采用子程序调用和参数传递的方式将构件组装起来。它要求库中的构件以子程序/过程/函数的形式出现，并且接口说明必须清晰。当使用这种组装技术进行软件开发时，开发人员首先要对新系统进行功能分解，将系统分解为强内聚、松耦合的功能模块；然后根据各模块的功能需求提取构件，进行适应性修改后，再挂接到上述功能分解框架中。</p><p>2）基于数据的组装技术。基于数据的组装技术首先根据当前软件问题的核心数据结构设计出一个框架，然后根据框架中各结点的需求提取构件并进行适应性修改，再将构件逐个分配至框架中的适当位置。此后，构件的组装方式仍然是传统的子程序调用与参数传递。这种组装技术也要求库中构件以子程序形式出现，但它所依赖的软件设计方法不再是功能分解，而是面向数据的设计方法，例如，Jackson 系统开发方法。</p><p>3）面向对象的组装技术。由于封装和继承特征，面向对象方法比其他软件开发方法更适合支持软件复用。在面向对象的软件开发方法中，如果从类库中检索出来的基类能够完全满足新系统的需求，则可以直接应用，否则，必须以基类为父类，生成相应的子类，以满足新系统的需求。</p><p>（5）测试和发布：可以是一个增量和迭代的过程。</p><p>三、结合你具体参与管理和开发的实际项目，请说明具体实施过程以及碰到的主要问题。</p><p>可能遇到的问题包括：构件不适配；连接子不适配；从遗留工程中抽取的构件性能不满足；购买现成的商业构件无法完美匹配等。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 355321,
      "question_title": "<p>从下列的4道试题(试题一至试题四) 中任选1道解答。请在答题纸上的指定位置处将所选择试题的题号框涂黑。若多涂或者未涂题号框，则对题号最小的一道试题进行评分。</p><p><br/></p><p class=\"paragraph text-align-type-left pap-line-1.7 pap-line-rule-auto pap-spacing-before-0pt pap-spacing-after-0pt tco-title-heading 3\" style=\"line-height: 1.989px;margin-top: 0px;margin-bottom: 0px\">试题一 论基于构件的软件开发方法及其应用</p><p>基于构作的软件开发 (Component-Based Software Development，CBSD) 是一种基于分布对象技术、强调通过可复用构件设计与构造软件系统的软件复用途径。基于构件的软件系统中的构件可以是COTS （Commercial-Off-the-Shelf）构件，也可以是通过其它途径获得的构件(如自行开发)。CBSD将软件开发的重点从程序编写转移到了基于已有构件的组装，以更快地构造系统，减轻用来支持和升级大型系统所需要的维护负担，从而降低软件开发的费用。</p><p><br/></p><p>请围绕“基于构件的软件开发方法及其应用&quot;论题，依次从以下三个方面进行论述。</p><p><br/></p><p>1.&nbsp; 概要叙述你参与管理和开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.&nbsp; 详细论述基于构件的软件开发方法的主要过程。</p><p>3.&nbsp; 结合你具体参与管理和开发的实际项目，请说明具体实施过程以及碰到的主要问题。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 355321,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>一、概要叙述你所参与管理或开发的软件项目以及你在其中所承担的主要工作。</p><p>二、详细论述基于构件的软件开发方法的主要过程。</p><p>CBSD方法使得软件开发不再一切从头开发，开发的过程就是构件组装的过程，维护的过程就是构件升级、替换和扩充的过程，其优点是提高了软件开发的效率；构件可由一方定义其规格说明，被另一方实现，然后供给第三方使用，CBSD允许多个项目同时开发，降低了费用，提高了可维护性，可实现分步提交软件产品。</p><p>CBSD方法由软件的需求分析和定义、架构设计、构件库的建立、应用软件构建、测试和发布五个阶段组成。</p><p>（1）需求分析和定义：在这阶段需要重点说明系统跟曾经开发过的其他系统类似，具有大量可复用的成熟构件。</p><p>（2）架构设计：结合实际项目，根据上一阶段获得的需求和定义提出架构模型。</p><p>（3）构件库的建立：这是本论文主题的重点。构件的获得有四个途径：</p><p>1）从现有构件中获得符合要求的构件，直接使用或作适应性修改，得到可复用的构件。</p><p>2）通过遗留工程（Legacy Engineering），将具有潜在复用价值的构件提取出来，得到可复用的构件。</p><p>3）从市场上购买现成的商业构件，即 COTS（Commercial Off-The-Shell）构件。</p><p>4）开发新的符合要求的构件。</p><p>而构件库的检索方法有3种</p><p>1）基于关键字的检索。</p><p>2）刻面检索法。</p><p>3）超文本检索法。</p><p>（4）应用软件构建：构建过程主要是构件的组装过程，而大致有三种技术：</p><p>1）基于功能的组装技术。基于功能的组装技术采用子程序调用和参数传递的方式将构件组装起来。它要求库中的构件以子程序/过程/函数的形式出现，并且接口说明必须清晰。当使用这种组装技术进行软件开发时，开发人员首先要对新系统进行功能分解，将系统分解为强内聚、松耦合的功能模块；然后根据各模块的功能需求提取构件，进行适应性修改后，再挂接到上述功能分解框架中。</p><p>2）基于数据的组装技术。基于数据的组装技术首先根据当前软件问题的核心数据结构设计出一个框架，然后根据框架中各结点的需求提取构件并进行适应性修改，再将构件逐个分配至框架中的适当位置。此后，构件的组装方式仍然是传统的子程序调用与参数传递。这种组装技术也要求库中构件以子程序形式出现，但它所依赖的软件设计方法不再是功能分解，而是面向数据的设计方法，例如，Jackson 系统开发方法。</p><p>3）面向对象的组装技术。由于封装和继承特征，面向对象方法比其他软件开发方法更适合支持软件复用。在面向对象的软件开发方法中，如果从类库中检索出来的基类能够完全满足新系统的需求，则可以直接应用，否则，必须以基类为父类，生成相应的子类，以满足新系统的需求。</p><p>（5）测试和发布：可以是一个增量和迭代的过程。</p><p>三、结合你具体参与管理和开发的实际项目，请说明具体实施过程以及碰到的主要问题。</p><p>可能遇到的问题包括：构件不适配；连接子不适配；从遗留工程中抽取的构件性能不满足；购买现成的商业构件无法完美匹配等。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176848.342693
  },
  {
    "section_id": "9379",
    "section_name": "软件工程基础知识（第二版） - 基于构件的软件工程",
    "question_id": 356292,
    "question_title": "<p>从下列的4道试题(试题一至试题四) 中任选1道解答。请在答题纸上的指定位置处将所选择试题的题号框涂黑。若多涂或者未涂题号框，则对题号最小的一道试题进行评分。</p><p style=\"margin-top: 0;margin-bottom: 0;line-height: 170%\">试题一 论基于构件的软件开发方法及其应用</p><p>基于构作的软件开发 (Component-Based Software Development，CBSD) 是一种基于分布对象技术、强调通过可复用构件设计与构造软件系统的软件复用途径。基于构件的软件系统中的构件可以是COTS （Commercial-Off-the-Shelf）构件，也可以是通过其它途径获得的构件(如自行开发)。CBSD将软件开发的重点从程序编写转移到了基于已有构件的组装，以更快地构造系统，减轻用来支持和升级大型系统所需要的维护负担，从而降低软件开发的费用。</p><p>请围绕“基于构件的软件开发方法及其应用&quot;论题，依次从以下三个方面进行论述。</p><p>1.&nbsp;&nbsp;概要叙述你参与管理和开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.&nbsp;&nbsp;详细论述基于构件的软件开发方法的主要过程。</p><p>3.&nbsp;&nbsp;结合你具体参与管理和开发的实际项目，请说明具体实施过程以及碰到的主要问题。<br/><br/><br/></p><p style=\"margin-top: 0;margin-bottom: 0;line-height: 170%\">试题二 论软件维护方法及其应用</p><p>软件维护是指在软件交付使用后，直至软件被淘汰的整个时间范围内，为了改正错</p><p>误或满足新的需求而修改软件的活动。在软件系统运行过程中，软件需要维护的原因是</p><p>多种多样的，根据维护的原因不同，可以将软件维护分为改正性维护、适应性维护、完</p><p>善性维护和预防性维护。在维护的过程中，也需要对软件的可维护性进行度量。在软件</p><p>外部，一般采用 MTTR 来度量软件的可维护性；在软件内部，可以通过度量软件的复杂</p><p>性来间接度量软件的可维护性。</p><p>据统计，软件维护阶段占整个软件生命周期60%以上的时间。因此，分析影响软件</p><p>维护的因素，度量和提高软件的可维护性，就显得十分重要。</p><p>请围绕“软件维护方法及其应用”论题，依次从以下三个方面进行论述。</p><p>1.&nbsp;&nbsp;概要叙述你参与管理和开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.&nbsp;&nbsp;详细论述影响软件维护工作的因素有哪些。</p><p>3.&nbsp;&nbsp;结合你具体参与管理和开发的实际项目，说明在具体维护过程中，如何度量软件的可维护性，说明具体的软件维护工作类型。</p><p><br/><br/></p><p style=\"margin-top: 0;margin-bottom: 0;line-height: 170%\">试题三 论区块链技术及应用</p><p>区块链作为一种分布式记账技术，目前已经被应用到了资产管理、物联网、医疗管理、政务监管等多个领域。从网络层面来讲，区块链是一个对等网络(Peer to Peer， P2P)，网络中的节点地位对等，每个节点都保存完整的账本数据，系统的运行不依赖中心化节点，因此避免了中心化带来的单点故障问题。同时，区块链作为一个拜占庭容错的分布式系统，在存在少量恶意节点情况下可以作为一个整体对外提供稳定的服务。</p><p>请围绕“区块链技术及应用”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你参与管理和开发的软件项目以及你在其中所承担的主要工作。</p><p>2.区块链包含多种核心技术，请简要描述区块链的3种核心技术。</p><p>3.具体阐述你参与管理和开发的项目是如何应用区块链技术进行设计与实现。</p><p><br/><br/></p><p style=\"margin-top: 0;margin-bottom: 0;line-height: 170%\"></p><p style=\"margin-top: 0;margin-bottom: 0;line-height: 170%\">试题四 论湖仓一体架构及其应用</p><p>随着5G、大数据、人工智能、物联网等技术的不断成熟，各行各业的业务场景日益复杂，企业数据呈现出大规模、多样性的特点，特别是非结构化数据呈现出爆发式增长趋势。在这一背景下，企业数据管理不再局限于传统的结构化 OLTP (On-Line Transaction Processing)数据交易过程，而是提出了多样化、异质性数据的实时处理要求。传统的数据湖(Data Lake)在事务一致性及实时处理方面有所欠缺，而数据仓库(Data Warehouse)也无法应对高并发、多数据类型的处理。因此，支持事务一致性、提供高并发实时处理及分析能力的湖仓一体(Lake House) 架构应运而生。湖仓一体架构在成本、灵活性、统一数据存储、多元数据分析等多方面具备优势，正逐步转化为下一代数据管理系统的核心竞争力。</p><p>请围绕“湖仓一体架构及其应用”论题，依次从以下三个方面进行论述。</p><p>1. 概要叙述你参与管理和开发的、采用湖仓一体架构的软件项目以及你在其中所</p><p>承担的主要工作。</p><p>2. 请对湖仓一体架构进行总结与分析，给出其中四类关键特征，并简要对这四类</p><p>关键特征的内涵进行阐述。</p><p>3. 具体阐述你参与管理和开发的项目是如何采用湖仓一体架构的，并围绕上述四类关键特征，详细论述在项目设计与实现过程中遇到了哪些实际问题，是如何解决的。</p><p><br/></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "无"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 356292,
      "question_title": "<p>从下列的4道试题(试题一至试题四) 中任选1道解答。请在答题纸上的指定位置处将所选择试题的题号框涂黑。若多涂或者未涂题号框，则对题号最小的一道试题进行评分。</p><p style=\"margin-top: 0;margin-bottom: 0;line-height: 170%\">试题一 论基于构件的软件开发方法及其应用</p><p>基于构作的软件开发 (Component-Based Software Development，CBSD) 是一种基于分布对象技术、强调通过可复用构件设计与构造软件系统的软件复用途径。基于构件的软件系统中的构件可以是COTS （Commercial-Off-the-Shelf）构件，也可以是通过其它途径获得的构件(如自行开发)。CBSD将软件开发的重点从程序编写转移到了基于已有构件的组装，以更快地构造系统，减轻用来支持和升级大型系统所需要的维护负担，从而降低软件开发的费用。</p><p>请围绕“基于构件的软件开发方法及其应用&quot;论题，依次从以下三个方面进行论述。</p><p>1.&nbsp;&nbsp;概要叙述你参与管理和开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.&nbsp;&nbsp;详细论述基于构件的软件开发方法的主要过程。</p><p>3.&nbsp;&nbsp;结合你具体参与管理和开发的实际项目，请说明具体实施过程以及碰到的主要问题。<br/><br/><br/></p><p style=\"margin-top: 0;margin-bottom: 0;line-height: 170%\">试题二 论软件维护方法及其应用</p><p>软件维护是指在软件交付使用后，直至软件被淘汰的整个时间范围内，为了改正错</p><p>误或满足新的需求而修改软件的活动。在软件系统运行过程中，软件需要维护的原因是</p><p>多种多样的，根据维护的原因不同，可以将软件维护分为改正性维护、适应性维护、完</p><p>善性维护和预防性维护。在维护的过程中，也需要对软件的可维护性进行度量。在软件</p><p>外部，一般采用 MTTR 来度量软件的可维护性；在软件内部，可以通过度量软件的复杂</p><p>性来间接度量软件的可维护性。</p><p>据统计，软件维护阶段占整个软件生命周期60%以上的时间。因此，分析影响软件</p><p>维护的因素，度量和提高软件的可维护性，就显得十分重要。</p><p>请围绕“软件维护方法及其应用”论题，依次从以下三个方面进行论述。</p><p>1.&nbsp;&nbsp;概要叙述你参与管理和开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.&nbsp;&nbsp;详细论述影响软件维护工作的因素有哪些。</p><p>3.&nbsp;&nbsp;结合你具体参与管理和开发的实际项目，说明在具体维护过程中，如何度量软件的可维护性，说明具体的软件维护工作类型。</p><p><br/><br/></p><p style=\"margin-top: 0;margin-bottom: 0;line-height: 170%\">试题三 论区块链技术及应用</p><p>区块链作为一种分布式记账技术，目前已经被应用到了资产管理、物联网、医疗管理、政务监管等多个领域。从网络层面来讲，区块链是一个对等网络(Peer to Peer， P2P)，网络中的节点地位对等，每个节点都保存完整的账本数据，系统的运行不依赖中心化节点，因此避免了中心化带来的单点故障问题。同时，区块链作为一个拜占庭容错的分布式系统，在存在少量恶意节点情况下可以作为一个整体对外提供稳定的服务。</p><p>请围绕“区块链技术及应用”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你参与管理和开发的软件项目以及你在其中所承担的主要工作。</p><p>2.区块链包含多种核心技术，请简要描述区块链的3种核心技术。</p><p>3.具体阐述你参与管理和开发的项目是如何应用区块链技术进行设计与实现。</p><p><br/><br/></p><p style=\"margin-top: 0;margin-bottom: 0;line-height: 170%\"></p><p style=\"margin-top: 0;margin-bottom: 0;line-height: 170%\">试题四 论湖仓一体架构及其应用</p><p>随着5G、大数据、人工智能、物联网等技术的不断成熟，各行各业的业务场景日益复杂，企业数据呈现出大规模、多样性的特点，特别是非结构化数据呈现出爆发式增长趋势。在这一背景下，企业数据管理不再局限于传统的结构化 OLTP (On-Line Transaction Processing)数据交易过程，而是提出了多样化、异质性数据的实时处理要求。传统的数据湖(Data Lake)在事务一致性及实时处理方面有所欠缺，而数据仓库(Data Warehouse)也无法应对高并发、多数据类型的处理。因此，支持事务一致性、提供高并发实时处理及分析能力的湖仓一体(Lake House) 架构应运而生。湖仓一体架构在成本、灵活性、统一数据存储、多元数据分析等多方面具备优势，正逐步转化为下一代数据管理系统的核心竞争力。</p><p>请围绕“湖仓一体架构及其应用”论题，依次从以下三个方面进行论述。</p><p>1. 概要叙述你参与管理和开发的、采用湖仓一体架构的软件项目以及你在其中所</p><p>承担的主要工作。</p><p>2. 请对湖仓一体架构进行总结与分析，给出其中四类关键特征，并简要对这四类</p><p>关键特征的内涵进行阐述。</p><p>3. 具体阐述你参与管理和开发的项目是如何采用湖仓一体架构的，并围绕上述四类关键特征，详细论述在项目设计与实现过程中遇到了哪些实际问题，是如何解决的。</p><p><br/></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 356292,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "无"
      ],
      "option": null
    },
    "crawl_time": 1753176848.342693
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 43760,
    "question_title": "<p><br/></p><p><br/></p><p class=\"MsoNormal\" style=\"text-indent:20.7000pt;text-align:left;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">关于项目范围管理描述，正确的是</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">25</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">。</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;mso-hansi-font-family:&#39;Times New Roman&#39;;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 项目范围是指信息系统产品或者服务所应包含的功能 ",
      " 项目范围描述是产品范围说明书的重要组成部分 ",
      " 项目范围定义是信息系统要求的度量 ",
      " 项目范围定义是生产项目计划的基础 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43760,
      "question_title": "<p><br/></p><p><br/></p><p class=\"MsoNormal\" style=\"text-indent:20.7000pt;text-align:left;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">关于项目范围管理描述，正确的是</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">25</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">。</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;mso-hansi-font-family:&#39;Times New Roman&#39;;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43760,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 项目范围是指信息系统产品或者服务所应包含的功能 ",
        " 项目范围描述是产品范围说明书的重要组成部分 ",
        " 项目范围定义是信息系统要求的度量 ",
        " 项目范围定义是生产项目计划的基础 "
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 43761,
    "question_title": "<p><br/></p><p><br/></p><p class=\"MsoNormal\" style=\"text-indent:20.7000pt;text-align:left;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">项目配置管理中，配置项的状态通常包括</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">26</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">。</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;mso-hansi-font-family:&#39;Times New Roman&#39;;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 草稿、正式发布和正在修改&nbsp; ",
      " 草稿、技术评审和正式发布 ",
      " 草稿、评审或审批、正式发布&nbsp;&nbsp; ",
      " 草稿、正式发布和版本变更 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 43761,
      "question_title": "<p><br/></p><p><br/></p><p class=\"MsoNormal\" style=\"text-indent:20.7000pt;text-align:left;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">项目配置管理中，配置项的状态通常包括</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">26</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">。</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;mso-hansi-font-family:&#39;Times New Roman&#39;;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43761,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 草稿、正式发布和正在修改&nbsp; ",
        " 草稿、技术评审和正式发布 ",
        " 草稿、评审或审批、正式发布&nbsp;&nbsp; ",
        " 草稿、正式发布和版本变更 "
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 49892,
    "question_title": "<p><br/></p><p>某工程包括 A、B、C、D 四个作业，其衔接关系、正常进度下所需天数和所需直接费用、赶工进度下所需的最少天数和每天需要增加的直接费用见下表。该工程的间接费用为每天 5万元。据此，可以估算出完成该工程最少需要费用（请作答此空 ）万元，以此最低费用完成该工程需要（）天。<br/></p><br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20190912/1568253417767135.png\" title=\"1568253417767135.png\" alt=\"image.png\"/>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 106 ",
      " 108 ",
      " 109 ",
      " 115 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 49892,
      "question_title": "<p><br/></p><p>某工程包括 A、B、C、D 四个作业，其衔接关系、正常进度下所需天数和所需直接费用、赶工进度下所需的最少天数和每天需要增加的直接费用见下表。该工程的间接费用为每天 5万元。据此，可以估算出完成该工程最少需要费用（请作答此空 ）万元，以此最低费用完成该工程需要（）天。<br/></p><br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20190912/1568253417767135.png\" title=\"1568253417767135.png\" alt=\"image.png\"/>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49892,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 106 ",
        " 108 ",
        " 109 ",
        " 115 "
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 54206,
    "question_title": "<p>甘特图（Gantt图）不能（ &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 作为项目进度管理的一个工具 ",
      " 清晰地描述每个任务的开始和截止时间 ",
      " 清晰地获得任务并行进行的信息 ",
      " 清晰地获得各任务之间的依赖关系 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 54206,
      "question_title": "<p>甘特图（Gantt图）不能（ &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54206,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 作为项目进度管理的一个工具 ",
        " 清晰地描述每个任务的开始和截止时间 ",
        " 清晰地获得任务并行进行的信息 ",
        " 清晰地获得各任务之间的依赖关系 "
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 54207,
    "question_title": "<p>以下关于风险管理的叙述中，不正确的是（ &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 仅根据风险产生的后果来对风险排优先级 ",
      " 可以通过改变系统性能或功能需求来避免某些风险 ",
      " 不可能去除所有风险，但可以通过采取行动来降低或者减轻风险 ",
      " 在项目开发过程中，需要定期地评估和管理风险 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 54207,
      "question_title": "<p>以下关于风险管理的叙述中，不正确的是（ &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54207,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 仅根据风险产生的后果来对风险排优先级 ",
        " 可以通过改变系统性能或功能需求来避免某些风险 ",
        " 不可能去除所有风险，但可以通过采取行动来降低或者减轻风险 ",
        " 在项目开发过程中，需要定期地评估和管理风险 "
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 63619,
    "question_title": "<p>项目时间管理中的过程包括（　）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 活动定义、活动排序、活动的资源估算和工作进度分解 ",
      " 活动定义、活动排序、活动的资源估算、活动历时估算、制定计划和进度控制 ",
      " 项目章程、项目范围管理计划、组织过程资产和批准的变更申请 ",
      " 生产项目计划、项目可交付物说明、信息系统要求说明和项目度量标准 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 63619,
      "question_title": "<p>项目时间管理中的过程包括（　）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63619,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 活动定义、活动排序、活动的资源估算和工作进度分解 ",
        " 活动定义、活动排序、活动的资源估算、活动历时估算、制定计划和进度控制 ",
        " 项目章程、项目范围管理计划、组织过程资产和批准的变更申请 ",
        " 生产项目计划、项目可交付物说明、信息系统要求说明和项目度量标准 "
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 63620,
    "question_title": "<p>文档是影响软件可维护性的决定因素。软件系统的文档可以分为用户文档和系统文档两类。其中，（　）不属于用户文档包括的内容。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 系统设计 ",
      " 版本说明 ",
      " 安装手册 ",
      " 参考手册 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 63620,
      "question_title": "<p>文档是影响软件可维护性的决定因素。软件系统的文档可以分为用户文档和系统文档两类。其中，（　）不属于用户文档包括的内容。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63620,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 系统设计 ",
        " 版本说明 ",
        " 安装手册 ",
        " 参考手册 "
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 63626,
    "question_title": "<p>下面关于变更控制的描述中，（　）是不正确的。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 变更控制委员会只可以由一个小组担任 ",
      " 控制需求变更与项目的其他配置管理决策有着密切的联系 ",
      " 变更控制过程中可以使用相应的自动辅助工具 ",
      " 变更的过程中，允许拒绝变更 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 63626,
      "question_title": "<p>下面关于变更控制的描述中，（　）是不正确的。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63626,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 变更控制委员会只可以由一个小组担任 ",
        " 控制需求变更与项目的其他配置管理决策有着密切的联系 ",
        " 变更控制过程中可以使用相应的自动辅助工具 ",
        " 变更的过程中，允许拒绝变更 "
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 63689,
    "question_title": "<p><br/></p><p>某企业准备将四个工人甲、乙、丙、丁分配在A、B、C、D四个岗位。每个工人由于技术水平不同，在不同岗位上每天完成任务所需的工时见下表。适当安排岗位，可使四个工人以最短的总工时（　）全部完成每天的任务。</p><br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181127/1543311899691784.jpg\" title=\"1543311899691784.jpg\" alt=\"1.jpg\"/>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 13 ",
      " 14 ",
      " 15 ",
      " 16 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 63689,
      "question_title": "<p><br/></p><p>某企业准备将四个工人甲、乙、丙、丁分配在A、B、C、D四个岗位。每个工人由于技术水平不同，在不同岗位上每天完成任务所需的工时见下表。适当安排岗位，可使四个工人以最短的总工时（　）全部完成每天的任务。</p><br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181127/1543311899691784.jpg\" title=\"1543311899691784.jpg\" alt=\"1.jpg\"/>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63689,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 13 ",
        " 14 ",
        " 15 ",
        " 16 "
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 159222,
    "question_title": "<p>某公司支出20万元购买了某市场预测信息，由于此信息的采纳，公司多得到了100万元的利润，对公司而言，这个市场预测信息的（ ）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 收益是20万元 ",
      " 收益是80万元 ",
      " 收益是100万元 ",
      " 收益不能衡量 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 159222,
      "question_title": "<p>某公司支出20万元购买了某市场预测信息，由于此信息的采纳，公司多得到了100万元的利润，对公司而言，这个市场预测信息的（ ）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159222,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 收益是20万元 ",
        " 收益是80万元 ",
        " 收益是100万元 ",
        " 收益不能衡量 "
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 208495,
    "question_title": "以下叙述中，（ ）不属于可行性分析的范畴。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 对系统开发的各种候选方案进行成本/效益分析 ",
      " 分析现有系统存在的运行问题 ",
      " 评价该项目实施后可能取得的无形收益 ",
      " 评估现有技术能力和信息技术是否足以支持系统目标的实现 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 208495,
      "question_title": "以下叙述中，（ ）不属于可行性分析的范畴。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208495,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 对系统开发的各种候选方案进行成本/效益分析 ",
        " 分析现有系统存在的运行问题 ",
        " 评价该项目实施后可能取得的无形收益 ",
        " 评估现有技术能力和信息技术是否足以支持系统目标的实现 "
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 284701,
    "question_title": "<p>某软件项目的活动图如下所示。图中顶点表示项目里程碑，连接顶点的边表示包含的活动，则里程碑（1）在关键路径上，活动FG的松弛时间为（2）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602644629974691.jpg\" title=\"1602644629974691.jpg\" alt=\"1.jpg\"/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "B&nbsp;",
      "C",
      "D",
      " I "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 284701,
      "question_title": "<p>某软件项目的活动图如下所示。图中顶点表示项目里程碑，连接顶点的边表示包含的活动，则里程碑（1）在关键路径上，活动FG的松弛时间为（2）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602644629974691.jpg\" title=\"1602644629974691.jpg\" alt=\"1.jpg\"/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 284700,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "B&nbsp;",
        "C",
        "D",
        " I "
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 284702,
    "question_title": "<p>某软件项目的活动图如下所示。图中顶点表示项目里程碑，连接顶点的边表示包含的活动，则里程碑（1）在关键路径上，活动FG的松弛时间为（2）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602644629974691.jpg\" title=\"1602644629974691.jpg\" alt=\"1.jpg\"/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "19",
      "20",
      "32",
      "24"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 284702,
      "question_title": "<p>某软件项目的活动图如下所示。图中顶点表示项目里程碑，连接顶点的边表示包含的活动，则里程碑（1）在关键路径上，活动FG的松弛时间为（2）。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602644629974691.jpg\" title=\"1602644629974691.jpg\" alt=\"1.jpg\"/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 284700,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "19",
        "20",
        "32",
        "24"
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 309517,
    "question_title": "<p>某项目由并行的3个活动甲、乙和丙组成，为活动甲分配3人5天可以完成活动乙分配6人7天可以完成，活动丙分配4人2天可以完成，活动完成后人员可再调配。在此情况下，项目最短工期为（ ）天，此时人员最少配置为（ ）人。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "6",
      "7",
      "8",
      "9"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 309517,
      "question_title": "<p>某项目由并行的3个活动甲、乙和丙组成，为活动甲分配3人5天可以完成活动乙分配6人7天可以完成，活动丙分配4人2天可以完成，活动完成后人员可再调配。在此情况下，项目最短工期为（ ）天，此时人员最少配置为（ ）人。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 309516,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "6",
        "7",
        "8",
        "9"
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 309518,
    "question_title": "<p>某项目由并行的3个活动甲、乙和丙组成，为活动甲分配3人5天可以完成活动乙分配6人7天可以完成，活动丙分配4人2天可以完成，活动完成后人员可再调配。在此情况下，项目最短工期为（ ）天，此时人员最少配置为（ ）人。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "6",
      "9",
      "10",
      "13"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 309518,
      "question_title": "<p>某项目由并行的3个活动甲、乙和丙组成，为活动甲分配3人5天可以完成活动乙分配6人7天可以完成，活动丙分配4人2天可以完成，活动完成后人员可再调配。在此情况下，项目最短工期为（ ）天，此时人员最少配置为（ ）人。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 309516,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "6",
        "9",
        "10",
        "13"
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 312982,
    "question_title": "<p>在软件开发项目中，关键路径是项目事件网络中 （1） ，组成关键路径的活动称为关键活动。下图中的关键路径历时 （2） 个时间单位。<br/></p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211014/1634141211828061.jpg\" title=\"1634141211828061.jpg\" alt=\"1.jpg\"/>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "最长的回路",
      "最短的回路",
      "源点和汇点间的最长路径",
      "源点和汇点间的最短路径"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 312982,
      "question_title": "<p>在软件开发项目中，关键路径是项目事件网络中 （1） ，组成关键路径的活动称为关键活动。下图中的关键路径历时 （2） 个时间单位。<br/></p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211014/1634141211828061.jpg\" title=\"1634141211828061.jpg\" alt=\"1.jpg\"/>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 312981,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "最长的回路",
        "最短的回路",
        "源点和汇点间的最长路径",
        "源点和汇点间的最短路径"
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 312983,
    "question_title": "<p>在软件开发项目中，关键路径是项目事件网络中 （1） ，组成关键路径的活动称为关键活动。下图中的关键路径历时 （2） 个时间单位。<br/></p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211014/1634141211828061.jpg\" title=\"1634141211828061.jpg\" alt=\"1.jpg\"/>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "14",
      "18",
      "23",
      "25"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 312983,
      "question_title": "<p>在软件开发项目中，关键路径是项目事件网络中 （1） ，组成关键路径的活动称为关键活动。下图中的关键路径历时 （2） 个时间单位。<br/></p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211014/1634141211828061.jpg\" title=\"1634141211828061.jpg\" alt=\"1.jpg\"/>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 312981,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "14",
        "18",
        "23",
        "25"
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 350302,
    "question_title": "<p>成本是信息系统生命周期内各阶段的所有投入之和，按照成本性态分类，可以分为固定成本、变动成本和混合成本。其中&nbsp;（1） 属于固定成本，&nbsp;（2） 属于变动成本。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 固定资产折旧费 ",
      " 直接材料费 ",
      " 产品包装费 ",
      " 开发奖金 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 18,
      "belong_page": 1,
      "question_id": 350302,
      "question_title": "<p>成本是信息系统生命周期内各阶段的所有投入之和，按照成本性态分类，可以分为固定成本、变动成本和混合成本。其中&nbsp;（1） 属于固定成本，&nbsp;（2） 属于变动成本。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350301,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 固定资产折旧费 ",
        " 直接材料费 ",
        " 产品包装费 ",
        " 开发奖金 "
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 350303,
    "question_title": "<p>成本是信息系统生命周期内各阶段的所有投入之和，按照成本性态分类，可以分为固定成本、变动成本和混合成本。其中&nbsp;（1） 属于固定成本，&nbsp;（2） 属于变动成本。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 员工培训费 ",
      " 房屋租金 ",
      " 技术开发经费 ",
      " 外包费用 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 19,
      "belong_page": 1,
      "question_id": 350303,
      "question_title": "<p>成本是信息系统生命周期内各阶段的所有投入之和，按照成本性态分类，可以分为固定成本、变动成本和混合成本。其中&nbsp;（1） 属于固定成本，&nbsp;（2） 属于变动成本。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350301,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 员工培训费 ",
        " 房屋租金 ",
        " 技术开发经费 ",
        " 外包费用 "
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 352271,
    "question_title": "<p>&nbsp;螺旋模型是原型模型与&nbsp;（25） 的结合。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 生命周期模型 ",
      " 迭代模型 ",
      " 演化模型 ",
      " 喷泉模型 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 20,
      "belong_page": 1,
      "question_id": 352271,
      "question_title": "<p>&nbsp;螺旋模型是原型模型与&nbsp;（25） 的结合。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352271,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 生命周期模型 ",
        " 迭代模型 ",
        " 演化模型 ",
        " 喷泉模型 "
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 352327,
    "question_title": "<p>&nbsp;项目经理为某政府网站改造项目制作了如下双代号网络图（单位：天），该项目的总工期为&nbsp;（1） 天。在项目实施的过程中，活动②—⑦比计划提前了2天，活动⑧—⑩实际工期是3天，活动⑥—⑦的工期增加了3天，判断对项目总工期的影响&nbsp;（2） 。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663932489912514.png\" title=\"1663932489912514.png\" alt=\"image.png\"/>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 40 ",
      " 37 ",
      " 34 ",
      " 32 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 21,
      "belong_page": 1,
      "question_id": 352327,
      "question_title": "<p>&nbsp;项目经理为某政府网站改造项目制作了如下双代号网络图（单位：天），该项目的总工期为&nbsp;（1） 天。在项目实施的过程中，活动②—⑦比计划提前了2天，活动⑧—⑩实际工期是3天，活动⑥—⑦的工期增加了3天，判断对项目总工期的影响&nbsp;（2） 。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663932489912514.png\" title=\"1663932489912514.png\" alt=\"image.png\"/>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352326,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 40 ",
        " 37 ",
        " 34 ",
        " 32 "
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 352328,
    "question_title": "<p>&nbsp;项目经理为某政府网站改造项目制作了如下双代号网络图（单位：天），该项目的总工期为&nbsp;（1） 天。在项目实施的过程中，活动②—⑦比计划提前了2天，活动⑧—⑩实际工期是3天，活动⑥—⑦的工期增加了3天，判断对项目总工期的影响&nbsp;（2） 。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663932489912514.png\" title=\"1663932489912514.png\" alt=\"image.png\"/>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 没有影响 ",
      " 加了2天 ",
      " 增加了3天 ",
      " 增加了4天 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 22,
      "belong_page": 1,
      "question_id": 352328,
      "question_title": "<p>&nbsp;项目经理为某政府网站改造项目制作了如下双代号网络图（单位：天），该项目的总工期为&nbsp;（1） 天。在项目实施的过程中，活动②—⑦比计划提前了2天，活动⑧—⑩实际工期是3天，活动⑥—⑦的工期增加了3天，判断对项目总工期的影响&nbsp;（2） 。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663932489912514.png\" title=\"1663932489912514.png\" alt=\"image.png\"/>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352326,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 没有影响 ",
        " 加了2天 ",
        " 增加了3天 ",
        " 增加了4天 "
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 354840,
    "question_title": "【51CTO学堂-学员回忆版】与 UML 1.x 不同，为了更清楚地表达 UML 的结构， 从 UML 2 开始，整个 UML 规范被划分为基础结构和上层结构两个相对独立的部分，基础结构是 UML 的(30)，它定义了构造 UML模型的各种基本元素：而上层结构则定义了面向建模用户的各种UML 模型的语法、语义和表示。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "元元素",
      "模型",
      "元模型",
      "元元模型"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 23,
      "belong_page": 1,
      "question_id": 354840,
      "question_title": "【51CTO学堂-学员回忆版】与 UML 1.x 不同，为了更清楚地表达 UML 的结构， 从 UML 2 开始，整个 UML 规范被划分为基础结构和上层结构两个相对独立的部分，基础结构是 UML 的(30)，它定义了构造 UML模型的各种基本元素：而上层结构则定义了面向建模用户的各种UML 模型的语法、语义和表示。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354840,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "元元素",
        "模型",
        "元模型",
        "元元模型"
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 355051,
    "question_title": "<p>【51CTO学堂-学员回忆版】数据管理能力成熟度评估模型(DCMM)是我国首个数据管理领域的国家标准，DCMM提出了符合我国企业的数据管理框架，该框架将组织数据管理能力划分为8个能力域，分别为:数据战略、数据治理、数据架构、数据标准，数据质量、数据安全、(19)。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 数据应用和数据生存周期 ",
      " 数据应用和数据测试 ",
      " 数据维护和数据生存周期 ",
      " 数据维护和数据测试 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 24,
      "belong_page": 1,
      "question_id": 355051,
      "question_title": "<p>【51CTO学堂-学员回忆版】数据管理能力成熟度评估模型(DCMM)是我国首个数据管理领域的国家标准，DCMM提出了符合我国企业的数据管理框架，该框架将组织数据管理能力划分为8个能力域，分别为:数据战略、数据治理、数据架构、数据标准，数据质量、数据安全、(19)。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 355051,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 数据应用和数据生存周期 ",
        " 数据应用和数据测试 ",
        " 数据维护和数据生存周期 ",
        " 数据维护和数据测试 "
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 373655,
    "question_title": "<p>某工程计划图示如下，各个作业所需的天数如下表所列，假设该工程从第0天开工，则作业E最迟应在第（19）天开工。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696267307541094.png\" title=\"1696267307541094.png\" alt=\"image.png\" width=\"579\" height=\"292\"/>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "12",
      "13",
      "14",
      "15"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 25,
      "belong_page": 1,
      "question_id": 373655,
      "question_title": "<p>某工程计划图示如下，各个作业所需的天数如下表所列，假设该工程从第0天开工，则作业E最迟应在第（19）天开工。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696267307541094.png\" title=\"1696267307541094.png\" alt=\"image.png\" width=\"579\" height=\"292\"/>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373655,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "12",
        "13",
        "14",
        "15"
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 373656,
    "question_title": "软件生存周期各个阶段活动的产物经审批后即可称之为软件配置项。下面不属于软件配置项的是（20）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "需求分析、设计、测试等相关文档",
      "软件源代码、可执行程序",
      "软件开发环境",
      "开发人员"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 26,
      "belong_page": 1,
      "question_id": 373656,
      "question_title": "软件生存周期各个阶段活动的产物经审批后即可称之为软件配置项。下面不属于软件配置项的是（20）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373656,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "需求分析、设计、测试等相关文档",
        "软件源代码、可执行程序",
        "软件开发环境",
        "开发人员"
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 507301,
    "question_title": "下面选项不包括配置管理的是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "UML",
      "ISO9000",
      "PMBOK",
      "CMMI"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 27,
      "belong_page": 1,
      "question_id": 507301,
      "question_title": "下面选项不包括配置管理的是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507301,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "UML",
        "ISO9000",
        "PMBOK",
        "CMMI"
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 523276,
    "question_title": "进度计算题，D任务延长3天，则总工期延长（）天。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "0天",
      "1天",
      "2天",
      "3天"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 28,
      "belong_page": 1,
      "question_id": 523276,
      "question_title": "进度计算题，D任务延长3天，则总工期延长（）天。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523276,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "0天",
        "1天",
        "2天",
        "3天"
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 523279,
    "question_title": "监理“四控三管一协调”中四控指的是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "成本控制、进度控制、质量控制、变更控制",
      "投资控制、进度控制、质量控制、合同控制",
      "成本控制、进度控制、质量控制、风险控制",
      "投资控制、进度控制、质量控制、变更控制"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 29,
      "belong_page": 1,
      "question_id": 523279,
      "question_title": "监理“四控三管一协调”中四控指的是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523279,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "成本控制、进度控制、质量控制、变更控制",
        "投资控制、进度控制、质量控制、合同控制",
        "成本控制、进度控制、质量控制、风险控制",
        "投资控制、进度控制、质量控制、变更控制"
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 523283,
    "question_title": "以下不属于项目管理和过程支持域的是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "源代码",
      "工作计划",
      "项目追踪",
      "项目质量报告"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 30,
      "belong_page": 1,
      "question_id": 523283,
      "question_title": "以下不属于项目管理和过程支持域的是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523283,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "源代码",
        "工作计划",
        "项目追踪",
        "项目质量报告"
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 523302,
    "question_title": "影响软件质量的三组因素是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "产品运行、产品修改、产品转移",
      "产品运行、产品修改、产品重构",
      "产品修改、产品转移、产品重构",
      "产品运行、产品重构、产品健壮"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 31,
      "belong_page": 1,
      "question_id": 523302,
      "question_title": "影响软件质量的三组因素是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523302,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "产品运行、产品修改、产品转移",
        "产品运行、产品修改、产品重构",
        "产品修改、产品转移、产品重构",
        "产品运行、产品重构、产品健壮"
      ]
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9380",
    "section_name": "软件工程基础知识（第二版） - 软件项目管理",
    "question_id": 208626,
    "question_title": "<p><span style=\"font-size: 16px;\">阅读以下关于某项目开发计划的说明，回答问题。</span></p><p>【说明】</p><p>某软件公司拟开发一套电子商务系统，王工作为项目组负责人负责编制项目计划。由于该企业业务发展需要，CEO急于启动电子商务系统，要求王工尽快准备一份拟开发系统的时间和成本估算报告。</p><p>项目组经过讨论后，确定出与项目相关的任务如表所示。其中，根据项目组开发经验，分别给出了正常工作及加班赶工两种情况下所需的时间和费用。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577702931716250.jpg\" title=\"1577702931716250.jpg\" alt=\"1.jpg\"/></p><p>【问题1】</p><p>请用400字以内文字说明王工拟编制的项目计划中应包括哪些内容。<br/></p><p>【问题2】</p><p>请根据上表，分别给出正常工作和最短工期两种情况下完成此项目所需的时间和费用。</p><p>【问题3】</p><p>如果项目在系统调研阶段用了7天时间才完成，公司要求尽量控制成本，王工可在后续任务中采取什么措施来保证项目能按照正常工作进度完成?</p><p>【问题4】</p><p>如果企业CEO想在34天后系统上线，王工应该采取什么措施来满足这一要求?这种情况下完成项目所需的费用是多少？<span style=\"font-size: 16px;\"></span></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p><br/></p><p>【问题1】答案：</p><p>王工在接到任务后开始项目计划的编制工作，编制的计划应包括：</p><p>&nbsp;(1)项目总计划(包括范围计划、工作范围定义、活动定义、资源需求、资源计划、活动排序、费用估算、进度计划及费用计划)。</p><p>&nbsp;(2)项目辅助计划(质量计划、沟通计划、人力资源计划、风险计划、采购计划)。</p><p>项目计划用于协调所有项目计划编制文件、指导项目执行和控制的文件。其关键组成部分包括项目简介或概览、如何组织项目的描述、用于项目的管理和技术过程，描写所要完成的工作的部分、进度信息和预算信息。</p>【问题2】答案：正常工作：时间41天，成本74200元；(2)最短工期：时间27天，成本91000元。<br/><p>【问题3】答案：</p><p>在“B提交项目计划”和“I安装部署”任务中采用加班工作措施，以使得项目能够按照正常工作进度完成。</p>【问题4】答案：在“A系统调研”、“B提交项目计划”、“H测试修改”和“I安装部署”任务中采用加班工作措施。项目所需费用79700元。"
    ],
    "analysis": "",
    "raw_data": {
      "index": 32,
      "belong_page": 1,
      "question_id": 208626,
      "question_title": "<p><span style=\"font-size: 16px;\">阅读以下关于某项目开发计划的说明，回答问题。</span></p><p>【说明】</p><p>某软件公司拟开发一套电子商务系统，王工作为项目组负责人负责编制项目计划。由于该企业业务发展需要，CEO急于启动电子商务系统，要求王工尽快准备一份拟开发系统的时间和成本估算报告。</p><p>项目组经过讨论后，确定出与项目相关的任务如表所示。其中，根据项目组开发经验，分别给出了正常工作及加班赶工两种情况下所需的时间和费用。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577702931716250.jpg\" title=\"1577702931716250.jpg\" alt=\"1.jpg\"/></p><p>【问题1】</p><p>请用400字以内文字说明王工拟编制的项目计划中应包括哪些内容。<br/></p><p>【问题2】</p><p>请根据上表，分别给出正常工作和最短工期两种情况下完成此项目所需的时间和费用。</p><p>【问题3】</p><p>如果项目在系统调研阶段用了7天时间才完成，公司要求尽量控制成本，王工可在后续任务中采取什么措施来保证项目能按照正常工作进度完成?</p><p>【问题4】</p><p>如果企业CEO想在34天后系统上线，王工应该采取什么措施来满足这一要求?这种情况下完成项目所需的费用是多少？<span style=\"font-size: 16px;\"></span></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 208626,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p><br/></p><p>【问题1】答案：</p><p>王工在接到任务后开始项目计划的编制工作，编制的计划应包括：</p><p>&nbsp;(1)项目总计划(包括范围计划、工作范围定义、活动定义、资源需求、资源计划、活动排序、费用估算、进度计划及费用计划)。</p><p>&nbsp;(2)项目辅助计划(质量计划、沟通计划、人力资源计划、风险计划、采购计划)。</p><p>项目计划用于协调所有项目计划编制文件、指导项目执行和控制的文件。其关键组成部分包括项目简介或概览、如何组织项目的描述、用于项目的管理和技术过程，描写所要完成的工作的部分、进度信息和预算信息。</p>【问题2】答案：正常工作：时间41天，成本74200元；(2)最短工期：时间27天，成本91000元。<br/><p>【问题3】答案：</p><p>在“B提交项目计划”和“I安装部署”任务中采用加班工作措施，以使得项目能够按照正常工作进度完成。</p>【问题4】答案：在“A系统调研”、“B提交项目计划”、“H测试修改”和“I安装部署”任务中采用加班工作措施。项目所需费用79700元。"
      ],
      "option": null
    },
    "crawl_time": 1753176849.8773987
  },
  {
    "section_id": "9382",
    "section_name": "数据库设计基础知识（第二版） - 数据库基本概念",
    "question_id": 43740,
    "question_title": "<p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p class=\"MsoNormal\" style=\"text-indent:0.0000pt;mso-char-indent-count:0.0000;text-align:left;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">若系统中存在</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">n</span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">个等待事务</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">T</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">i</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">(i=0</span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">，</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">1</span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">，</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">2</span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">，</span>…，</span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">n-1)</span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">，其中：</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">T</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">0</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">正等待被</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">T</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">1</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">锁住的数据项</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">A</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">1</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">，</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">T</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">1</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">正等待被</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">T</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">2</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">锁住的数据项</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">A</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">2</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">，</span>…，</span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">T</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">i</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">正等待被</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">T</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">i</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">+1</span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">锁住的数据项</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">A</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">i+1</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">，</span>…，</span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">T</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">n-1</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">正等待被</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">T</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">0</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">锁住的数据项</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">A</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">0</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">，则系统处于</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">(5)</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">状态。</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;mso-hansi-font-family:&#39;Times New Roman&#39;;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 封锁 ",
      " 死锁&nbsp; ",
      " 循环 ",
      " 并发处理 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43740,
      "question_title": "<p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p class=\"MsoNormal\" style=\"text-indent:0.0000pt;mso-char-indent-count:0.0000;text-align:left;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">若系统中存在</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">n</span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">个等待事务</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">T</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">i</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">(i=0</span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">，</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">1</span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">，</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">2</span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">，</span>…，</span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">n-1)</span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">，其中：</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">T</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">0</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">正等待被</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">T</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">1</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">锁住的数据项</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">A</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">1</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">，</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">T</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">1</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">正等待被</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">T</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">2</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">锁住的数据项</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">A</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">2</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">，</span>…，</span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">T</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">i</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">正等待被</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">T</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">i</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">+1</span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">锁住的数据项</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">A</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">i+1</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">，</span>…，</span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">T</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">n-1</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">正等待被</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">T</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">0</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">锁住的数据项</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">A</span><sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;vertical-align:sub;\">0</span></sub><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">，则系统处于</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">(5)</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">状态。</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;mso-hansi-font-family:&#39;Times New Roman&#39;;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43740,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 封锁 ",
        " 死锁&nbsp; ",
        " 循环 ",
        " 并发处理 "
      ]
    },
    "crawl_time": 1753176851.4452074
  },
  {
    "section_id": "9382",
    "section_name": "数据库设计基础知识（第二版） - 数据库基本概念",
    "question_id": 54342,
    "question_title": "<p>以下关于数据处理的叙述中，不正确的是（ &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 对正确的数据也可能做出错误解释 ",
      " 软件会有故障，数据也会现问题 ",
      " 数据处理技术主要指办公软件的使用方法 ",
      " 也有生命周期 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 54342,
      "question_title": "<p>以下关于数据处理的叙述中，不正确的是（ &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54342,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 对正确的数据也可能做出错误解释 ",
        " 软件会有故障，数据也会现问题 ",
        " 数据处理技术主要指办公软件的使用方法 ",
        " 也有生命周期 "
      ]
    },
    "crawl_time": 1753176851.4452074
  },
  {
    "section_id": "9382",
    "section_name": "数据库设计基础知识（第二版） - 数据库基本概念",
    "question_id": 63694,
    "question_title": "<p>Designing the data storage architecture is an important activity in system design. There are two main types of data storage formats: files and databases. Files are electronic of data that have been optimized to perform a particular transaction. There are several types of files that differ in the way they are used to support an application. （　） store core information that is important to the business and , more specifically , to the application , such as order information or customer mailing information. （　） contain static values , such as a list of valid codes or the names of cities . Typically, the list is used for validation. A database is a collection of groupings of information that are related to each other in some way. There are many different types of databases that exist on the market today. （　） is given to those databases which are based on older , sometimes outdated technology that is seldom used to develop new applications . （请作答此空） are collections of records that are related to each other through pointers In relational database , （ 　） can be used in ensuring that values linking the tables together through the primary and foreign keys are valid and correctly synchronized.</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " Hierarchical database ",
      " Workgroup database ",
      " Linked table database ",
      " Network database "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 63694,
      "question_title": "<p>Designing the data storage architecture is an important activity in system design. There are two main types of data storage formats: files and databases. Files are electronic of data that have been optimized to perform a particular transaction. There are several types of files that differ in the way they are used to support an application. （　） store core information that is important to the business and , more specifically , to the application , such as order information or customer mailing information. （　） contain static values , such as a list of valid codes or the names of cities . Typically, the list is used for validation. A database is a collection of groupings of information that are related to each other in some way. There are many different types of databases that exist on the market today. （　） is given to those databases which are based on older , sometimes outdated technology that is seldom used to develop new applications . （请作答此空） are collections of records that are related to each other through pointers In relational database , （ 　） can be used in ensuring that values linking the tables together through the primary and foreign keys are valid and correctly synchronized.</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63694,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " Hierarchical database ",
        " Workgroup database ",
        " Linked table database ",
        " Network database "
      ]
    },
    "crawl_time": 1753176851.4452074
  },
  {
    "section_id": "9382",
    "section_name": "数据库设计基础知识（第二版） - 数据库基本概念",
    "question_id": 151193,
    "question_title": "数据库系统运行的基本工作单位是事务，事务相当于操作系统中的进程，是用户定义的一个数据库操作序列，这些操作序列要么全做要么全不做，是一个不可分割的工作单位。数据库的（请作答此空）是指操作序列要么全做要么全不做。设计时用（ ）实现。数据库从一个一致性状态变到另一个一致性状态的性质称为（ ）。设计时用（ ）检查实现。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 一致性 ",
      " 可用性 ",
      " 原子性 ",
      " 隔离性 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 151193,
      "question_title": "数据库系统运行的基本工作单位是事务，事务相当于操作系统中的进程，是用户定义的一个数据库操作序列，这些操作序列要么全做要么全不做，是一个不可分割的工作单位。数据库的（请作答此空）是指操作序列要么全做要么全不做。设计时用（ ）实现。数据库从一个一致性状态变到另一个一致性状态的性质称为（ ）。设计时用（ ）检查实现。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 151193,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 一致性 ",
        " 可用性 ",
        " 原子性 ",
        " 隔离性 "
      ]
    },
    "crawl_time": 1753176851.4452074
  },
  {
    "section_id": "9382",
    "section_name": "数据库设计基础知识（第二版） - 数据库基本概念",
    "question_id": 151197,
    "question_title": "数据仓库不包括（）",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 数据源 ",
      " OLAP 服务器 ",
      " OLTP 服务器 ",
      " 报表工具 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 151197,
      "question_title": "数据仓库不包括（）",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 151197,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 数据源 ",
        " OLAP 服务器 ",
        " OLTP 服务器 ",
        " 报表工具 "
      ]
    },
    "crawl_time": 1753176851.4452074
  },
  {
    "section_id": "9382",
    "section_name": "数据库设计基础知识（第二版） - 数据库基本概念",
    "question_id": 159232,
    "question_title": "在数据库系统中，数据的完整性是指数据的（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 有效性、正确性和一致性 ",
      " 有效性、正确性和可维护性 ",
      " 有效性、正确性和安全性 ",
      " 正确性、一致性和安全性 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 159232,
      "question_title": "在数据库系统中，数据的完整性是指数据的（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159232,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 有效性、正确性和一致性 ",
        " 有效性、正确性和可维护性 ",
        " 有效性、正确性和安全性 ",
        " 正确性、一致性和安全性 "
      ]
    },
    "crawl_time": 1753176851.4452074
  },
  {
    "section_id": "9382",
    "section_name": "数据库设计基础知识（第二版） - 数据库基本概念",
    "question_id": 177875,
    "question_title": "数据仓库中的（ &nbsp;）消除了源数据中的不一致性，提供整个企业的一致性全局信息。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 面向主题性 ",
      " 集成性 ",
      " 稳定性 ",
      " 反映历史变化性 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 177875,
      "question_title": "数据仓库中的（ &nbsp;）消除了源数据中的不一致性，提供整个企业的一致性全局信息。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 177875,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 面向主题性 ",
        " 集成性 ",
        " 稳定性 ",
        " 反映历史变化性 "
      ]
    },
    "crawl_time": 1753176851.4452074
  },
  {
    "section_id": "9382",
    "section_name": "数据库设计基础知识（第二版） - 数据库基本概念",
    "question_id": 208442,
    "question_title": "若系统中的某子模块需要为其他模块提供访问不同数据库系统的功能，这些数据库系统提供的访问接口有一定的差异，但访问过程却都是相同的，例如，先连接数据库，再打开数据库，最后对数据进行查询。针对上述需求，可以采用（请作答此空）设计模式抽象出相同的数据库访问过程，该设计模式（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 外观 ",
      " 装饰 ",
      " 桥接 ",
      " 享元 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 208442,
      "question_title": "若系统中的某子模块需要为其他模块提供访问不同数据库系统的功能，这些数据库系统提供的访问接口有一定的差异，但访问过程却都是相同的，例如，先连接数据库，再打开数据库，最后对数据进行查询。针对上述需求，可以采用（请作答此空）设计模式抽象出相同的数据库访问过程，该设计模式（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208442,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 外观 ",
        " 装饰 ",
        " 桥接 ",
        " 享元 "
      ]
    },
    "crawl_time": 1753176851.4452074
  },
  {
    "section_id": "9382",
    "section_name": "数据库设计基础知识（第二版） - 数据库基本概念",
    "question_id": 281317,
    "question_title": "分布透明性指用户不必关心数据的逻辑分片，不必关心数据存储的物理位置分配细节，也不必关心局部场地上数据库的数据模型。（ ）是分布透明性的最高层次。（ ）指用户或应用程序应当了解分片情况，但不必了解片段的存储场地。（ ）透明性是指用户或应用程序应当了解分片及各片断存储的场地，但不必了解局部场地上使用的是何种数据模型。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "分片透明性",
      "逻辑透明性",
      "位置透明性",
      "全局透明性"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 281317,
      "question_title": "分布透明性指用户不必关心数据的逻辑分片，不必关心数据存储的物理位置分配细节，也不必关心局部场地上数据库的数据模型。（ ）是分布透明性的最高层次。（ ）指用户或应用程序应当了解分片情况，但不必了解片段的存储场地。（ ）透明性是指用户或应用程序应当了解分片及各片断存储的场地，但不必了解局部场地上使用的是何种数据模型。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281316,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "分片透明性",
        "逻辑透明性",
        "位置透明性",
        "全局透明性"
      ]
    },
    "crawl_time": 1753176851.4452074
  },
  {
    "section_id": "9382",
    "section_name": "数据库设计基础知识（第二版） - 数据库基本概念",
    "question_id": 352253,
    "question_title": "<p>&nbsp;在分布式数据库中包括分片透明、复制透明、位置透明和逻辑透明等基本概念， 其中&nbsp;（11） 是指用户不需要知道数据是复制到哪些节点及如何复制的。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 分片透明 ",
      " 复制透明 ",
      " 位置透明 ",
      " 逻辑透明 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 352253,
      "question_title": "<p>&nbsp;在分布式数据库中包括分片透明、复制透明、位置透明和逻辑透明等基本概念， 其中&nbsp;（11） 是指用户不需要知道数据是复制到哪些节点及如何复制的。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352253,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 分片透明 ",
        " 复制透明 ",
        " 位置透明 ",
        " 逻辑透明 "
      ]
    },
    "crawl_time": 1753176851.4452074
  },
  {
    "section_id": "9382",
    "section_name": "数据库设计基础知识（第二版） - 数据库基本概念",
    "question_id": 352367,
    "question_title": "<p>数据库系统运行的基本工作单位是事务，事务相当于操作系统中的进程，是用户定义的一个数据库操作序列，这些操作序列要么全做要么全不做，是一个不可分割的工作单位。数据库的（1）是指操作序列要么全做要么全不做。设计时用（2）实现。数据库从一个一致性状态变到另一个一致性状态的性质称为（3）。设计时用（4）检查实现。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 一致性 ",
      " 可用性 ",
      " 原子性 ",
      " 隔离性 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 352367,
      "question_title": "<p>数据库系统运行的基本工作单位是事务，事务相当于操作系统中的进程，是用户定义的一个数据库操作序列，这些操作序列要么全做要么全不做，是一个不可分割的工作单位。数据库的（1）是指操作序列要么全做要么全不做。设计时用（2）实现。数据库从一个一致性状态变到另一个一致性状态的性质称为（3）。设计时用（4）检查实现。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352366,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 一致性 ",
        " 可用性 ",
        " 原子性 ",
        " 隔离性 "
      ]
    },
    "crawl_time": 1753176851.4452074
  },
  {
    "section_id": "9382",
    "section_name": "数据库设计基础知识（第二版） - 数据库基本概念",
    "question_id": 352368,
    "question_title": "<p>数据库系统运行的基本工作单位是事务，事务相当于操作系统中的进程，是用户定义的一个数据库操作序列，这些操作序列要么全做要么全不做，是一个不可分割的工作单位。数据库的（1）是指操作序列要么全做要么全不做。设计时用（2）实现。数据库从一个一致性状态变到另一个一致性状态的性质称为（3）。设计时用（4）检查实现。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 影子拷贝 ",
      " 差异备份 ",
      " 深拷贝 ",
      " 完全备份 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 352368,
      "question_title": "<p>数据库系统运行的基本工作单位是事务，事务相当于操作系统中的进程，是用户定义的一个数据库操作序列，这些操作序列要么全做要么全不做，是一个不可分割的工作单位。数据库的（1）是指操作序列要么全做要么全不做。设计时用（2）实现。数据库从一个一致性状态变到另一个一致性状态的性质称为（3）。设计时用（4）检查实现。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352366,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 影子拷贝 ",
        " 差异备份 ",
        " 深拷贝 ",
        " 完全备份 "
      ]
    },
    "crawl_time": 1753176851.4452074
  },
  {
    "section_id": "9382",
    "section_name": "数据库设计基础知识（第二版） - 数据库基本概念",
    "question_id": 352369,
    "question_title": "<p>数据库系统运行的基本工作单位是事务，事务相当于操作系统中的进程，是用户定义的一个数据库操作序列，这些操作序列要么全做要么全不做，是一个不可分割的工作单位。数据库的（1）是指操作序列要么全做要么全不做。设计时用（2）实现。数据库从一个一致性状态变到另一个一致性状态的性质称为（3）。设计时用（4）检查实现。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 一致性 ",
      " 完整性&nbsp; ",
      " 原子性 ",
      " 隔离性 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 352369,
      "question_title": "<p>数据库系统运行的基本工作单位是事务，事务相当于操作系统中的进程，是用户定义的一个数据库操作序列，这些操作序列要么全做要么全不做，是一个不可分割的工作单位。数据库的（1）是指操作序列要么全做要么全不做。设计时用（2）实现。数据库从一个一致性状态变到另一个一致性状态的性质称为（3）。设计时用（4）检查实现。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352366,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 一致性 ",
        " 完整性&nbsp; ",
        " 原子性 ",
        " 隔离性 "
      ]
    },
    "crawl_time": 1753176851.4452074
  },
  {
    "section_id": "9382",
    "section_name": "数据库设计基础知识（第二版） - 数据库基本概念",
    "question_id": 352370,
    "question_title": "<p>数据库系统运行的基本工作单位是事务，事务相当于操作系统中的进程，是用户定义的一个数据库操作序列，这些操作序列要么全做要么全不做，是一个不可分割的工作单位。数据库的（1）是指操作序列要么全做要么全不做。设计时用（2）实现。数据库从一个一致性状态变到另一个一致性状态的性质称为（3）。设计时用（4）检查实现。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 封锁协议 ",
      " 完整性约束 ",
      " 影子拷贝 ",
      " 测试 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 352370,
      "question_title": "<p>数据库系统运行的基本工作单位是事务，事务相当于操作系统中的进程，是用户定义的一个数据库操作序列，这些操作序列要么全做要么全不做，是一个不可分割的工作单位。数据库的（1）是指操作序列要么全做要么全不做。设计时用（2）实现。数据库从一个一致性状态变到另一个一致性状态的性质称为（3）。设计时用（4）检查实现。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352366,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 封锁协议 ",
        " 完整性约束 ",
        " 影子拷贝 ",
        " 测试 "
      ]
    },
    "crawl_time": 1753176851.4452074
  },
  {
    "section_id": "9382",
    "section_name": "数据库设计基础知识（第二版） - 数据库基本概念",
    "question_id": 507315,
    "question_title": "数据库的三级模式中，（ ）是描述局部数据的逻辑结构和特征的。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "外模式",
      "概念模式",
      "内模式",
      "逻辑模式"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 507315,
      "question_title": "数据库的三级模式中，（ ）是描述局部数据的逻辑结构和特征的。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507315,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "外模式",
        "概念模式",
        "内模式",
        "逻辑模式"
      ]
    },
    "crawl_time": 1753176851.4452074
  },
  {
    "section_id": "9382",
    "section_name": "数据库设计基础知识（第二版） - 数据库基本概念",
    "question_id": 523265,
    "question_title": "数据库三级模式中，表示用户局部数据的是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "内模式",
      "外模式",
      "概念模式",
      "逻辑模式"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 523265,
      "question_title": "数据库三级模式中，表示用户局部数据的是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523265,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "内模式",
        "外模式",
        "概念模式",
        "逻辑模式"
      ]
    },
    "crawl_time": 1753176851.4452074
  },
  {
    "section_id": "9382",
    "section_name": "数据库设计基础知识（第二版） - 数据库基本概念",
    "question_id": 523266,
    "question_title": "数据库三级模式中，描述记录间联系、数据完整性、安全性的是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "存储模式",
      "概念模式",
      "内模式",
      "外模式"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 523266,
      "question_title": "数据库三级模式中，描述记录间联系、数据完整性、安全性的是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523266,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "存储模式",
        "概念模式",
        "内模式",
        "外模式"
      ]
    },
    "crawl_time": 1753176851.4452074
  },
  {
    "section_id": "9382",
    "section_name": "数据库设计基础知识（第二版） - 数据库基本概念",
    "question_id": 523270,
    "question_title": "数据库内模式描述的内容是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "存储结构",
      "索引",
      "物理存储",
      "数据类型"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 18,
      "belong_page": 1,
      "question_id": 523270,
      "question_title": "数据库内模式描述的内容是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523270,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "存储结构",
        "索引",
        "物理存储",
        "数据类型"
      ]
    },
    "crawl_time": 1753176851.4452074
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 43742,
    "question_title": "<p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/201807/113569c4576553f64b54031a745f798533ea39.png\"/></p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " A ",
      " B ",
      " C ",
      " D "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43742,
      "question_title": "<p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/201807/113569c4576553f64b54031a745f798533ea39.png\"/></p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43742,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " A ",
        " B ",
        " C ",
        " D "
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 43743,
    "question_title": "<p>若关系R、S如下图所示，则关系R与S进行自然连接运算后的元组个数和属性列数分别为（ ）；关系代数表达式π<sub>1,4</sub>(σ<sub>3=6</sub>(R×S))与关系代数表达式（请作答此空）等价。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210419/1618807296363986.png\" title=\"1618807296363986.png\" alt=\"rs.png\"/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " π<sub>A,D</sub>(σ<sub>C=D</sub>(R×S) ",
      " π<sub>A,R.D</sub>(σ<sub>S.C=R.D</sub>(R×S)) ",
      " π<sub>A,R.D</sub>(σ<sub>R.C=S.D</sub>(R×S)) ",
      " π<sub>A,R.D</sub>(σ<sub>S.C=S.D</sub>(R×S)) "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 43743,
      "question_title": "<p>若关系R、S如下图所示，则关系R与S进行自然连接运算后的元组个数和属性列数分别为（ ）；关系代数表达式π<sub>1,4</sub>(σ<sub>3=6</sub>(R×S))与关系代数表达式（请作答此空）等价。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210419/1618807296363986.png\" title=\"1618807296363986.png\" alt=\"rs.png\"/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43743,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " π<sub>A,D</sub>(σ<sub>C=D</sub>(R×S) ",
        " π<sub>A,R.D</sub>(σ<sub>S.C=R.D</sub>(R×S)) ",
        " π<sub>A,R.D</sub>(σ<sub>R.C=S.D</sub>(R×S)) ",
        " π<sub>A,R.D</sub>(σ<sub>S.C=S.D</sub>(R×S)) "
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 49832,
    "question_title": "给定关系模式&nbsp;R(U,&nbsp;F)，其中：属性集&nbsp;U={A1,&nbsp;A2,&nbsp;A3,&nbsp;A4,&nbsp;A5,&nbsp;A6}，函数依赖集&nbsp;F={A1→A2,&nbsp;A1→A3,&nbsp;A3→A4,&nbsp;A1A5→A6}。关系模式&nbsp;R&nbsp;的候选码为（请作答此空），由于&nbsp;R&nbsp;存在非主属性对码的部分函数依赖，所以&nbsp;R&nbsp;属于（&nbsp;）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " A1A3 ",
      " A1A4 ",
      " A1A5 ",
      " A1A6 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 49832,
      "question_title": "给定关系模式&nbsp;R(U,&nbsp;F)，其中：属性集&nbsp;U={A1,&nbsp;A2,&nbsp;A3,&nbsp;A4,&nbsp;A5,&nbsp;A6}，函数依赖集&nbsp;F={A1→A2,&nbsp;A1→A3,&nbsp;A3→A4,&nbsp;A1A5→A6}。关系模式&nbsp;R&nbsp;的候选码为（请作答此空），由于&nbsp;R&nbsp;存在非主属性对码的部分函数依赖，所以&nbsp;R&nbsp;属于（&nbsp;）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49832,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " A1A3 ",
        " A1A4 ",
        " A1A5 ",
        " A1A6 "
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 49834,
    "question_title": "<p>给定元组演算表达式 R*={t│(Эu)(R(t)∧S(u)∧t[3]&lt;u[2])} ，若关系 R、s 如下图所示，则 ( )<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20180909/1536467855721579.jpg\" title=\"1536467855721579.jpg\" alt=\"1.jpg\"/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " A.R*={(3,7,11),(5,9，13），（6,10,14）} ",
      " R*={(3.7.11),(4.5.6),(5.9.13),(6,10,14)} ",
      " R*={(1,2,3),(4,5,6),(7,8,9)} ",
      " R*={（1,2,3）,(4,5,6),(7,8,9),(10,11,12）} "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 49834,
      "question_title": "<p>给定元组演算表达式 R*={t│(Эu)(R(t)∧S(u)∧t[3]&lt;u[2])} ，若关系 R、s 如下图所示，则 ( )<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20180909/1536467855721579.jpg\" title=\"1536467855721579.jpg\" alt=\"1.jpg\"/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49834,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " A.R*={(3,7,11),(5,9，13），（6,10,14）} ",
        " R*={(3.7.11),(4.5.6),(5.9.13),(6,10,14)} ",
        " R*={(1,2,3),(4,5,6),(7,8,9)} ",
        " R*={（1,2,3）,(4,5,6),(7,8,9),(10,11,12）} "
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 54244,
    "question_title": "<p>若对关系R（A，B，C，D）进行π1，3（R）运算，则该关系运算与（52请作答此空）等价，表示（&nbsp; &nbsp;53&nbsp; 此空不作答 &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " πA=1，C=3（R） ",
      " πA=1<img style=\"max-width:100%;height:auto\" src=\"https://s1.51ctocdn.cn//images/20181012/1539329979796904.jpg\" title=\"1539329979796904.jpg\" alt=\"1.jpg\"/>C=3（R） ",
      " πA，C（R） ",
      " πA=1<img style=\"max-width:100%;height:auto\" src=\"https://s1.51ctocdn.cn//images/20181012/1539329986481677.jpg\" title=\"1539329986481677.jpg\" alt=\"2.jpg\"/>C=3（R） "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 54244,
      "question_title": "<p>若对关系R（A，B，C，D）进行π1，3（R）运算，则该关系运算与（52请作答此空）等价，表示（&nbsp; &nbsp;53&nbsp; 此空不作答 &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54244,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " πA=1，C=3（R） ",
        " πA=1<img style=\"max-width:100%;height:auto\" src=\"https://s1.51ctocdn.cn//images/20181012/1539329979796904.jpg\" title=\"1539329979796904.jpg\" alt=\"1.jpg\"/>C=3（R） ",
        " πA，C（R） ",
        " πA=1<img style=\"max-width:100%;height:auto\" src=\"https://s1.51ctocdn.cn//images/20181012/1539329986481677.jpg\" title=\"1539329986481677.jpg\" alt=\"2.jpg\"/>C=3（R） "
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 54245,
    "question_title": "<p>若对关系R（A，B，C，D）进行π1,3（R）运算，则该关系运算与（ ）等价，表示（请作答此空）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 属性A和C的值分别等于1和3的元组为结果集 ",
      " 属性A和C的值分别等于1和3的两列为结果集 ",
      " 对R关系进行A=1、C=3的投影运算 ",
      " 对R关系进行属性A和C的投影运算 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 54245,
      "question_title": "<p>若对关系R（A，B，C，D）进行π1,3（R）运算，则该关系运算与（ ）等价，表示（请作答此空）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54245,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 属性A和C的值分别等于1和3的元组为结果集 ",
        " 属性A和C的值分别等于1和3的两列为结果集 ",
        " 对R关系进行A=1、C=3的投影运算 ",
        " 对R关系进行属性A和C的投影运算 "
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 54246,
    "question_title": "<p>设有关系模式R (课程，教师，学生，成绩，时间，教室），其中函数依赖集F如下：<br/>F=｛课程→教师，（学生，课程）→成绩，（时间，教室）→课程，<br/>（时间，教师）→教室，（时间，学生）→教室｝<br/>关系模式R的一个主键是（请作答此空），R规范化程度最高达到（ &nbsp;）。若将关系模式R分解为3个关系模式R1（课程，教师）、R2（学生，课程，成绩）、R3（学生，时间，教室，课程），其中R2的规范化程度最高达到（ &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " （学生，课程） ",
      " （时间，教室） ",
      " （时间，教师） ",
      " （时间，学生） "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 54246,
      "question_title": "<p>设有关系模式R (课程，教师，学生，成绩，时间，教室），其中函数依赖集F如下：<br/>F=｛课程→教师，（学生，课程）→成绩，（时间，教室）→课程，<br/>（时间，教师）→教室，（时间，学生）→教室｝<br/>关系模式R的一个主键是（请作答此空），R规范化程度最高达到（ &nbsp;）。若将关系模式R分解为3个关系模式R1（课程，教师）、R2（学生，课程，成绩）、R3（学生，时间，教室，课程），其中R2的规范化程度最高达到（ &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54246,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " （学生，课程） ",
        " （时间，教室） ",
        " （时间，教师） ",
        " （时间，学生） "
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 63590,
    "question_title": "<p>给定关系R(A,B,C,D,E)与S(A,B,C,F,G)，那么与表达式<img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20181127/1543309956828085.jpg\" title=\"1543309956828085.jpg\" alt=\"1.jpg\"/>等价的SQL语句如下：select (请作答此空) from R, S where (　);</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " R.A，R.B，R.E，S.C，G ",
      " R.A，R.B，D，F，G ",
      " R.A，R.B，R.D，S.C，F ",
      " R.A，R.B，R.D，S.C，G "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 63590,
      "question_title": "<p>给定关系R(A,B,C,D,E)与S(A,B,C,F,G)，那么与表达式<img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20181127/1543309956828085.jpg\" title=\"1543309956828085.jpg\" alt=\"1.jpg\"/>等价的SQL语句如下：select (请作答此空) from R, S where (　);</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63590,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " R.A，R.B，R.E，S.C，G ",
        " R.A，R.B，D，F，G ",
        " R.A，R.B，R.D，S.C，F ",
        " R.A，R.B，R.D，S.C，G "
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 63593,
    "question_title": "<p>在关系<img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20181127/1543310042967949.jpg\" title=\"1543310042967949.jpg\" alt=\"1.jpg\"/>上进行关系运算的4个等价的表达式<img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20181127/1543310054238987.jpg\" title=\"1543310054238987.jpg\" alt=\"2.jpg\"/>，如下所示：</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20181127/1543310061725739.jpg\" title=\"1543310061725739.jpg\" alt=\"3.jpg\"/></p><p>如果严格按照表达式运算顺序执行，则查询效率最高的是表达式（　）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " <img style=\"max-width:100%;height:auto\" src=\"https://s1.51ctocdn.cn//images/20181127/1543310094707342.jpg\" title=\"1543310094707342.jpg\" alt=\"1.jpg\"/> ",
      " <img style=\"max-width:100%;height:auto\" src=\"https://s1.51ctocdn.cn//images/20181127/1543310098858560.jpg\" title=\"1543310098858560.jpg\" alt=\"2.jpg\"/> ",
      " <img style=\"max-width:100%;height:auto\" src=\"https://s1.51ctocdn.cn//images/20181127/1543310102940136.jpg\" title=\"1543310102940136.jpg\" alt=\"3.jpg\"/> ",
      " <img style=\"max-width:100%;height:auto\" src=\"https://s1.51ctocdn.cn//images/20181127/1543310106299862.jpg\" title=\"1543310106299862.jpg\" alt=\"4.jpg\"/> "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 63593,
      "question_title": "<p>在关系<img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20181127/1543310042967949.jpg\" title=\"1543310042967949.jpg\" alt=\"1.jpg\"/>上进行关系运算的4个等价的表达式<img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20181127/1543310054238987.jpg\" title=\"1543310054238987.jpg\" alt=\"2.jpg\"/>，如下所示：</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20181127/1543310061725739.jpg\" title=\"1543310061725739.jpg\" alt=\"3.jpg\"/></p><p>如果严格按照表达式运算顺序执行，则查询效率最高的是表达式（　）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63593,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " <img style=\"max-width:100%;height:auto\" src=\"https://s1.51ctocdn.cn//images/20181127/1543310094707342.jpg\" title=\"1543310094707342.jpg\" alt=\"1.jpg\"/> ",
        " <img style=\"max-width:100%;height:auto\" src=\"https://s1.51ctocdn.cn//images/20181127/1543310098858560.jpg\" title=\"1543310098858560.jpg\" alt=\"2.jpg\"/> ",
        " <img style=\"max-width:100%;height:auto\" src=\"https://s1.51ctocdn.cn//images/20181127/1543310102940136.jpg\" title=\"1543310102940136.jpg\" alt=\"3.jpg\"/> ",
        " <img style=\"max-width:100%;height:auto\" src=\"https://s1.51ctocdn.cn//images/20181127/1543310106299862.jpg\" title=\"1543310106299862.jpg\" alt=\"4.jpg\"/> "
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 151204,
    "question_title": "<p>给定关系模式&nbsp;R(A,&nbsp;B,&nbsp;C,&nbsp;D),&nbsp;S(C,&nbsp;D,&nbsp;E),&nbsp;与&nbsp;π<sub>1,3,5</sub>(σ<sub>2=&#39;软件工程&#39;</sub>(R⋈S))&nbsp;等价的SQL语句如下：SELECT&nbsp;(请作答此空)&nbsp;FROM&nbsp;R,&nbsp;S&nbsp;WHERE&nbsp;(&nbsp;)；下列查询&nbsp;B=&#39;信息&#39;&nbsp;且&nbsp;E=&#39;北京&#39;&nbsp;的&nbsp;A、B、E&nbsp;的关系代数表示式中，查询效率最高的是&nbsp;(&nbsp;)。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " A,C,S.C ",
      " A,B,E ",
      " A,R.C,E ",
      " A,R.C,S.D "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 151204,
      "question_title": "<p>给定关系模式&nbsp;R(A,&nbsp;B,&nbsp;C,&nbsp;D),&nbsp;S(C,&nbsp;D,&nbsp;E),&nbsp;与&nbsp;π<sub>1,3,5</sub>(σ<sub>2=&#39;软件工程&#39;</sub>(R⋈S))&nbsp;等价的SQL语句如下：SELECT&nbsp;(请作答此空)&nbsp;FROM&nbsp;R,&nbsp;S&nbsp;WHERE&nbsp;(&nbsp;)；下列查询&nbsp;B=&#39;信息&#39;&nbsp;且&nbsp;E=&#39;北京&#39;&nbsp;的&nbsp;A、B、E&nbsp;的关系代数表示式中，查询效率最高的是&nbsp;(&nbsp;)。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 151204,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " A,C,S.C ",
        " A,B,E ",
        " A,R.C,E ",
        " A,R.C,S.D "
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 159227,
    "question_title": "<p>某公司网上销售管理系统的数据库部分关系模式如下所示。其中，客户号唯一标识一位客户，产品号唯一标识一件产品，订单号唯一标识一份订单。一份订单必须且仅对应一位客户，一份订单可由一到多条订单明细组成，一位客户可以有多份订单。</p><p>客户（客户号，姓名，性别，地址，邮编）</p><p>产品（产品号，名称，库存，单价）</p><p>订单（订单号，时间，金额，客户号）</p><p>订单明细（订单号，产品号，数量）</p><p>订单关系模式的主键为（请作答此空）；订单明细关系模式的主键为（ ）；其中订单的外键为（ ）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 订单号 ",
      " 客户号 ",
      " （订单号，客户号） ",
      " （订单号，时间） "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 159227,
      "question_title": "<p>某公司网上销售管理系统的数据库部分关系模式如下所示。其中，客户号唯一标识一位客户，产品号唯一标识一件产品，订单号唯一标识一份订单。一份订单必须且仅对应一位客户，一份订单可由一到多条订单明细组成，一位客户可以有多份订单。</p><p>客户（客户号，姓名，性别，地址，邮编）</p><p>产品（产品号，名称，库存，单价）</p><p>订单（订单号，时间，金额，客户号）</p><p>订单明细（订单号，产品号，数量）</p><p>订单关系模式的主键为（请作答此空）；订单明细关系模式的主键为（ ）；其中订单的外键为（ ）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159227,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 订单号 ",
        " 客户号 ",
        " （订单号，客户号） ",
        " （订单号，时间） "
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 177881,
    "question_title": "<p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210414/1618380189842998.png\" title=\"1618380189842998.png\" alt=\"image.png\"/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " B=软件工程OR R. C=S. C AND R. D=S. D ",
      " B=‘软件工程’OR R. C=S. C AND R. D=S. D ",
      " B=‘软件工程’OR R. C=S. C OR R. D=S. D ",
      " B=‘软件工程’AND R. C=S. C AND R. D=S. D "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 177881,
      "question_title": "<p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210414/1618380189842998.png\" title=\"1618380189842998.png\" alt=\"image.png\"/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 177881,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " B=软件工程OR R. C=S. C AND R. D=S. D ",
        " B=‘软件工程’OR R. C=S. C AND R. D=S. D ",
        " B=‘软件工程’OR R. C=S. C OR R. D=S. D ",
        " B=‘软件工程’AND R. C=S. C AND R. D=S. D "
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 208473,
    "question_title": "<p>假设关系模式R(U，F)，属性集U={A，B，C}，函数依赖集F={A→B，B→C}。若将其分解为ρ={R1(U1，F1)，R2(U2，F2)}，其中U1={A，B}，U2={A，C}。那么，关系模式R、R1、R2分别达到了（请作答此空）；分解ρ（ ）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 1NF、2NF、3NF ",
      " 1NF、3NF、3NF ",
      " 2NF、2NF、3NF ",
      " 2NF、3NF、3NF "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 208473,
      "question_title": "<p>假设关系模式R(U，F)，属性集U={A，B，C}，函数依赖集F={A→B，B→C}。若将其分解为ρ={R1(U1，F1)，R2(U2，F2)}，其中U1={A，B}，U2={A，C}。那么，关系模式R、R1、R2分别达到了（请作答此空）；分解ρ（ ）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208473,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 1NF、2NF、3NF ",
        " 1NF、3NF、3NF ",
        " 2NF、2NF、3NF ",
        " 2NF、3NF、3NF "
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 284661,
    "question_title": "<p>某公司销售数据库的商品、仓库关系模式及函数依赖集F1、F2如下：</p><p>商品（商品号，商品名称，生产商，单价），F1={商品号→商品名称，商品号→生产商，商品号→单价）}，商品关系的主键是 （1）。仓库（仓库号，地址，电话，商品号，库存量），F2={仓库号→（地址，电话），（仓库号，商品号）→库存量}。仓库关系的主键是（2），外键是（3）。</p><p>仓库关系模式（4），为了解决这一问题，需要将仓库关系分解为（5）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "商品号",
      "商品号，商品名称",
      "商品号，生产商",
      "商品名称，生产商"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 284661,
      "question_title": "<p>某公司销售数据库的商品、仓库关系模式及函数依赖集F1、F2如下：</p><p>商品（商品号，商品名称，生产商，单价），F1={商品号→商品名称，商品号→生产商，商品号→单价）}，商品关系的主键是 （1）。仓库（仓库号，地址，电话，商品号，库存量），F2={仓库号→（地址，电话），（仓库号，商品号）→库存量}。仓库关系的主键是（2），外键是（3）。</p><p>仓库关系模式（4），为了解决这一问题，需要将仓库关系分解为（5）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 284660,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "商品号",
        "商品号，商品名称",
        "商品号，生产商",
        "商品名称，生产商"
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 284662,
    "question_title": "<p>某公司销售数据库的商品、仓库关系模式及函数依赖集F1、F2如下：</p><p>商品（商品号，商品名称，生产商，单价），F1={商品号→商品名称，商品号→生产商，商品号→单价）}，商品关系的主键是 （1）。仓库（仓库号，地址，电话，商品号，库存量），F2={仓库号→（地址，电话），（仓库号，商品号）→库存量}。仓库关系的主键是（2），外键是（3）。</p><p>仓库关系模式（4），为了解决这一问题，需要将仓库关系分解为（5）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "仓库号",
      "仓库号，商品号",
      "仓库号，电话",
      "地址，电话"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 284662,
      "question_title": "<p>某公司销售数据库的商品、仓库关系模式及函数依赖集F1、F2如下：</p><p>商品（商品号，商品名称，生产商，单价），F1={商品号→商品名称，商品号→生产商，商品号→单价）}，商品关系的主键是 （1）。仓库（仓库号，地址，电话，商品号，库存量），F2={仓库号→（地址，电话），（仓库号，商品号）→库存量}。仓库关系的主键是（2），外键是（3）。</p><p>仓库关系模式（4），为了解决这一问题，需要将仓库关系分解为（5）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 284660,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "仓库号",
        "仓库号，商品号",
        "仓库号，电话",
        "地址，电话"
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 284663,
    "question_title": "<p>某公司销售数据库的商品、仓库关系模式及函数依赖集F1、F2如下：</p><p>商品（商品号，商品名称，生产商，单价），F1={商品号→商品名称，商品号→生产商，商品号→单价）}，商品关系的主键是 （1）。仓库（仓库号，地址，电话，商品号，库存量），F2={仓库号→（地址，电话），（仓库号，商品号）→库存量}。仓库关系的主键是（2），外键是（3）。</p><p>仓库关系模式（4），为了解决这一问题，需要将仓库关系分解为（5）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "仓库号",
      "地址",
      "电话",
      " 商品号 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 284663,
      "question_title": "<p>某公司销售数据库的商品、仓库关系模式及函数依赖集F1、F2如下：</p><p>商品（商品号，商品名称，生产商，单价），F1={商品号→商品名称，商品号→生产商，商品号→单价）}，商品关系的主键是 （1）。仓库（仓库号，地址，电话，商品号，库存量），F2={仓库号→（地址，电话），（仓库号，商品号）→库存量}。仓库关系的主键是（2），外键是（3）。</p><p>仓库关系模式（4），为了解决这一问题，需要将仓库关系分解为（5）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 284660,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "仓库号",
        "地址",
        "电话",
        " 商品号 "
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 284665,
    "question_title": "<p>某公司销售数据库的商品、仓库关系模式及函数依赖集F1、F2如下：</p><p>商品（商品号，商品名称，生产商，单价），F1={商品号→商品名称，商品号→生产商，商品号→单价）}，商品关系的主键是 （1）。仓库（仓库号，地址，电话，商品号，库存量），F2={仓库号→（地址，电话），（仓库号，商品号）→库存量}。仓库关系的主键是（2），外键是（3）。</p><p>仓库关系模式（4），为了解决这一问题，需要将仓库关系分解为（5）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "仓库1（仓库号，地址）和仓库2（仓库号，电话，商品号，库存量）",
      "仓库1（仓库号，地址，电话）和仓库2（商品号，库存量）",
      "仓库1（仓库号，电话）和仓库2（仓库号，地址，商品号，库存量）",
      "仓库1（仓库号，地址，电话）和仓库2（仓库号，商品号，库存量）"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 284665,
      "question_title": "<p>某公司销售数据库的商品、仓库关系模式及函数依赖集F1、F2如下：</p><p>商品（商品号，商品名称，生产商，单价），F1={商品号→商品名称，商品号→生产商，商品号→单价）}，商品关系的主键是 （1）。仓库（仓库号，地址，电话，商品号，库存量），F2={仓库号→（地址，电话），（仓库号，商品号）→库存量}。仓库关系的主键是（2），外键是（3）。</p><p>仓库关系模式（4），为了解决这一问题，需要将仓库关系分解为（5）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 284660,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "仓库1（仓库号，地址）和仓库2（仓库号，电话，商品号，库存量）",
        "仓库1（仓库号，地址，电话）和仓库2（商品号，库存量）",
        "仓库1（仓库号，电话）和仓库2（仓库号，地址，商品号，库存量）",
        "仓库1（仓库号，地址，电话）和仓库2（仓库号，商品号，库存量）"
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 310872,
    "question_title": "<p>某销售公司员工关系E（工号、姓名、部门名、电话、住址）、商品关系C（商品号、商品名、库存数）和销售关系EC（工号、商品号、销售数、销售日期）。查询“销售部1”在2020年11月11日销售“HUWEI Mate40”商品的员工的工号、姓名、部门名及其销售的商品名、销售数的关系代数表达式为</p><p>Π1,2,3,7,8（&nbsp;（1） ⊳⊲&nbsp;（2） ⊳⊲&nbsp;（3） ）</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " π2,3(σ2=’HUAWEI Mate40’(C)) ",
      " π1,2(σ2=’HUAWEI Mate40’(C)) ",
      " π2,3(σ2=’HUAWEI Mate40’(EC)) ",
      " &nbsp;π1,2(σ2=’HUAWEI Mate40’(EC)) "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 18,
      "belong_page": 1,
      "question_id": 310872,
      "question_title": "<p>某销售公司员工关系E（工号、姓名、部门名、电话、住址）、商品关系C（商品号、商品名、库存数）和销售关系EC（工号、商品号、销售数、销售日期）。查询“销售部1”在2020年11月11日销售“HUWEI Mate40”商品的员工的工号、姓名、部门名及其销售的商品名、销售数的关系代数表达式为</p><p>Π1,2,3,7,8（&nbsp;（1） ⊳⊲&nbsp;（2） ⊳⊲&nbsp;（3） ）</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310870,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " π2,3(σ2=’HUAWEI Mate40’(C)) ",
        " π1,2(σ2=’HUAWEI Mate40’(C)) ",
        " π2,3(σ2=’HUAWEI Mate40’(EC)) ",
        " &nbsp;π1,2(σ2=’HUAWEI Mate40’(EC)) "
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 310873,
    "question_title": "<p>某销售公司员工关系E（工号、姓名、部门名、电话、住址）、商品关系C（商品号、商品名、库存数）和销售关系EC（工号、商品号、销售数、销售日期）。查询“销售部1”在2020年11月11日销售“HUWEI Mate40”商品的员工的工号、姓名、部门名及其销售的商品名、销售数的关系代数表达式为</p><p>Π1,2,3,7,8（&nbsp;（1） ⊳⊲&nbsp;（2） ⊳⊲&nbsp;（3） ）</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " σ4=’2020年11月11日’(C)&nbsp; ",
      " &nbsp;σ3=’2020年11月11日’(C) ",
      " σ4=’2020年11月11日’(EC)&nbsp; ",
      " σ3=’2020年11月11日’(EC) "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 19,
      "belong_page": 1,
      "question_id": 310873,
      "question_title": "<p>某销售公司员工关系E（工号、姓名、部门名、电话、住址）、商品关系C（商品号、商品名、库存数）和销售关系EC（工号、商品号、销售数、销售日期）。查询“销售部1”在2020年11月11日销售“HUWEI Mate40”商品的员工的工号、姓名、部门名及其销售的商品名、销售数的关系代数表达式为</p><p>Π1,2,3,7,8（&nbsp;（1） ⊳⊲&nbsp;（2） ⊳⊲&nbsp;（3） ）</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310870,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " σ4=’2020年11月11日’(C)&nbsp; ",
        " &nbsp;σ3=’2020年11月11日’(C) ",
        " σ4=’2020年11月11日’(EC)&nbsp; ",
        " σ3=’2020年11月11日’(EC) "
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 352247,
    "question_title": "<p>&nbsp;给定关系模式R（U,F），其中属性集U={A1,A2,A3,A4,A5,A6}，函数依赖集F={A1→A2，A1→A3，A3→A5，A1A5→A6}。关系模式R的候选码为&nbsp;（1） ，R属于&nbsp;（2） 。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " A1A3 ",
      " A1A4 ",
      " A1A5 ",
      " A1A6 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 20,
      "belong_page": 1,
      "question_id": 352247,
      "question_title": "<p>&nbsp;给定关系模式R（U,F），其中属性集U={A1,A2,A3,A4,A5,A6}，函数依赖集F={A1→A2，A1→A3，A3→A5，A1A5→A6}。关系模式R的候选码为&nbsp;（1） ，R属于&nbsp;（2） 。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352246,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " A1A3 ",
        " A1A4 ",
        " A1A5 ",
        " A1A6 "
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 352248,
    "question_title": "<p>&nbsp;给定关系模式R（U,F），其中属性集U={A1,A2,A3,A4,A5,A6}，函数依赖集F={A1→A2，A1→A3，A3→A5，A1A5→A6}。关系模式R的候选码为&nbsp;（1） ，R属于&nbsp;（2） 。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 1NF ",
      " 2NF ",
      " 3NF ",
      " BCNF "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 21,
      "belong_page": 1,
      "question_id": 352248,
      "question_title": "<p>&nbsp;给定关系模式R（U,F），其中属性集U={A1,A2,A3,A4,A5,A6}，函数依赖集F={A1→A2，A1→A3，A3→A5，A1A5→A6}。关系模式R的候选码为&nbsp;（1） ，R属于&nbsp;（2） 。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352246,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 1NF ",
        " 2NF ",
        " 3NF ",
        " BCNF "
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 354962,
    "question_title": "<p>【51CTO学堂-学员回忆版】给定关系模式R(U，F)，其中U为属性集，F是U上的一组函数依赖，那么函数依赖的公理系统 (Armstrong 公理系统)中的分解规则是指(7)为F所蕴涵</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 若X→Y，Y→Z，则X→Y ",
      " 若Y⊆X⊆U.则X→Y ",
      " 若X→Y，Z⊆Y，则X→Z ",
      " 若X→Y，Y→Z，则X→YZ "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 22,
      "belong_page": 1,
      "question_id": 354962,
      "question_title": "<p>【51CTO学堂-学员回忆版】给定关系模式R(U，F)，其中U为属性集，F是U上的一组函数依赖，那么函数依赖的公理系统 (Armstrong 公理系统)中的分解规则是指(7)为F所蕴涵</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354962,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 若X→Y，Y→Z，则X→Y ",
        " 若Y⊆X⊆U.则X→Y ",
        " 若X→Y，Z⊆Y，则X→Z ",
        " 若X→Y，Y→Z，则X→YZ "
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 354964,
    "question_title": "<p>给定关系R(A，B，C，D)和S(A，C，E，F)，以下(8)与σR.B&gt;S.E(R⋈S)等价</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " σ2&gt;7(R×S) ",
      " π1,2,3,4,7,8(σ1=5Λ2&gt;7Λ3=6(R×S)) ",
      " σ2&gt;&#39;7&#39;(R×S) ",
      " π1,2,3,4,7,8(σ1=5Λ2&gt;&#39;7&#39;Λ3=6(R×S)) "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 23,
      "belong_page": 1,
      "question_id": 354964,
      "question_title": "<p>给定关系R(A，B，C，D)和S(A，C，E，F)，以下(8)与σR.B&gt;S.E(R⋈S)等价</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354964,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " σ2&gt;7(R×S) ",
        " π1,2,3,4,7,8(σ1=5Λ2&gt;7Λ3=6(R×S)) ",
        " σ2&gt;&#39;7&#39;(R×S) ",
        " π1,2,3,4,7,8(σ1=5Λ2&gt;&#39;7&#39;Λ3=6(R×S)) "
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 355044,
    "question_title": "【51CTO学堂-学员回忆版】云计算服务体系结构如下图所示，图中①、② ③分别与 SaaS PaaS 1as相对应，图中①、②、③应为（1）<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221105/1667631686962795.jpg\" title=\"1667631686962795.jpg\" alt=\"QQ截图20220822213716.jpg\"/>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "应用层、基础设施层、平台层",
      "应用层、平台层、基础设施层",
      "平合层、应用层、基础设施层",
      "平台层、基础设施层、应用层"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 24,
      "belong_page": 1,
      "question_id": 355044,
      "question_title": "【51CTO学堂-学员回忆版】云计算服务体系结构如下图所示，图中①、② ③分别与 SaaS PaaS 1as相对应，图中①、②、③应为（1）<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221105/1667631686962795.jpg\" title=\"1667631686962795.jpg\" alt=\"QQ截图20220822213716.jpg\"/>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 355044,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "应用层、基础设施层、平台层",
        "应用层、平台层、基础设施层",
        "平合层、应用层、基础设施层",
        "平台层、基础设施层、应用层"
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 373642,
    "question_title": "<p>系统中有三个事务T1、T2、T3分别对数据R1和R2进行操作，其中R1和R2的初值R1=110、R2=50。假设事务T1、T2、T3操作的情况如下图所示，图中T1、T2与T3间并发操作（1）问题，X最终结果为（2）。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696266840716178.png\" title=\"1696266840716178.png\" alt=\"image.png\" width=\"442\" height=\"297\"/>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "不存在任何",
      "存在不可重复读、丢失修改、读脏数据的",
      "仅存在不可重复读的",
      "仅存在丢失修改的"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 25,
      "belong_page": 1,
      "question_id": 373642,
      "question_title": "<p>系统中有三个事务T1、T2、T3分别对数据R1和R2进行操作，其中R1和R2的初值R1=110、R2=50。假设事务T1、T2、T3操作的情况如下图所示，图中T1、T2与T3间并发操作（1）问题，X最终结果为（2）。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696266840716178.png\" title=\"1696266840716178.png\" alt=\"image.png\" width=\"442\" height=\"297\"/>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373641,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "不存在任何",
        "存在不可重复读、丢失修改、读脏数据的",
        "仅存在不可重复读的",
        "仅存在丢失修改的"
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 373643,
    "question_title": "<p>系统中有三个事务T1、T2、T3分别对数据R1和R2进行操作，其中R1和R2的初值R1=110、R2=50。假设事务T1、T2、T3操作的情况如下图所示，图中T1、T2与T3间并发操作（1）问题，X最终结果为（2）。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696266840716178.png\" title=\"1696266840716178.png\" alt=\"image.png\" width=\"442\" height=\"297\"/>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "160",
      "180",
      "200",
      "240"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 26,
      "belong_page": 1,
      "question_id": 373643,
      "question_title": "<p>系统中有三个事务T1、T2、T3分别对数据R1和R2进行操作，其中R1和R2的初值R1=110、R2=50。假设事务T1、T2、T3操作的情况如下图所示，图中T1、T2与T3间并发操作（1）问题，X最终结果为（2）。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696266840716178.png\" title=\"1696266840716178.png\" alt=\"image.png\" width=\"442\" height=\"297\"/>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373641,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "160",
        "180",
        "200",
        "240"
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 373645,
    "question_title": "<p>某水果超市有结算单关系（流水号，条码，水果名称，销售单价，数量，金额，导购员编号，顾客编号），该超市实行会员制，每位顾客具有唯一编号，其数据如下表所示。请问结算单关系的主键为（1），该关系属于（2），为使该关系模式满足3NF，需要将结算单关系模式分解为（3）。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696266935827946.png\" title=\"1696266935827946.png\" alt=\"image.png\" width=\"524\" height=\"329\"/>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "流水号",
      "流水号，条码",
      "条码，顾客编号",
      "流水号，顾客编号"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 27,
      "belong_page": 1,
      "question_id": 373645,
      "question_title": "<p>某水果超市有结算单关系（流水号，条码，水果名称，销售单价，数量，金额，导购员编号，顾客编号），该超市实行会员制，每位顾客具有唯一编号，其数据如下表所示。请问结算单关系的主键为（1），该关系属于（2），为使该关系模式满足3NF，需要将结算单关系模式分解为（3）。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696266935827946.png\" title=\"1696266935827946.png\" alt=\"image.png\" width=\"524\" height=\"329\"/>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373644,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "流水号",
        "流水号，条码",
        "条码，顾客编号",
        "流水号，顾客编号"
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 373646,
    "question_title": "<p>某水果超市有结算单关系（流水号，条码，水果名称，销售单价，数量，金额，导购员编号，顾客编号），该超市实行会员制，每位顾客具有唯一编号，其数据如下表所示。请问结算单关系的主键为（1），该关系属于（2），为使该关系模式满足3NF，需要将结算单关系模式分解为（3）。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696266935827946.png\" title=\"1696266935827946.png\" alt=\"image.png\" width=\"524\" height=\"329\"/>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "2NF，无冗余，无插入异常和删除异常",
      "2NF，存在冗余和修改操作的不一致，以及插入异常和删除异常",
      "1NF，存在冗余，但不存在修改操作的不一致",
      "1NF，存在冗余和修改操作的不一致，以及插入异常和删除异常"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 28,
      "belong_page": 1,
      "question_id": 373646,
      "question_title": "<p>某水果超市有结算单关系（流水号，条码，水果名称，销售单价，数量，金额，导购员编号，顾客编号），该超市实行会员制，每位顾客具有唯一编号，其数据如下表所示。请问结算单关系的主键为（1），该关系属于（2），为使该关系模式满足3NF，需要将结算单关系模式分解为（3）。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696266935827946.png\" title=\"1696266935827946.png\" alt=\"image.png\" width=\"524\" height=\"329\"/>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373644,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "2NF，无冗余，无插入异常和删除异常",
        "2NF，存在冗余和修改操作的不一致，以及插入异常和删除异常",
        "1NF，存在冗余，但不存在修改操作的不一致",
        "1NF，存在冗余和修改操作的不一致，以及插入异常和删除异常"
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 373647,
    "question_title": "<p>某水果超市有结算单关系（流水号，条码，水果名称，销售单价，数量，金额，导购员编号，顾客编号），该超市实行会员制，每位顾客具有唯一编号，其数据如下表所示。请问结算单关系的主键为（1），该关系属于（2），为使该关系模式满足3NF，需要将结算单关系模式分解为（3）。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696266935827946.png\" title=\"1696266935827946.png\" alt=\"image.png\" width=\"524\" height=\"329\"/>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "结算单1（流水号，条码，数量，金额，导购员编号），结算单2（流水号，顾客编号），结算单3（条码，水果名称，销售单价）",
      "结算单（流水号，条码，水果名称，销售单价，数量，金额，导购员编号，顾客编号）",
      "结算单1（流水号，条码，顾客编号），结算单2（条码，水果名称，销售单价，数量，金额，导购员编号）",
      "结算单1（流水号，条码），结算单2（流水号，顾客编号），结算单3（流水号，条码，水果名称，销售单价，数量，金额，导购员编号）"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 29,
      "belong_page": 1,
      "question_id": 373647,
      "question_title": "<p>某水果超市有结算单关系（流水号，条码，水果名称，销售单价，数量，金额，导购员编号，顾客编号），该超市实行会员制，每位顾客具有唯一编号，其数据如下表所示。请问结算单关系的主键为（1），该关系属于（2），为使该关系模式满足3NF，需要将结算单关系模式分解为（3）。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696266935827946.png\" title=\"1696266935827946.png\" alt=\"image.png\" width=\"524\" height=\"329\"/>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373644,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "结算单1（流水号，条码，数量，金额，导购员编号），结算单2（流水号，顾客编号），结算单3（条码，水果名称，销售单价）",
        "结算单（流水号，条码，水果名称，销售单价，数量，金额，导购员编号，顾客编号）",
        "结算单1（流水号，条码，顾客编号），结算单2（条码，水果名称，销售单价，数量，金额，导购员编号）",
        "结算单1（流水号，条码），结算单2（流水号，顾客编号），结算单3（流水号，条码，水果名称，销售单价，数量，金额，导购员编号）"
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 373719,
    "question_title": "<p>The relational database is the most popular kind of database for application development today. Although it is less &quot;machine efficient&quot; than its legacy counterparts, it is much easier to work with from a development perspective. A relational database is based on collections of tables, each of which has a (1) —a field(s) whose value is different for every row of the table. The tables are related to each other by the placement of the primary key from one table into the related table as a (2). Most relational database management systems (RDBMSs) support (3), the idea of ensuring that values linking the tables together through the primary and foreign keys are valid and correctly synchronized.</p><p>Structured Query Language (SQL) is the standard language for accessing the data in the (4), and it operates on complete tables, as opposed to the individual records in the tables.</p><p>Examples of RDBMS software are Microsoft Access, Oracle, DB2, Sybase, Informix, Microsoft SQL Server, and (5)。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "file",
      "row",
      "foreign key",
      "primary key"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 30,
      "belong_page": 1,
      "question_id": 373719,
      "question_title": "<p>The relational database is the most popular kind of database for application development today. Although it is less &quot;machine efficient&quot; than its legacy counterparts, it is much easier to work with from a development perspective. A relational database is based on collections of tables, each of which has a (1) —a field(s) whose value is different for every row of the table. The tables are related to each other by the placement of the primary key from one table into the related table as a (2). Most relational database management systems (RDBMSs) support (3), the idea of ensuring that values linking the tables together through the primary and foreign keys are valid and correctly synchronized.</p><p>Structured Query Language (SQL) is the standard language for accessing the data in the (4), and it operates on complete tables, as opposed to the individual records in the tables.</p><p>Examples of RDBMS software are Microsoft Access, Oracle, DB2, Sybase, Informix, Microsoft SQL Server, and (5)。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373718,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "file",
        "row",
        "foreign key",
        "primary key"
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 507298,
    "question_title": "关系数据库操作，操作的对象和结果都是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "记录",
      "元组",
      "集合",
      "列"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 31,
      "belong_page": 1,
      "question_id": 507298,
      "question_title": "关系数据库操作，操作的对象和结果都是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507298,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "记录",
        "元组",
        "集合",
        "列"
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 507335,
    "question_title": "给出关系模式R(A，B，C，D) 和其属性之间的函数依赖（ B--&gt;D， AB--&gt;C），则R的码是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "AB",
      "A",
      " B ",
      " C "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 32,
      "belong_page": 1,
      "question_id": 507335,
      "question_title": "给出关系模式R(A，B，C，D) 和其属性之间的函数依赖（ B--&gt;D， AB--&gt;C），则R的码是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507335,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "AB",
        "A",
        " B ",
        " C "
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 507337,
    "question_title": "<p>有两个关系R（a,b,c）和S（b,c,d），将R和S进行自然连接， 得到的结构包含（）列。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 2 ",
      " 4 ",
      " 7 ",
      " 8 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 33,
      "belong_page": 1,
      "question_id": 507337,
      "question_title": "<p>有两个关系R（a,b,c）和S（b,c,d），将R和S进行自然连接， 得到的结构包含（）列。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507337,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 2 ",
        " 4 ",
        " 7 ",
        " 8 "
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 523239,
    "question_title": "关系代数运算不包括（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "选择",
      "投影",
      "删除",
      "连接"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 34,
      "belong_page": 1,
      "question_id": 523239,
      "question_title": "关系代数运算不包括（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523239,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "选择",
        "投影",
        "删除",
        "连接"
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 523267,
    "question_title": "已知关系R(a,b,c,d)和R上的函数依赖F=(a-&gt;cd，c-&gt;b)，则R的候选码是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "a",
      "b",
      "c",
      "d"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 35,
      "belong_page": 1,
      "question_id": 523267,
      "question_title": "已知关系R(a,b,c,d)和R上的函数依赖F=(a-&gt;cd，c-&gt;b)，则R的候选码是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523267,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "a",
        "b",
        "c",
        "d"
      ]
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 309540,
    "question_title": "<p>【问题1】（8分）</p><p>给出人员分配表种成立左侧只有一个属性的所有函数依赖关系。题中设计人员分配表是否满足第二范式，请说明理由。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（人员编号→人员姓名）</p><p>（小区编号→物业经理姓名）</p><p>不满足2NF，此关系中的主键为（人员编号，小区编号），人员姓名只依赖于人员编号，物业经理姓名只依赖于小区编号，存在部分函数依赖，所以不满足2NF。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 36,
      "belong_page": 1,
      "question_id": 309540,
      "question_title": "<p>【问题1】（8分）</p><p>给出人员分配表种成立左侧只有一个属性的所有函数依赖关系。题中设计人员分配表是否满足第二范式，请说明理由。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 309539,
      "score_rule": "",
      "material_text": "<p>试题四（共25分）</p><p>阅读以下关于数据库设计的叙述，在答题纸上回答问题 1 至问题 3。&nbsp;</p><p>【说明】</p><p>某市居委会在新冠状病毒疫情期间需分配社区人员到辖区内各个小区协助小区物业人员进行业主出入登记及体温检测工作，居委会为高效完成工作并记录必要的工作信息，设计相应的数据库。其中有一个表用来记录工作人员在各个小区的分布情况。表的结构如下：人员分配（人员编号、人员姓名、小区编号、物业经理姓名、人员职责 ）</p><p>其中人员编号和小区编号唯一，人员职责用于记录该人员需配合小区完成的工作。假设每个人员在同一个小区只负责一项工作，但是不同小区可以负责不同的工作。</p><p>请问：</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（人员编号→人员姓名）</p><p>（小区编号→物业经理姓名）</p><p>不满足2NF，此关系中的主键为（人员编号，小区编号），人员姓名只依赖于人员编号，物业经理姓名只依赖于小区编号，存在部分函数依赖，所以不满足2NF。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 309541,
    "question_title": "<p>【问题2】（8分）</p><p>如果要将人员分配表规范化为满足3NF，请简要说明解决方案。并给出各个表的主键和外键。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【参考答案】</p><p>人员信息（人员编号，人员姓名），人员编号是主键。</p><p>小区信息（小区编号，物业经理姓名）,小区编号是主键。</p><p>人员分配（人员编号，小区编号，人员职责），主键是人员编号，小区编号。外键为人员编号，小区编号</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 37,
      "belong_page": 1,
      "question_id": 309541,
      "question_title": "<p>【问题2】（8分）</p><p>如果要将人员分配表规范化为满足3NF，请简要说明解决方案。并给出各个表的主键和外键。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 309539,
      "score_rule": "",
      "material_text": "<p>试题四（共25分）</p><p>阅读以下关于数据库设计的叙述，在答题纸上回答问题 1 至问题 3。&nbsp;</p><p>【说明】</p><p>某市居委会在新冠状病毒疫情期间需分配社区人员到辖区内各个小区协助小区物业人员进行业主出入登记及体温检测工作，居委会为高效完成工作并记录必要的工作信息，设计相应的数据库。其中有一个表用来记录工作人员在各个小区的分布情况。表的结构如下：人员分配（人员编号、人员姓名、小区编号、物业经理姓名、人员职责 ）</p><p>其中人员编号和小区编号唯一，人员职责用于记录该人员需配合小区完成的工作。假设每个人员在同一个小区只负责一项工作，但是不同小区可以负责不同的工作。</p><p>请问：</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【参考答案】</p><p>人员信息（人员编号，人员姓名），人员编号是主键。</p><p>小区信息（小区编号，物业经理姓名）,小区编号是主键。</p><p>人员分配（人员编号，小区编号，人员职责），主键是人员编号，小区编号。外键为人员编号，小区编号</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 347227,
    "question_title": "<p>1、哪种分布透明性不用考虑数据的分片？</p><p><br/></p><p>2、“若X→Y，X→Z，则X→YZ为F所蕴含”是属于Armstrong公理的什么规则？</p><p><br/></p><p>3、“每个结点对本地数据都能独立管理”属于分布式数据库的什么特点？<br/><br/></p><p>4、给定关系模式R&lt;U,F&gt;，其中，属性集U={A、B、C、D、E}。函数依赖集F={AC→B,B→DE}，关系R的主键是什么？<br/><br/></p><p>5、设关系模式R(U,F), U={A1，A2，A3，A4}，函数依赖集F={A1→A2，A1→A3 ，A2→A4}，该关系模式属于第几范式？</p><p><br/></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>1、哪种分布透明性不用考虑数据的分片？</p><p>答：分片透明性<br/><br/></p><p>2、“若X→Y，X→Z，则X→YZ为F所蕴含”是属于Armstrong公理的什么规则？</p><p>答：合并规则<br/><br/></p><p>3、“每个结点对本地数据都能独立管理”属于分布式数据库的什么特点？</p><p>答：自治性<br/><br/></p><p>4、给定关系模式R&lt;U,F&gt;，其中，属性集U={A、B、C、D、E}。函数依赖集F={AC→B,B→DE}，关系R的主键是什么？</p><p>答：AC<br/><br/></p><p>5、设关系模式R(U,F), U={A1，A2，A3，A4}，函数依赖集F={A1→A2，A1→A3 ，A2→A4}，该关系模式属于第几范式？</p><p>答：该关系模式属于2NF。该关系模式的主键为单一属性A1，因此不存在非主属性对主属性的部分依赖。而非主属性是A2、A3、A4，其中A4是由A2传递得来的，而非A1直接得到的，因此不满足3NF。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 38,
      "belong_page": 1,
      "question_id": 347227,
      "question_title": "<p>1、哪种分布透明性不用考虑数据的分片？</p><p><br/></p><p>2、“若X→Y，X→Z，则X→YZ为F所蕴含”是属于Armstrong公理的什么规则？</p><p><br/></p><p>3、“每个结点对本地数据都能独立管理”属于分布式数据库的什么特点？<br/><br/></p><p>4、给定关系模式R&lt;U,F&gt;，其中，属性集U={A、B、C、D、E}。函数依赖集F={AC→B,B→DE}，关系R的主键是什么？<br/><br/></p><p>5、设关系模式R(U,F), U={A1，A2，A3，A4}，函数依赖集F={A1→A2，A1→A3 ，A2→A4}，该关系模式属于第几范式？</p><p><br/></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 347227,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>1、哪种分布透明性不用考虑数据的分片？</p><p>答：分片透明性<br/><br/></p><p>2、“若X→Y，X→Z，则X→YZ为F所蕴含”是属于Armstrong公理的什么规则？</p><p>答：合并规则<br/><br/></p><p>3、“每个结点对本地数据都能独立管理”属于分布式数据库的什么特点？</p><p>答：自治性<br/><br/></p><p>4、给定关系模式R&lt;U,F&gt;，其中，属性集U={A、B、C、D、E}。函数依赖集F={AC→B,B→DE}，关系R的主键是什么？</p><p>答：AC<br/><br/></p><p>5、设关系模式R(U,F), U={A1，A2，A3，A4}，函数依赖集F={A1→A2，A1→A3 ，A2→A4}，该关系模式属于第几范式？</p><p>答：该关系模式属于2NF。该关系模式的主键为单一属性A1，因此不存在非主属性对主属性的部分依赖。而非主属性是A2、A3、A4，其中A4是由A2传递得来的，而非A1直接得到的，因此不满足3NF。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9383",
    "section_name": "数据库设计基础知识（第二版） - 关系数据库",
    "question_id": 350387,
    "question_title": "<p>【问题1】（6分）</p><p>机票代理关系模式的修改，满足了用户对代理商机票价格查询的需求，提高了查询效率。但这种修改导致机票代理关系模式不满足3NF，会带来存储异常的问题。</p><p>1）请具体说明其问题，并举例说明。</p><p>2）这种存储异常会造成数据不一致，请给出解决该存储异常的方案。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>因为不满足3NF，具体问题有数据冗余和更新异常。</p><p>数据冗余：代理商名称和客服电话存在于两个关系模式，而且机票代理关系模式中，该代理商代理了多少个航班，则代理商名称和客服电话被重复存储多少次。</p><p>更新异常：当代理商名称或客服电话变更时，不仅需要修改代理商关系模式，还需要修改机票代理关系模式，否则会造成数据不一致。</p><p>可采用两种方案实现。</p><p>（1）通过程序实现，当修改代理商关系模式数据时，程序同步修改机票代理关系模式；</p><p>（2）通过触发器实现，在代理商关系模式上加修改触发器，当修改代理商关系模式数据时，程序同步修改机票代理关系模式。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 39,
      "belong_page": 1,
      "question_id": 350387,
      "question_title": "<p>【问题1】（6分）</p><p>机票代理关系模式的修改，满足了用户对代理商机票价格查询的需求，提高了查询效率。但这种修改导致机票代理关系模式不满足3NF，会带来存储异常的问题。</p><p>1）请具体说明其问题，并举例说明。</p><p>2）这种存储异常会造成数据不一致，请给出解决该存储异常的方案。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 350386,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于数据库设计的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某航空公司要开发一个订票信息处理系统，以方便各个代理商销售机票。开发小组经过设计，给出该系统的部分关系模式如下：</p><p>航班（航班编号，航空公司，起飞地，起飞时间，目的地，到达时间，剩余票数，票价）</p><p>代理商（代理商编号，代理商名称，客服电话，地址，负责人）</p><p>机票代理（代理商编号，航班编号，票价）</p><p>旅客（身份证号，姓名，性别，出生日期，电话）</p><p>购票（购票单号，身份证号，航班编号，搭乘日期，购票金额）</p><p>在提供给用户的界面上，其核心功能是当用户查询某航班时，将该航班所有的代理商信息及其优惠票价信息，返回给用户，方便用户购买价格优惠的机票。在实现过程中发现，要实现此功能，需要在代理商和机票代理两个关系模式上进行连接操作，性能很差。为此开发小组将机票代理关系模式进行了扩充，结果为：</p><p>机票代理（代理商编号，航班编号，代理商名称，客服电话，票价）</p><p>这样，用户在查找信息时只需对机票代理关系模式进行查询即可，提高了查询效率。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>因为不满足3NF，具体问题有数据冗余和更新异常。</p><p>数据冗余：代理商名称和客服电话存在于两个关系模式，而且机票代理关系模式中，该代理商代理了多少个航班，则代理商名称和客服电话被重复存储多少次。</p><p>更新异常：当代理商名称或客服电话变更时，不仅需要修改代理商关系模式，还需要修改机票代理关系模式，否则会造成数据不一致。</p><p>可采用两种方案实现。</p><p>（1）通过程序实现，当修改代理商关系模式数据时，程序同步修改机票代理关系模式；</p><p>（2）通过触发器实现，在代理商关系模式上加修改触发器，当修改代理商关系模式数据时，程序同步修改机票代理关系模式。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176852.886394
  },
  {
    "section_id": "9384",
    "section_name": "数据库设计基础知识（第二版） - 数据库设计",
    "question_id": 54243,
    "question_title": "<p>在某企业的营销管理系统设计阶段，属性&quot;员工&quot;在考勤管理子系统中被称为&quot;员工&quot;，而在档案管理子系统中被称为&quot;职工&quot;，这类冲突称为（ &nbsp;）冲突。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 语义 ",
      " 结构 ",
      " 属性 ",
      " 命名 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 54243,
      "question_title": "<p>在某企业的营销管理系统设计阶段，属性&quot;员工&quot;在考勤管理子系统中被称为&quot;员工&quot;，而在档案管理子系统中被称为&quot;职工&quot;，这类冲突称为（ &nbsp;）冲突。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54243,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 语义 ",
        " 结构 ",
        " 属性 ",
        " 命名 "
      ]
    },
    "crawl_time": 1753176854.543726
  },
  {
    "section_id": "9384",
    "section_name": "数据库设计基础知识（第二版） - 数据库设计",
    "question_id": 159230,
    "question_title": "某高校管理信息系统的数据库设计过程中，（请作答此空）阶段是在需求分析的基础上，对用户信息加以分类、聚集和概括，建立信息模型，并依照选定的数据库管理系统软件，转换成为数据的（ ），再依照软硬件环境，最终实现数据的合理存储。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 物理设计 ",
      " 逻辑结构设计 ",
      " 数据库实施 ",
      " 概念结构设计 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 159230,
      "question_title": "某高校管理信息系统的数据库设计过程中，（请作答此空）阶段是在需求分析的基础上，对用户信息加以分类、聚集和概括，建立信息模型，并依照选定的数据库管理系统软件，转换成为数据的（ ），再依照软硬件环境，最终实现数据的合理存储。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159230,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 物理设计 ",
        " 逻辑结构设计 ",
        " 数据库实施 ",
        " 概念结构设计 "
      ]
    },
    "crawl_time": 1753176854.543726
  },
  {
    "section_id": "9384",
    "section_name": "数据库设计基础知识（第二版） - 数据库设计",
    "question_id": 350290,
    "question_title": "<p>事务的隔离性保证操作并发执行后的系统状态与这些操作以某种次序顺序执行（即可串行化执行）后的状态是等价的。两阶段锁协议是实现隔离性的常见方案，该协议&nbsp;（10）&nbsp;。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 能够保证事务的可串行化执行，可能发生死锁 ",
      " 不能保证事务的可串行化执行，不会发生死锁 ",
      " 不能保证事务的可串行化执行，可能发生死锁 ",
      " 能够保证事务的可串行化执行，不会发生死锁 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 350290,
      "question_title": "<p>事务的隔离性保证操作并发执行后的系统状态与这些操作以某种次序顺序执行（即可串行化执行）后的状态是等价的。两阶段锁协议是实现隔离性的常见方案，该协议&nbsp;（10）&nbsp;。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350290,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 能够保证事务的可串行化执行，可能发生死锁 ",
        " 不能保证事务的可串行化执行，不会发生死锁 ",
        " 不能保证事务的可串行化执行，可能发生死锁 ",
        " 能够保证事务的可串行化执行，不会发生死锁 "
      ]
    },
    "crawl_time": 1753176854.543726
  },
  {
    "section_id": "9384",
    "section_name": "数据库设计基础知识（第二版） - 数据库设计",
    "question_id": 507334,
    "question_title": "数据库中有一张人员信息表包含性别属性，要求这个属性的值只能是男或者女，这属于( )。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "关系完整性",
      "用户定义完整性",
      "参照完整性",
      "实体完整性"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 507334,
      "question_title": "数据库中有一张人员信息表包含性别属性，要求这个属性的值只能是男或者女，这属于( )。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507334,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "关系完整性",
        "用户定义完整性",
        "参照完整性",
        "实体完整性"
      ]
    },
    "crawl_time": 1753176854.543726
  },
  {
    "section_id": "9384",
    "section_name": "数据库设计基础知识（第二版） - 数据库设计",
    "question_id": 45922,
    "question_title": "<p>试题四 (共 2S 分)</p><p>阅读以下关于数据库设计的叙述，在答题纸上回答问题 1 至问题 3。</p><p>【说明】</p><p>某制造企业为拓展网上销售业务，委托某软件企业开发一套电子商务网站。初期仅解决基本的网上销售、订单等功能需求。该软件企业很快决定基于.NET 平台和 SQL Server 数据库进行开发，但在数据库访问方式上出现了争议。王工认为应该采用程序在线访问的方式访问数据库:而李工认为本企业内部程序员缺乏数据库开发经验，而且应用筒单，应该采用 ORM&lt;对象关系映射&gt;方式。最终经过综合考虑，该软件企业采用了李工的建议。</p><p>随着业务的发展，该电子商务网站逐渐发展成一个通用的电子商务平台，销售多家制造企业的产品，电子商务平台的功能也日益复杂。目前急需对该电子商务网站进行改造，以支持对多种异构数据库平台的数据访问，同时满足复杂的数据管理需求。该软件企业针对上述需求，对电子商务网站的架构进行了重新设计，新增加了数据访问层，同时采用工厂设计模式解决异构数据库访问的问题。新设计的系统架构如图 4-1 所示。</p><p><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20180827/1535368635404342.png\" title=\"1535368635404342.png\" alt=\"图片.png\"/><br/></p><p>【问题 1】 (9 分)</p><p>请用 300 字以内的文字分别说明数据库程序在线访问方式和 ORM 方式的优缺点，说明该软件企业采用 ORM 的原因。<br/></p><p>【问题 2】 (9 分)</p><p>请用 100 宇以内的文字说明新体系架构中增加数据访问层的原因。请根据图 4-1 所示，填写图中空白处(1) - (3)。</p><p>【问题 3】 (7 分) -</p><p>应用程序设计中，数据库访问需要良好的封装性和可维护性，因此经常使用工厂设计模式来实现对数据库访问的封装。请解释工厂设计模式，并说明其优点和应用场景: 请解释说明工厂模式在数据访问层中的应用。</p><p>请用 100 宇以内的文字说明新体系架构中增加数据访问层的原因。请根据图 4-1 所示，填写图中空白处(1) - (3)。<br/></p><p><br/></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>参考答案：</p><p>数据库程序在线访问方式优点：</p><p>1.&nbsp;性能比直接SQL好；</p><p>2.&nbsp;可以处理复杂的查询语句。</p><p>数据库程序在线访问方式不足：</p><p>1.&nbsp;程序员必须懂SQL语句；</p><p>2.&nbsp;修改维护相对困难。</p><p>&nbsp;&nbsp;&nbsp;ORM方式优点：</p><p>1.&nbsp;降低学习和开发成本；</p><p>2.&nbsp;程序员不用再写SQL进行数据库操作；</p><p>3.&nbsp;减少程序代码量；</p><p>4.&nbsp;降低由于SQL代码质量差带来的影响。</p><p>&nbsp;ORM方式缺点：</p><p>1.&nbsp;性能比直接用SQL差</p><p>2.&nbsp;处理复杂查询比较困难。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;采用ORM原因：（1）缺乏数据库开发经验，因此SQL语句编写质量有潜在风险；（2）学习成本高；（3）应用比较简单，没有太复杂功能。</p><p>参考答案：</p><p>（1）涉及多种异构数据库平台，数据访问复杂性增加，不宜与业务逻辑混合在一起；</p><p>（2）数据管理变复杂之后，需要使用代码量增加，分层次有利于逻辑更加清晰，程序维护更加方便；</p><p>（3）业务逻辑应以相同的方式应对异构数据库，为了做好隐蔽性需要单独设计数据访问层。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;（1）~（3）分别填入：执行业务逻辑 、工厂层（factory）、数据访问接口层。</p><p>工厂模式分为：抽象工厂和工厂方法，本题为抽象工厂设计模式。</p><p>抽象工厂设计模式提供一个接口，可以创建一系列或相互依赖的 对象，而无需指定他们具体的类。</p><p>优点：方便创建一系列的对象，其使用场景也是创建系列对象的情况。该题目中，可以针对oracle,mysql,sqlserver分别抽象建立抽象工厂，若指定当前工厂为oracle工厂，则创建出来的数据库连接，数据集等一系列对象都是符合oracle操作要求的，这样便于数据库之间的切换。</p><p><br/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 45922,
      "question_title": "<p>试题四 (共 2S 分)</p><p>阅读以下关于数据库设计的叙述，在答题纸上回答问题 1 至问题 3。</p><p>【说明】</p><p>某制造企业为拓展网上销售业务，委托某软件企业开发一套电子商务网站。初期仅解决基本的网上销售、订单等功能需求。该软件企业很快决定基于.NET 平台和 SQL Server 数据库进行开发，但在数据库访问方式上出现了争议。王工认为应该采用程序在线访问的方式访问数据库:而李工认为本企业内部程序员缺乏数据库开发经验，而且应用筒单，应该采用 ORM&lt;对象关系映射&gt;方式。最终经过综合考虑，该软件企业采用了李工的建议。</p><p>随着业务的发展，该电子商务网站逐渐发展成一个通用的电子商务平台，销售多家制造企业的产品，电子商务平台的功能也日益复杂。目前急需对该电子商务网站进行改造，以支持对多种异构数据库平台的数据访问，同时满足复杂的数据管理需求。该软件企业针对上述需求，对电子商务网站的架构进行了重新设计，新增加了数据访问层，同时采用工厂设计模式解决异构数据库访问的问题。新设计的系统架构如图 4-1 所示。</p><p><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20180827/1535368635404342.png\" title=\"1535368635404342.png\" alt=\"图片.png\"/><br/></p><p>【问题 1】 (9 分)</p><p>请用 300 字以内的文字分别说明数据库程序在线访问方式和 ORM 方式的优缺点，说明该软件企业采用 ORM 的原因。<br/></p><p>【问题 2】 (9 分)</p><p>请用 100 宇以内的文字说明新体系架构中增加数据访问层的原因。请根据图 4-1 所示，填写图中空白处(1) - (3)。</p><p>【问题 3】 (7 分) -</p><p>应用程序设计中，数据库访问需要良好的封装性和可维护性，因此经常使用工厂设计模式来实现对数据库访问的封装。请解释工厂设计模式，并说明其优点和应用场景: 请解释说明工厂模式在数据访问层中的应用。</p><p>请用 100 宇以内的文字说明新体系架构中增加数据访问层的原因。请根据图 4-1 所示，填写图中空白处(1) - (3)。<br/></p><p><br/></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 45922,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>参考答案：</p><p>数据库程序在线访问方式优点：</p><p>1.&nbsp;性能比直接SQL好；</p><p>2.&nbsp;可以处理复杂的查询语句。</p><p>数据库程序在线访问方式不足：</p><p>1.&nbsp;程序员必须懂SQL语句；</p><p>2.&nbsp;修改维护相对困难。</p><p>&nbsp;&nbsp;&nbsp;ORM方式优点：</p><p>1.&nbsp;降低学习和开发成本；</p><p>2.&nbsp;程序员不用再写SQL进行数据库操作；</p><p>3.&nbsp;减少程序代码量；</p><p>4.&nbsp;降低由于SQL代码质量差带来的影响。</p><p>&nbsp;ORM方式缺点：</p><p>1.&nbsp;性能比直接用SQL差</p><p>2.&nbsp;处理复杂查询比较困难。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;采用ORM原因：（1）缺乏数据库开发经验，因此SQL语句编写质量有潜在风险；（2）学习成本高；（3）应用比较简单，没有太复杂功能。</p><p>参考答案：</p><p>（1）涉及多种异构数据库平台，数据访问复杂性增加，不宜与业务逻辑混合在一起；</p><p>（2）数据管理变复杂之后，需要使用代码量增加，分层次有利于逻辑更加清晰，程序维护更加方便；</p><p>（3）业务逻辑应以相同的方式应对异构数据库，为了做好隐蔽性需要单独设计数据访问层。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;（1）~（3）分别填入：执行业务逻辑 、工厂层（factory）、数据访问接口层。</p><p>工厂模式分为：抽象工厂和工厂方法，本题为抽象工厂设计模式。</p><p>抽象工厂设计模式提供一个接口，可以创建一系列或相互依赖的 对象，而无需指定他们具体的类。</p><p>优点：方便创建一系列的对象，其使用场景也是创建系列对象的情况。该题目中，可以针对oracle,mysql,sqlserver分别抽象建立抽象工厂，若指定当前工厂为oracle工厂，则创建出来的数据库连接，数据集等一系列对象都是符合oracle操作要求的，这样便于数据库之间的切换。</p><p><br/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176854.543726
  },
  {
    "section_id": "9384",
    "section_name": "数据库设计基础知识（第二版） - 数据库设计",
    "question_id": 54356,
    "question_title": "<p>阅读以下关于软件系统数据架构建模的说明，在答题纸上回答问题1至问题3。<br/>【说明】<br/>RMO是一家运动服装制造销售公司，计划在五年时间内将销售区域从华南地区扩展至全国范围。为了扩大信息技术对于未来业务发展的价值，公司邀请咨询顾问帮助他们制订战略信息系统规划。经过评审，咨询顾问给出的战略规划要点之一是建立客户关系支持系统CRSS。RMO公司决定由其技术部成立专门的项目组负责CRSS的开发和维护工作。<br/>项目组在仔细调研和分析了系统需求的基础上，确定了基于互联网的CRSS系统架构。但在确定系统数据架构时，张工认为应该采用集中式的数据架构，给出的理由是结构简单、易维护且开发及运行成本低；而刘工建议采用分布式的数据架构，并提出在开发中通过&quot;局部数据库+缓存&quot;的读写分离结构实现，具有较好的运行性能和可扩展性。<br/>项目组经过集体讨论，考虑到公司的未来发展规划，最终采用了刘工的建议。<br/>【问题1】（8分）<br/>请用300字以内的文字，说明张工和刘工提出的数据架构的基本思想。<br/>【问题2】（13分）<br/>&nbsp;在刘工建议的基础上，为了避免CRSS系统的单点故障，请用200字以内文字简要说明如何建立CRSS的数据库系统；对于数据的读取、添加、更改和删除操作分别如何实现。<br/>【问题3】（4分）<br/>RMO公司销售区域将在未来五年大面积扩展，其潜在客户数量也会因此大幅度增加，所以良好的可扩展性是CRSS系统所必需的质量属性。请分别说明在集中式和分布式数据架构下，可以采用哪些方法提升系统的可扩展性。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题1】<br/>（1）张工提出的集中式数据架构是由一个处理器、与它相关联的数据存储设备以及其他外围设备组成，它被物理地定义到单个位置。系统提供数据处理能力，用户可以在同样的站点上操作，也可以在地理位置隔开的其他站点上通过远程终端来操作。系统及其数据管理被某个或中心站点集中控制。<br/>（2）刘工提出的分布式数据架构使用多个计算机系统上的多个局部数据库系统构成，数据可以在多个不同的局部数据库中进行传送，由不同的数据库管理系统软件进行管理，运行在多种不同的计算机上，支持多种不同的操作系统。这些机器位于（或分布在）不同的地理位置并通过多种通信网络连接在一起。企业数据可以分布在不同的计算机上，一个应用程序可以操作位于不同地理位置的机器上的数据。<br/>【问题2】<br/>读写分离架构利用了数据库的复制技术，将数据的读和写分布在不同的处理节点上，从而达到提高可用性和扩展性的目的。<br/>CRSS的分布式数据库系统需要由多个局部数据库系统、多个热备份数据库系统和多个数据缓存组成。局部数据库负责数据的写入，多个热备份数据库系统用以解决单点故障的问题，数据缓存负责为应用提供所读取的数据。<br/>（1）读取数据：应用访问缓存，如果命中则返回，否则从局部数据库系统中读取数据并将数据加载到缓存后返回。<br/>（2）添加数据：采用延迟加载策略，应用将数据直接写入局部数据库。<br/>（3）更改数据：应用更改局部数据库中的数据，将缓存中的数据标记为失效。<br/>（4）删除数据：应用删除局部数据库中的数据，将缓存中的数据标记为失效。<br/>【问题3】<br/>张工提出的集中式数据架构通过向上扩展（Scale Up）提升系统的可扩展性。具体的实现方式包括硬件扩容（增加CPU数量、内存容量、磁盘数量）和硬件升级（更换为高端主机或高速磁盘等）。<br/>&nbsp;刘工提出的分布式数据架构通过向外扩展（Scale Out）提升系统的可扩展性。具体的实现方式包括数据复制、数据垂直切分（或/和）水平切分、缓存和全文搜索。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 54356,
      "question_title": "<p>阅读以下关于软件系统数据架构建模的说明，在答题纸上回答问题1至问题3。<br/>【说明】<br/>RMO是一家运动服装制造销售公司，计划在五年时间内将销售区域从华南地区扩展至全国范围。为了扩大信息技术对于未来业务发展的价值，公司邀请咨询顾问帮助他们制订战略信息系统规划。经过评审，咨询顾问给出的战略规划要点之一是建立客户关系支持系统CRSS。RMO公司决定由其技术部成立专门的项目组负责CRSS的开发和维护工作。<br/>项目组在仔细调研和分析了系统需求的基础上，确定了基于互联网的CRSS系统架构。但在确定系统数据架构时，张工认为应该采用集中式的数据架构，给出的理由是结构简单、易维护且开发及运行成本低；而刘工建议采用分布式的数据架构，并提出在开发中通过&quot;局部数据库+缓存&quot;的读写分离结构实现，具有较好的运行性能和可扩展性。<br/>项目组经过集体讨论，考虑到公司的未来发展规划，最终采用了刘工的建议。<br/>【问题1】（8分）<br/>请用300字以内的文字，说明张工和刘工提出的数据架构的基本思想。<br/>【问题2】（13分）<br/>&nbsp;在刘工建议的基础上，为了避免CRSS系统的单点故障，请用200字以内文字简要说明如何建立CRSS的数据库系统；对于数据的读取、添加、更改和删除操作分别如何实现。<br/>【问题3】（4分）<br/>RMO公司销售区域将在未来五年大面积扩展，其潜在客户数量也会因此大幅度增加，所以良好的可扩展性是CRSS系统所必需的质量属性。请分别说明在集中式和分布式数据架构下，可以采用哪些方法提升系统的可扩展性。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 54356,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题1】<br/>（1）张工提出的集中式数据架构是由一个处理器、与它相关联的数据存储设备以及其他外围设备组成，它被物理地定义到单个位置。系统提供数据处理能力，用户可以在同样的站点上操作，也可以在地理位置隔开的其他站点上通过远程终端来操作。系统及其数据管理被某个或中心站点集中控制。<br/>（2）刘工提出的分布式数据架构使用多个计算机系统上的多个局部数据库系统构成，数据可以在多个不同的局部数据库中进行传送，由不同的数据库管理系统软件进行管理，运行在多种不同的计算机上，支持多种不同的操作系统。这些机器位于（或分布在）不同的地理位置并通过多种通信网络连接在一起。企业数据可以分布在不同的计算机上，一个应用程序可以操作位于不同地理位置的机器上的数据。<br/>【问题2】<br/>读写分离架构利用了数据库的复制技术，将数据的读和写分布在不同的处理节点上，从而达到提高可用性和扩展性的目的。<br/>CRSS的分布式数据库系统需要由多个局部数据库系统、多个热备份数据库系统和多个数据缓存组成。局部数据库负责数据的写入，多个热备份数据库系统用以解决单点故障的问题，数据缓存负责为应用提供所读取的数据。<br/>（1）读取数据：应用访问缓存，如果命中则返回，否则从局部数据库系统中读取数据并将数据加载到缓存后返回。<br/>（2）添加数据：采用延迟加载策略，应用将数据直接写入局部数据库。<br/>（3）更改数据：应用更改局部数据库中的数据，将缓存中的数据标记为失效。<br/>（4）删除数据：应用删除局部数据库中的数据，将缓存中的数据标记为失效。<br/>【问题3】<br/>张工提出的集中式数据架构通过向上扩展（Scale Up）提升系统的可扩展性。具体的实现方式包括硬件扩容（增加CPU数量、内存容量、磁盘数量）和硬件升级（更换为高端主机或高速磁盘等）。<br/>&nbsp;刘工提出的分布式数据架构通过向外扩展（Scale Out）提升系统的可扩展性。具体的实现方式包括数据复制、数据垂直切分（或/和）水平切分、缓存和全文搜索。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176854.543726
  },
  {
    "section_id": "9384",
    "section_name": "数据库设计基础知识（第二版） - 数据库设计",
    "question_id": 286350,
    "question_title": "<p>问题1：请说明关系型数据库开发中，逻辑数据模型设计过程包含哪些任务？该包裹单的逻辑数据模型中应该包含哪些实体?并给出每个实体的主键属性。</p><p><br/></p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>问题1：</p><p>逻辑模型设计也称为逻辑结构设计，其任务是将概念模型转化为某个特定的DBMS上的逻辑模型。设计逻辑结构时，首先为概念模型选定一个合适的逻辑模型（例如，关系模型、网状模型或层次模型），然后将其转化为由特定DBMS支持的逻辑模型，最后对逻辑模型进行优化。逻辑设计的目的是将概念设计阶段设计好的E-R图转换为与选用的具体机器上的DBMS所支持的数据模型相符合的逻辑结构。</p><p>该包裹单包含三类实体：收件人（主键：电话）、寄件人（主键：电话）、包裹单（主键：包裹单编号）。</p><p><br/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 286350,
      "question_title": "<p>问题1：请说明关系型数据库开发中，逻辑数据模型设计过程包含哪些任务？该包裹单的逻辑数据模型中应该包含哪些实体?并给出每个实体的主键属性。</p><p><br/></p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 286349,
      "score_rule": "",
      "material_text": "<p>试题二：</p><p>某企业委托软件公司开发一套包裹信息管理系统，以便于对该企业通过快递收发的包裹信息进行统一管理，在系统设计阶段，需要对不同快递信息的包裹单信息进行建模，其中，邮政包裹单如图</p><p><img src=\"https://s2.51cto.com/images/20201108/1604816379136764.jpg\" title=\"1604816379136764.jpg\" alt=\"1.jpg\"/></p><br/>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>问题1：</p><p>逻辑模型设计也称为逻辑结构设计，其任务是将概念模型转化为某个特定的DBMS上的逻辑模型。设计逻辑结构时，首先为概念模型选定一个合适的逻辑模型（例如，关系模型、网状模型或层次模型），然后将其转化为由特定DBMS支持的逻辑模型，最后对逻辑模型进行优化。逻辑设计的目的是将概念设计阶段设计好的E-R图转换为与选用的具体机器上的DBMS所支持的数据模型相符合的逻辑结构。</p><p>该包裹单包含三类实体：收件人（主键：电话）、寄件人（主键：电话）、包裹单（主键：包裹单编号）。</p><p><br/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176854.543726
  },
  {
    "section_id": "9384",
    "section_name": "数据库设计基础知识（第二版） - 数据库设计",
    "question_id": 286351,
    "question_title": "<p>问题2：请说明什么是超类实体？结合图中包裹单信息，试设计一种超类实体，给出完整的属性列表。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>问题2：</p><p>某个实体类型中所有实体同时也是另一个实体类型中的实体，此时称前一实体为子类实体，后一实体为超类实体。</p><p>本题的超类实体为：包裹单（包裹单编号、收件人、寄件人）</p><p><br/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 286351,
      "question_title": "<p>问题2：请说明什么是超类实体？结合图中包裹单信息，试设计一种超类实体，给出完整的属性列表。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 286349,
      "score_rule": "",
      "material_text": "<p>试题二：</p><p>某企业委托软件公司开发一套包裹信息管理系统，以便于对该企业通过快递收发的包裹信息进行统一管理，在系统设计阶段，需要对不同快递信息的包裹单信息进行建模，其中，邮政包裹单如图</p><p><img src=\"https://s2.51cto.com/images/20201108/1604816379136764.jpg\" title=\"1604816379136764.jpg\" alt=\"1.jpg\"/></p><br/>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>问题2：</p><p>某个实体类型中所有实体同时也是另一个实体类型中的实体，此时称前一实体为子类实体，后一实体为超类实体。</p><p>本题的超类实体为：包裹单（包裹单编号、收件人、寄件人）</p><p><br/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176854.543726
  },
  {
    "section_id": "9384",
    "section_name": "数据库设计基础知识（第二版） - 数据库设计",
    "question_id": 286352,
    "question_title": "<p>问题3：请说明什么是派生属性？结合图中包裹单信息说明哪个属性是派生属性。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>问题3：</p><p>实体的某个属性可以从其他属性或其他数据推导出来，那么这个属性就是派生属性。本题中，资费总计=资费+挂号费+保价费+回执费，因此资费总计是一个派生属性。</p><p><br/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 286352,
      "question_title": "<p>问题3：请说明什么是派生属性？结合图中包裹单信息说明哪个属性是派生属性。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 286349,
      "score_rule": "",
      "material_text": "<p>试题二：</p><p>某企业委托软件公司开发一套包裹信息管理系统，以便于对该企业通过快递收发的包裹信息进行统一管理，在系统设计阶段，需要对不同快递信息的包裹单信息进行建模，其中，邮政包裹单如图</p><p><img src=\"https://s2.51cto.com/images/20201108/1604816379136764.jpg\" title=\"1604816379136764.jpg\" alt=\"1.jpg\"/></p><br/>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>问题3：</p><p>实体的某个属性可以从其他属性或其他数据推导出来，那么这个属性就是派生属性。本题中，资费总计=资费+挂号费+保价费+回执费，因此资费总计是一个派生属性。</p><p><br/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176854.543726
  },
  {
    "section_id": "9384",
    "section_name": "数据库设计基础知识（第二版） - 数据库设计",
    "question_id": 286361,
    "question_title": "<p>论数据分片技术及其应用</p><p>数据分片就是按照一定的规则，将数据集划分成相互独立正交的数据子集。然后将数据子集分布到不同的节点上,通过设计合理的数据分片规则，可将系统中的数据分布在不同的物理数据库中,达到提升应用系统数据处理速度的目的。</p><p>请围绕“论数据分片技术及其应用”论题，依次从以下三个方面进行论述。</p><p>1.&nbsp;概要叙述你参与管理和开发软件的项目以及承担的工作</p><p>2.&nbsp;Hash分片,一致性Hash分片和按照数据范围分片是三种常用的数据分片方式</p><p>3.&nbsp;具体阐述你参与管理和开发的项目，且采用了哪些分片方式，并且具体说明其实现过程和应用效果。</p><p>&nbsp;</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>略</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 286361,
      "question_title": "<p>论数据分片技术及其应用</p><p>数据分片就是按照一定的规则，将数据集划分成相互独立正交的数据子集。然后将数据子集分布到不同的节点上,通过设计合理的数据分片规则，可将系统中的数据分布在不同的物理数据库中,达到提升应用系统数据处理速度的目的。</p><p>请围绕“论数据分片技术及其应用”论题，依次从以下三个方面进行论述。</p><p>1.&nbsp;概要叙述你参与管理和开发软件的项目以及承担的工作</p><p>2.&nbsp;Hash分片,一致性Hash分片和按照数据范围分片是三种常用的数据分片方式</p><p>3.&nbsp;具体阐述你参与管理和开发的项目，且采用了哪些分片方式，并且具体说明其实现过程和应用效果。</p><p>&nbsp;</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 286361,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>略</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176854.543726
  },
  {
    "section_id": "9384",
    "section_name": "数据库设计基础知识（第二版） - 数据库设计",
    "question_id": 310929,
    "question_title": "<p>问题二（8分）：设备厂商的技术总监在需求说明中，有如下一部分数据结构的描述：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;设备信息（设备标识、登记标识、所属用户、设备状态）</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;设备心跳（设备标识、最后一次心跳时间）</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;设备异常（设备标识、异常类型、异常发现时间、是否推送）</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;请描述数据结构是否合理，并说明原因。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>问题1. 设备与用户间存在多对多的关系，如单个设备既属于社区安防用户，又属于消防站监管。</p><p>问题2. 设备状态属于设备动态属性，不应与静态属性混合存储，会增加静态信息表的IO。</p><p>问题3. 设备心跳不应只存储最后一次，无法获取全部设备状态。</p><p>问题4. 设备异常的推送是否仅单一一个用户一次，如果存在多条推送，则存在一对多的关系。</p>&nbsp;&nbsp;&nbsp;&nbsp;请描述数据结构是否合理，并说明原因。<p><br/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 310929,
      "question_title": "<p>问题二（8分）：设备厂商的技术总监在需求说明中，有如下一部分数据结构的描述：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;设备信息（设备标识、登记标识、所属用户、设备状态）</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;设备心跳（设备标识、最后一次心跳时间）</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;设备异常（设备标识、异常类型、异常发现时间、是否推送）</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;请描述数据结构是否合理，并说明原因。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 310927,
      "score_rule": "",
      "material_text": "<p>试题三</p><p>国内某安防公司欲为其防火报警器产品研发互联网产品以提高产品的易用性和用户透明性，并为主管部门提供信息辅助和联防联控支持。</p><p>据用户描述，设备使用场景存在多种可能性，如：</p><p>1. 开发商集中采购在楼盘中批量安装部署；</p><p>2. 用户购买，在自身房屋中安装使用1个到多个终端；</p><p>3. 企业在其自身的营业场所批量安装部署；</p><p>并且，研发的应用产品将面对多种使用客户，如：</p><p>1. 消防中队或消防站</p><p>2. 企业安防用户</p><p>3. 社区或物业的安防用户</p><p>4. 个人用户及其亲属关联用户</p><p>据此，系统分析师提出以SaaS产品形式组织应用研发。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>问题1. 设备与用户间存在多对多的关系，如单个设备既属于社区安防用户，又属于消防站监管。</p><p>问题2. 设备状态属于设备动态属性，不应与静态属性混合存储，会增加静态信息表的IO。</p><p>问题3. 设备心跳不应只存储最后一次，无法获取全部设备状态。</p><p>问题4. 设备异常的推送是否仅单一一个用户一次，如果存在多条推送，则存在一对多的关系。</p>&nbsp;&nbsp;&nbsp;&nbsp;请描述数据结构是否合理，并说明原因。<p><br/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176854.543726
  },
  {
    "section_id": "9384",
    "section_name": "数据库设计基础知识（第二版） - 数据库设计",
    "question_id": 310930,
    "question_title": "<p>问题三（8分）：随着用户数不断增加，数据访问性能对提升系统性能有很大帮助，请给出适当</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;建议以提高数据访问性能。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "&nbsp;<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210924/1632415045966655.jpg\" title=\"1632415045966655.jpg\" alt=\"1.jpg\"/>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 310930,
      "question_title": "<p>问题三（8分）：随着用户数不断增加，数据访问性能对提升系统性能有很大帮助，请给出适当</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;建议以提高数据访问性能。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 310927,
      "score_rule": "",
      "material_text": "<p>试题三</p><p>国内某安防公司欲为其防火报警器产品研发互联网产品以提高产品的易用性和用户透明性，并为主管部门提供信息辅助和联防联控支持。</p><p>据用户描述，设备使用场景存在多种可能性，如：</p><p>1. 开发商集中采购在楼盘中批量安装部署；</p><p>2. 用户购买，在自身房屋中安装使用1个到多个终端；</p><p>3. 企业在其自身的营业场所批量安装部署；</p><p>并且，研发的应用产品将面对多种使用客户，如：</p><p>1. 消防中队或消防站</p><p>2. 企业安防用户</p><p>3. 社区或物业的安防用户</p><p>4. 个人用户及其亲属关联用户</p><p>据此，系统分析师提出以SaaS产品形式组织应用研发。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "&nbsp;<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210924/1632415045966655.jpg\" title=\"1632415045966655.jpg\" alt=\"1.jpg\"/>"
      ],
      "option": null
    },
    "crawl_time": 1753176854.543726
  },
  {
    "section_id": "9384",
    "section_name": "数据库设计基础知识（第二版） - 数据库设计",
    "question_id": 350388,
    "question_title": "<p>【问题2】（9分）</p><p>在机票销售信息处理系统中，两个代理商的售票并发执行，可能产生的操作序列如表4-1所示。</p><p>表4-1 两个代理商可能的操作序列</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220909/1662698297402587.png\" title=\"1662698297402587.png\" alt=\"image.png\"/><br/><p>假设两个代理商执行之前，该航班仅剩1张机票。</p><p>1）请说明上述两个代理商操作的结果。</p><p>2）并发操作会带来数据不一致的问题，请具体说明3种问题。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>1）第一个代理商能够正确售票。第二个代理商查询剩余票数时正确，为l张机票但剩</p><p>余票数减一操作时出错，因为该机票已经被第一个代理商售出，此时第二个代理商无票可售。</p><p>2）并发操作会带来数据不一致问题具体为：丢失修改、读脏数据、不可重复读。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 350388,
      "question_title": "<p>【问题2】（9分）</p><p>在机票销售信息处理系统中，两个代理商的售票并发执行，可能产生的操作序列如表4-1所示。</p><p>表4-1 两个代理商可能的操作序列</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220909/1662698297402587.png\" title=\"1662698297402587.png\" alt=\"image.png\"/><br/><p>假设两个代理商执行之前，该航班仅剩1张机票。</p><p>1）请说明上述两个代理商操作的结果。</p><p>2）并发操作会带来数据不一致的问题，请具体说明3种问题。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 350386,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于数据库设计的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某航空公司要开发一个订票信息处理系统，以方便各个代理商销售机票。开发小组经过设计，给出该系统的部分关系模式如下：</p><p>航班（航班编号，航空公司，起飞地，起飞时间，目的地，到达时间，剩余票数，票价）</p><p>代理商（代理商编号，代理商名称，客服电话，地址，负责人）</p><p>机票代理（代理商编号，航班编号，票价）</p><p>旅客（身份证号，姓名，性别，出生日期，电话）</p><p>购票（购票单号，身份证号，航班编号，搭乘日期，购票金额）</p><p>在提供给用户的界面上，其核心功能是当用户查询某航班时，将该航班所有的代理商信息及其优惠票价信息，返回给用户，方便用户购买价格优惠的机票。在实现过程中发现，要实现此功能，需要在代理商和机票代理两个关系模式上进行连接操作，性能很差。为此开发小组将机票代理关系模式进行了扩充，结果为：</p><p>机票代理（代理商编号，航班编号，代理商名称，客服电话，票价）</p><p>这样，用户在查找信息时只需对机票代理关系模式进行查询即可，提高了查询效率。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>1）第一个代理商能够正确售票。第二个代理商查询剩余票数时正确，为l张机票但剩</p><p>余票数减一操作时出错，因为该机票已经被第一个代理商售出，此时第二个代理商无票可售。</p><p>2）并发操作会带来数据不一致问题具体为：丢失修改、读脏数据、不可重复读。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176854.543726
  },
  {
    "section_id": "9384",
    "section_name": "数据库设计基础知识（第二版） - 数据库设计",
    "question_id": 350389,
    "question_title": "<p>【问题3】（10分）</p><p>为了避免问题2中的问题，开发组使用库的读写锁机制，操作序列变为表4-2所示。</p><p>表4-2 &nbsp;加入读写锁机制后，两个代理商可能的操作序列</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220909/1662698330154164.png\" title=\"1662698330154164.png\" alt=\"image.png\"/><br/><p>请填写表中的空白项，并用150字以内的文字说明读写锁机制的缺点。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）加写锁 （2）加读锁 （3）加写锁 （4）被阻塞（5）得到通知 （6）加写锁</p><p>读写锁的缺点：读写锁会造成读写操作的互相阻塞，实际使得用户的操作被串行化，降低了系统的并发性能。设计不好的情况下，可能会出现资源的交叉锁定，形成死锁。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 350389,
      "question_title": "<p>【问题3】（10分）</p><p>为了避免问题2中的问题，开发组使用库的读写锁机制，操作序列变为表4-2所示。</p><p>表4-2 &nbsp;加入读写锁机制后，两个代理商可能的操作序列</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220909/1662698330154164.png\" title=\"1662698330154164.png\" alt=\"image.png\"/><br/><p>请填写表中的空白项，并用150字以内的文字说明读写锁机制的缺点。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 350386,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于数据库设计的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某航空公司要开发一个订票信息处理系统，以方便各个代理商销售机票。开发小组经过设计，给出该系统的部分关系模式如下：</p><p>航班（航班编号，航空公司，起飞地，起飞时间，目的地，到达时间，剩余票数，票价）</p><p>代理商（代理商编号，代理商名称，客服电话，地址，负责人）</p><p>机票代理（代理商编号，航班编号，票价）</p><p>旅客（身份证号，姓名，性别，出生日期，电话）</p><p>购票（购票单号，身份证号，航班编号，搭乘日期，购票金额）</p><p>在提供给用户的界面上，其核心功能是当用户查询某航班时，将该航班所有的代理商信息及其优惠票价信息，返回给用户，方便用户购买价格优惠的机票。在实现过程中发现，要实现此功能，需要在代理商和机票代理两个关系模式上进行连接操作，性能很差。为此开发小组将机票代理关系模式进行了扩充，结果为：</p><p>机票代理（代理商编号，航班编号，代理商名称，客服电话，票价）</p><p>这样，用户在查找信息时只需对机票代理关系模式进行查询即可，提高了查询效率。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）加写锁 （2）加读锁 （3）加写锁 （4）被阻塞（5）得到通知 （6）加写锁</p><p>读写锁的缺点：读写锁会造成读写操作的互相阻塞，实际使得用户的操作被串行化，降低了系统的并发性能。设计不好的情况下，可能会出现资源的交叉锁定，形成死锁。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176854.543726
  },
  {
    "section_id": "9384",
    "section_name": "数据库设计基础知识（第二版） - 数据库设计",
    "question_id": 350391,
    "question_title": "<p>【问题1】（10分）</p><p>针对李工提出的改进方案，从 a～j 中分别选出各技术的相关描述和对应常见支持软件填入表 5-1 中的（1）～（10）处。</p><p>表5-1 技术描述与常见支持软件</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220909/1662698374532579.png\" title=\"1662698374532579.png\" alt=\"image.png\"/><br/><p>a）保存静态文件，减少网络交换量，加速响应请求</p><p>b）可采用软件级和硬件级负载均衡实现分流和后台减压</p><p>c）文件存储系统，快速查找文件</p><p>d）FastDFS</p><p>e）HAProxy</p><p>f）JBoss</p><p>g）Hadoop Distributed File System（HDFS）</p><p>h）Apache Tomact</p><p>i）Squid</p><p>j）MongoDB</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）（b） （2）（e） （3）（a） （4）（i） （5）（c）</p><p>（6）（d） （7）（g） （8）（f） （9）（h） （10）（j）</p><p>（6）和（7）、 （8）和（9）的答案可互换。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 350391,
      "question_title": "<p>【问题1】（10分）</p><p>针对李工提出的改进方案，从 a～j 中分别选出各技术的相关描述和对应常见支持软件填入表 5-1 中的（1）～（10）处。</p><p>表5-1 技术描述与常见支持软件</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220909/1662698374532579.png\" title=\"1662698374532579.png\" alt=\"image.png\"/><br/><p>a）保存静态文件，减少网络交换量，加速响应请求</p><p>b）可采用软件级和硬件级负载均衡实现分流和后台减压</p><p>c）文件存储系统，快速查找文件</p><p>d）FastDFS</p><p>e）HAProxy</p><p>f）JBoss</p><p>g）Hadoop Distributed File System（HDFS）</p><p>h）Apache Tomact</p><p>i）Squid</p><p>j）MongoDB</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 350390,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web系统架构设计的叙述，在答题纸上回答问题 1~3。</p><p>【说明】</p><p>某公司自主研发的网络教学平台因业务扩展，导致系统访问量不断增大，现有系统访问速度缓慢，有时甚至出现系统故障瘫痪等现象。面对这一情况，公司召开项目组讨论会议，寻求该商务平台的改进方案。讨论会上，王工提出可以利用镜像站点、CDN 内容分发等方式解决并发访问量带来的问题。而李工认为，仅仅依靠上述外网加速技术不能完全解决系统现有问题，如果访问量持续增加，系统仍存在崩溃的可能。李工提出应同时结合 Web 内网加速技术优化系统改进方案，如综合应用负载均衡、缓存服务器、Web应用服务器、分布式文件系统、分布式数据库等。经过讨论，公司最终决定采用李工的思路，完成改进系统的设计方案。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）（b） （2）（e） （3）（a） （4）（i） （5）（c）</p><p>（6）（d） （7）（g） （8）（f） （9）（h） （10）（j）</p><p>（6）和（7）、 （8）和（9）的答案可互换。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176854.543726
  },
  {
    "section_id": "9385",
    "section_name": "数据库设计基础知识（第二版） - 应用程序与数据库的交互",
    "question_id": 309483,
    "question_title": "（1）通过一个抽象层访问数据库，从而允许使用相同或相似的代码访问不同的数据库资源。典型的技术如Windows平台的ODBC和Java平台的JDBC等。（2）利用高效可靠的消息传递机制进行平台无关的数据交流，并可基于数据通信进行分布系统的集成。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "数据库中间件",
      "远程过程调用中间件",
      "面向消息中间件",
      "事务中间件"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 309483,
      "question_title": "（1）通过一个抽象层访问数据库，从而允许使用相同或相似的代码访问不同的数据库资源。典型的技术如Windows平台的ODBC和Java平台的JDBC等。（2）利用高效可靠的消息传递机制进行平台无关的数据交流，并可基于数据通信进行分布系统的集成。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 309482,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "数据库中间件",
        "远程过程调用中间件",
        "面向消息中间件",
        "事务中间件"
      ]
    },
    "crawl_time": 1753176855.826138
  },
  {
    "section_id": "9385",
    "section_name": "数据库设计基础知识（第二版） - 应用程序与数据库的交互",
    "question_id": 309484,
    "question_title": "（1）通过一个抽象层访问数据库，从而允许使用相同或相似的代码访问不同的数据库资源。典型的技术如Windows平台的ODBC和Java平台的JDBC等。（2）利用高效可靠的消息传递机制进行平台无关的数据交流，并可基于数据通信进行分布系统的集成。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "远程过程调用中间件",
      "数据库中间件",
      "面向消息中间件",
      "事务中间件"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 309484,
      "question_title": "（1）通过一个抽象层访问数据库，从而允许使用相同或相似的代码访问不同的数据库资源。典型的技术如Windows平台的ODBC和Java平台的JDBC等。（2）利用高效可靠的消息传递机制进行平台无关的数据交流，并可基于数据通信进行分布系统的集成。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 309482,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "远程过程调用中间件",
        "数据库中间件",
        "面向消息中间件",
        "事务中间件"
      ]
    },
    "crawl_time": 1753176855.826138
  },
  {
    "section_id": "9386",
    "section_name": "数据库设计基础知识（第二版） - NoSQL数据库",
    "question_id": 151198,
    "question_title": "分布式数据库缓存技术有Memcache与Redis，关于两者的说法正确的是（）",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " Memcache不仅仅支持简单的k/v类型的数据，同时还提供list，set，hash等数据结构的存储。 ",
      " Redis支持多线程 ",
      " Memcache不能进行内存管理 ",
      " Redis支持主从、sentinel、cluster等分布式存储方式 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 151198,
      "question_title": "分布式数据库缓存技术有Memcache与Redis，关于两者的说法正确的是（）",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 151198,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " Memcache不仅仅支持简单的k/v类型的数据，同时还提供list，set，hash等数据结构的存储。 ",
        " Redis支持多线程 ",
        " Memcache不能进行内存管理 ",
        " Redis支持主从、sentinel、cluster等分布式存储方式 "
      ]
    },
    "crawl_time": 1753176856.9733615
  },
  {
    "section_id": "9386",
    "section_name": "数据库设计基础知识（第二版） - NoSQL数据库",
    "question_id": 177938,
    "question_title": "<p>请详细阅读有关数据库方面的描述，回答问题。</p><p style=\"margin-top: 5px;text-indent: 28px\">【说明】</p><p>某软件公司欲开发一个基于Web 2.0的大型社交网络系统。就该系统的数据架构而言，李工决定采用公司熟悉的数据架构，使用通用的商用关系型数据库，系统内部数据采用中央集中方式存储。</p><p>该系统投入使用后，初期用户数量少，系统运行平稳。6个月后，用户数出现了爆炸式增长，系统暴露出诸多问题，集中表现在：</p><p>1.用户执行读写操作时，响应时间均变得很慢；</p><p>2.随着系统功能的扩充，原有数据格式发生变化，又出现新的数据格式，维护困难；</p><p>3.数据容量很快超过系统原有的设计上限，数据库扩容困难；</p><p>4.软件系统不断出现宕机，整个系统可用性较差。</p><p>经过多次会议讨论，公司的邹月平邹工建议采用NoSQL数据库来替代关系数据库，以解决上述问题。但薛大龙薛工指出NoSQL数据库出现时间不长，在使用上可能存在风险。公司技术人员对NoSQL数据库产品进行了认真测试，最终决定采用NoSQL数据库来替代现有的数据库系统。</p><p>【问题1】10分</p><p>请比较关系数据库与 NoSQL 数据的特点，如表 4-1 所示，以此来说明该系统更适合采用 NoSQL 数据库。请完成表 4-1 中的（1） ~ （5） 处空白。</p><p>表 4-1 关系数据库与 NoSQL 数据库特征比较<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191030/1572414843713819.jpg\" title=\"1572414843713819.jpg\" alt=\"2.jpg\"/></p><p>【问题2】15分</p><p>公司最终决定采用邹工的方案，同时配合分布式缓存技术减轻数据库服务器压力，目前有Memcache和Redis两种方案，请从数据类型、持久化和分布式存储三个方面比较两种技术的区别。</p><p><br/></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>见解析</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 177938,
      "question_title": "<p>请详细阅读有关数据库方面的描述，回答问题。</p><p style=\"margin-top: 5px;text-indent: 28px\">【说明】</p><p>某软件公司欲开发一个基于Web 2.0的大型社交网络系统。就该系统的数据架构而言，李工决定采用公司熟悉的数据架构，使用通用的商用关系型数据库，系统内部数据采用中央集中方式存储。</p><p>该系统投入使用后，初期用户数量少，系统运行平稳。6个月后，用户数出现了爆炸式增长，系统暴露出诸多问题，集中表现在：</p><p>1.用户执行读写操作时，响应时间均变得很慢；</p><p>2.随着系统功能的扩充，原有数据格式发生变化，又出现新的数据格式，维护困难；</p><p>3.数据容量很快超过系统原有的设计上限，数据库扩容困难；</p><p>4.软件系统不断出现宕机，整个系统可用性较差。</p><p>经过多次会议讨论，公司的邹月平邹工建议采用NoSQL数据库来替代关系数据库，以解决上述问题。但薛大龙薛工指出NoSQL数据库出现时间不长，在使用上可能存在风险。公司技术人员对NoSQL数据库产品进行了认真测试，最终决定采用NoSQL数据库来替代现有的数据库系统。</p><p>【问题1】10分</p><p>请比较关系数据库与 NoSQL 数据的特点，如表 4-1 所示，以此来说明该系统更适合采用 NoSQL 数据库。请完成表 4-1 中的（1） ~ （5） 处空白。</p><p>表 4-1 关系数据库与 NoSQL 数据库特征比较<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191030/1572414843713819.jpg\" title=\"1572414843713819.jpg\" alt=\"2.jpg\"/></p><p>【问题2】15分</p><p>公司最终决定采用邹工的方案，同时配合分布式缓存技术减轻数据库服务器压力，目前有Memcache和Redis两种方案，请从数据类型、持久化和分布式存储三个方面比较两种技术的区别。</p><p><br/></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 177938,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>见解析</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176856.9733615
  },
  {
    "section_id": "9386",
    "section_name": "数据库设计基础知识（第二版） - NoSQL数据库",
    "question_id": 310928,
    "question_title": "<p>问题一（9分）：在研讨过程中，设备厂商的技术总监提出采用互联网公司常用的SSM架构，使用MySQL作为数据库，而软件研发团队的架构师却提出要使用由MySQL、HBase和Redis组成的多种多组数据库。请给出适当建议。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>技术总监的建议中，MySQL属于关系型数据库，实际应用中一般用来作为操作数据存储。研发架构师提出的HBase和Redis属于NoSQL，实际应用中一般用来做大数据量和高即时性数据存储。该案例属于物联网应用，建议增加NoSQL数据库提高数据存储的容量和即时性。</p><p>但是HBase属于列族数据库，不便于关联数据的查询，既降低查询速度，又增加IO操作，建议采用MongoDB替换掉HBase。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 310928,
      "question_title": "<p>问题一（9分）：在研讨过程中，设备厂商的技术总监提出采用互联网公司常用的SSM架构，使用MySQL作为数据库，而软件研发团队的架构师却提出要使用由MySQL、HBase和Redis组成的多种多组数据库。请给出适当建议。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 310927,
      "score_rule": "",
      "material_text": "<p>试题三</p><p>国内某安防公司欲为其防火报警器产品研发互联网产品以提高产品的易用性和用户透明性，并为主管部门提供信息辅助和联防联控支持。</p><p>据用户描述，设备使用场景存在多种可能性，如：</p><p>1. 开发商集中采购在楼盘中批量安装部署；</p><p>2. 用户购买，在自身房屋中安装使用1个到多个终端；</p><p>3. 企业在其自身的营业场所批量安装部署；</p><p>并且，研发的应用产品将面对多种使用客户，如：</p><p>1. 消防中队或消防站</p><p>2. 企业安防用户</p><p>3. 社区或物业的安防用户</p><p>4. 个人用户及其亲属关联用户</p><p>据此，系统分析师提出以SaaS产品形式组织应用研发。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>技术总监的建议中，MySQL属于关系型数据库，实际应用中一般用来作为操作数据存储。研发架构师提出的HBase和Redis属于NoSQL，实际应用中一般用来做大数据量和高即时性数据存储。该案例属于物联网应用，建议增加NoSQL数据库提高数据存储的容量和即时性。</p><p>但是HBase属于列族数据库，不便于关联数据的查询，既降低查询速度，又增加IO操作，建议采用MongoDB替换掉HBase。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176856.9733615
  },
  {
    "section_id": "9386",
    "section_name": "数据库设计基础知识（第二版） - NoSQL数据库",
    "question_id": 352348,
    "question_title": "<p>【问题1】（8分）</p><p>请完成表4-1中的（a）～（d）处空白。</p><p>表4-1关系数据库与NoSQL数据库特征比较</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663933547622188.png\" title=\"1663933547622188.png\" alt=\"image.png\"/><br/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（a）弱一致性</p><p>（b）非结构化</p><p>（c）弱事务性</p><p>（d）海量数据</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 352348,
      "question_title": "<p>【问题1】（8分）</p><p>请完成表4-1中的（a）～（d）处空白。</p><p>表4-1关系数据库与NoSQL数据库特征比较</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663933547622188.png\" title=\"1663933547622188.png\" alt=\"image.png\"/><br/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 352347,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四</p><p>请详细阅读有关数据架构方面的描述，回答问题。</p><p>【说明】</p><p>某软件公司欲开发一个基于Web 2.0的大型社交网络系统。就该系统的数据架构而言，李工决定采用公司熟悉的数据架构，使用通用的商用关系型数据库，系统内部数据采用中央集中方式存储。</p><p>该系统投入使用后，初期用户数量少，系统运行平稳。6个月后，用户数出现了爆炸式增长，系统暴露出诸多问题，集中表现在：</p><p>1.用户执行读写操作时，响应时间均变得很慢；</p><p>2.随着系统功能的扩充，原有数据格式发生变化，又出现新的数据格式，维护困难；</p><p>3.数据容量很快超过系统原有的设计上限，数据库扩容困难；</p><p>4.软件系统不断出现宕机，整个系统可用性较差。</p><p>经过多次会议讨论，公司的王工建议采用NoSQL数据库来替代关系数据库，以解决上述问题。但李工指出NoSQL数据库出现时间不长，在使用上可能存在风险。公司技术人员对NoSQL数据库产品进行了认真测试，最终决定采用NoSQL数据库来替代现有的数据库系统。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（a）弱一致性</p><p>（b）非结构化</p><p>（c）弱事务性</p><p>（d）海量数据</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176856.9733615
  },
  {
    "section_id": "9386",
    "section_name": "数据库设计基础知识（第二版） - NoSQL数据库",
    "question_id": 373738,
    "question_title": "<p>【问题2】（8分）</p><p>在本系统中，采用了HBase这种列族的NoSQL数据库，请用200字以内的文字解释NoSQL数据库有哪些优点？</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【参考答案】</p><p>(1)支持高并发数据访问，性能较高。</p><p>(2)数据存储结构松散，能够灵活支持多种类型的数据格式。</p><p>(3)能够支持海量数据的存储，且易于横向扩展。</p><p>(4)基于分布式数据存储，不存在单点故障和性能瓶颈，系统可用性高。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 373738,
      "question_title": "<p>【问题2】（8分）</p><p>在本系统中，采用了HBase这种列族的NoSQL数据库，请用200字以内的文字解释NoSQL数据库有哪些优点？</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 373736,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于数据库设计的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某电子商务网站为了做市场预测和商品精准推荐，决定对用户访问记录进行分析。该电子商务网站拥有海量的用户访问数据，包括用户浏览的商品详情页、搜索关键词、加入购物车、下单和支付、退货等行为。数据分析团队希望通过分析这些数据来了解用户的行为模式、购买意向和喜好，以便为市场预测和商品推荐提供支持。数据分析团队需要快速地处理这些数据，并在其中发现有价值的信息，以支持业务决策和实时推荐。</p><p>关于张工建议使用传统Hadoop框架进行分析和计算，李工则建议使用Lambda架构进行。经过沟通讨论，数据分析团队最后接受了李工的意见。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【参考答案】</p><p>(1)支持高并发数据访问，性能较高。</p><p>(2)数据存储结构松散，能够灵活支持多种类型的数据格式。</p><p>(3)能够支持海量数据的存储，且易于横向扩展。</p><p>(4)基于分布式数据存储，不存在单点故障和性能瓶颈，系统可用性高。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176856.9733615
  },
  {
    "section_id": "9388",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构概念",
    "question_id": 43787,
    "question_title": "<p><br/></p><p><br/></p><p>软件架构设计包括提出架构模型、产生架构设计和进行设计评审等活动，是一个迭代的过程。架构设计主要关注软件组件的结构、属性和( )，并通过多种(请作答此空)_全面描述特定系统的架构。</p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 对象&nbsp; ",
      " 代码&nbsp; ",
      " 文档&nbsp; ",
      " 视图 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43787,
      "question_title": "<p><br/></p><p><br/></p><p>软件架构设计包括提出架构模型、产生架构设计和进行设计评审等活动，是一个迭代的过程。架构设计主要关注软件组件的结构、属性和( )，并通过多种(请作答此空)_全面描述特定系统的架构。</p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43787,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 对象&nbsp; ",
        " 代码&nbsp; ",
        " 文档&nbsp; ",
        " 视图 "
      ]
    },
    "crawl_time": 1753176858.229763
  },
  {
    "section_id": "9388",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构概念",
    "question_id": 43806,
    "question_title": "<p><br/></p><p>&nbsp;The objective of (请作答此空)&nbsp;is to determine what parts of the application software will be assigned to what hardware. The major software components of the system being developed have to be identified and then allocated to the various hardware components on which the system will operate. All software systems can be divided into four basic functions. The first is (72). Most information systems require data to be stored and retrieved, whether a small file, such as a memo produced by a word processor, or a large database, such as one that stores an organization&#39;s accounting records. The second function is the (73), the processing required to access data, which often means database queries in Structured Query Language. The third function is the (74), which is the logic documented in the DFDs, use cases, and functional requirements. The fourth function is the presentation logic, the display of information to the user and the acceptance of the user&#39;s commands. The three primary hardware components of a system are (75).</p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " architecture&nbsp;design&nbsp; ",
      " modular&nbsp;design ",
      " &nbsp;physical&nbsp;design&nbsp;&nbsp; ",
      " distribution&nbsp;design "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 43806,
      "question_title": "<p><br/></p><p>&nbsp;The objective of (请作答此空)&nbsp;is to determine what parts of the application software will be assigned to what hardware. The major software components of the system being developed have to be identified and then allocated to the various hardware components on which the system will operate. All software systems can be divided into four basic functions. The first is (72). Most information systems require data to be stored and retrieved, whether a small file, such as a memo produced by a word processor, or a large database, such as one that stores an organization&#39;s accounting records. The second function is the (73), the processing required to access data, which often means database queries in Structured Query Language. The third function is the (74), which is the logic documented in the DFDs, use cases, and functional requirements. The fourth function is the presentation logic, the display of information to the user and the acceptance of the user&#39;s commands. The three primary hardware components of a system are (75).</p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43806,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " architecture&nbsp;design&nbsp; ",
        " modular&nbsp;design ",
        " &nbsp;physical&nbsp;design&nbsp;&nbsp; ",
        " distribution&nbsp;design "
      ]
    },
    "crawl_time": 1753176858.229763
  },
  {
    "section_id": "9388",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构概念",
    "question_id": 49894,
    "question_title": "<p>The architecture design specifies the overall architecture and the placement of software and hardware that will be used. Architecture design is a very complex process that is often left to experienced architecture designers and consultants. The first step is to refine the ( 请作答此空) into more detailed requirements that are then employed to help select the architecture to be used and the software components to be placed on each device. In a (), one also has to decide whether to use a two-tier, three-tier, or n-tier architecture. Then the requirements and the architecture</p><p>design are used to develop the hardware and software specification. There are four primary types of nonfunctional requirements that can be important in designing the architecture. () &nbsp;specify &nbsp;the operating environment(s) in which the system must perform and how those may change over time. () &nbsp;focus &nbsp;on the nonfunctional requirements issues such as response time, capacity, and reliability. () are the abilities to protect the information system from disruption and data loss, whether caused by an intentional act. Cultural and political requirements are specific to the countries in which the system will be used.<br/><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " functional requirements<br/>功能需求 ",
      " nonfunctional requirements<br/>非功能需求 ",
      " system constraint<br/>系统约束 ",
      " system operational environment<br/>系统运行环境 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 49894,
      "question_title": "<p>The architecture design specifies the overall architecture and the placement of software and hardware that will be used. Architecture design is a very complex process that is often left to experienced architecture designers and consultants. The first step is to refine the ( 请作答此空) into more detailed requirements that are then employed to help select the architecture to be used and the software components to be placed on each device. In a (), one also has to decide whether to use a two-tier, three-tier, or n-tier architecture. Then the requirements and the architecture</p><p>design are used to develop the hardware and software specification. There are four primary types of nonfunctional requirements that can be important in designing the architecture. () &nbsp;specify &nbsp;the operating environment(s) in which the system must perform and how those may change over time. () &nbsp;focus &nbsp;on the nonfunctional requirements issues such as response time, capacity, and reliability. () are the abilities to protect the information system from disruption and data loss, whether caused by an intentional act. Cultural and political requirements are specific to the countries in which the system will be used.<br/><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49894,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " functional requirements<br/>功能需求 ",
        " nonfunctional requirements<br/>非功能需求 ",
        " system constraint<br/>系统约束 ",
        " system operational environment<br/>系统运行环境 "
      ]
    },
    "crawl_time": 1753176858.229763
  },
  {
    "section_id": "9388",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构概念",
    "question_id": 49971,
    "question_title": "<p>The objective of（）is to determine what parts of the application software will be assigned to what hardware. The major software components of the system being developed have to be identified and then allocated to the various hardware components on which the system will operate. All software systems can be divided into four basic functions. The first is（）.Most information systems require data to be stored and retrieved, whether a small file,such as a memo produced by a word processor, or a large database, such as one that stores an organization&#39;s accounting records.The second function is the（请作答此空）,the processing required to access data, which often means database queries in Structured Query Language. The third function is the &nbsp;（）,which is the logic documented in the DFDs, use cases,and functional requirements.The fourth function is the presentation logic,the display of information to the user and the acceptance of the user&#39;s commands.The three primary hardware components of a system are （）.<br/>（）的目标是确定应用软件的哪些部分将分配到何种硬件。识别出正在开发系统的主要软件构件并分配到系统将要运行的硬件构件。所有软件系统可分为四项基本功能。第一项是（）。大多数信息系统需要数据进行存储并检索，不论是一个小文件，比如一个字处理器产生的一个备忘录，还是一个大型数据库，比如存储一个企业会计记录的数据库。第二项功能是（请作答此空 ），处理过程需要访问数据，这通常是指用SQL进行数据库查询。第三项功能是（），这些逻辑通过数据流图，用例和功能需求来记录。第四项功能是表示逻辑，给用户显示信息并接收用户命令。一个系统的三类主要硬件构件是（）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " data persistence<br/>数据持久化 ",
      " data access objects<br/>数据访问对象 ",
      " database connection<br/>数据库连接 ",
      " data access logic<br/>数据访问逻辑 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 49971,
      "question_title": "<p>The objective of（）is to determine what parts of the application software will be assigned to what hardware. The major software components of the system being developed have to be identified and then allocated to the various hardware components on which the system will operate. All software systems can be divided into four basic functions. The first is（）.Most information systems require data to be stored and retrieved, whether a small file,such as a memo produced by a word processor, or a large database, such as one that stores an organization&#39;s accounting records.The second function is the（请作答此空）,the processing required to access data, which often means database queries in Structured Query Language. The third function is the &nbsp;（）,which is the logic documented in the DFDs, use cases,and functional requirements.The fourth function is the presentation logic,the display of information to the user and the acceptance of the user&#39;s commands.The three primary hardware components of a system are （）.<br/>（）的目标是确定应用软件的哪些部分将分配到何种硬件。识别出正在开发系统的主要软件构件并分配到系统将要运行的硬件构件。所有软件系统可分为四项基本功能。第一项是（）。大多数信息系统需要数据进行存储并检索，不论是一个小文件，比如一个字处理器产生的一个备忘录，还是一个大型数据库，比如存储一个企业会计记录的数据库。第二项功能是（请作答此空 ），处理过程需要访问数据，这通常是指用SQL进行数据库查询。第三项功能是（），这些逻辑通过数据流图，用例和功能需求来记录。第四项功能是表示逻辑，给用户显示信息并接收用户命令。一个系统的三类主要硬件构件是（）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49971,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " data persistence<br/>数据持久化 ",
        " data access objects<br/>数据访问对象 ",
        " database connection<br/>数据库连接 ",
        " data access logic<br/>数据访问逻辑 "
      ]
    },
    "crawl_time": 1753176858.229763
  },
  {
    "section_id": "9388",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构概念",
    "question_id": 151234,
    "question_title": "<p>软件架构设计主要关注软件构件的（ ）、属性和（请作答此空），并通过多种视图全面描述特定系统的架构。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 实现方式 ",
      " 交互作用 ",
      " 设计方案 ",
      " 测试方式 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 151234,
      "question_title": "<p>软件架构设计主要关注软件构件的（ ）、属性和（请作答此空），并通过多种视图全面描述特定系统的架构。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 151234,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 实现方式 ",
        " 交互作用 ",
        " 设计方案 ",
        " 测试方式 "
      ]
    },
    "crawl_time": 1753176858.229763
  },
  {
    "section_id": "9388",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构概念",
    "question_id": 159205,
    "question_title": "<p>软件架构设计包括提出架构模型、产生架构设计和进行设计评审等活动，是一个迭代的过程。以下关于软件架构设计活动的描述，错误的是（）</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 在建立软件架构的初期，一般需要选择一个合适的架构风格 ",
      " 将架构分析阶段已标识的构件映射到架构中，并分析这些构件之间的关系 ",
      " 软件架构设计活动将已标构件集成到软件架构中，设计并实现这些构件 ",
      " 一旦得到了详细的软件架构设计，需要邀请独立于系统开发的外部人员对系统进行评审 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 159205,
      "question_title": "<p>软件架构设计包括提出架构模型、产生架构设计和进行设计评审等活动，是一个迭代的过程。以下关于软件架构设计活动的描述，错误的是（）</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159205,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 在建立软件架构的初期，一般需要选择一个合适的架构风格 ",
        " 将架构分析阶段已标识的构件映射到架构中，并分析这些构件之间的关系 ",
        " 软件架构设计活动将已标构件集成到软件架构中，设计并实现这些构件 ",
        " 一旦得到了详细的软件架构设计，需要邀请独立于系统开发的外部人员对系统进行评审 "
      ]
    },
    "crawl_time": 1753176858.229763
  },
  {
    "section_id": "9388",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构概念",
    "question_id": 208513,
    "question_title": "特定领域软件架构(Domain Specific Software Achitecture，DSSA.是在一个特定应用领域中，为一组应用提供组织结构参考的标准软件体系结构。DSSA通常是一个具有三个层次的系统模型，包括（请作答此空）环境、领域特定应用开发环境和应用执行环境，其中（ ）主要在领域特定应用开发环境中工作。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 领域需求 ",
      " 领域开发 ",
      " 领域执行 ",
      " 领域应用 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 208513,
      "question_title": "特定领域软件架构(Domain Specific Software Achitecture，DSSA.是在一个特定应用领域中，为一组应用提供组织结构参考的标准软件体系结构。DSSA通常是一个具有三个层次的系统模型，包括（请作答此空）环境、领域特定应用开发环境和应用执行环境，其中（ ）主要在领域特定应用开发环境中工作。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208513,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 领域需求 ",
        " 领域开发 ",
        " 领域执行 ",
        " 领域应用 "
      ]
    },
    "crawl_time": 1753176858.229763
  },
  {
    "section_id": "9388",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构概念",
    "question_id": 350337,
    "question_title": "<p>在构件组装过程中需要检测并解决架构失配问题。其中&nbsp;（1） 失配主要包括由于系统对构件基础设施、控制模型和数据模型的假设存在冲突引起的失配。&nbsp;（2） 失配包括由于系统对构件交互协议、构件连接时数据格式的假设存在冲突引起的失配。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 构件 ",
      " 模型 ",
      " 协议 ",
      " 连接子 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 350337,
      "question_title": "<p>在构件组装过程中需要检测并解决架构失配问题。其中&nbsp;（1） 失配主要包括由于系统对构件基础设施、控制模型和数据模型的假设存在冲突引起的失配。&nbsp;（2） 失配包括由于系统对构件交互协议、构件连接时数据格式的假设存在冲突引起的失配。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350336,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 构件 ",
        " 模型 ",
        " 协议 ",
        " 连接子 "
      ]
    },
    "crawl_time": 1753176858.229763
  },
  {
    "section_id": "9388",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构概念",
    "question_id": 350338,
    "question_title": "<p>在构件组装过程中需要检测并解决架构失配问题。其中&nbsp;（1） 失配主要包括由于系统对构件基础设施、控制模型和数据模型的假设存在冲突引起的失配。&nbsp;（2） 失配包括由于系统对构件交互协议、构件连接时数据格式的假设存在冲突引起的失配。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 构件 ",
      " 模型 ",
      " 协议 ",
      " 连接子 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 350338,
      "question_title": "<p>在构件组装过程中需要检测并解决架构失配问题。其中&nbsp;（1） 失配主要包括由于系统对构件基础设施、控制模型和数据模型的假设存在冲突引起的失配。&nbsp;（2） 失配包括由于系统对构件交互协议、构件连接时数据格式的假设存在冲突引起的失配。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350336,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 构件 ",
        " 模型 ",
        " 协议 ",
        " 连接子 "
      ]
    },
    "crawl_time": 1753176858.229763
  },
  {
    "section_id": "9388",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构概念",
    "question_id": 350369,
    "question_title": "<p>&nbsp; The objective of &nbsp;（1） &nbsp;is to determine what parts of the application software will be assigned to what hardware. The major software components of the system being developed have to be identified and then allocated to the various hardware components on which the system will operate. All software systems can be divided into four basic functions. The first is &nbsp;（2）&nbsp;.&nbsp;Most information systems require data to be stored and retrieved, whether a small file,such as a memo produced by a word processor, or a large database, such as one that stores an organization’s accounting records.The second function is the &nbsp;（3） , the processing required to access data, which often means database queries in Structured Query Language. The third function is the &nbsp;（4） , which is the logic documented in the DFDs, use cases,and functional requirements.The fourth function is the presentation logic,&nbsp;the display of information to the user and the acceptance of the user’s commands.The three primary hardware components of a system are &nbsp;（5） .</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " architecture design ",
      " modular design ",
      " physical design ",
      " distribution design "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 350369,
      "question_title": "<p>&nbsp; The objective of &nbsp;（1） &nbsp;is to determine what parts of the application software will be assigned to what hardware. The major software components of the system being developed have to be identified and then allocated to the various hardware components on which the system will operate. All software systems can be divided into four basic functions. The first is &nbsp;（2）&nbsp;.&nbsp;Most information systems require data to be stored and retrieved, whether a small file,such as a memo produced by a word processor, or a large database, such as one that stores an organization’s accounting records.The second function is the &nbsp;（3） , the processing required to access data, which often means database queries in Structured Query Language. The third function is the &nbsp;（4） , which is the logic documented in the DFDs, use cases,and functional requirements.The fourth function is the presentation logic,&nbsp;the display of information to the user and the acceptance of the user’s commands.The three primary hardware components of a system are &nbsp;（5） .</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350368,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " architecture design ",
        " modular design ",
        " physical design ",
        " distribution design "
      ]
    },
    "crawl_time": 1753176858.229763
  },
  {
    "section_id": "9388",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构概念",
    "question_id": 350370,
    "question_title": "<p>&nbsp; The objective of &nbsp;（1） &nbsp;is to determine what parts of the application software will be assigned to what hardware. The major software components of the system being developed have to be identified and then allocated to the various hardware components on which the system will operate. All software systems can be divided into four basic functions. The first is &nbsp;（2）&nbsp;.&nbsp;Most information systems require data to be stored and retrieved, whether a small file,such as a memo produced by a word processor, or a large database, such as one that stores an organization’s accounting records.The second function is the &nbsp;（3） , the processing required to access data, which often means database queries in Structured Query Language. The third function is the &nbsp;（4） , which is the logic documented in the DFDs, use cases,and functional requirements.The fourth function is the presentation logic,&nbsp;the display of information to the user and the acceptance of the user’s commands.The three primary hardware components of a system are &nbsp;（5） .</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " data access components ",
      " database management system  <br/> ",
      " data storage  <br/> ",
      " data entities "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 350370,
      "question_title": "<p>&nbsp; The objective of &nbsp;（1） &nbsp;is to determine what parts of the application software will be assigned to what hardware. The major software components of the system being developed have to be identified and then allocated to the various hardware components on which the system will operate. All software systems can be divided into four basic functions. The first is &nbsp;（2）&nbsp;.&nbsp;Most information systems require data to be stored and retrieved, whether a small file,such as a memo produced by a word processor, or a large database, such as one that stores an organization’s accounting records.The second function is the &nbsp;（3） , the processing required to access data, which often means database queries in Structured Query Language. The third function is the &nbsp;（4） , which is the logic documented in the DFDs, use cases,and functional requirements.The fourth function is the presentation logic,&nbsp;the display of information to the user and the acceptance of the user’s commands.The three primary hardware components of a system are &nbsp;（5） .</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350368,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " data access components ",
        " database management system  <br/> ",
        " data storage  <br/> ",
        " data entities "
      ]
    },
    "crawl_time": 1753176858.229763
  },
  {
    "section_id": "9388",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构概念",
    "question_id": 350371,
    "question_title": "<p>&nbsp; The objective of &nbsp;（1） &nbsp;is to determine what parts of the application software will be assigned to what hardware. The major software components of the system being developed have to be identified and then allocated to the various hardware components on which the system will operate. All software systems can be divided into four basic functions. The first is &nbsp;（2）&nbsp;.&nbsp;Most information systems require data to be stored and retrieved, whether a small file,such as a memo produced by a word processor, or a large database, such as one that stores an organization’s accounting records.The second function is the &nbsp;（3） , the processing required to access data, which often means database queries in Structured Query Language. The third function is the &nbsp;（4） , which is the logic documented in the DFDs, use cases,and functional requirements.The fourth function is the presentation logic,&nbsp;the display of information to the user and the acceptance of the user’s commands.The three primary hardware components of a system are &nbsp;（5） .</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " data persistence ",
      " data access objects ",
      " database connection ",
      " data access logic "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 350371,
      "question_title": "<p>&nbsp; The objective of &nbsp;（1） &nbsp;is to determine what parts of the application software will be assigned to what hardware. The major software components of the system being developed have to be identified and then allocated to the various hardware components on which the system will operate. All software systems can be divided into four basic functions. The first is &nbsp;（2）&nbsp;.&nbsp;Most information systems require data to be stored and retrieved, whether a small file,such as a memo produced by a word processor, or a large database, such as one that stores an organization’s accounting records.The second function is the &nbsp;（3） , the processing required to access data, which often means database queries in Structured Query Language. The third function is the &nbsp;（4） , which is the logic documented in the DFDs, use cases,and functional requirements.The fourth function is the presentation logic,&nbsp;the display of information to the user and the acceptance of the user’s commands.The three primary hardware components of a system are &nbsp;（5） .</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350368,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " data persistence ",
        " data access objects ",
        " database connection ",
        " data access logic "
      ]
    },
    "crawl_time": 1753176858.229763
  },
  {
    "section_id": "9388",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构概念",
    "question_id": 350372,
    "question_title": "<p>&nbsp; The objective of &nbsp;（1） &nbsp;is to determine what parts of the application software will be assigned to what hardware. The major software components of the system being developed have to be identified and then allocated to the various hardware components on which the system will operate. All software systems can be divided into four basic functions. The first is &nbsp;（2）&nbsp;.&nbsp;Most information systems require data to be stored and retrieved, whether a small file,such as a memo produced by a word processor, or a large database, such as one that stores an organization’s accounting records.The second function is the &nbsp;（3） , the processing required to access data, which often means database queries in Structured Query Language. The third function is the &nbsp;（4） , which is the logic documented in the DFDs, use cases,and functional requirements.The fourth function is the presentation logic,&nbsp;the display of information to the user and the acceptance of the user’s commands.The three primary hardware components of a system are &nbsp;（5） .</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " system requirements ",
      " system architecture ",
      " application logic ",
      " application program "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 350372,
      "question_title": "<p>&nbsp; The objective of &nbsp;（1） &nbsp;is to determine what parts of the application software will be assigned to what hardware. The major software components of the system being developed have to be identified and then allocated to the various hardware components on which the system will operate. All software systems can be divided into four basic functions. The first is &nbsp;（2）&nbsp;.&nbsp;Most information systems require data to be stored and retrieved, whether a small file,such as a memo produced by a word processor, or a large database, such as one that stores an organization’s accounting records.The second function is the &nbsp;（3） , the processing required to access data, which often means database queries in Structured Query Language. The third function is the &nbsp;（4） , which is the logic documented in the DFDs, use cases,and functional requirements.The fourth function is the presentation logic,&nbsp;the display of information to the user and the acceptance of the user’s commands.The three primary hardware components of a system are &nbsp;（5） .</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350368,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " system requirements ",
        " system architecture ",
        " application logic ",
        " application program "
      ]
    },
    "crawl_time": 1753176858.229763
  },
  {
    "section_id": "9388",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构概念",
    "question_id": 350373,
    "question_title": "<p>&nbsp; The objective of &nbsp;（1） &nbsp;is to determine what parts of the application software will be assigned to what hardware. The major software components of the system being developed have to be identified and then allocated to the various hardware components on which the system will operate. All software systems can be divided into four basic functions. The first is &nbsp;（2）&nbsp;.&nbsp;Most information systems require data to be stored and retrieved, whether a small file,such as a memo produced by a word processor, or a large database, such as one that stores an organization’s accounting records.The second function is the &nbsp;（3） , the processing required to access data, which often means database queries in Structured Query Language. The third function is the &nbsp;（4） , which is the logic documented in the DFDs, use cases,and functional requirements.The fourth function is the presentation logic,&nbsp;the display of information to the user and the acceptance of the user’s commands.The three primary hardware components of a system are &nbsp;（5） .</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " computers,cables and network ",
      " clients,servers,and network ",
      " CPUs,memories and I/O devices ",
      " CPUs,hard disks and I/O devices "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 350373,
      "question_title": "<p>&nbsp; The objective of &nbsp;（1） &nbsp;is to determine what parts of the application software will be assigned to what hardware. The major software components of the system being developed have to be identified and then allocated to the various hardware components on which the system will operate. All software systems can be divided into four basic functions. The first is &nbsp;（2）&nbsp;.&nbsp;Most information systems require data to be stored and retrieved, whether a small file,such as a memo produced by a word processor, or a large database, such as one that stores an organization’s accounting records.The second function is the &nbsp;（3） , the processing required to access data, which often means database queries in Structured Query Language. The third function is the &nbsp;（4） , which is the logic documented in the DFDs, use cases,and functional requirements.The fourth function is the presentation logic,&nbsp;the display of information to the user and the acceptance of the user’s commands.The three primary hardware components of a system are &nbsp;（5） .</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350368,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " computers,cables and network ",
        " clients,servers,and network ",
        " CPUs,memories and I/O devices ",
        " CPUs,hard disks and I/O devices "
      ]
    },
    "crawl_time": 1753176858.229763
  },
  {
    "section_id": "9388",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构概念",
    "question_id": 352300,
    "question_title": "<p>&nbsp;在构件组装阶段失配问题主要不包括&nbsp;（47） 。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 由构件引起的失配 ",
      " 由连接子引起的失配 ",
      " 由于系统成分对全局体系结构的假设存在冲突引起的失配 ",
      " 由构件操作不当引起的失配 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 352300,
      "question_title": "<p>&nbsp;在构件组装阶段失配问题主要不包括&nbsp;（47） 。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352300,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 由构件引起的失配 ",
        " 由连接子引起的失配 ",
        " 由于系统成分对全局体系结构的假设存在冲突引起的失配 ",
        " 由构件操作不当引起的失配 "
      ]
    },
    "crawl_time": 1753176858.229763
  },
  {
    "section_id": "9388",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构概念",
    "question_id": 352330,
    "question_title": "<p>&nbsp;The architecture design specifies the overall architecture and the placement of software and hardware that will be used. Architecture design is a very complex process that is often left to experienced architecture designers and consultants. The first step is to refine the &nbsp;（1） &nbsp;into more detailed requirements that are then employed to help select the architecture to be used and the software components to be placed on each device. In a &nbsp;（2） , one also has to decide whether to use a two-tier, three-tier, or n-tier architecture. Then the requirements and the architecture design are used to develop the hardware and software specification. There are four primary types of nonfunctional requirements that can be important in designing the architecture. &nbsp;（3） &nbsp;specify the operating environment(s)&nbsp;in which the system must perform and how those may change over time. &nbsp;（4） &nbsp;focus on the nonfunctional requirements issues such as response time, capacity, and reliability. &nbsp;（5） &nbsp;are the abilities to protect the information system from disruption and data loss, whether caused by an intentional act. Cultural and political requirements are specific to the countries in which the system will be used.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " functional requirements  <br/> ",
      " nonfunctional requirements ",
      " system constraint ",
      " system operational environment "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 352330,
      "question_title": "<p>&nbsp;The architecture design specifies the overall architecture and the placement of software and hardware that will be used. Architecture design is a very complex process that is often left to experienced architecture designers and consultants. The first step is to refine the &nbsp;（1） &nbsp;into more detailed requirements that are then employed to help select the architecture to be used and the software components to be placed on each device. In a &nbsp;（2） , one also has to decide whether to use a two-tier, three-tier, or n-tier architecture. Then the requirements and the architecture design are used to develop the hardware and software specification. There are four primary types of nonfunctional requirements that can be important in designing the architecture. &nbsp;（3） &nbsp;specify the operating environment(s)&nbsp;in which the system must perform and how those may change over time. &nbsp;（4） &nbsp;focus on the nonfunctional requirements issues such as response time, capacity, and reliability. &nbsp;（5） &nbsp;are the abilities to protect the information system from disruption and data loss, whether caused by an intentional act. Cultural and political requirements are specific to the countries in which the system will be used.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352329,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " functional requirements  <br/> ",
        " nonfunctional requirements ",
        " system constraint ",
        " system operational environment "
      ]
    },
    "crawl_time": 1753176858.229763
  },
  {
    "section_id": "9388",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构概念",
    "question_id": 352331,
    "question_title": "<p>&nbsp;The architecture design specifies the overall architecture and the placement of software and hardware that will be used. Architecture design is a very complex process that is often left to experienced architecture designers and consultants. The first step is to refine the &nbsp;（1） &nbsp;into more detailed requirements that are then employed to help select the architecture to be used and the software components to be placed on each device. In a &nbsp;（2） , one also has to decide whether to use a two-tier, three-tier, or n-tier architecture. Then the requirements and the architecture design are used to develop the hardware and software specification. There are four primary types of nonfunctional requirements that can be important in designing the architecture. &nbsp;（3） &nbsp;specify the operating environment(s)&nbsp;in which the system must perform and how those may change over time. &nbsp;（4） &nbsp;focus on the nonfunctional requirements issues such as response time, capacity, and reliability. &nbsp;（5） &nbsp;are the abilities to protect the information system from disruption and data loss, whether caused by an intentional act. Cultural and political requirements are specific to the countries in which the system will be used.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " client-based architecture ",
      " server-based architecture ",
      " network architecture ",
      " client-server architecture "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 352331,
      "question_title": "<p>&nbsp;The architecture design specifies the overall architecture and the placement of software and hardware that will be used. Architecture design is a very complex process that is often left to experienced architecture designers and consultants. The first step is to refine the &nbsp;（1） &nbsp;into more detailed requirements that are then employed to help select the architecture to be used and the software components to be placed on each device. In a &nbsp;（2） , one also has to decide whether to use a two-tier, three-tier, or n-tier architecture. Then the requirements and the architecture design are used to develop the hardware and software specification. There are four primary types of nonfunctional requirements that can be important in designing the architecture. &nbsp;（3） &nbsp;specify the operating environment(s)&nbsp;in which the system must perform and how those may change over time. &nbsp;（4） &nbsp;focus on the nonfunctional requirements issues such as response time, capacity, and reliability. &nbsp;（5） &nbsp;are the abilities to protect the information system from disruption and data loss, whether caused by an intentional act. Cultural and political requirements are specific to the countries in which the system will be used.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352329,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " client-based architecture ",
        " server-based architecture ",
        " network architecture ",
        " client-server architecture "
      ]
    },
    "crawl_time": 1753176858.229763
  },
  {
    "section_id": "9388",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构概念",
    "question_id": 352332,
    "question_title": "<p>&nbsp;The architecture design specifies the overall architecture and the placement of software and hardware that will be used. Architecture design is a very complex process that is often left to experienced architecture designers and consultants. The first step is to refine the &nbsp;（1） &nbsp;into more detailed requirements that are then employed to help select the architecture to be used and the software components to be placed on each device. In a &nbsp;（2） , one also has to decide whether to use a two-tier, three-tier, or n-tier architecture. Then the requirements and the architecture design are used to develop the hardware and software specification. There are four primary types of nonfunctional requirements that can be important in designing the architecture. &nbsp;（3） &nbsp;specify the operating environment(s)&nbsp;in which the system must perform and how those may change over time. &nbsp;（4） &nbsp;focus on the nonfunctional requirements issues such as response time, capacity, and reliability. &nbsp;（5） &nbsp;are the abilities to protect the information system from disruption and data loss, whether caused by an intentional act. Cultural and political requirements are specific to the countries in which the system will be used.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " Operational requirements ",
      " Speed requirement ",
      " Access control requirements ",
      " Customization requirements "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 18,
      "belong_page": 1,
      "question_id": 352332,
      "question_title": "<p>&nbsp;The architecture design specifies the overall architecture and the placement of software and hardware that will be used. Architecture design is a very complex process that is often left to experienced architecture designers and consultants. The first step is to refine the &nbsp;（1） &nbsp;into more detailed requirements that are then employed to help select the architecture to be used and the software components to be placed on each device. In a &nbsp;（2） , one also has to decide whether to use a two-tier, three-tier, or n-tier architecture. Then the requirements and the architecture design are used to develop the hardware and software specification. There are four primary types of nonfunctional requirements that can be important in designing the architecture. &nbsp;（3） &nbsp;specify the operating environment(s)&nbsp;in which the system must perform and how those may change over time. &nbsp;（4） &nbsp;focus on the nonfunctional requirements issues such as response time, capacity, and reliability. &nbsp;（5） &nbsp;are the abilities to protect the information system from disruption and data loss, whether caused by an intentional act. Cultural and political requirements are specific to the countries in which the system will be used.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352329,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " Operational requirements ",
        " Speed requirement ",
        " Access control requirements ",
        " Customization requirements "
      ]
    },
    "crawl_time": 1753176858.229763
  },
  {
    "section_id": "9388",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构概念",
    "question_id": 352333,
    "question_title": "<p>&nbsp;The architecture design specifies the overall architecture and the placement of software and hardware that will be used. Architecture design is a very complex process that is often left to experienced architecture designers and consultants. The first step is to refine the &nbsp;（1） &nbsp;into more detailed requirements that are then employed to help select the architecture to be used and the software components to be placed on each device. In a &nbsp;（2） , one also has to decide whether to use a two-tier, three-tier, or n-tier architecture. Then the requirements and the architecture design are used to develop the hardware and software specification. There are four primary types of nonfunctional requirements that can be important in designing the architecture. &nbsp;（3） &nbsp;specify the operating environment(s)&nbsp;in which the system must perform and how those may change over time. &nbsp;（4） &nbsp;focus on the nonfunctional requirements issues such as response time, capacity, and reliability. &nbsp;（5） &nbsp;are the abilities to protect the information system from disruption and data loss, whether caused by an intentional act. Cultural and political requirements are specific to the countries in which the system will be used.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " Environment requirements ",
      " Maintainability requirements ",
      " Performance requirements ",
      " Virus control requirements "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 19,
      "belong_page": 1,
      "question_id": 352333,
      "question_title": "<p>&nbsp;The architecture design specifies the overall architecture and the placement of software and hardware that will be used. Architecture design is a very complex process that is often left to experienced architecture designers and consultants. The first step is to refine the &nbsp;（1） &nbsp;into more detailed requirements that are then employed to help select the architecture to be used and the software components to be placed on each device. In a &nbsp;（2） , one also has to decide whether to use a two-tier, three-tier, or n-tier architecture. Then the requirements and the architecture design are used to develop the hardware and software specification. There are four primary types of nonfunctional requirements that can be important in designing the architecture. &nbsp;（3） &nbsp;specify the operating environment(s)&nbsp;in which the system must perform and how those may change over time. &nbsp;（4） &nbsp;focus on the nonfunctional requirements issues such as response time, capacity, and reliability. &nbsp;（5） &nbsp;are the abilities to protect the information system from disruption and data loss, whether caused by an intentional act. Cultural and political requirements are specific to the countries in which the system will be used.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352329,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " Environment requirements ",
        " Maintainability requirements ",
        " Performance requirements ",
        " Virus control requirements "
      ]
    },
    "crawl_time": 1753176858.229763
  },
  {
    "section_id": "9388",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构概念",
    "question_id": 352334,
    "question_title": "<p>&nbsp;The architecture design specifies the overall architecture and the placement of software and hardware that will be used. Architecture design is a very complex process that is often left to experienced architecture designers and consultants. The first step is to refine the &nbsp;（1） &nbsp;into more detailed requirements that are then employed to help select the architecture to be used and the software components to be placed on each device. In a &nbsp;（2） , one also has to decide whether to use a two-tier, three-tier, or n-tier architecture. Then the requirements and the architecture design are used to develop the hardware and software specification. There are four primary types of nonfunctional requirements that can be important in designing the architecture. &nbsp;（3） &nbsp;specify the operating environment(s)&nbsp;in which the system must perform and how those may change over time. &nbsp;（4） &nbsp;focus on the nonfunctional requirements issues such as response time, capacity, and reliability. &nbsp;（5） &nbsp;are the abilities to protect the information system from disruption and data loss, whether caused by an intentional act. Cultural and political requirements are specific to the countries in which the system will be used.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " Safety requirements ",
      " Security requirements ",
      " Data management requirements ",
      " System requirements "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 20,
      "belong_page": 1,
      "question_id": 352334,
      "question_title": "<p>&nbsp;The architecture design specifies the overall architecture and the placement of software and hardware that will be used. Architecture design is a very complex process that is often left to experienced architecture designers and consultants. The first step is to refine the &nbsp;（1） &nbsp;into more detailed requirements that are then employed to help select the architecture to be used and the software components to be placed on each device. In a &nbsp;（2） , one also has to decide whether to use a two-tier, three-tier, or n-tier architecture. Then the requirements and the architecture design are used to develop the hardware and software specification. There are four primary types of nonfunctional requirements that can be important in designing the architecture. &nbsp;（3） &nbsp;specify the operating environment(s)&nbsp;in which the system must perform and how those may change over time. &nbsp;（4） &nbsp;focus on the nonfunctional requirements issues such as response time, capacity, and reliability. &nbsp;（5） &nbsp;are the abilities to protect the information system from disruption and data loss, whether caused by an intentional act. Cultural and political requirements are specific to the countries in which the system will be used.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352329,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " Safety requirements ",
        " Security requirements ",
        " Data management requirements ",
        " System requirements "
      ]
    },
    "crawl_time": 1753176858.229763
  },
  {
    "section_id": "9388",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构概念",
    "question_id": 352416,
    "question_title": "<p>软件架构设计主要关注软件构件的（1）、属性和（2）&nbsp;，并通过多种视图全面描述特定系统的架构。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 功能 ",
      " 实现 ",
      " 组成元素 ",
      " 结构 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 21,
      "belong_page": 1,
      "question_id": 352416,
      "question_title": "<p>软件架构设计主要关注软件构件的（1）、属性和（2）&nbsp;，并通过多种视图全面描述特定系统的架构。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352415,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 功能 ",
        " 实现 ",
        " 组成元素 ",
        " 结构 "
      ]
    },
    "crawl_time": 1753176858.229763
  },
  {
    "section_id": "9388",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构概念",
    "question_id": 352417,
    "question_title": "<p>软件架构设计主要关注软件构件的（1）、属性和（2）&nbsp;，并通过多种视图全面描述特定系统的架构。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 实现方式 ",
      " 交互作用 ",
      " 设计方案&nbsp;&nbsp; ",
      " 测试方式 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 22,
      "belong_page": 1,
      "question_id": 352417,
      "question_title": "<p>软件架构设计主要关注软件构件的（1）、属性和（2）&nbsp;，并通过多种视图全面描述特定系统的架构。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352415,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 实现方式 ",
        " 交互作用 ",
        " 设计方案&nbsp;&nbsp; ",
        " 测试方式 "
      ]
    },
    "crawl_time": 1753176858.229763
  },
  {
    "section_id": "9388",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构概念",
    "question_id": 507274,
    "question_title": "系统架构组成的4+1视图，包括下面的（ ）视图。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "逻辑视图、实现视图、进程视图、物理视图和部署视图",
      "逻辑视图、用例视图、进程视图、物理视图和场景视图",
      "逻辑视图、用例视图、进程视图、物理视图和部署视图",
      "逻辑视图、开发视图、进程视图、物理视图和场景视图"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 23,
      "belong_page": 1,
      "question_id": 507274,
      "question_title": "系统架构组成的4+1视图，包括下面的（ ）视图。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507274,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "逻辑视图、实现视图、进程视图、物理视图和部署视图",
        "逻辑视图、用例视图、进程视图、物理视图和场景视图",
        "逻辑视图、用例视图、进程视图、物理视图和部署视图",
        "逻辑视图、开发视图、进程视图、物理视图和场景视图"
      ]
    },
    "crawl_time": 1753176858.229763
  },
  {
    "section_id": "9389",
    "section_name": "系统架构设计基础知识（第二版） - 基于架构的软件开发方法",
    "question_id": 63630,
    "question_title": "<p>基于构件的软件开发中，构件分类方法可以归纳为三大类：（请作答此空）根据领域分析的结果将应用领域的概念按照从抽象到具体的顺序逐次分解为树形或有向无回路图结构；（ ）利用Facet描述构件执行的功能、被操作的数据、构件应用的语境或任意其他特征；（ ）使得检索者在阅读文档过程中可以按照人类的联想思维方式任意跳转到包含相关概念或构件的文档。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 关键字分类法 ",
      " 刻面分类法 ",
      " 语义匹配法 ",
      " 超文本方法 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 63630,
      "question_title": "<p>基于构件的软件开发中，构件分类方法可以归纳为三大类：（请作答此空）根据领域分析的结果将应用领域的概念按照从抽象到具体的顺序逐次分解为树形或有向无回路图结构；（ ）利用Facet描述构件执行的功能、被操作的数据、构件应用的语境或任意其他特征；（ ）使得检索者在阅读文档过程中可以按照人类的联想思维方式任意跳转到包含相关概念或构件的文档。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63630,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 关键字分类法 ",
        " 刻面分类法 ",
        " 语义匹配法 ",
        " 超文本方法 "
      ]
    },
    "crawl_time": 1753176859.5224314
  },
  {
    "section_id": "9389",
    "section_name": "系统架构设计基础知识（第二版） - 基于架构的软件开发方法",
    "question_id": 190836,
    "question_title": "设计模式按照目的可以划分为三类，其中（请作答此空）模式是对对象实例化过程的抽象，例如（ ）模式确保一个类有一个实例，并提供全局访问入口（ ）模式允许对象连不了解要创建对象的确切类以及如何创建等结节的情况下创建自定义对象，（ ）模式将复杂对象的构建与表示分离.",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 创建型 ",
      " 结构型 ",
      " 行为型 ",
      " 功能型 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 190836,
      "question_title": "设计模式按照目的可以划分为三类，其中（请作答此空）模式是对对象实例化过程的抽象，例如（ ）模式确保一个类有一个实例，并提供全局访问入口（ ）模式允许对象连不了解要创建对象的确切类以及如何创建等结节的情况下创建自定义对象，（ ）模式将复杂对象的构建与表示分离.",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 190836,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 创建型 ",
        " 结构型 ",
        " 行为型 ",
        " 功能型 "
      ]
    },
    "crawl_time": 1753176859.5224314
  },
  {
    "section_id": "9389",
    "section_name": "系统架构设计基础知识（第二版） - 基于架构的软件开发方法",
    "question_id": 208432,
    "question_title": "<p>ANSI/IEEE 1471-2000是对软件密集型系统的架构进行描述的标准。在该标准中，（请作答此空）这一概念主要用于描述软件架构模型。在此基础上，通常采用（ ）描述某个利益相关人(Stakeholder)所关注架构模型的某一方面。（ ）则是对所有利益相关人关注点的响应和回答。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 上下文 ",
      " 架构风格 ",
      " 组件 ",
      " 视图 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 208432,
      "question_title": "<p>ANSI/IEEE 1471-2000是对软件密集型系统的架构进行描述的标准。在该标准中，（请作答此空）这一概念主要用于描述软件架构模型。在此基础上，通常采用（ ）描述某个利益相关人(Stakeholder)所关注架构模型的某一方面。（ ）则是对所有利益相关人关注点的响应和回答。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208432,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 上下文 ",
        " 架构风格 ",
        " 组件 ",
        " 视图 "
      ]
    },
    "crawl_time": 1753176859.5224314
  },
  {
    "section_id": "9389",
    "section_name": "系统架构设计基础知识（第二版） - 基于架构的软件开发方法",
    "question_id": 208525,
    "question_title": "<p>架构权衡分析方法(Architecture Tradeoff Analysis Method，ATAM)是一种系统架构评估方法，主要在系统开发之前，针对性能、（请作答此空）、安全性和可修改性等质量属性进行评价和折中。ATAM可以分为4个主要的活动阶段，包括需求收集、（ ）描述、属性模型构造和分析、架构决策与折中，整个评估过程强调以（ ）作为架构评估的核心概念。</p><p>某软件公司采用ATAM进行软件架构评估，在评估过程中识别出了多个关于质量属性的描述。其中，“系统在进行文件保存操作时，应该与Windows系统的操作方式保持一致”主要与（ ）质量属性相关；“系统应该提供一个开放的API接口，支持远程对系统的行为进行控制与调试”主要与（ ）质量属性相关。在识别出上述描述后，通常采用（ ）对质量属性的描述进行刻画与排序。在评估过程中，（ ）是一个会影响多个质量属性的架构设计决策。<span style=\"font-size: 16px;\"></span></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 可测试性 ",
      " 可移植性 ",
      " 可用性 ",
      " 易用性 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 208525,
      "question_title": "<p>架构权衡分析方法(Architecture Tradeoff Analysis Method，ATAM)是一种系统架构评估方法，主要在系统开发之前，针对性能、（请作答此空）、安全性和可修改性等质量属性进行评价和折中。ATAM可以分为4个主要的活动阶段，包括需求收集、（ ）描述、属性模型构造和分析、架构决策与折中，整个评估过程强调以（ ）作为架构评估的核心概念。</p><p>某软件公司采用ATAM进行软件架构评估，在评估过程中识别出了多个关于质量属性的描述。其中，“系统在进行文件保存操作时，应该与Windows系统的操作方式保持一致”主要与（ ）质量属性相关；“系统应该提供一个开放的API接口，支持远程对系统的行为进行控制与调试”主要与（ ）质量属性相关。在识别出上述描述后，通常采用（ ）对质量属性的描述进行刻画与排序。在评估过程中，（ ）是一个会影响多个质量属性的架构设计决策。<span style=\"font-size: 16px;\"></span></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208525,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 可测试性 ",
        " 可移植性 ",
        " 可用性 ",
        " 易用性 "
      ]
    },
    "crawl_time": 1753176859.5224314
  },
  {
    "section_id": "9389",
    "section_name": "系统架构设计基础知识（第二版） - 基于架构的软件开发方法",
    "question_id": 281333,
    "question_title": "<p>某软件公司现欲开发一款飞机飞行模拟系统，用于模拟不同种类飞机的飞行特征与起飞特征。为支持将来模拟更多种类的飞机，采用______设计的类图如下图所示。在图中，类AirCraft描述了抽象的飞机，类FlyBehavior与TakeOffBehavior分别用于表示抽象的飞行行为与起飞行为，类SubSonicFly与SuperSonicFly分别描述亚音速飞行和超音速飞行的行为，类VerticalTakeOff与LongDistanceTakeOff分别描述垂直起飞与长距离起飞的行为。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20200912/1599884827483960.jpg\" title=\"1599884827483960.jpg\" alt=\"1.jpg\"/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " Bridge模式 ",
      " Composite模式 ",
      " Observer模式 ",
      " Strategy模式 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 281333,
      "question_title": "<p>某软件公司现欲开发一款飞机飞行模拟系统，用于模拟不同种类飞机的飞行特征与起飞特征。为支持将来模拟更多种类的飞机，采用______设计的类图如下图所示。在图中，类AirCraft描述了抽象的飞机，类FlyBehavior与TakeOffBehavior分别用于表示抽象的飞行行为与起飞行为，类SubSonicFly与SuperSonicFly分别描述亚音速飞行和超音速飞行的行为，类VerticalTakeOff与LongDistanceTakeOff分别描述垂直起飞与长距离起飞的行为。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20200912/1599884827483960.jpg\" title=\"1599884827483960.jpg\" alt=\"1.jpg\"/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281333,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " Bridge模式 ",
        " Composite模式 ",
        " Observer模式 ",
        " Strategy模式 "
      ]
    },
    "crawl_time": 1753176859.5224314
  },
  {
    "section_id": "9389",
    "section_name": "系统架构设计基础知识（第二版） - 基于架构的软件开发方法",
    "question_id": 281353,
    "question_title": "<p>软件架构需求是指用户对目标软件系统在功能、行为、性能和设计约束等方面的期望。以下活动中，不属于软件架构需求过程中标识构件范畴的是______。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 生成类图 ",
      " 对类图进行分组 ",
      " 对类图进行测试 ",
      " 将类合并打包 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 281353,
      "question_title": "<p>软件架构需求是指用户对目标软件系统在功能、行为、性能和设计约束等方面的期望。以下活动中，不属于软件架构需求过程中标识构件范畴的是______。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281353,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 生成类图 ",
        " 对类图进行分组 ",
        " 对类图进行测试 ",
        " 将类合并打包 "
      ]
    },
    "crawl_time": 1753176859.5224314
  },
  {
    "section_id": "9389",
    "section_name": "系统架构设计基础知识（第二版） - 基于架构的软件开发方法",
    "question_id": 283633,
    "question_title": "<p>基于软件架构的设计(Architecture Based Software Development，ABSD）。强调由商业、质量和功能需求的组合驱动软件架构设计。它强调采用（ ）来描述软件架构，采用（ ）来描述需求。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "类图和序列图",
      "视角与视图",
      "构件和类图",
      "构件与功能"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 283633,
      "question_title": "<p>基于软件架构的设计(Architecture Based Software Development，ABSD）。强调由商业、质量和功能需求的组合驱动软件架构设计。它强调采用（ ）来描述软件架构，采用（ ）来描述需求。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 283632,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "类图和序列图",
        "视角与视图",
        "构件和类图",
        "构件与功能"
      ]
    },
    "crawl_time": 1753176859.5224314
  },
  {
    "section_id": "9389",
    "section_name": "系统架构设计基础知识（第二版） - 基于架构的软件开发方法",
    "question_id": 283641,
    "question_title": "<p>PH系统集成开发公司决定采用基于架构的软件开发方法，以架构为核心对近期所承接的某电子商务企业的在线交易平台进行设计与实现。该电子商务企业要求在线交易平台必须在800 ms内完成客户的交易请求。该电子商务企业所提要求主要对应于______这一软件质量属性，实现并提高该质量属性的架构设计策略不包括______。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "采用优先级调度队列",
      "引入并发处理",
      "优化相关进程的CPU占用率",
      "设置进程监视器"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 283641,
      "question_title": "<p>PH系统集成开发公司决定采用基于架构的软件开发方法，以架构为核心对近期所承接的某电子商务企业的在线交易平台进行设计与实现。该电子商务企业要求在线交易平台必须在800 ms内完成客户的交易请求。该电子商务企业所提要求主要对应于______这一软件质量属性，实现并提高该质量属性的架构设计策略不包括______。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 283639,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "采用优先级调度队列",
        "引入并发处理",
        "优化相关进程的CPU占用率",
        "设置进程监视器"
      ]
    },
    "crawl_time": 1753176859.5224314
  },
  {
    "section_id": "9389",
    "section_name": "系统架构设计基础知识（第二版） - 基于架构的软件开发方法",
    "question_id": 354925,
    "question_title": "<p>在软件体系结构的建模与描述中，多视图是一种描述软件体系结构的重要途径，其体现了(44)的思想。其中，4+1模型是描述软体系结的常用型，在该模型中，“1”指的是(45)，</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "关注点分离",
      "面向对象",
      "模型驱动",
      "UML&nbsp;"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 354925,
      "question_title": "<p>在软件体系结构的建模与描述中，多视图是一种描述软件体系结构的重要途径，其体现了(44)的思想。其中，4+1模型是描述软体系结的常用型，在该模型中，“1”指的是(45)，</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354924,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "关注点分离",
        "面向对象",
        "模型驱动",
        "UML&nbsp;"
      ]
    },
    "crawl_time": 1753176859.5224314
  },
  {
    "section_id": "9389",
    "section_name": "系统架构设计基础知识（第二版） - 基于架构的软件开发方法",
    "question_id": 354926,
    "question_title": "<p>在软件体系结构的建模与描述中，多视图是一种描述软件体系结构的重要途径，其体现了(44)的思想。其中，4+1模型是描述软体系结的常用型，在该模型中，“1”指的是(45)，</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "统一场景",
      "开发视图",
      "逻辑视图",
      "物理视图&nbsp;"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 354926,
      "question_title": "<p>在软件体系结构的建模与描述中，多视图是一种描述软件体系结构的重要途径，其体现了(44)的思想。其中，4+1模型是描述软体系结的常用型，在该模型中，“1”指的是(45)，</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354924,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "统一场景",
        "开发视图",
        "逻辑视图",
        "物理视图&nbsp;"
      ]
    },
    "crawl_time": 1753176859.5224314
  },
  {
    "section_id": "9389",
    "section_name": "系统架构设计基础知识（第二版） - 基于架构的软件开发方法",
    "question_id": 354930,
    "question_title": "<p>【51CTO学堂-学员回忆版】基于体系结构的软件设计(Architecture-Based Software Design. ABSD) 方法是体系结构驱动，是指构成体系结构的(1)的组合收动的。ABSD方法现一个自项向下、递归细化的方法，软件系统的体系结构通过该方法得到细化，直到能产生(2)。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 产品、功能需求和设计活动 ",
      "商业、质量和功能需求",
      "商业、产品和功能需求&nbsp;",
      "商业、质量和设计活动"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 354930,
      "question_title": "<p>【51CTO学堂-学员回忆版】基于体系结构的软件设计(Architecture-Based Software Design. ABSD) 方法是体系结构驱动，是指构成体系结构的(1)的组合收动的。ABSD方法现一个自项向下、递归细化的方法，软件系统的体系结构通过该方法得到细化，直到能产生(2)。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354929,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 产品、功能需求和设计活动 ",
        "商业、质量和功能需求",
        "商业、产品和功能需求&nbsp;",
        "商业、质量和设计活动"
      ]
    },
    "crawl_time": 1753176859.5224314
  },
  {
    "section_id": "9389",
    "section_name": "系统架构设计基础知识（第二版） - 基于架构的软件开发方法",
    "question_id": 354931,
    "question_title": "<p>【51CTO学堂-学员回忆版】基于体系结构的软件设计(Architecture-Based Software Design. ABSD) 方法是体系结构驱动，是指构成体系结构的(1)的组合收动的。ABSD方法现一个自项向下、递归细化的方法，软件系统的体系结构通过该方法得到细化，直到能产生(2)。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "软件产品和代码",
      " 软件构件和类 ",
      "软件构件和连接件",
      "类和软件代码"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 354931,
      "question_title": "<p>【51CTO学堂-学员回忆版】基于体系结构的软件设计(Architecture-Based Software Design. ABSD) 方法是体系结构驱动，是指构成体系结构的(1)的组合收动的。ABSD方法现一个自项向下、递归细化的方法，软件系统的体系结构通过该方法得到细化，直到能产生(2)。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354929,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "软件产品和代码",
        " 软件构件和类 ",
        "软件构件和连接件",
        "类和软件代码"
      ]
    },
    "crawl_time": 1753176859.5224314
  },
  {
    "section_id": "9389",
    "section_name": "系统架构设计基础知识（第二版） - 基于架构的软件开发方法",
    "question_id": 371967,
    "question_title": "<p>考虑软件架构时，重要的是从不同的视角（perspective）来检查，这促使软件设计师考虑架构的不同属性。例如，展示功能组织的 （1） 能判断质量特性，展示并发行为的（2） 能判断系统行为特性。选择的特定视角或视图也就是逻辑视图、进程视图、实现视图和 （3） 。使用（4）来记录设计元素的功能和概念接口，设计元素的功能定义了它本身在系统中的角色，这些角色包括功能、性能等。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "静态视角",
      "动态视角",
      "多维视角",
      "功能视角"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 371967,
      "question_title": "<p>考虑软件架构时，重要的是从不同的视角（perspective）来检查，这促使软件设计师考虑架构的不同属性。例如，展示功能组织的 （1） 能判断质量特性，展示并发行为的（2） 能判断系统行为特性。选择的特定视角或视图也就是逻辑视图、进程视图、实现视图和 （3） 。使用（4）来记录设计元素的功能和概念接口，设计元素的功能定义了它本身在系统中的角色，这些角色包括功能、性能等。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371966,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "静态视角",
        "动态视角",
        "多维视角",
        "功能视角"
      ]
    },
    "crawl_time": 1753176859.5224314
  },
  {
    "section_id": "9389",
    "section_name": "系统架构设计基础知识（第二版） - 基于架构的软件开发方法",
    "question_id": 371968,
    "question_title": "<p>考虑软件架构时，重要的是从不同的视角（perspective）来检查，这促使软件设计师考虑架构的不同属性。例如，展示功能组织的 （1） 能判断质量特性，展示并发行为的（2） 能判断系统行为特性。选择的特定视角或视图也就是逻辑视图、进程视图、实现视图和 （3） 。使用（4）来记录设计元素的功能和概念接口，设计元素的功能定义了它本身在系统中的角色，这些角色包括功能、性能等。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "开发视角",
      "动态视角",
      "部署视角",
      "功能视角"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 371968,
      "question_title": "<p>考虑软件架构时，重要的是从不同的视角（perspective）来检查，这促使软件设计师考虑架构的不同属性。例如，展示功能组织的 （1） 能判断质量特性，展示并发行为的（2） 能判断系统行为特性。选择的特定视角或视图也就是逻辑视图、进程视图、实现视图和 （3） 。使用（4）来记录设计元素的功能和概念接口，设计元素的功能定义了它本身在系统中的角色，这些角色包括功能、性能等。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371966,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "开发视角",
        "动态视角",
        "部署视角",
        "功能视角"
      ]
    },
    "crawl_time": 1753176859.5224314
  },
  {
    "section_id": "9389",
    "section_name": "系统架构设计基础知识（第二版） - 基于架构的软件开发方法",
    "question_id": 371969,
    "question_title": "<p>考虑软件架构时，重要的是从不同的视角（perspective）来检查，这促使软件设计师考虑架构的不同属性。例如，展示功能组织的 （1） 能判断质量特性，展示并发行为的（2） 能判断系统行为特性。选择的特定视角或视图也就是逻辑视图、进程视图、实现视图和 （3） 。使用（4）来记录设计元素的功能和概念接口，设计元素的功能定义了它本身在系统中的角色，这些角色包括功能、性能等。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "开发视图",
      "配置视图",
      "部署视图",
      "物理视图"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 371969,
      "question_title": "<p>考虑软件架构时，重要的是从不同的视角（perspective）来检查，这促使软件设计师考虑架构的不同属性。例如，展示功能组织的 （1） 能判断质量特性，展示并发行为的（2） 能判断系统行为特性。选择的特定视角或视图也就是逻辑视图、进程视图、实现视图和 （3） 。使用（4）来记录设计元素的功能和概念接口，设计元素的功能定义了它本身在系统中的角色，这些角色包括功能、性能等。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371966,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "开发视图",
        "配置视图",
        "部署视图",
        "物理视图"
      ]
    },
    "crawl_time": 1753176859.5224314
  },
  {
    "section_id": "9389",
    "section_name": "系统架构设计基础知识（第二版） - 基于架构的软件开发方法",
    "question_id": 371970,
    "question_title": "<p>考虑软件架构时，重要的是从不同的视角（perspective）来检查，这促使软件设计师考虑架构的不同属性。例如，展示功能组织的 （1） 能判断质量特性，展示并发行为的（2） 能判断系统行为特性。选择的特定视角或视图也就是逻辑视图、进程视图、实现视图和 （3） 。使用（4）来记录设计元素的功能和概念接口，设计元素的功能定义了它本身在系统中的角色，这些角色包括功能、性能等。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "逻辑视图",
      "物理视图",
      "部署视图",
      "用例视图"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 371970,
      "question_title": "<p>考虑软件架构时，重要的是从不同的视角（perspective）来检查，这促使软件设计师考虑架构的不同属性。例如，展示功能组织的 （1） 能判断质量特性，展示并发行为的（2） 能判断系统行为特性。选择的特定视角或视图也就是逻辑视图、进程视图、实现视图和 （3） 。使用（4）来记录设计元素的功能和概念接口，设计元素的功能定义了它本身在系统中的角色，这些角色包括功能、性能等。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371966,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "逻辑视图",
        "物理视图",
        "部署视图",
        "用例视图"
      ]
    },
    "crawl_time": 1753176859.5224314
  },
  {
    "section_id": "9389",
    "section_name": "系统架构设计基础知识（第二版） - 基于架构的软件开发方法",
    "question_id": 507299,
    "question_title": "<p>ABSD体系结构需求来自下面哪三方面</p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 客户的需求目标、系统的商业目标，系统开发人员的商业目标 ",
      " 系统的功能需求、系统的商业目标，系统开发人员的开发任务 ",
      " 系统的质量目标、系统的质量要求，系统开发人员的商业目标 ",
      " 系统的质量目标、系统的商业目标，系统开发人员的商业目标 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 507299,
      "question_title": "<p>ABSD体系结构需求来自下面哪三方面</p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507299,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 客户的需求目标、系统的商业目标，系统开发人员的商业目标 ",
        " 系统的功能需求、系统的商业目标，系统开发人员的开发任务 ",
        " 系统的质量目标、系统的质量要求，系统开发人员的商业目标 ",
        " 系统的质量目标、系统的商业目标，系统开发人员的商业目标 "
      ]
    },
    "crawl_time": 1753176859.5224314
  },
  {
    "section_id": "9389",
    "section_name": "系统架构设计基础知识（第二版） - 基于架构的软件开发方法",
    "question_id": 507352,
    "question_title": "<p>体系结构演化6个步骤：需求变化归类；制订体系结构演化计划；构件变动；（ ）；构件组装与测试；技术评审→演化后的体系结构。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 更新构件的相互作用 ",
      " 构件版本管理 ",
      " 验证需求满足度 ",
      " 调整系统接口设计 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 18,
      "belong_page": 1,
      "question_id": 507352,
      "question_title": "<p>体系结构演化6个步骤：需求变化归类；制订体系结构演化计划；构件变动；（ ）；构件组装与测试；技术评审→演化后的体系结构。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507352,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 更新构件的相互作用 ",
        " 构件版本管理 ",
        " 验证需求满足度 ",
        " 调整系统接口设计 "
      ]
    },
    "crawl_time": 1753176859.5224314
  },
  {
    "section_id": "9389",
    "section_name": "系统架构设计基础知识（第二版） - 基于架构的软件开发方法",
    "question_id": 208621,
    "question_title": "<p>论基于架构的软件设计方法及应用</p><p>基于架构的软件设计(Architecture-Based Software Design，ABSD.方法以构成软件架构的商业、质量和功能需求等要素来驱动整个软件开发过程。ABSD是一个自顶向下，递归细化的软件开发方法，它以软件系统功能的分解为基础，通过选择架构风格实现质量和商业需求，并强调在架构设计过程中使用软件架构模板。采用ABSD方法，设计活动可以从项目总体功能框架明确后就开始，因此该方法特别适用于开发一些不能预先决定所有需求的软件系统，如软件产品线系统或长生命周期系统等，也可为需求不能在短时间内明确的软件项目提供指导。</p><p>请围绕“基于架构的软件开发方法及应用”论题，依次从以下三个方面进行论述。</p><p>1．概要叙述你参与开发的、采用ABSD方法的软件项目以及你在其中所承担的主要工作。</p><p>2．结合项目实际，详细说明采用ABSD方法进行软件开发时，需要经历哪些开发阶段?每个阶段包括哪些主要活动?</p><p>3．阐述你在软件开发的过程中都遇到了哪些实际问题及解决方法。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "请看解析"
    ],
    "analysis": "",
    "raw_data": {
      "index": 19,
      "belong_page": 1,
      "question_id": 208621,
      "question_title": "<p>论基于架构的软件设计方法及应用</p><p>基于架构的软件设计(Architecture-Based Software Design，ABSD.方法以构成软件架构的商业、质量和功能需求等要素来驱动整个软件开发过程。ABSD是一个自顶向下，递归细化的软件开发方法，它以软件系统功能的分解为基础，通过选择架构风格实现质量和商业需求，并强调在架构设计过程中使用软件架构模板。采用ABSD方法，设计活动可以从项目总体功能框架明确后就开始，因此该方法特别适用于开发一些不能预先决定所有需求的软件系统，如软件产品线系统或长生命周期系统等，也可为需求不能在短时间内明确的软件项目提供指导。</p><p>请围绕“基于架构的软件开发方法及应用”论题，依次从以下三个方面进行论述。</p><p>1．概要叙述你参与开发的、采用ABSD方法的软件项目以及你在其中所承担的主要工作。</p><p>2．结合项目实际，详细说明采用ABSD方法进行软件开发时，需要经历哪些开发阶段?每个阶段包括哪些主要活动?</p><p>3．阐述你在软件开发的过程中都遇到了哪些实际问题及解决方法。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 208621,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "请看解析"
      ],
      "option": null
    },
    "crawl_time": 1753176859.5224314
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 43751,
    "question_title": "<p><br/></p><p><br/></p><p class=\"MsoNormal\" style=\"text-indent:20.7000pt;text-align:left;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">以下关于软件架构风格与系统性能关系的叙述中，错误的是</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">16</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">。</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;mso-hansi-font-family:&#39;Times New Roman&#39;;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 对于采用层次化架构风格的系统，划分的层次越多，系统的性能越差 ",
      " 对于采用隐式调用架构风格的系统，可以通过处理函数的并发调用提高系统处理性能 ",
      " 采用面向对象架构风格的系统，可以通过引入对象管理层提高系统性能 ",
      " 对于采用解释器架构风格的系统，可以通过部分解释代码预先编译的方式提高系统性能。 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43751,
      "question_title": "<p><br/></p><p><br/></p><p class=\"MsoNormal\" style=\"text-indent:20.7000pt;text-align:left;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">以下关于软件架构风格与系统性能关系的叙述中，错误的是</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">（</span></span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\">16</span></span><span style=\"text-decoration:underline;\"><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;text-decoration:underline;text-underline:single;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">）</span></span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"><span style=\"font-family:宋体\">。</span></span><span style=\"mso-spacerun:&#39;yes&#39;;font-family:宋体;mso-hansi-font-family:&#39;Times New Roman&#39;;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43751,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 对于采用层次化架构风格的系统，划分的层次越多，系统的性能越差 ",
        " 对于采用隐式调用架构风格的系统，可以通过处理函数的并发调用提高系统处理性能 ",
        " 采用面向对象架构风格的系统，可以通过引入对象管理层提高系统性能 ",
        " 对于采用解释器架构风格的系统，可以通过部分解释代码预先编译的方式提高系统性能。 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 43775,
    "question_title": "<p><br/></p><p><br/></p><p>软件架构风格是描述某一特定应用领域中系统组织方式的惯用模式。架构风格反映领域中众多系统所共有的结构和(请作答此空），强调对架构(&nbsp; )的重用。</p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 语义特性 ",
      " 功能需求&nbsp;&nbsp; ",
      " 质量属性&nbsp; ",
      " 业务规则 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 43775,
      "question_title": "<p><br/></p><p><br/></p><p>软件架构风格是描述某一特定应用领域中系统组织方式的惯用模式。架构风格反映领域中众多系统所共有的结构和(请作答此空），强调对架构(&nbsp; )的重用。</p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43775,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 语义特性 ",
        " 功能需求&nbsp;&nbsp; ",
        " 质量属性&nbsp; ",
        " 业务规则 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 43781,
    "question_title": "<p>某公司拟开发一个地面清洁机器人。机器人的控制者首先定义清洁任务和任务之间的关系，机器人接受任务后，需要响应外界环境中触发的一些突发事件，根据自身状态进行动态调整，最终自动完成任务。针对上述需求，该机器人应该采用（ ）架构风格最为合适。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 面向对象&nbsp; ",
      " 主程序—子程序 ",
      " 规则系统&nbsp;&nbsp; ",
      " 管道—过滤器 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 43781,
      "question_title": "<p>某公司拟开发一个地面清洁机器人。机器人的控制者首先定义清洁任务和任务之间的关系，机器人接受任务后，需要响应外界环境中触发的一些突发事件，根据自身状态进行动态调整，最终自动完成任务。针对上述需求，该机器人应该采用（ ）架构风格最为合适。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43781,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 面向对象&nbsp; ",
        " 主程序—子程序 ",
        " 规则系统&nbsp;&nbsp; ",
        " 管道—过滤器 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 43782,
    "question_title": "<p>某公司拟开发一个语音识别系统，其语音识别的主要过程包括分割原始语音信号、识别音素、产生候选词、判定语法片断、提供语义解释等，每个过程都需要进行基于先验知识的条件判断并进行相应的识别动作。针对该系统的特点，采用( )架构风格最为合适。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 解释器&nbsp; ",
      " 面向对象 ",
      " 黑板 ",
      " 隐式调用 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 43782,
      "question_title": "<p>某公司拟开发一个语音识别系统，其语音识别的主要过程包括分割原始语音信号、识别音素、产生候选词、判定语法片断、提供语义解释等，每个过程都需要进行基于先验知识的条件判断并进行相应的识别动作。针对该系统的特点，采用( )架构风格最为合适。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43782,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 解释器&nbsp; ",
        " 面向对象 ",
        " 黑板 ",
        " 隐式调用 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 43783,
    "question_title": "<p>某公司拟开发一个轿车巡航定速系统，系统需要持续测量车辆当前的实时速度，并根据设定的期望速度自动控制轿车的油门和刹车。针对上述需求，采用( )架构风格最为合适。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 解释器&nbsp; ",
      " 过程控制 ",
      " 分层 ",
      " 管道—过滤器 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 43783,
      "question_title": "<p>某公司拟开发一个轿车巡航定速系统，系统需要持续测量车辆当前的实时速度，并根据设定的期望速度自动控制轿车的油门和刹车。针对上述需求，采用( )架构风格最为合适。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43783,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 解释器&nbsp; ",
        " 过程控制 ",
        " 分层 ",
        " 管道—过滤器 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 43784,
    "question_title": "<p>某公司拟开发一套在线游戏系统，该系统的设计目标之一是支持用户自行定义游戏对象的属性、行为和对象之间的交互关系。为了实现上述目标，公司应该采用( )架构风格最为合适。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 管道—过滤器&nbsp; ",
      " 隐式调用&nbsp;&nbsp; ",
      " 主程序—子程序 ",
      " 解释器 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 43784,
      "question_title": "<p>某公司拟开发一套在线游戏系统，该系统的设计目标之一是支持用户自行定义游戏对象的属性、行为和对象之间的交互关系。为了实现上述目标，公司应该采用( )架构风格最为合适。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43784,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 管道—过滤器&nbsp; ",
        " 隐式调用&nbsp;&nbsp; ",
        " 主程序—子程序 ",
        " 解释器 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 43785,
    "question_title": "<p>某公司为其研发的硬件产品设计实现了一种特定的编程语言，为了方便开发者进行软件开发，公司拟开发一套针对该编程语言的集成开发环境，包括代码编辑、语法高亮、代码编译、运行调试等功能。针对上述描述，该集成开发环境应采用（ ）架构风格最为合适。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 管道—过滤器 ",
      " 数据仓储 ",
      " 主程序—子程序 ",
      " 解释器 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 43785,
      "question_title": "<p>某公司为其研发的硬件产品设计实现了一种特定的编程语言，为了方便开发者进行软件开发，公司拟开发一套针对该编程语言的集成开发环境，包括代码编辑、语法高亮、代码编译、运行调试等功能。针对上述描述，该集成开发环境应采用（ ）架构风格最为合适。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43785,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 管道—过滤器 ",
        " 数据仓储 ",
        " 主程序—子程序 ",
        " 解释器 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 49942,
    "question_title": "<p>（ &nbsp;）架构风格可以概括为通过连接件绑定在一起按照一组规则运作的并行构件。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " C2 ",
      " 黑板系统 ",
      " 规则系统 ",
      " 虚拟机 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 49942,
      "question_title": "<p>（ &nbsp;）架构风格可以概括为通过连接件绑定在一起按照一组规则运作的并行构件。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49942,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " C2 ",
        " 黑板系统 ",
        " 规则系统 ",
        " 虚拟机 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 49946,
    "question_title": "<p>某公司拟为某种新型可编程机器人开发相应的编译器。该编译过程包括词法分析、语法分析、语义分析和代码生成四个阶段，每个阶段产生的结果作为下一个阶段的输入，且需独立存储。针对上述描述，该集成开发环境应采用（ &nbsp;）架构风格最为合适。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 管道-过滤器 ",
      " 数据仓储 ",
      " 主程序-子程序 ",
      " 解释器 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 49946,
      "question_title": "<p>某公司拟为某种新型可编程机器人开发相应的编译器。该编译过程包括词法分析、语法分析、语义分析和代码生成四个阶段，每个阶段产生的结果作为下一个阶段的输入，且需独立存储。针对上述描述，该集成开发环境应采用（ &nbsp;）架构风格最为合适。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49946,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 管道-过滤器 ",
        " 数据仓储 ",
        " 主程序-子程序 ",
        " 解释器 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 49947,
    "question_title": "<p>软件架构风格是描述某-特定应用领域中系统组织方式的惯用模式。一个体系结构定义了一个词汇表和一组（ ）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 约束 ",
      " 连接件 ",
      " 拓扑结构 ",
      " 规则 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 49947,
      "question_title": "<p>软件架构风格是描述某-特定应用领域中系统组织方式的惯用模式。一个体系结构定义了一个词汇表和一组（ ）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49947,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 约束 ",
        " 连接件 ",
        " 拓扑结构 ",
        " 规则 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 49948,
    "question_title": "<p>架构风格反映领域中众多系统所共有的结构和（ &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 语义特征 ",
      " 功能需求 ",
      " 质量属性 ",
      " 业务规则 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 49948,
      "question_title": "<p>架构风格反映领域中众多系统所共有的结构和（ &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49948,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 语义特征 ",
        " 功能需求 ",
        " 质量属性 ",
        " 业务规则 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 49950,
    "question_title": "<p>某企业内部现有的主要业务功能已封装成为Web服务。为了拓展业务范围，需要将现有的业务功能进行多种组合，形成新的业务功能。针对业务灵活组合这一要求，采用（ &nbsp;）架构风格最为合适。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 规则系统 ",
      " 面向对象 ",
      " 黑板 ",
      " 解释器 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 49950,
      "question_title": "<p>某企业内部现有的主要业务功能已封装成为Web服务。为了拓展业务范围，需要将现有的业务功能进行多种组合，形成新的业务功能。针对业务灵活组合这一要求，采用（ &nbsp;）架构风格最为合适。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49950,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 规则系统 ",
        " 面向对象 ",
        " 黑板 ",
        " 解释器 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 54330,
    "question_title": "<p>Windows操作系统在图形用户界面处理方面采用的核心架构风格是（请作答此空）风格。Java语言宣传的&quot;一次编写，到处运行&quot;的特性，从架构风格上看符合（ &nbsp;）风格的特点。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 虚拟机 ",
      " 管道-过滤器 ",
      " 事件驱动 ",
      " 微内核-扩展 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 54330,
      "question_title": "<p>Windows操作系统在图形用户界面处理方面采用的核心架构风格是（请作答此空）风格。Java语言宣传的&quot;一次编写，到处运行&quot;的特性，从架构风格上看符合（ &nbsp;）风格的特点。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54330,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 虚拟机 ",
        " 管道-过滤器 ",
        " 事件驱动 ",
        " 微内核-扩展 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 54332,
    "question_title": "<p>某软件开发公司负责开发一个Web服务器服务端处理软件，其核心部分是对客户端请求消息的解析与处理，包括HTTP报头分离、SOAP报文解析等功能。该公司的架构师决定采用成熟的架构风格指导整个软件的设计，以下（ &nbsp;）架构风格，最适合该服务端处理软件。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 虚拟机 ",
      " 管道－过滤器 ",
      " 黑板结构 ",
      " 分层结构 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 54332,
      "question_title": "<p>某软件开发公司负责开发一个Web服务器服务端处理软件，其核心部分是对客户端请求消息的解析与处理，包括HTTP报头分离、SOAP报文解析等功能。该公司的架构师决定采用成熟的架构风格指导整个软件的设计，以下（ &nbsp;）架构风格，最适合该服务端处理软件。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54332,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 虚拟机 ",
        " 管道－过滤器 ",
        " 黑板结构 ",
        " 分层结构 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 63662,
    "question_title": "<p>在仓库风格中，有两种不同的构件，其中，（请作答此空）说明当前状态，（　）在中央数据存储上执行。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 注册表 ",
      " 中央数据结构 ",
      " 事件 ",
      " 数据库 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 63662,
      "question_title": "<p>在仓库风格中，有两种不同的构件，其中，（请作答此空）说明当前状态，（　）在中央数据存储上执行。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63662,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 注册表 ",
        " 中央数据结构 ",
        " 事件 ",
        " 数据库 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 63666,
    "question_title": "<p>某公司欲开发一个大型多人即时战略游戏，游戏设计的目标之一是能够支持玩家自行创建战役地图，定义游戏对象的行为和对象之间的关系。针对该需求，公司应该采用（请作答此空）架构风格最为合适。在架构设计阶段，公司的架构师识别出2个核心质量属性场景。其中，“在并发用户数量为10000人时，用户的请求需要在1秒内得到响应”主要与（　）质量属性相关；“对游戏系统进行二次开发的时间不超过3个月”主要与（　）质量属性相关。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 层次系统 ",
      " 解释器 ",
      " 黑板 ",
      " 事件驱动系统 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 63666,
      "question_title": "<p>某公司欲开发一个大型多人即时战略游戏，游戏设计的目标之一是能够支持玩家自行创建战役地图，定义游戏对象的行为和对象之间的关系。针对该需求，公司应该采用（请作答此空）架构风格最为合适。在架构设计阶段，公司的架构师识别出2个核心质量属性场景。其中，“在并发用户数量为10000人时，用户的请求需要在1秒内得到响应”主要与（　）质量属性相关；“对游戏系统进行二次开发的时间不超过3个月”主要与（　）质量属性相关。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63666,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 层次系统 ",
        " 解释器 ",
        " 黑板 ",
        " 事件驱动系统 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 159221,
    "question_title": "某公司欲实现一个数据处理软件，该软件需要从网络接收一组复杂的数据，然后分步进行解析和处理。在这种情况下，采用（ ）的体系结构风格比较适合。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 远程过程调用 ",
      " 层次化 ",
      " 管道/过滤器 ",
      " 共享数据 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 159221,
      "question_title": "某公司欲实现一个数据处理软件，该软件需要从网络接收一组复杂的数据，然后分步进行解析和处理。在这种情况下，采用（ ）的体系结构风格比较适合。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159221,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 远程过程调用 ",
        " 层次化 ",
        " 管道/过滤器 ",
        " 共享数据 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 159233,
    "question_title": "<p>其公司承接了一个开发家用空调自动调温器的任务，调温器测量外部空气温度，根据设定的期望温度控制空调的开关。根据该需求，公司应采用（ ）架构风格最为合适</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 解释器 ",
      " 过程控制 ",
      " 分层 ",
      " 管道过滤嚣 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 18,
      "belong_page": 1,
      "question_id": 159233,
      "question_title": "<p>其公司承接了一个开发家用空调自动调温器的任务，调温器测量外部空气温度，根据设定的期望温度控制空调的开关。根据该需求，公司应采用（ ）架构风格最为合适</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159233,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 解释器 ",
        " 过程控制 ",
        " 分层 ",
        " 管道过滤嚣 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 177912,
    "question_title": "某公司欲开发一个漫步者机器人，用来完成火星探测任务。机器人的控制者首先定义探测任务和任务之间的时序依赖性，机器人接受任务后，需要根据自身状态和外界环境进行动态调整，最终自动完成任务。针对这些需求，该机器人应该采用（ &nbsp;）架构风格最为合适。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 虚拟机 ",
      " 黑板风格 ",
      " 面向对象风格 ",
      " 管道-过滤器 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 19,
      "belong_page": 1,
      "question_id": 177912,
      "question_title": "某公司欲开发一个漫步者机器人，用来完成火星探测任务。机器人的控制者首先定义探测任务和任务之间的时序依赖性，机器人接受任务后，需要根据自身状态和外界环境进行动态调整，最终自动完成任务。针对这些需求，该机器人应该采用（ &nbsp;）架构风格最为合适。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 177912,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 虚拟机 ",
        " 黑板风格 ",
        " 面向对象风格 ",
        " 管道-过滤器 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 177913,
    "question_title": "传统的编译器采用（请作答此空）风格。现代编译器的集成开发环境则采用（ &nbsp;）风格。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 虚拟机 ",
      " 管道过滤器风格 ",
      " 数据共享风格 ",
      " 进程通信 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 20,
      "belong_page": 1,
      "question_id": 177913,
      "question_title": "传统的编译器采用（请作答此空）风格。现代编译器的集成开发环境则采用（ &nbsp;）风格。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 177913,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 虚拟机 ",
        " 管道过滤器风格 ",
        " 数据共享风格 ",
        " 进程通信 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 177915,
    "question_title": "（ &nbsp;）架构风格的核心是资源抽象，将系统中的每一个实体抽象成一种资源。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 虚拟机 ",
      " Rest风格 ",
      " 层次风格 ",
      " 数据共享 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 21,
      "belong_page": 1,
      "question_id": 177915,
      "question_title": "（ &nbsp;）架构风格的核心是资源抽象，将系统中的每一个实体抽象成一种资源。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 177915,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 虚拟机 ",
        " Rest风格 ",
        " 层次风格 ",
        " 数据共享 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 190831,
    "question_title": "<p>（请作答此空）是由中间件技术实现并支持SOA的一组基础架构，它提供了一种基础设施，其优势在于（ ）</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " ESB ",
      " 微服务 ",
      " 云计算 ",
      " Multi-Aqont systm "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 22,
      "belong_page": 1,
      "question_id": 190831,
      "question_title": "<p>（请作答此空）是由中间件技术实现并支持SOA的一组基础架构，它提供了一种基础设施，其优势在于（ ）</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 190831,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " ESB ",
        " 微服务 ",
        " 云计算 ",
        " Multi-Aqont systm "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 208512,
    "question_title": "以下叙述，（ ）不是软件架构的主要作用。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 在设计变更相对容易的阶段，考虑系统结构的可选方案 ",
      " 便于技术人员与非技术人员就软件设计进行交互 ",
      " 展现软件的结构、属性与内部交互关系 ",
      " 表达系统是否满足用户的功能性需求 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 23,
      "belong_page": 1,
      "question_id": 208512,
      "question_title": "以下叙述，（ ）不是软件架构的主要作用。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208512,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 在设计变更相对容易的阶段，考虑系统结构的可选方案 ",
        " 便于技术人员与非技术人员就软件设计进行交互 ",
        " 展现软件的结构、属性与内部交互关系 ",
        " 表达系统是否满足用户的功能性需求 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 208520,
    "question_title": "<p>某公司采用基于架构的软件设计(Architecture-Based Software Design，ABSD.方法进行软件设计与开发。ABSD方法有三个基础，分别是对系统进行功能分解、采用（请作答此空）实现质量属性与商业需求、采用软件模板设计软件结构。</p><p>ABSD方法主要包括架构需求等6个主要活动，其中（ ）活动的目标是标识潜在的风险，及早发现架构设计中的缺陷和错误；（ ）活动针对用户的需求变化，修改应用架构，满足新的需求。</p><p>小王是该公司的一位新任架构师，在某项目中主要负责架构文档化方面的工作。小王（ ）的做法不符合架构文档化的原则。架构文档化的主要输出结果是架构规格说明书和（ ）。<span style=\"font-size: 16px;\"></span></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 架构风格 ",
      " 设计模式 ",
      " 架构策略 ",
      " 架构描述 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 24,
      "belong_page": 1,
      "question_id": 208520,
      "question_title": "<p>某公司采用基于架构的软件设计(Architecture-Based Software Design，ABSD.方法进行软件设计与开发。ABSD方法有三个基础，分别是对系统进行功能分解、采用（请作答此空）实现质量属性与商业需求、采用软件模板设计软件结构。</p><p>ABSD方法主要包括架构需求等6个主要活动，其中（ ）活动的目标是标识潜在的风险，及早发现架构设计中的缺陷和错误；（ ）活动针对用户的需求变化，修改应用架构，满足新的需求。</p><p>小王是该公司的一位新任架构师，在某项目中主要负责架构文档化方面的工作。小王（ ）的做法不符合架构文档化的原则。架构文档化的主要输出结果是架构规格说明书和（ ）。<span style=\"font-size: 16px;\"></span></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208520,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 架构风格 ",
        " 设计模式 ",
        " 架构策略 ",
        " 架构描述 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 309491,
    "question_title": "<p>DSSA（特定领域软件架构）就是专用于一类特定类型的任务(领域)的、在整个领域中能有效地使用的、为成功构造应用系统限定了标准的组合结构的软件构件的集合。有三个基本的过程包括：领域分析、（49）、领域实现。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 领域调查 ",
      " 领域设计 ",
      " 领域建模 ",
      " 领域流程处理 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 25,
      "belong_page": 1,
      "question_id": 309491,
      "question_title": "<p>DSSA（特定领域软件架构）就是专用于一类特定类型的任务(领域)的、在整个领域中能有效地使用的、为成功构造应用系统限定了标准的组合结构的软件构件的集合。有三个基本的过程包括：领域分析、（49）、领域实现。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 309491,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 领域调查 ",
        " 领域设计 ",
        " 领域建模 ",
        " 领域流程处理 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 352421,
    "question_title": "<p>传统的编译器采用（1）风格。现代编译器的集成开发环境则采用（2）风格。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 虚拟机 ",
      " 管道过滤器风格 ",
      " 数据共享风格 ",
      " 进程通信 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 26,
      "belong_page": 1,
      "question_id": 352421,
      "question_title": "<p>传统的编译器采用（1）风格。现代编译器的集成开发环境则采用（2）风格。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352420,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 虚拟机 ",
        " 管道过滤器风格 ",
        " 数据共享风格 ",
        " 进程通信 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 352422,
    "question_title": "<p>传统的编译器采用（1）风格。现代编译器的集成开发环境则采用（2）风格。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 数据流 ",
      " 管道过滤器风格 ",
      " 数据共享风格 ",
      " 进程通信 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 27,
      "belong_page": 1,
      "question_id": 352422,
      "question_title": "<p>传统的编译器采用（1）风格。现代编译器的集成开发环境则采用（2）风格。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352420,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 数据流 ",
        " 管道过滤器风格 ",
        " 数据共享风格 ",
        " 进程通信 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 354937,
    "question_title": "<p>【51CTO学堂-学员回忆版】软件体系结构风格是描述某一特定应用领城中系统组织方式的惯用模式。其中，在批处理风格软件体系结构中，每个处理步骤是一个单独的程序，每一步必须在前一步结束后才能开始，并且数据必须是完整的，以(48)的方式传递，基于规则的系统包括规则集、规则解释器、规则/数据选择器及(49)</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "迭代",
      "整体",
      "统一格式",
      "递增"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 28,
      "belong_page": 1,
      "question_id": 354937,
      "question_title": "<p>【51CTO学堂-学员回忆版】软件体系结构风格是描述某一特定应用领城中系统组织方式的惯用模式。其中，在批处理风格软件体系结构中，每个处理步骤是一个单独的程序，每一步必须在前一步结束后才能开始，并且数据必须是完整的，以(48)的方式传递，基于规则的系统包括规则集、规则解释器、规则/数据选择器及(49)</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354936,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "迭代",
        "整体",
        "统一格式",
        "递增"
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 371532,
    "question_title": "软件架构风格描述某一特定领域中的系统组织方式和惯用模式，反映了领域中众多系统所共有的 （1） 特征。对于语音识别、知识推理等问题复杂、解空间很大、求解过程不确定的这一类软件系统，通常会采用 （2） 架构风格。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "管道-过滤器",
      "解释器",
      "黑板",
      "过程控制"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 29,
      "belong_page": 1,
      "question_id": 371532,
      "question_title": "软件架构风格描述某一特定领域中的系统组织方式和惯用模式，反映了领域中众多系统所共有的 （1） 特征。对于语音识别、知识推理等问题复杂、解空间很大、求解过程不确定的这一类软件系统，通常会采用 （2） 架构风格。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371530,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "管道-过滤器",
        "解释器",
        "黑板",
        "过程控制"
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 373690,
    "question_title": "某游戏公司欲开发一个大型多人即时战略游戏，游戏设计的目标之一是能够支持玩家自行创建战役地图， 定义游戏对象的行为和对象之间的关系。针对该目标， 公司应该采用 （48）架构风格最为合适。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "层次系统",
      "黑板",
      "事件驱动",
      "解释器"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 30,
      "belong_page": 1,
      "question_id": 373690,
      "question_title": "某游戏公司欲开发一个大型多人即时战略游戏，游戏设计的目标之一是能够支持玩家自行创建战役地图， 定义游戏对象的行为和对象之间的关系。针对该目标， 公司应该采用 （48）架构风格最为合适。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373690,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "层次系统",
        "黑板",
        "事件驱动",
        "解释器"
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 373698,
    "question_title": "某公司欲开发一个漫步者机器人，用来完成火星探测任务。从地球发布的任务需要经过几分钟之后才能到达。机器人接受任务后，需要根据自身状态和外界环境进行动态调整， 最终自动完成任务并返回结果。针对这些需求，该机器人采用（56）架构风格最为合适。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "解释器",
      "主程序-子程序",
      "隐式调用",
      "管道-过滤器"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 31,
      "belong_page": 1,
      "question_id": 373698,
      "question_title": "某公司欲开发一个漫步者机器人，用来完成火星探测任务。从地球发布的任务需要经过几分钟之后才能到达。机器人接受任务后，需要根据自身状态和外界环境进行动态调整， 最终自动完成任务并返回结果。针对这些需求，该机器人采用（56）架构风格最为合适。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373698,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "解释器",
        "主程序-子程序",
        "隐式调用",
        "管道-过滤器"
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 373702,
    "question_title": "以下关于软件架构风格与系统性能关系的叙述中，正确的是 （60） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "对于采用层次化架构风格的系统， 划分的层次越多，系统的性能越好",
      "对于采用隐式调用架构风格的系统可能通过处理函数的并发调用提高系统处 理性能",
      "采用面向对象架构风格的系统通过发送消息进行功能调用",
      "采用解释器架构风格的系统性能一定很差"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 32,
      "belong_page": 1,
      "question_id": 373702,
      "question_title": "以下关于软件架构风格与系统性能关系的叙述中，正确的是 （60） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373702,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "对于采用层次化架构风格的系统， 划分的层次越多，系统的性能越好",
        "对于采用隐式调用架构风格的系统可能通过处理函数的并发调用提高系统处 理性能",
        "采用面向对象架构风格的系统通过发送消息进行功能调用",
        "采用解释器架构风格的系统性能一定很差"
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 507303,
    "question_title": "<p>关于架构风格描述，正确的选项是（ ）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 批处理是并行的 ",
      " 过滤器不可以是并行的 ",
      " 黑板和管道-过滤器都是架构风格的子类型 ",
      " 在架构风格中，批处理风格本身主要强调的是顺序执行 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 33,
      "belong_page": 1,
      "question_id": 507303,
      "question_title": "<p>关于架构风格描述，正确的选项是（ ）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507303,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 批处理是并行的 ",
        " 过滤器不可以是并行的 ",
        " 黑板和管道-过滤器都是架构风格的子类型 ",
        " 在架构风格中，批处理风格本身主要强调的是顺序执行 "
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 507311,
    "question_title": "进程通信风格的连接件是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "消息传递",
      "消息队列",
      "消息中间件",
      "独立的进程"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 34,
      "belong_page": 1,
      "question_id": 507311,
      "question_title": "进程通信风格的连接件是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507311,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "消息传递",
        "消息队列",
        "消息中间件",
        "独立的进程"
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 507313,
    "question_title": "独立构件事件驱动架构，是消息发送给(&nbsp; )模块。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "独立、耦合",
      "独立、非耦合",
      "非独立、耦合",
      "非独立、非耦合"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 35,
      "belong_page": 1,
      "question_id": 507313,
      "question_title": "独立构件事件驱动架构，是消息发送给(&nbsp; )模块。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507313,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "独立、耦合",
        "独立、非耦合",
        "非独立、耦合",
        "非独立、非耦合"
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 507349,
    "question_title": "在仓库系统体系结构风格中，（ ）用于说明当前数据的状态。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "黑板",
      "中央数据结构",
      "知识源",
      "独立构件"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 36,
      "belong_page": 1,
      "question_id": 507349,
      "question_title": "在仓库系统体系结构风格中，（ ）用于说明当前数据的状态。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507349,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "黑板",
        "中央数据结构",
        "知识源",
        "独立构件"
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 523290,
    "question_title": "黑板架构风格中，用于进行数据处理和计算的构件是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "中央数据结构&nbsp;",
      "知识源",
      "黑板",
      "控制器"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 37,
      "belong_page": 1,
      "question_id": 523290,
      "question_title": "黑板架构风格中，用于进行数据处理和计算的构件是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523290,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "中央数据结构&nbsp;",
        "知识源",
        "黑板",
        "控制器"
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 523298,
    "question_title": "下面关于三层C/S架构的特点描述不正确的是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "合理地划分三层的功能，使整个系统的逻辑结构更为清晰，能提高系统的可维护性和可扩展性",
      " B/S架构是一种特殊的两层C/S架构 ",
      "与两层C/S架构相比，在三层C/S架构中，增加了一个应用服务器",
      "三层C/S架构将应用系统分成表示层、功能层和数据层三个部分"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 38,
      "belong_page": 1,
      "question_id": 523298,
      "question_title": "下面关于三层C/S架构的特点描述不正确的是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523298,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "合理地划分三层的功能，使整个系统的逻辑结构更为清晰，能提高系统的可维护性和可扩展性",
        " B/S架构是一种特殊的两层C/S架构 ",
        "与两层C/S架构相比，在三层C/S架构中，增加了一个应用服务器",
        "三层C/S架构将应用系统分成表示层、功能层和数据层三个部分"
      ]
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 43817,
    "question_title": "<p><br/></p><p><br/></p><p>试题二&nbsp;&nbsp;论软件系统架构风格</p><p>系统架构风格(System Architecture Style)是描述某一特定应用领域中系统组织方式的惯用模式。架构风格定义了一个词汇表和一组约束，词汇表中包含一些构件和连接件类型，而这组约束指出系统是如何将这些构件和连接件组合起来的。软件系统架构风格反映了领域中众多软件系统所共有的结构和语义特性，并指导如何将各个模块和子系统有效地组织成一个完整的系统。软件系统架构风格的共有部分可以使得不同系统共享同一个实现代码，系统能够按照常用的、规范化的方式来组织，便于不同设计者很容易地理解系统架构。</p><p>&nbsp;&nbsp; &nbsp;(请围绕“论软件系统架构风格”论题，依次从以下三个方面进行论述。)</p><p>&nbsp;&nbsp; &nbsp;1．概要叙述你参与分析和开发的软件系统开发项目以及你所担任的主要工作。</p><p>&nbsp;&nbsp; &nbsp;2．分析软件系统开发中常用的软件系统架构风格有哪些?详细阐述每种风格的具体含义。</p><p>&nbsp;&nbsp; &nbsp;3．详细说明你所参与的软件系统开发项目中，采用了哪种软件系统架构风格，具体实施效果如何。</p><p><br/></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>见解析</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 39,
      "belong_page": 1,
      "question_id": 43817,
      "question_title": "<p><br/></p><p><br/></p><p>试题二&nbsp;&nbsp;论软件系统架构风格</p><p>系统架构风格(System Architecture Style)是描述某一特定应用领域中系统组织方式的惯用模式。架构风格定义了一个词汇表和一组约束，词汇表中包含一些构件和连接件类型，而这组约束指出系统是如何将这些构件和连接件组合起来的。软件系统架构风格反映了领域中众多软件系统所共有的结构和语义特性，并指导如何将各个模块和子系统有效地组织成一个完整的系统。软件系统架构风格的共有部分可以使得不同系统共享同一个实现代码，系统能够按照常用的、规范化的方式来组织，便于不同设计者很容易地理解系统架构。</p><p>&nbsp;&nbsp; &nbsp;(请围绕“论软件系统架构风格”论题，依次从以下三个方面进行论述。)</p><p>&nbsp;&nbsp; &nbsp;1．概要叙述你参与分析和开发的软件系统开发项目以及你所担任的主要工作。</p><p>&nbsp;&nbsp; &nbsp;2．分析软件系统开发中常用的软件系统架构风格有哪些?详细阐述每种风格的具体含义。</p><p>&nbsp;&nbsp; &nbsp;3．详细说明你所参与的软件系统开发项目中，采用了哪种软件系统架构风格，具体实施效果如何。</p><p><br/></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 43817,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>见解析</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 45942,
    "question_title": "<p><br/></p><p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件架构设计的叙述，在答题纸上回答问题1至问题3</p><p style=\"margin-top:5px;text-indent:28px;text-align:left\">【说明】</p><p>某软件公司为某品牌手机厂商开发一套手机应用程序集成开发环境，以提高开发手机应用程序的质量和效率。在项目之初，公司的系统分析师对该集成开发环境的需求进行了调研和分析，具体描述如下：</p><p>a．需要同时支持该厂商自行定义的应用编程语言的编辑、界面可视化设计、编译、调试等模块，这些模块产生的模型或数据格式差异较大，集成环境应提供数据集成能力。集成开发环境还要支持以适配方式集成公司现有的应用模拟器工具。</p><p>b．经过调研，手机应用开发人员更倾向于使用Windows系统，因此集成开发环境的界面需要与Windows平台上的主流开发工具的界面风格保持一致口</p><p>c．支持相关开发数据在云端存储，需要保证在云端存储数据的机密性和完整性。</p><p>d．支持用户通过配置界面依据自己的喜好修改界面风格，包括颜色、布局、代码高亮方式等，配置完成后无需重启环境。</p><p>e．支持不同模型的自动转换。在初始需求中定义的机器性能条件下，对于一个包含50个对象的设计模型，将其转换为相应代码框架时所消耗时间不超过5秒。</p><p>f．能够连续运行的时间不小于240水时，意外退出后能够在1 0秒之内自动重启。</p><p>g．集成开发环境具有模块化结构，支持以模块为单位进行调试、测试与发布口</p><p>h．支持应用开发过程中的代码调试功能：开发人员可以设置断点，启动调试，编辑器可以自动卷屏并命中断点，能通过变量监视器查看当前变量取值。</p><p>在对需求进行分析后，公司的架构师小张查阅了相关的资料，认为该集成开发环境应该采用管道—过滤器(Pipe-Filter)的架构风格，公司的资深架构师王工在仔细分析后，认为应该采用数据仓储（Data Repository）的架构风格。公司经过评审，最终采用了王工的方案。</p><p>【问题1】（10分）</p><p>识别软件架构质量属性是进行架构设计的重要步骤。请分析题干中的需求描述，填写表1-1中(1)～(5)处的空白。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20180827/1535370410988822.png\" title=\"1535370410988822.png\" alt=\"图片.png\"/><br/><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20180827/1535370434614464.png\" title=\"1535370434614464.png\" alt=\"图片.png\"/><br/></p><p>【问题3】（8分）</p><p>在确定采用数据仓库架构风格后，王工给出了集成开发环境的架构图。请填写图1-1中(1)～(4)处的空白，完成该集成开发环境的架构图。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20180827/1535370458828294.png\" title=\"1535370458828294.png\" alt=\"图片.png\"/><br/><br/></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>参考答案：</p><p>（1）f （2）性能 （3）d （4）g （5）b</p><p>参考答案：</p><p>（1）通过数据仓储间接交互的星型结构</p><p>（2）流式数据</p><p>（3）数据驱动</p><p>（4）与数据仓储进行模型适配</p><p>参考答案：</p><p>（1）语法结构树<br/>（2）编辑器<br/>（3）适配器<br/>（4）模拟器</p><p><br/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 40,
      "belong_page": 1,
      "question_id": 45942,
      "question_title": "<p><br/></p><p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件架构设计的叙述，在答题纸上回答问题1至问题3</p><p style=\"margin-top:5px;text-indent:28px;text-align:left\">【说明】</p><p>某软件公司为某品牌手机厂商开发一套手机应用程序集成开发环境，以提高开发手机应用程序的质量和效率。在项目之初，公司的系统分析师对该集成开发环境的需求进行了调研和分析，具体描述如下：</p><p>a．需要同时支持该厂商自行定义的应用编程语言的编辑、界面可视化设计、编译、调试等模块，这些模块产生的模型或数据格式差异较大，集成环境应提供数据集成能力。集成开发环境还要支持以适配方式集成公司现有的应用模拟器工具。</p><p>b．经过调研，手机应用开发人员更倾向于使用Windows系统，因此集成开发环境的界面需要与Windows平台上的主流开发工具的界面风格保持一致口</p><p>c．支持相关开发数据在云端存储，需要保证在云端存储数据的机密性和完整性。</p><p>d．支持用户通过配置界面依据自己的喜好修改界面风格，包括颜色、布局、代码高亮方式等，配置完成后无需重启环境。</p><p>e．支持不同模型的自动转换。在初始需求中定义的机器性能条件下，对于一个包含50个对象的设计模型，将其转换为相应代码框架时所消耗时间不超过5秒。</p><p>f．能够连续运行的时间不小于240水时，意外退出后能够在1 0秒之内自动重启。</p><p>g．集成开发环境具有模块化结构，支持以模块为单位进行调试、测试与发布口</p><p>h．支持应用开发过程中的代码调试功能：开发人员可以设置断点，启动调试，编辑器可以自动卷屏并命中断点，能通过变量监视器查看当前变量取值。</p><p>在对需求进行分析后，公司的架构师小张查阅了相关的资料，认为该集成开发环境应该采用管道—过滤器(Pipe-Filter)的架构风格，公司的资深架构师王工在仔细分析后，认为应该采用数据仓储（Data Repository）的架构风格。公司经过评审，最终采用了王工的方案。</p><p>【问题1】（10分）</p><p>识别软件架构质量属性是进行架构设计的重要步骤。请分析题干中的需求描述，填写表1-1中(1)～(5)处的空白。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20180827/1535370410988822.png\" title=\"1535370410988822.png\" alt=\"图片.png\"/><br/><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20180827/1535370434614464.png\" title=\"1535370434614464.png\" alt=\"图片.png\"/><br/></p><p>【问题3】（8分）</p><p>在确定采用数据仓库架构风格后，王工给出了集成开发环境的架构图。请填写图1-1中(1)～(4)处的空白，完成该集成开发环境的架构图。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20180827/1535370458828294.png\" title=\"1535370458828294.png\" alt=\"图片.png\"/><br/><br/></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 45942,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>参考答案：</p><p>（1）f （2）性能 （3）d （4）g （5）b</p><p>参考答案：</p><p>（1）通过数据仓储间接交互的星型结构</p><p>（2）流式数据</p><p>（3）数据驱动</p><p>（4）与数据仓储进行模型适配</p><p>参考答案：</p><p>（1）语法结构树<br/>（2）编辑器<br/>（3）适配器<br/>（4）模拟器</p><p><br/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 54272,
    "question_title": "<p>阅读以下软件系统架构选择的问题，在答题纸上回答问题1至问题3。<br/>某公司欲开发一个车辆定速巡航控制系统，以确保车辆在不断变化的地形中以固定的速度行驶。图4-1给出了该系统的简化示意图。表4-1描述了各种系统输入的含义。<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181012/1539331310450770.jpg\" title=\"1539331310450770.jpg\" alt=\"1.jpg\"/><br/>表4-1 定速巡航控制系统输入说明<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181012/1539331315903747.jpg\" title=\"1539331315903747.jpg\" alt=\"2.jpg\"/><br/>公司的领域专家对需求进行深入分析后，将系统需求认定为：任何时刻，只要定速巡航控制系统处于工作状态，就要有确定的期望速度，并通过调整引擎油门的设定值来维持期望速度。<br/>在对车辆定速巡航控制系统的架构进行设计时，公司的架构师王工提出采用面向对象的架构风格，而李工则主张采用控制环路的架构风格。在架构评估会议上，专家对这两种方案进行综合评价，最终采用了面向对象和控制环路相结合的混合架构风格。<br/>【问题1】（5分）<br/>在实际的软件项目开发中，采用成熟的架构风格是项目成功的保证。请用200字以内的文字说明：什么是软件架构风格；面向对象和控制环路两种架构风格各自的特点。<br/>【问题2】（12分）<br/>用户需求没有明确给出该系统如何根据输入集合计算输出。请用300字以内的文字针对该系统的增减速功能，分别给出两种架构风格中的主要构件，并详细描述计算过程。<br/>【问题3】（8分）<br/>实际的软件系统架构通常是多种架构风格的混合，不同的架构风格都有其适合的应用场景。以该系统为例，针对面向对象架构风格和控制环路架构风格，各给出两个适合的应用场景，并简要说明理由。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题1】<br/>软件架构风格是描述某一类特定应用领域中软件系统组织方式和惯用方式。<br/>面向对象架构风格的特征是将数据表示和基本操作封装在对象中。这种模式的构件是对象，对象维护自身表示的完整性，对象之间通过消息机制进行通信，对象交互时需要知道彼此的标识，通过对象之间的协作完成计算过程。<br/>控制环路架构风格是将过程输出的指定属性维护在一个特定的参考值（设定点）。控制环路风格包括过程变量、被控变量、输入变量、操纵变量和设定点等构件，通过收集实际和理想的过程状态信息，并能调整过程变量使得实际状态趋于理想状态。<br/>【问题2】<br/>对于系统的增减速功能，采用面向对象风格的巡航控制系统首先会定义司机、油门、时钟、速度计和车轮等构件。<br/>整个计算的主要过程是：<br/>（1）司机进行增／减速操作设置期望速度，该期望速度以消息的形式传递给速度计；<br/>（2）速度计通过向车轮和时钟发送消息获取车轮转速和时钟值，得到当前速度；<br/>（3）速度计计算当前速度和期望速度的速度差值；<br/>（4）该差值以消息的形式发送给油门，油门通过速度差值调节自身状态；<br/>（5）整个过程在时钟的控制下定期向速度计发送消息，重复执行（2）～（4）。<br/>控制环路的架构风格以控制器为核心，期望速度、车轮脉冲、时钟和油门等作为构件。<br/>具体的计算过程是：<br/>（1）司机进行增／减速操作设置期望速度值；<br/>（2）将设定值置为期望速度值；<br/>（3）控制器采集车轮脉冲和时钟值，计算出当前速度；<br/>（4）比较期望速度和当前速度，计算速度差值，控制油门动作；<br/>（5）反复执行（3）和（4）。<br/>【问题3】<br/>适合面向对象架构风格的应用场景：<br/>（1）用户刹车，立即退出巡航控制系统。理由：这是一个典型的事件驱动的场景，适合于面向对象风格。<br/>（2）系统对突发事件的处理，如某些部件失灵等。理由：当发生突发事件时，系统会同时产生数据和事件，这种清况用对象建模较为恰当。<br/>适合面向控制环路架构风格的应用场景：<br/>（1）在达到期望速度后，系统维持恒定速度行驶。理由：这是一个典型的闭环控制的情景，系统需要在外界情况不断发生变化的情况下进行调整，使得系统状态尽可能接近期望状态。<br/>（2）用户改变期望速度后，系统不断进行调整，直至到达恒定速度。理由：这是一个闭环控制情景，当用户设定期望速度值后，系统需要在不断获取当前速度和外界条件的情况下对系统状态持续调整，使得系统状态尽可能接近这个新的期望状态。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 41,
      "belong_page": 1,
      "question_id": 54272,
      "question_title": "<p>阅读以下软件系统架构选择的问题，在答题纸上回答问题1至问题3。<br/>某公司欲开发一个车辆定速巡航控制系统，以确保车辆在不断变化的地形中以固定的速度行驶。图4-1给出了该系统的简化示意图。表4-1描述了各种系统输入的含义。<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181012/1539331310450770.jpg\" title=\"1539331310450770.jpg\" alt=\"1.jpg\"/><br/>表4-1 定速巡航控制系统输入说明<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181012/1539331315903747.jpg\" title=\"1539331315903747.jpg\" alt=\"2.jpg\"/><br/>公司的领域专家对需求进行深入分析后，将系统需求认定为：任何时刻，只要定速巡航控制系统处于工作状态，就要有确定的期望速度，并通过调整引擎油门的设定值来维持期望速度。<br/>在对车辆定速巡航控制系统的架构进行设计时，公司的架构师王工提出采用面向对象的架构风格，而李工则主张采用控制环路的架构风格。在架构评估会议上，专家对这两种方案进行综合评价，最终采用了面向对象和控制环路相结合的混合架构风格。<br/>【问题1】（5分）<br/>在实际的软件项目开发中，采用成熟的架构风格是项目成功的保证。请用200字以内的文字说明：什么是软件架构风格；面向对象和控制环路两种架构风格各自的特点。<br/>【问题2】（12分）<br/>用户需求没有明确给出该系统如何根据输入集合计算输出。请用300字以内的文字针对该系统的增减速功能，分别给出两种架构风格中的主要构件，并详细描述计算过程。<br/>【问题3】（8分）<br/>实际的软件系统架构通常是多种架构风格的混合，不同的架构风格都有其适合的应用场景。以该系统为例，针对面向对象架构风格和控制环路架构风格，各给出两个适合的应用场景，并简要说明理由。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 54272,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题1】<br/>软件架构风格是描述某一类特定应用领域中软件系统组织方式和惯用方式。<br/>面向对象架构风格的特征是将数据表示和基本操作封装在对象中。这种模式的构件是对象，对象维护自身表示的完整性，对象之间通过消息机制进行通信，对象交互时需要知道彼此的标识，通过对象之间的协作完成计算过程。<br/>控制环路架构风格是将过程输出的指定属性维护在一个特定的参考值（设定点）。控制环路风格包括过程变量、被控变量、输入变量、操纵变量和设定点等构件，通过收集实际和理想的过程状态信息，并能调整过程变量使得实际状态趋于理想状态。<br/>【问题2】<br/>对于系统的增减速功能，采用面向对象风格的巡航控制系统首先会定义司机、油门、时钟、速度计和车轮等构件。<br/>整个计算的主要过程是：<br/>（1）司机进行增／减速操作设置期望速度，该期望速度以消息的形式传递给速度计；<br/>（2）速度计通过向车轮和时钟发送消息获取车轮转速和时钟值，得到当前速度；<br/>（3）速度计计算当前速度和期望速度的速度差值；<br/>（4）该差值以消息的形式发送给油门，油门通过速度差值调节自身状态；<br/>（5）整个过程在时钟的控制下定期向速度计发送消息，重复执行（2）～（4）。<br/>控制环路的架构风格以控制器为核心，期望速度、车轮脉冲、时钟和油门等作为构件。<br/>具体的计算过程是：<br/>（1）司机进行增／减速操作设置期望速度值；<br/>（2）将设定值置为期望速度值；<br/>（3）控制器采集车轮脉冲和时钟值，计算出当前速度；<br/>（4）比较期望速度和当前速度，计算速度差值，控制油门动作；<br/>（5）反复执行（3）和（4）。<br/>【问题3】<br/>适合面向对象架构风格的应用场景：<br/>（1）用户刹车，立即退出巡航控制系统。理由：这是一个典型的事件驱动的场景，适合于面向对象风格。<br/>（2）系统对突发事件的处理，如某些部件失灵等。理由：当发生突发事件时，系统会同时产生数据和事件，这种清况用对象建模较为恰当。<br/>适合面向控制环路架构风格的应用场景：<br/>（1）在达到期望速度后，系统维持恒定速度行驶。理由：这是一个典型的闭环控制的情景，系统需要在外界情况不断发生变化的情况下进行调整，使得系统状态尽可能接近期望状态。<br/>（2）用户改变期望速度后，系统不断进行调整，直至到达恒定速度。理由：这是一个闭环控制情景，当用户设定期望速度值后，系统需要在不断获取当前速度和外界条件的情况下对系统状态持续调整，使得系统状态尽可能接近这个新的期望状态。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 208620,
    "question_title": "<p>阅读以下关于软件架构风格的叙述，回答问题。</p><p>【说明】</p><p>某软件公司为其新推出的字处理软件设计了一种脚本语言，专门用于开发该字处理软件的附加功能插件。为了提高该语言的编程效率，公司组织软件工具开发部门为脚本语言研制一套集成开发环境。软件工具开发部门根据字处理软件的特点，对集成开发环境进行了需求分析，总结出以下3项核心需求：</p><p>&nbsp;1集成开发环境需要提供对脚本语言的编辑、语法检查、解释、执行和调试等功能的支持，并要实现各种功能的灵活组合、配置与替换。</p><p>2集成开发环境需要提供一组可视化的编程界面，用户通过对界面元素拖曳和代码填充的方式就可以完成功能插件核心业务流程的编写与组织。</p><p>3在代码调试功能方面，集成开发环境需要实现在脚本语言编辑界面中的代码自动定位功能。具体来说，在调试过程中，编辑界面需要响应调试断点命中事件，并自动跳转到当前断点处所对应的代码。</p><p>针对上述需求，软件工具开发部门对集成开发环境的架构进行分析与设计，王工认为该集成开发环境应该采用管道一过滤器的架构风格实现，李工则认为该集成开发环境应该采用以数据存储为中心的架构风格来实现。公司组织专家对王工和李工的方案进行了评审，最终采用了李工的方案。</p><p>【问题1】</p><p>请用200字以内的文字解释什么是软件架构风格，并从集成开发环境与用户的交互方式、集成开发环境的扩展性、集成开发环境的数据管理三个方面说明为什么最终采用了李工的设计方案。</p><p>【问题2】</p><p>在对软件系统架构进行设计时，要对架构需求进行分析，针对特定需求选择最为合适的架构风格，因此实际的软件系统通常会混合多种软件架构风格。请对核心需求进行分析，说明为了满足需求(2)和(3)，分别应采用何种架构风格，并概要说明采用相应架构风格后的架构设计过程。<span style=\"font-size: 16px;\"></span></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题1】答案：</p><p>软件架构风格是指描述特定软件系统组织方式的惯用模式。组织方式描述了系统的组成构件和这些构件的组织方式，惯用模式则反映众多系统共有的结构和语义。</p><p>从集成开发环境与用户的交互方式看，用户通常采用交互式的方式对脚本语言进行编辑、解释执行与调试。在这种情况下，采用以数据存储为中心的架构风格能够很好地支持交互式数据处理，而管道一过滤器架构风格则对用户的交互式数据处理支持有限。</p><p>从集成开发环境的扩展性来看，系统核心需求要求实现各种编辑、语法检查、解释执行等多种功能的灵活组织、配置与替换。在这种情况下，采用以数据存储为中心的架构风格，以数据格式解耦各种功能之间的依赖关系，并可以灵活定义功能之间的逻辑顺序。管道一过滤器架构风格同样以数据格式解耦数据处理过程之间的依赖关系，但其在数据处理逻辑关系的灵活定义方面较差。</p><p>从集成开发环境的数据管理来看，集成开发环境需要支持脚本语言、语法树(用于检查语法错误)、可视化模型、调试信息等多种数据类型，并需要支持数据格式的转换。以数据存储为中心的架构将数据存储在统一的中心存储器中，中心存储器能够表示多种数据格式，并能够为数据格式转换提供各种支持。管道一过滤器架构风格通常只能支持有限度的数据格式，并且在数据格式转换方面的灵活性较差。</p><p>【问题2】答案：</p><p>为了满足需求(2)，应该采用解释器架构风格。具体来说，需要：①为可视化编程元素及其拖拽关系定义某种语言，并描述其语法与语义；②编写解释器对该语言进行解释；③生成对应的脚本语言程序。</p><p>为了满足需求(3)，应该采用隐式调用架构风格。具体来说，首先需要定义“断点在调试过程中命中”这一事件，并实现当断点命中后的屏幕定位函数。集成开发环境维护一个事件注册表结构，将该事件与屏幕定位函数关联起来形成注册表中的一个记录项。在调试过程中，集成开发环境负责监听各种事件，当“断点在调试过程中命中”这一事件发生时，集成开发环境查找事件注册表，找到并调用屏幕定位函数，从而实现脚本语言编辑界面与调试代码的自动定位。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 42,
      "belong_page": 1,
      "question_id": 208620,
      "question_title": "<p>阅读以下关于软件架构风格的叙述，回答问题。</p><p>【说明】</p><p>某软件公司为其新推出的字处理软件设计了一种脚本语言，专门用于开发该字处理软件的附加功能插件。为了提高该语言的编程效率，公司组织软件工具开发部门为脚本语言研制一套集成开发环境。软件工具开发部门根据字处理软件的特点，对集成开发环境进行了需求分析，总结出以下3项核心需求：</p><p>&nbsp;1集成开发环境需要提供对脚本语言的编辑、语法检查、解释、执行和调试等功能的支持，并要实现各种功能的灵活组合、配置与替换。</p><p>2集成开发环境需要提供一组可视化的编程界面，用户通过对界面元素拖曳和代码填充的方式就可以完成功能插件核心业务流程的编写与组织。</p><p>3在代码调试功能方面，集成开发环境需要实现在脚本语言编辑界面中的代码自动定位功能。具体来说，在调试过程中，编辑界面需要响应调试断点命中事件，并自动跳转到当前断点处所对应的代码。</p><p>针对上述需求，软件工具开发部门对集成开发环境的架构进行分析与设计，王工认为该集成开发环境应该采用管道一过滤器的架构风格实现，李工则认为该集成开发环境应该采用以数据存储为中心的架构风格来实现。公司组织专家对王工和李工的方案进行了评审，最终采用了李工的方案。</p><p>【问题1】</p><p>请用200字以内的文字解释什么是软件架构风格，并从集成开发环境与用户的交互方式、集成开发环境的扩展性、集成开发环境的数据管理三个方面说明为什么最终采用了李工的设计方案。</p><p>【问题2】</p><p>在对软件系统架构进行设计时，要对架构需求进行分析，针对特定需求选择最为合适的架构风格，因此实际的软件系统通常会混合多种软件架构风格。请对核心需求进行分析，说明为了满足需求(2)和(3)，分别应采用何种架构风格，并概要说明采用相应架构风格后的架构设计过程。<span style=\"font-size: 16px;\"></span></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 208620,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题1】答案：</p><p>软件架构风格是指描述特定软件系统组织方式的惯用模式。组织方式描述了系统的组成构件和这些构件的组织方式，惯用模式则反映众多系统共有的结构和语义。</p><p>从集成开发环境与用户的交互方式看，用户通常采用交互式的方式对脚本语言进行编辑、解释执行与调试。在这种情况下，采用以数据存储为中心的架构风格能够很好地支持交互式数据处理，而管道一过滤器架构风格则对用户的交互式数据处理支持有限。</p><p>从集成开发环境的扩展性来看，系统核心需求要求实现各种编辑、语法检查、解释执行等多种功能的灵活组织、配置与替换。在这种情况下，采用以数据存储为中心的架构风格，以数据格式解耦各种功能之间的依赖关系，并可以灵活定义功能之间的逻辑顺序。管道一过滤器架构风格同样以数据格式解耦数据处理过程之间的依赖关系，但其在数据处理逻辑关系的灵活定义方面较差。</p><p>从集成开发环境的数据管理来看，集成开发环境需要支持脚本语言、语法树(用于检查语法错误)、可视化模型、调试信息等多种数据类型，并需要支持数据格式的转换。以数据存储为中心的架构将数据存储在统一的中心存储器中，中心存储器能够表示多种数据格式，并能够为数据格式转换提供各种支持。管道一过滤器架构风格通常只能支持有限度的数据格式，并且在数据格式转换方面的灵活性较差。</p><p>【问题2】答案：</p><p>为了满足需求(2)，应该采用解释器架构风格。具体来说，需要：①为可视化编程元素及其拖拽关系定义某种语言，并描述其语法与语义；②编写解释器对该语言进行解释；③生成对应的脚本语言程序。</p><p>为了满足需求(3)，应该采用隐式调用架构风格。具体来说，首先需要定义“断点在调试过程中命中”这一事件，并实现当断点命中后的屏幕定位函数。集成开发环境维护一个事件注册表结构，将该事件与屏幕定位函数关联起来形成注册表中的一个记录项。在调试过程中，集成开发环境负责监听各种事件，当“断点在调试过程中命中”这一事件发生时，集成开发环境查找事件注册表，找到并调用屏幕定位函数，从而实现脚本语言编辑界面与调试代码的自动定位。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 283675,
    "question_title": "<p>【问题1】（8分）请分析比较王工、李工两种方案的优点和不足，完成下表中的空白部分。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201001/1601562696968278.jpg\" title=\"1601562696968278.jpg\" alt=\"1.jpg\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "答案：&nbsp;【问题1】<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201001/1601562714611481.jpg\" title=\"1601562714611481.jpg\" alt=\"1.jpg\"/>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 43,
      "belong_page": 1,
      "question_id": 283675,
      "question_title": "<p>【问题1】（8分）请分析比较王工、李工两种方案的优点和不足，完成下表中的空白部分。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201001/1601562696968278.jpg\" title=\"1601562696968278.jpg\" alt=\"1.jpg\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 283674,
      "score_rule": "",
      "material_text": "<p>试题五（25分）<br/><br/></p><p>&nbsp; E-Mall是一家电子商务公司，其主要业务是在线购物，包括书籍、服装、家电和日用品等。随着公司业务规模不断增 大，公司决策层决定重新设计并实现其网上交易系统，公司负责系统开发的王工和李工分别给出了两种不同的设计方 案，如下图1和图2所示</p><img src=\"https://s2.51cto.com/images/20201001/1601562674691555.jpg\" title=\"1601562674691555.jpg\" alt=\"1.jpg\"/><br/><p>公司的架构师和开发者针对这两种设计方案，从服务器负载情况、业务逻辑的分离性、系统可靠性、实现简单性等方 面进行讨论与评估，综合考虑最终采用了李工给出的方案。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "答案：&nbsp;【问题1】<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201001/1601562714611481.jpg\" title=\"1601562714611481.jpg\" alt=\"1.jpg\"/>"
      ],
      "option": null
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 352337,
    "question_title": "<p>【问题2】（7分）</p><p>请在阅读题干需求描述的基础上，从交互方式、数据结构、控制结构和扩展方法 4 个方面对两种架构风格进行比较， 填写表 1-2 中（1）~（4）处的空白。</p><p>表 1-2 &nbsp;&nbsp;两种架构的比较</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663933281264136.png\" title=\"1663933281264136.png\" alt=\"image.png\"/><br/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "（1）星型 &nbsp;&nbsp;（2）数据流 &nbsp;&nbsp;（3）数据流驱动 &nbsp;&nbsp;（4）模型适配"
    ],
    "analysis": "",
    "raw_data": {
      "index": 44,
      "belong_page": 1,
      "question_id": 352337,
      "question_title": "<p>【问题2】（7分）</p><p>请在阅读题干需求描述的基础上，从交互方式、数据结构、控制结构和扩展方法 4 个方面对两种架构风格进行比较， 填写表 1-2 中（1）~（4）处的空白。</p><p>表 1-2 &nbsp;&nbsp;两种架构的比较</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663933281264136.png\" title=\"1663933281264136.png\" alt=\"image.png\"/><br/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 352335,
      "score_rule": "",
      "material_text": "<span style=\"text-indent: 32px;\">试题一</span><p>阅读以下关于软件架构设计的叙述， 在答题纸上回答问题 1~3。</p><p>【说明】</p><p>某软件公司为某品牌手机厂商开发一套手机应用程序集成开发环境，以提高开发手机应 用程序的质量和效率。在项目之初，公司的系统分析师对该集成开发环境的需求进行了调研和分析，具体描述如下。</p><p>a．需要支持和兼容该厂商的全系列硬件。</p><p>b．经过调研，手机应用开发人员更倾向于使用Android系统，因此集成开发环境的界面需要与 Android平台上的主流开发工具的界面风格保持一致。</p><p>c．支持相关开发数据在云端存储，需要保证在云端存储数据的机密性和完整性。</p><p>d．支持用户备份和加载配置。</p><p>e．支持不同模型的自动转换，在初始需求中定义的机器性能条件下， 对于一个包含 50 个对象的设计模型，将其转换为相应代码框架时所消耗时间不超过 5 s。</p><p>f．能够连续运行的时间不小于 360 小时，意外退出后能够在 10 s 之内自动重启。</p><p>g．集成开发环境具有丰富的插件库。</p><p>h．支持应用开发过程中的代码调试功能，开发人员可以设置断点并启动调试。编辑器可以自动卷屏并命中断点， 能通过变量监视器查看当前变量取值。</p><p>在对需求进行分析后，公司的架构师小张查阅了相关的资料，认为该集成开发环境应该 采用管道-过滤器（Pipe-Filter）的架构风格。公司的资深架构师王工在仔细分析后，认为应该采用数据仓储（Data Repository）的架构风格。公司经过评审，最终采用了王工的方案。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "（1）星型 &nbsp;&nbsp;（2）数据流 &nbsp;&nbsp;（3）数据流驱动 &nbsp;&nbsp;（4）模型适配"
      ],
      "option": null
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 352338,
    "question_title": "<p>【问题3】（8分）</p><p>在确定采用数据仓库架构风格后， 王工给出了集成开发环境架构图。请填写图1-1中（1）~（4）处的空白，完成该集成开发环境的架构图。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663933316605041.png\" title=\"1663933316605041.png\" alt=\"image.png\"/><br/><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;图&nbsp;1-1 &nbsp;&nbsp;集成开发环境架构图</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）语法结构树 &nbsp;&nbsp;（2）编辑器 &nbsp;&nbsp;（3）适配器 &nbsp;&nbsp;（4）应用模拟器工具</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 45,
      "belong_page": 1,
      "question_id": 352338,
      "question_title": "<p>【问题3】（8分）</p><p>在确定采用数据仓库架构风格后， 王工给出了集成开发环境架构图。请填写图1-1中（1）~（4）处的空白，完成该集成开发环境的架构图。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663933316605041.png\" title=\"1663933316605041.png\" alt=\"image.png\"/><br/><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;图&nbsp;1-1 &nbsp;&nbsp;集成开发环境架构图</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 352335,
      "score_rule": "",
      "material_text": "<span style=\"text-indent: 32px;\">试题一</span><p>阅读以下关于软件架构设计的叙述， 在答题纸上回答问题 1~3。</p><p>【说明】</p><p>某软件公司为某品牌手机厂商开发一套手机应用程序集成开发环境，以提高开发手机应 用程序的质量和效率。在项目之初，公司的系统分析师对该集成开发环境的需求进行了调研和分析，具体描述如下。</p><p>a．需要支持和兼容该厂商的全系列硬件。</p><p>b．经过调研，手机应用开发人员更倾向于使用Android系统，因此集成开发环境的界面需要与 Android平台上的主流开发工具的界面风格保持一致。</p><p>c．支持相关开发数据在云端存储，需要保证在云端存储数据的机密性和完整性。</p><p>d．支持用户备份和加载配置。</p><p>e．支持不同模型的自动转换，在初始需求中定义的机器性能条件下， 对于一个包含 50 个对象的设计模型，将其转换为相应代码框架时所消耗时间不超过 5 s。</p><p>f．能够连续运行的时间不小于 360 小时，意外退出后能够在 10 s 之内自动重启。</p><p>g．集成开发环境具有丰富的插件库。</p><p>h．支持应用开发过程中的代码调试功能，开发人员可以设置断点并启动调试。编辑器可以自动卷屏并命中断点， 能通过变量监视器查看当前变量取值。</p><p>在对需求进行分析后，公司的架构师小张查阅了相关的资料，认为该集成开发环境应该 采用管道-过滤器（Pipe-Filter）的架构风格。公司的资深架构师王工在仔细分析后，认为应该采用数据仓储（Data Repository）的架构风格。公司经过评审，最终采用了王工的方案。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）语法结构树 &nbsp;&nbsp;（2）编辑器 &nbsp;&nbsp;（3）适配器 &nbsp;&nbsp;（4）应用模拟器工具</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9390",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构风格",
    "question_id": 371563,
    "question_title": "<p>【问题2】（7分）</p><p>请在阅读题干需求描述的基础上，从交互方式、数据结构、控制结构和扩展方法 4 个方面对两种架构风格进行比较， 填写表 1-2 中（1）~（4）处的空白。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230916/1694870713841615.png\" title=\"1694870713841615.png\" alt=\"image.png\" width=\"641\" height=\"254\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）星型 &nbsp;&nbsp;（2）数据流 &nbsp;&nbsp;（3）数据流驱动 &nbsp;&nbsp;（4）模型适配</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 46,
      "belong_page": 1,
      "question_id": 371563,
      "question_title": "<p>【问题2】（7分）</p><p>请在阅读题干需求描述的基础上，从交互方式、数据结构、控制结构和扩展方法 4 个方面对两种架构风格进行比较， 填写表 1-2 中（1）~（4）处的空白。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230916/1694870713841615.png\" title=\"1694870713841615.png\" alt=\"image.png\" width=\"641\" height=\"254\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 371561,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件架构设计的叙述， 在答题纸上回答问题 1~3。</p><p>【说明】</p><p>某软件公司为某品牌手机厂商开发一套手机应用程序集成开发环境，以提高开发手机应 用程序的质量和效率。在项目之初，公司的系统分析师对该集成开发环境的需求进行了调研和分析，具体描述如下。</p><p>a．需要支持和兼容该厂商的全系列硬件。</p><p>b．经过调研，手机应用开发人员更倾向于使用Android系统，因此集成开发环境的界面需要与 Android平台上的主流开发工具的界面风格保持一致。</p><p>c．支持相关开发数据在云端存储，需要保证在云端存储数据的机密性和完整性。</p><p>d．支持用户备份和加载配置。</p><p>e．支持不同模型的自动转换，在初始需求中定义的机器性能条件下， 对于一个包含 50 个对象的设计模型，将其转换为相应代码框架时所消耗时间不超过 5 s。</p><p>f．能够连续运行的时间不小于 360 小时，意外退出后能够在 10 s 之内自动重启。</p><p>g．集成开发环境具有丰富的插件库。</p><p>h．支持应用开发过程中的代码调试功能，开发人员可以设置断点并启动调试。编辑器可以自动卷屏并命中断点， 能通过变量监视器查看当前变量取值。</p><p>在对需求进行分析后，公司的架构师小张查阅了相关的资料，认为该集成开发环境应该 采用管道-过滤器（Pipe-Filter）的架构风格。公司的资深架构师王工在仔细分析后，认为应该采用数据仓储（Data Repository）的架构风格。公司经过评审，最终采用了王工的方案。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）星型 &nbsp;&nbsp;（2）数据流 &nbsp;&nbsp;（3）数据流驱动 &nbsp;&nbsp;（4）模型适配</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176860.7775168
  },
  {
    "section_id": "9391",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构复用",
    "question_id": 354943,
    "question_title": "<p>在软件架构复用中，(1)是指开发过程中，只要发现有可复用的资产，就对其进行复用。(2)是指在开发之前，就要进行规划，以决定哪些需要复用。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "发现复用",
      "机会复用",
      "资产复用",
      "过程复用&nbsp;"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 354943,
      "question_title": "<p>在软件架构复用中，(1)是指开发过程中，只要发现有可复用的资产，就对其进行复用。(2)是指在开发之前，就要进行规划，以决定哪些需要复用。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354942,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "发现复用",
        "机会复用",
        "资产复用",
        "过程复用&nbsp;"
      ]
    },
    "crawl_time": 1753176861.9782774
  },
  {
    "section_id": "9391",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构复用",
    "question_id": 354944,
    "question_title": "<p>在软件架构复用中，(1)是指开发过程中，只要发现有可复用的资产，就对其进行复用。(2)是指在开发之前，就要进行规划，以决定哪些需要复用。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "预期复用",
      "计划复用",
      "资产复用",
      "系统复用"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 354944,
      "question_title": "<p>在软件架构复用中，(1)是指开发过程中，只要发现有可复用的资产，就对其进行复用。(2)是指在开发之前，就要进行规划，以决定哪些需要复用。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354942,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "预期复用",
        "计划复用",
        "资产复用",
        "系统复用"
      ]
    },
    "crawl_time": 1753176861.9782774
  },
  {
    "section_id": "9391",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构复用",
    "question_id": 354948,
    "question_title": "<p>DSSA（Domain Specific Software Architecture）就是在一个特定应用领域中为一组应用提供组织结构参考的标准软件体系结构，实施DSSA的过程中包含了一临基本的活动。其中，领域模型是（53）阶段的主要目标。</p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 领域设计 ",
      " 领域实现 ",
      " 领域分析 ",
      " 领域工程 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 354948,
      "question_title": "<p>DSSA（Domain Specific Software Architecture）就是在一个特定应用领域中为一组应用提供组织结构参考的标准软件体系结构，实施DSSA的过程中包含了一临基本的活动。其中，领域模型是（53）阶段的主要目标。</p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354948,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 领域设计 ",
        " 领域实现 ",
        " 领域分析 ",
        " 领域工程 "
      ]
    },
    "crawl_time": 1753176861.9782774
  },
  {
    "section_id": "9391",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构复用",
    "question_id": 373699,
    "question_title": "软件的横向重用是指重用不同应用领域中的软件元素。 （57）是一种横向重用机制。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "产品文档",
      "行业词汇表",
      "通用算法库",
      "业务流程"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 373699,
      "question_title": "软件的横向重用是指重用不同应用领域中的软件元素。 （57）是一种横向重用机制。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373699,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "产品文档",
        "行业词汇表",
        "通用算法库",
        "业务流程"
      ]
    },
    "crawl_time": 1753176861.9782774
  },
  {
    "section_id": "9391",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构复用",
    "question_id": 507328,
    "question_title": "不同应用领域中的软件元素，例如数据结构、分类算法和人机界面等属于（ ）重用。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "横向重用",
      "纵向重用",
      "交叉重用",
      "可控重用"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 507328,
      "question_title": "不同应用领域中的软件元素，例如数据结构、分类算法和人机界面等属于（ ）重用。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507328,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "横向重用",
        "纵向重用",
        "交叉重用",
        "可控重用"
      ]
    },
    "crawl_time": 1753176861.9782774
  },
  {
    "section_id": "9391",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构复用",
    "question_id": 507347,
    "question_title": "下面符合可复用资产的顺序的是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "分析可复用资产、使用可复用资产、构造/获取可复用资产、 管理可复用资产",
      "分析可复用资产、构造/获取可复用资产、使用可复用资产 、管理可复用资产",
      "分析可复用资产、管理可复用资产、构造/获取可复用资产、使用可复用资产",
      "分析可复用资产、构造/获取可复用资产、管理可复用资产、使用可复用资产"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 507347,
      "question_title": "下面符合可复用资产的顺序的是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507347,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "分析可复用资产、使用可复用资产、构造/获取可复用资产、 管理可复用资产",
        "分析可复用资产、构造/获取可复用资产、使用可复用资产 、管理可复用资产",
        "分析可复用资产、管理可复用资产、构造/获取可复用资产、使用可复用资产",
        "分析可复用资产、构造/获取可复用资产、管理可复用资产、使用可复用资产"
      ]
    },
    "crawl_time": 1753176861.9782774
  },
  {
    "section_id": "9391",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构复用",
    "question_id": 283671,
    "question_title": "<p>【问题2】（10分）结合你的系统架构设计经验，请用300字以内的文字简要说明该项目中的5个功能模块在软件复用方面的基本架构思路。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题2】</p><p>公共信息管理模块和系统管理维护模块应该在具体的配置和使用上通过配置文件(或数据文件)加载建设方的相关信息，从而使这些公共功能模块易被其他电子政务项目所复用。</p><p>&nbsp;&nbsp; &nbsp;资质管理模块、企业信息管理模块和系统扩展接口模块等与建设方密切相关的功能模块，虽然在实现上无法完全和建设方信息分开，但要尽力降低和建设方的耦合度，使得今后复用时的代价最小化。</p><p>&nbsp;&nbsp; &nbsp;在具体实现上，应该充分采用在市场上广泛使用的技术与产品(诸如Web服务器、中间件(J2EE应用服务器等)、电子邮件系统、数据库系统、信息门户和系统安全解决方案等)，同时采用CMM模型(或CASE工具等)来辅助、指导这些功能模块的软件开始工作。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 283671,
      "question_title": "<p>【问题2】（10分）结合你的系统架构设计经验，请用300字以内的文字简要说明该项目中的5个功能模块在软件复用方面的基本架构思路。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 283669,
      "score_rule": "",
      "material_text": "<p>试题四（25分）</p><p>阅读以下关于软件复用技术应用的叙述，根据要求回答下面问题。</p><p>[说明]</p><p>&nbsp;&nbsp; &nbsp;随着政府职能的转型，XX行业职能主管部门(国家相关部委，各省、市的相关厅、局、委等)机构日趋精简，但随着国家现代化的发展，业务量反而越来越大。为保证本行业管理工作的质量和效率，实现企业资质审批管理信息化、网络化和电子化，提高工作效率和质量，规范业务处理流程，提高管理工作的广度、深度、力度和速度，更有效地为相关企业和业主提供服务，该行业主管部门委托FT软件开发公司开发一个XX行业管理信息系统。该系统由公共信息管理模块、系统管理维护模块、资质管理模块、企业信息管理模块和系统扩展接口模块等5大功能模块组成。</p><p>&nbsp;&nbsp; &nbsp;在该项目架构分析会上，FT公司高层领导提出，为了使那些公共功能模块比较容易地被其他电子政务项目所复用，应充分利用领域分析和软件复用的知识，采用基于可复用的软件开发方式，在这些公共模块的实现中保持高度的独立性，即在实现的具体细节上与XX行业国家部委(或者其他的政府机构)无关。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题2】</p><p>公共信息管理模块和系统管理维护模块应该在具体的配置和使用上通过配置文件(或数据文件)加载建设方的相关信息，从而使这些公共功能模块易被其他电子政务项目所复用。</p><p>&nbsp;&nbsp; &nbsp;资质管理模块、企业信息管理模块和系统扩展接口模块等与建设方密切相关的功能模块，虽然在实现上无法完全和建设方信息分开，但要尽力降低和建设方的耦合度，使得今后复用时的代价最小化。</p><p>&nbsp;&nbsp; &nbsp;在具体实现上，应该充分采用在市场上广泛使用的技术与产品(诸如Web服务器、中间件(J2EE应用服务器等)、电子邮件系统、数据库系统、信息门户和系统安全解决方案等)，同时采用CMM模型(或CASE工具等)来辅助、指导这些功能模块的软件开始工作。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176861.9782774
  },
  {
    "section_id": "9391",
    "section_name": "系统架构设计基础知识（第二版） - 软件架构复用",
    "question_id": 283672,
    "question_title": "<p>【问题3】（6分）软件复用包括两个相关过程：可复用软件(构件)的开发；基于可复用软件(构件)的应用系统构造(集成和组装)。软件构件技术是软件复用的核心技术。结合你的系统架构设计经验，请用200字以内的文字简要说明可复用构件应具备哪些属性，并给予简要的解释。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题3】</p><p>&nbsp;&nbsp;包括但不限于：</p><p>&nbsp;&nbsp;可用性：构件必须易于理解和使用。</p><p>&nbsp;&nbsp; &nbsp;质量：构件及其变形必须能正确工作。</p><p>&nbsp;&nbsp; &nbsp;适应性：构件应该易于通过参数化等方式在不同语境中进行配置。</p><p>&nbsp;&nbsp; &nbsp;可移植性：构件应能在不同的硬件运行平台和软件环境中工作。</p><p>&nbsp;&nbsp; &nbsp;可变性(Variability)：构件应能针对不同的应用系统，只需对其可变部分进行适当的调节等</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 283672,
      "question_title": "<p>【问题3】（6分）软件复用包括两个相关过程：可复用软件(构件)的开发；基于可复用软件(构件)的应用系统构造(集成和组装)。软件构件技术是软件复用的核心技术。结合你的系统架构设计经验，请用200字以内的文字简要说明可复用构件应具备哪些属性，并给予简要的解释。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 283669,
      "score_rule": "",
      "material_text": "<p>试题四（25分）</p><p>阅读以下关于软件复用技术应用的叙述，根据要求回答下面问题。</p><p>[说明]</p><p>&nbsp;&nbsp; &nbsp;随着政府职能的转型，XX行业职能主管部门(国家相关部委，各省、市的相关厅、局、委等)机构日趋精简，但随着国家现代化的发展，业务量反而越来越大。为保证本行业管理工作的质量和效率，实现企业资质审批管理信息化、网络化和电子化，提高工作效率和质量，规范业务处理流程，提高管理工作的广度、深度、力度和速度，更有效地为相关企业和业主提供服务，该行业主管部门委托FT软件开发公司开发一个XX行业管理信息系统。该系统由公共信息管理模块、系统管理维护模块、资质管理模块、企业信息管理模块和系统扩展接口模块等5大功能模块组成。</p><p>&nbsp;&nbsp; &nbsp;在该项目架构分析会上，FT公司高层领导提出，为了使那些公共功能模块比较容易地被其他电子政务项目所复用，应充分利用领域分析和软件复用的知识，采用基于可复用的软件开发方式，在这些公共模块的实现中保持高度的独立性，即在实现的具体细节上与XX行业国家部委(或者其他的政府机构)无关。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题3】</p><p>&nbsp;&nbsp;包括但不限于：</p><p>&nbsp;&nbsp;可用性：构件必须易于理解和使用。</p><p>&nbsp;&nbsp; &nbsp;质量：构件及其变形必须能正确工作。</p><p>&nbsp;&nbsp; &nbsp;适应性：构件应该易于通过参数化等方式在不同语境中进行配置。</p><p>&nbsp;&nbsp; &nbsp;可移植性：构件应能在不同的硬件运行平台和软件环境中工作。</p><p>&nbsp;&nbsp; &nbsp;可变性(Variability)：构件应能针对不同的应用系统，只需对其可变部分进行适当的调节等</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176861.9782774
  },
  {
    "section_id": "9392",
    "section_name": "系统架构设计基础知识（第二版） - 特定领域软件体系结构",
    "question_id": 43788,
    "question_title": "<p><br/></p><p><br/></p><p>特定领域软件架构(Domain Specific Software Architecture，DSSA.以一个特定问题领域为对象，形成由领域参考模型、参考需求、(请作答此空)_等组成的开发基础架构，支持一个特定领域中多个应用的生成。DSSA的基本活动包括领域分析、领域设计和领域实现。其中领域分析的主要目的是获得( )，从而描述领域中系统之间共同的需求，即领域需求；领域设计的主要目标是获得( )，从而描述领域模型中表示需求的解决方案；领域实现的主要目标是开发和组织可重用信息，并实现基础软件架构。</p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 参考设计 ",
      " 参考规约&nbsp;&nbsp; ",
      " 参考架构&nbsp; ",
      " 参考实现 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43788,
      "question_title": "<p><br/></p><p><br/></p><p>特定领域软件架构(Domain Specific Software Architecture，DSSA.以一个特定问题领域为对象，形成由领域参考模型、参考需求、(请作答此空)_等组成的开发基础架构，支持一个特定领域中多个应用的生成。DSSA的基本活动包括领域分析、领域设计和领域实现。其中领域分析的主要目的是获得( )，从而描述领域中系统之间共同的需求，即领域需求；领域设计的主要目标是获得( )，从而描述领域模型中表示需求的解决方案；领域实现的主要目标是开发和组织可重用信息，并实现基础软件架构。</p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43788,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 参考设计 ",
        " 参考规约&nbsp;&nbsp; ",
        " 参考架构&nbsp; ",
        " 参考实现 "
      ]
    },
    "crawl_time": 1753176863.230731
  },
  {
    "section_id": "9392",
    "section_name": "系统架构设计基础知识（第二版） - 特定领域软件体系结构",
    "question_id": 49943,
    "question_title": "<p>DSSA是在一个特定应用领域中为一组应用提供组织结构参考的软件体系结构，参与DSSA的人员可以划分为4种角色，包括领域专家、领域设计人员、领域实现人员和（ &nbsp;请作答此空），其基本活动包括领域分析、领域设计和（ ）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 领域测试人员 ",
      " 领域顾问 ",
      " 领域分析师 ",
      " 领域经理 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 49943,
      "question_title": "<p>DSSA是在一个特定应用领域中为一组应用提供组织结构参考的软件体系结构，参与DSSA的人员可以划分为4种角色，包括领域专家、领域设计人员、领域实现人员和（ &nbsp;请作答此空），其基本活动包括领域分析、领域设计和（ ）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49943,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 领域测试人员 ",
        " 领域顾问 ",
        " 领域分析师 ",
        " 领域经理 "
      ]
    },
    "crawl_time": 1753176863.230731
  },
  {
    "section_id": "9392",
    "section_name": "系统架构设计基础知识（第二版） - 特定领域软件体系结构",
    "question_id": 63655,
    "question_title": "<p>特定领域软件架构（Domain Specific Software Architecture, DSSA）的基本活动包括领域分析、领域设计和领域实现。其中，领域分析的主要目的是获得领域模型。领域设计的主要目标是获得（请作答此空）。领域实现是为了（　）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 特定领域软件需求 ",
      " 特定领域软件架构 ",
      " 特定领域软件设计模型 ",
      " 特定领域软件重用模型 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 63655,
      "question_title": "<p>特定领域软件架构（Domain Specific Software Architecture, DSSA）的基本活动包括领域分析、领域设计和领域实现。其中，领域分析的主要目的是获得领域模型。领域设计的主要目标是获得（请作答此空）。领域实现是为了（　）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63655,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 特定领域软件需求 ",
        " 特定领域软件架构 ",
        " 特定领域软件设计模型 ",
        " 特定领域软件重用模型 "
      ]
    },
    "crawl_time": 1753176863.230731
  },
  {
    "section_id": "9392",
    "section_name": "系统架构设计基础知识（第二版） - 特定领域软件体系结构",
    "question_id": 159201,
    "question_title": "<p>特定领域软件架构（DSSA)是在一个特定应用领域为—组应用提供组织结构参考的标准软件架构。实施DSSA的过程中包括一系列基本的活动,其中（请作答此空)活动的主要目的是为了获得DSSA.该活动参加人员中,（ ）的主要任务是提供关于领城中系统的需求规约和实现的知识。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 领域需求 ",
      " 领域分析 ",
      " 领域设计 ",
      " 领城实现 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 159201,
      "question_title": "<p>特定领域软件架构（DSSA)是在一个特定应用领域为—组应用提供组织结构参考的标准软件架构。实施DSSA的过程中包括一系列基本的活动,其中（请作答此空)活动的主要目的是为了获得DSSA.该活动参加人员中,（ ）的主要任务是提供关于领城中系统的需求规约和实现的知识。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159201,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 领域需求 ",
        " 领域分析 ",
        " 领域设计 ",
        " 领城实现 "
      ]
    },
    "crawl_time": 1753176863.230731
  },
  {
    "section_id": "9392",
    "section_name": "系统架构设计基础知识（第二版） - 特定领域软件体系结构",
    "question_id": 208515,
    "question_title": "<p>“编译器”是一种非常重要的基础软件，其核心功能是对源代码形态的单个或一组源程序依次进行预处理、词法分析、语法分析、语义分析、代码生成、代码优化等处理，最终生成目标机器的可执行代码。考虑以下与编译器相关的软件架构设计场景：</p><p>传统的编译器设计中，上述处理过程都以独立功能模块的形式存在，程序源代码作为一个整体，依次在不同模块中进行传递，最终完成编译过程。针对这种设计思路，传统的编译器采用（请作答此空）架构风格比较合适。</p><p>随着编译、链接、调试、执行等开发过程的一体化趋势发展，集成开发环境(IDE.随之出现。IDE集成了编译器、连接器、调试器等多种工具，支持代码的增量修改与处理，能够实现不同工具之间的信息交互，覆盖整个软件开发生命周期。针对这种需求，IDE采用（ ）架构风格比较合适。IDE强调交互式编程，用户在修改程序代码后，会同时触发语法高亮显示、语法错误提示、程序结构更新等多种功能的调用与结果呈现，针对这种需求，通常采用（ ）架构风格比较合适。</p><p>某公司已经开发了一款针对某种嵌入式操作系统专用编程语言的IDE，随着一种新的嵌入式操作系统上市并迅速占领市场，公司决定对IDE进行适应性改造，支持采用现有编程语言进行编程，生成符合新操作系统要求的运行代码，并能够在现有操作系统上模拟出新操作系统的运行环境，以支持代码调试工作。针对上述要求，为了使IDE能够生成符合新操作系统要求的运行代码，采用基于（ ）的架构设计策略比较合适；为了模拟新操作系统的运行环境，通常采用（ ）架构风格比较合适。<span style=\"font-size: 16px;\"></span></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 管道—过滤器 ",
      " 顺序批处理 ",
      " 过程控制 ",
      " 独立进程 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 208515,
      "question_title": "<p>“编译器”是一种非常重要的基础软件，其核心功能是对源代码形态的单个或一组源程序依次进行预处理、词法分析、语法分析、语义分析、代码生成、代码优化等处理，最终生成目标机器的可执行代码。考虑以下与编译器相关的软件架构设计场景：</p><p>传统的编译器设计中，上述处理过程都以独立功能模块的形式存在，程序源代码作为一个整体，依次在不同模块中进行传递，最终完成编译过程。针对这种设计思路，传统的编译器采用（请作答此空）架构风格比较合适。</p><p>随着编译、链接、调试、执行等开发过程的一体化趋势发展，集成开发环境(IDE.随之出现。IDE集成了编译器、连接器、调试器等多种工具，支持代码的增量修改与处理，能够实现不同工具之间的信息交互，覆盖整个软件开发生命周期。针对这种需求，IDE采用（ ）架构风格比较合适。IDE强调交互式编程，用户在修改程序代码后，会同时触发语法高亮显示、语法错误提示、程序结构更新等多种功能的调用与结果呈现，针对这种需求，通常采用（ ）架构风格比较合适。</p><p>某公司已经开发了一款针对某种嵌入式操作系统专用编程语言的IDE，随着一种新的嵌入式操作系统上市并迅速占领市场，公司决定对IDE进行适应性改造，支持采用现有编程语言进行编程，生成符合新操作系统要求的运行代码，并能够在现有操作系统上模拟出新操作系统的运行环境，以支持代码调试工作。针对上述要求，为了使IDE能够生成符合新操作系统要求的运行代码，采用基于（ ）的架构设计策略比较合适；为了模拟新操作系统的运行环境，通常采用（ ）架构风格比较合适。<span style=\"font-size: 16px;\"></span></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208515,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 管道—过滤器 ",
        " 顺序批处理 ",
        " 过程控制 ",
        " 独立进程 "
      ]
    },
    "crawl_time": 1753176863.230731
  },
  {
    "section_id": "9392",
    "section_name": "系统架构设计基础知识（第二版） - 特定领域软件体系结构",
    "question_id": 310842,
    "question_title": "<p>特定领域软件架构（DSSA)是在一个特定应用领域为—组应用提供组织结构参考的标准软件架构。实施DSSA的过程中包括一系列基本的活动,其中（1)活动的主要目的是为了获得DSSA。该活动参加人员中,（2）的主要任务是提供关于领城中系统的需求规约和实现的知识。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "领域需求",
      "领域分析",
      "领域设计",
      "领城实现"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 310842,
      "question_title": "<p>特定领域软件架构（DSSA)是在一个特定应用领域为—组应用提供组织结构参考的标准软件架构。实施DSSA的过程中包括一系列基本的活动,其中（1)活动的主要目的是为了获得DSSA。该活动参加人员中,（2）的主要任务是提供关于领城中系统的需求规约和实现的知识。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310841,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "领域需求",
        "领域分析",
        "领域设计",
        "领城实现"
      ]
    },
    "crawl_time": 1753176863.230731
  },
  {
    "section_id": "9392",
    "section_name": "系统架构设计基础知识（第二版） - 特定领域软件体系结构",
    "question_id": 310843,
    "question_title": "<p>特定领域软件架构（DSSA)是在一个特定应用领域为—组应用提供组织结构参考的标准软件架构。实施DSSA的过程中包括一系列基本的活动,其中（1)活动的主要目的是为了获得DSSA。该活动参加人员中,（2）的主要任务是提供关于领城中系统的需求规约和实现的知识。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "领域专家",
      "领域分析者",
      "领域设计者",
      "领城实现者"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 310843,
      "question_title": "<p>特定领域软件架构（DSSA)是在一个特定应用领域为—组应用提供组织结构参考的标准软件架构。实施DSSA的过程中包括一系列基本的活动,其中（1)活动的主要目的是为了获得DSSA。该活动参加人员中,（2）的主要任务是提供关于领城中系统的需求规约和实现的知识。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310841,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "领域专家",
        "领域分析者",
        "领域设计者",
        "领城实现者"
      ]
    },
    "crawl_time": 1753176863.231732
  },
  {
    "section_id": "9392",
    "section_name": "系统架构设计基础知识（第二版） - 特定领域软件体系结构",
    "question_id": 310898,
    "question_title": "<p>特定领域软件架构(Domain Specific Software Architecture，DSSA.以一个特定问题领域为对象，形成由领域参考模型、参考需求、(1)_等组成的开发基础架构，支持一个特定领域中多个应用的生成。DSSA的基本活动包括领域分析、领域设计和领域实现。其中领域分析的主要目的是获得(2)，从而描述领域中系统之间共同的需求，即领域需求；领域设计的主要目标是获得(3)，从而描述领域模型中表示需求的解决方案；领域实现的主要目标是开发和组织可重用信息，并实现基础软件架构。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "参考设计",
      "参考规约",
      "参考架构",
      "参考实现"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 310898,
      "question_title": "<p>特定领域软件架构(Domain Specific Software Architecture，DSSA.以一个特定问题领域为对象，形成由领域参考模型、参考需求、(1)_等组成的开发基础架构，支持一个特定领域中多个应用的生成。DSSA的基本活动包括领域分析、领域设计和领域实现。其中领域分析的主要目的是获得(2)，从而描述领域中系统之间共同的需求，即领域需求；领域设计的主要目标是获得(3)，从而描述领域模型中表示需求的解决方案；领域实现的主要目标是开发和组织可重用信息，并实现基础软件架构。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310897,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "参考设计",
        "参考规约",
        "参考架构",
        "参考实现"
      ]
    },
    "crawl_time": 1753176863.231732
  },
  {
    "section_id": "9392",
    "section_name": "系统架构设计基础知识（第二版） - 特定领域软件体系结构",
    "question_id": 310899,
    "question_title": "<p>特定领域软件架构(Domain Specific Software Architecture，DSSA.以一个特定问题领域为对象，形成由领域参考模型、参考需求、(1)_等组成的开发基础架构，支持一个特定领域中多个应用的生成。DSSA的基本活动包括领域分析、领域设计和领域实现。其中领域分析的主要目的是获得(2)，从而描述领域中系统之间共同的需求，即领域需求；领域设计的主要目标是获得(3)，从而描述领域模型中表示需求的解决方案；领域实现的主要目标是开发和组织可重用信息，并实现基础软件架构。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "领域边界",
      "领域信息",
      "领域对象",
      "领域模型"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 310899,
      "question_title": "<p>特定领域软件架构(Domain Specific Software Architecture，DSSA.以一个特定问题领域为对象，形成由领域参考模型、参考需求、(1)_等组成的开发基础架构，支持一个特定领域中多个应用的生成。DSSA的基本活动包括领域分析、领域设计和领域实现。其中领域分析的主要目的是获得(2)，从而描述领域中系统之间共同的需求，即领域需求；领域设计的主要目标是获得(3)，从而描述领域模型中表示需求的解决方案；领域实现的主要目标是开发和组织可重用信息，并实现基础软件架构。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310897,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "领域边界",
        "领域信息",
        "领域对象",
        "领域模型"
      ]
    },
    "crawl_time": 1753176863.231732
  },
  {
    "section_id": "9392",
    "section_name": "系统架构设计基础知识（第二版） - 特定领域软件体系结构",
    "question_id": 310900,
    "question_title": "<p>特定领域软件架构(Domain Specific Software Architecture，DSSA.以一个特定问题领域为对象，形成由领域参考模型、参考需求、(1)_等组成的开发基础架构，支持一个特定领域中多个应用的生成。DSSA的基本活动包括领域分析、领域设计和领域实现。其中领域分析的主要目的是获得(2)，从而描述领域中系统之间共同的需求，即领域需求；领域设计的主要目标是获得(3)，从而描述领域模型中表示需求的解决方案；领域实现的主要目标是开发和组织可重用信息，并实现基础软件架构。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "特定领域软件需求",
      "特定领域软件架构",
      "特定领域软件设计模型",
      "特定领域软件重用模型"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 310900,
      "question_title": "<p>特定领域软件架构(Domain Specific Software Architecture，DSSA.以一个特定问题领域为对象，形成由领域参考模型、参考需求、(1)_等组成的开发基础架构，支持一个特定领域中多个应用的生成。DSSA的基本活动包括领域分析、领域设计和领域实现。其中领域分析的主要目的是获得(2)，从而描述领域中系统之间共同的需求，即领域需求；领域设计的主要目标是获得(3)，从而描述领域模型中表示需求的解决方案；领域实现的主要目标是开发和组织可重用信息，并实现基础软件架构。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310897,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "特定领域软件需求",
        "特定领域软件架构",
        "特定领域软件设计模型",
        "特定领域软件重用模型"
      ]
    },
    "crawl_time": 1753176863.231732
  },
  {
    "section_id": "9392",
    "section_name": "系统架构设计基础知识（第二版） - 特定领域软件体系结构",
    "question_id": 350342,
    "question_title": "<p>特定领域软件架构（Domain Specific Software Achitecture，DSSA）是在一个特定应用领域中，为一组应用提供组织结构参考的标准软件体系结构。DSSA通常是一个具有三个层次的系统模型，包括&nbsp;（1） 环境、领域特定应用开发环境和应用执行环境，其中&nbsp;（2） 主要在领域特定应用开发环境中工作。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 领域需求 ",
      " 领域开发 ",
      " 领域执行 ",
      " 领域应用 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 350342,
      "question_title": "<p>特定领域软件架构（Domain Specific Software Achitecture，DSSA）是在一个特定应用领域中，为一组应用提供组织结构参考的标准软件体系结构。DSSA通常是一个具有三个层次的系统模型，包括&nbsp;（1） 环境、领域特定应用开发环境和应用执行环境，其中&nbsp;（2） 主要在领域特定应用开发环境中工作。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350341,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 领域需求 ",
        " 领域开发 ",
        " 领域执行 ",
        " 领域应用 "
      ]
    },
    "crawl_time": 1753176863.231732
  },
  {
    "section_id": "9392",
    "section_name": "系统架构设计基础知识（第二版） - 特定领域软件体系结构",
    "question_id": 354849,
    "question_title": "【51CTO学堂-学员回忆版】以下关于微服务架构与面向服务架构的描述中，正确的是(32)。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "两者均采用去中心化管理",
      "两者均采用集中式管理",
      "微服务架构采用去中心化管理，面向服务架构采用集中式管理",
      "微服务架构采用集中式管理，面向服务架构采用去中心化管理"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 354849,
      "question_title": "【51CTO学堂-学员回忆版】以下关于微服务架构与面向服务架构的描述中，正确的是(32)。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354849,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "两者均采用去中心化管理",
        "两者均采用集中式管理",
        "微服务架构采用去中心化管理，面向服务架构采用集中式管理",
        "微服务架构采用集中式管理，面向服务架构采用去中心化管理"
      ]
    },
    "crawl_time": 1753176863.231732
  },
  {
    "section_id": "9392",
    "section_name": "系统架构设计基础知识（第二版） - 特定领域软件体系结构",
    "question_id": 371528,
    "question_title": "特定领域软件架构（Domain Specific Software Achitecture，DSSA）是在一个特定应用领域中，为一组应用提供组织结构参考的标准软件体系结构。DSSA通常是一个具有三个层次的系统模型，包括 （1） 环境、领域特定应用开发环境和应用执行环境，其中 （2） 主要在领域特定应用开发环境中工作。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "操作员",
      "领域架构师",
      "应用工程师",
      "程序员"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 371528,
      "question_title": "特定领域软件架构（Domain Specific Software Achitecture，DSSA）是在一个特定应用领域中，为一组应用提供组织结构参考的标准软件体系结构。DSSA通常是一个具有三个层次的系统模型，包括 （1） 环境、领域特定应用开发环境和应用执行环境，其中 （2） 主要在领域特定应用开发环境中工作。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371526,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "操作员",
        "领域架构师",
        "应用工程师",
        "程序员"
      ]
    },
    "crawl_time": 1753176863.231732
  },
  {
    "section_id": "9392",
    "section_name": "系统架构设计基础知识（第二版） - 特定领域软件体系结构",
    "question_id": 507288,
    "question_title": "下面关于 DSSA(Domain Specific Software Architecture)说法正确的是(&nbsp; )。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "DSSA 的建立过程是并发的、递归的和反复进行的",
      "在 DSSA 中，定义领域特定的元素阶段的重点是确定什么在感兴趣的领域中以及本过程到何时结束，这个阶段的一个主要输出是领域中的应用需要满足一系列用户的需求",
      "定义领域模型和体系结构阶段的目标是为 DSSA 增加构件，使它可以被用来产生问题域中的新应用",
      "在不同的领域中，DSSA 的创建和使用过程完全相同"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 507288,
      "question_title": "下面关于 DSSA(Domain Specific Software Architecture)说法正确的是(&nbsp; )。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507288,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "DSSA 的建立过程是并发的、递归的和反复进行的",
        "在 DSSA 中，定义领域特定的元素阶段的重点是确定什么在感兴趣的领域中以及本过程到何时结束，这个阶段的一个主要输出是领域中的应用需要满足一系列用户的需求",
        "定义领域模型和体系结构阶段的目标是为 DSSA 增加构件，使它可以被用来产生问题域中的新应用",
        "在不同的领域中，DSSA 的创建和使用过程完全相同"
      ]
    },
    "crawl_time": 1753176863.231732
  },
  {
    "section_id": "9392",
    "section_name": "系统架构设计基础知识（第二版） - 特定领域软件体系结构",
    "question_id": 283670,
    "question_title": "<p>【问题1】（9分）特定领域软件架构(Domain Specific Software Architecture，DSSA.是一种有效实现特定领域软件重用的手段。结合你的系统架构设计经验，请用300字以内的文字简要说明基于DSSA的软件设计开发主要包含哪些阶段以及每个阶段的目标。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题1】</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201002/1601646553782699.jpg\" title=\"1601646553782699.jpg\" alt=\"1.jpg\"/>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 283670,
      "question_title": "<p>【问题1】（9分）特定领域软件架构(Domain Specific Software Architecture，DSSA.是一种有效实现特定领域软件重用的手段。结合你的系统架构设计经验，请用300字以内的文字简要说明基于DSSA的软件设计开发主要包含哪些阶段以及每个阶段的目标。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 283669,
      "score_rule": "",
      "material_text": "<p>试题四（25分）</p><p>阅读以下关于软件复用技术应用的叙述，根据要求回答下面问题。</p><p>[说明]</p><p>&nbsp;&nbsp; &nbsp;随着政府职能的转型，XX行业职能主管部门(国家相关部委，各省、市的相关厅、局、委等)机构日趋精简，但随着国家现代化的发展，业务量反而越来越大。为保证本行业管理工作的质量和效率，实现企业资质审批管理信息化、网络化和电子化，提高工作效率和质量，规范业务处理流程，提高管理工作的广度、深度、力度和速度，更有效地为相关企业和业主提供服务，该行业主管部门委托FT软件开发公司开发一个XX行业管理信息系统。该系统由公共信息管理模块、系统管理维护模块、资质管理模块、企业信息管理模块和系统扩展接口模块等5大功能模块组成。</p><p>&nbsp;&nbsp; &nbsp;在该项目架构分析会上，FT公司高层领导提出，为了使那些公共功能模块比较容易地被其他电子政务项目所复用，应充分利用领域分析和软件复用的知识，采用基于可复用的软件开发方式，在这些公共模块的实现中保持高度的独立性，即在实现的具体细节上与XX行业国家部委(或者其他的政府机构)无关。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题1】</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201002/1601646553782699.jpg\" title=\"1601646553782699.jpg\" alt=\"1.jpg\"/>"
      ],
      "option": null
    },
    "crawl_time": 1753176863.231732
  },
  {
    "section_id": "9392",
    "section_name": "系统架构设计基础知识（第二版） - 特定领域软件体系结构",
    "question_id": 309529,
    "question_title": "<p>【问题 3】(13 分)</p><p>在架构设计中，张工建议用特定领域软件架构（DSSA）进行开发，请问DSSA的特征有哪些？其主要活动及角色有哪些？</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>DSSA就是专用于一类特定类型的任务(领域)的、在整个领域中能有效地使用的、为成功构造应用系统限定了标准的组合结构的软件构件的集合。DSSA的特点：&nbsp;</p><p>（1）一个严格定义的问题域和解决域&nbsp;</p><p>（2）具有普遍性可以用于领域中某个特定领域的应用及开发&nbsp;</p><p>（3）对整个领域有合适程度的抽象&nbsp;</p><p>（4）具备该领域固定的典型开发过程中的可重用元素&nbsp;</p><p>DSSA的三个基本活动&nbsp;</p><p>I.领域分析：这个阶段的主要目标是获得领域模型（领域需求）。识别信息源，即整个领域工程过程中信息的来源，可能的信息源包括现存系统、技术文献、问题域和系统开发的专家、用户调查和市场分析、领域演化的历史记录等，在此基础上就可以分析领域中系统的需求，确定哪些需求是领域中的系统广泛共享的，从而建立领域模型。</p><p>II.领域设计：这个阶段的目标是获得DSSA。DSSA描述在领域模型中表示的需求的解决方案，它不是单个系统的表示，而是能够适应领域中多个系统的需求的一个高层次的设计。建立了领域模型之后，就可以派生出满足这些被建模的领域需求DSSA。</p><p>III.领域实现：这个阶段的主要目标是依据领域模型和DSSA开发和组织可重用信息。这些可重用信息可能是从现有系统中提取得到，也可能需要通过新的开发得到。&nbsp;</p><p>参与DSSA的四种角色人员&nbsp;</p><p>?领域专家：包括该领域中系统的有经验的用户、从事该领域中系统的需求分析、设计、实现以及项目管理的有经验的软件工程师等。提供关于领域中系统的需求规约和实现的知识，帮助组织规范的、一致的领域字典，帮助选择样本系统作为领域工程的依据，复审领域模型、DSSA等领域工程产品，等等。</p><p>?领域分析人员：由具有知识工程背景的有经验的系统分析员来担任。控制整个领域分析过程，进行知识获取，将获取的知识组织到领域模型中。</p><p>?领域设计人员：由有经验的软件设计人员来担任。根据领域模型和现有系统开发出DSSA，并对DSSA的准确性和一致性进行验证。</p><p>?领域实现人员：由有经验的程序设计人员来担任。根据领域模型和DSSA，开发构件。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 309529,
      "question_title": "<p>【问题 3】(13 分)</p><p>在架构设计中，张工建议用特定领域软件架构（DSSA）进行开发，请问DSSA的特征有哪些？其主要活动及角色有哪些？</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 309526,
      "score_rule": "",
      "material_text": "<p>试题一（共25分）</p><p>阅读以下关于软件架构的叙述，在答题纸上回答问题1和问题2。</p><p><br/></p><p>【说明】</p><p>某B2C公司因业务扩展，客户增长迅速，需建立一套在线交易系统实现在线电子商务活动，在需求分析与架构设计阶段，该公司提出的需求、质量属性描述和架构特性如下：</p><p>(a)系统用户分为系统管理员、系统操作员和ESS用户三类。</p><p>(b)当用户视图从外部站点修改系统数据的时候，应该对用户身份进行验证，阻止对数据的访问；</p><p>(c)在正常负载情况下，系统应在1秒内对用户的商品查询请求进行响应；</p><p>(d)单元测试人员在输入商品关键字进行查询商品时，系统能够通过关键字检索出商品信息呈现出来；</p><p>(e)系统主站点断电后，应在5秒内将请求重定向到备用站点；</p><p>(f)用户取消自己即将生成的交易时，系统可以取消交易并系统删除交易恢复以前的界面；</p><p>&nbsp;(g)新年来临，当该B2C网站需求在1个月内将界面更改为新年主题增加抽奖红包功能。</p><p>&nbsp;(h)交易系统需要增强加密的级别安全性会提高但是会带来性能下降;</p><p>(i)系统应对用户信息数据库的所有操作都进行完整记录；</p><p>&nbsp;(j)系统必须提供远程调试接口，并支持远程调试。</p><p>（k）如果客户对于系统业务规则尚未达成共识，可能导致部分业务功能模块规则的矛盾，但是目前这种矛盾是可以控制的。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>DSSA就是专用于一类特定类型的任务(领域)的、在整个领域中能有效地使用的、为成功构造应用系统限定了标准的组合结构的软件构件的集合。DSSA的特点：&nbsp;</p><p>（1）一个严格定义的问题域和解决域&nbsp;</p><p>（2）具有普遍性可以用于领域中某个特定领域的应用及开发&nbsp;</p><p>（3）对整个领域有合适程度的抽象&nbsp;</p><p>（4）具备该领域固定的典型开发过程中的可重用元素&nbsp;</p><p>DSSA的三个基本活动&nbsp;</p><p>I.领域分析：这个阶段的主要目标是获得领域模型（领域需求）。识别信息源，即整个领域工程过程中信息的来源，可能的信息源包括现存系统、技术文献、问题域和系统开发的专家、用户调查和市场分析、领域演化的历史记录等，在此基础上就可以分析领域中系统的需求，确定哪些需求是领域中的系统广泛共享的，从而建立领域模型。</p><p>II.领域设计：这个阶段的目标是获得DSSA。DSSA描述在领域模型中表示的需求的解决方案，它不是单个系统的表示，而是能够适应领域中多个系统的需求的一个高层次的设计。建立了领域模型之后，就可以派生出满足这些被建模的领域需求DSSA。</p><p>III.领域实现：这个阶段的主要目标是依据领域模型和DSSA开发和组织可重用信息。这些可重用信息可能是从现有系统中提取得到，也可能需要通过新的开发得到。&nbsp;</p><p>参与DSSA的四种角色人员&nbsp;</p><p>?领域专家：包括该领域中系统的有经验的用户、从事该领域中系统的需求分析、设计、实现以及项目管理的有经验的软件工程师等。提供关于领域中系统的需求规约和实现的知识，帮助组织规范的、一致的领域字典，帮助选择样本系统作为领域工程的依据，复审领域模型、DSSA等领域工程产品，等等。</p><p>?领域分析人员：由具有知识工程背景的有经验的系统分析员来担任。控制整个领域分析过程，进行知识获取，将获取的知识组织到领域模型中。</p><p>?领域设计人员：由有经验的软件设计人员来担任。根据领域模型和现有系统开发出DSSA，并对DSSA的准确性和一致性进行验证。</p><p>?领域实现人员：由有经验的程序设计人员来担任。根据领域模型和DSSA，开发构件。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176863.231732
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 43791,
    "question_title": "<p>某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与（请作答此空）质量属性相关，通常可采用（ ）架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与（ ）质量属性相关，通常可采用（ ）架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与（ ）质量属性相关，通常可采用（ ）架构策略实现该属性。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 性能&nbsp; ",
      " 可用性&nbsp; ",
      " 易用性&nbsp; ",
      " 可修改性 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43791,
      "question_title": "<p>某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与（请作答此空）质量属性相关，通常可采用（ ）架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与（ ）质量属性相关，通常可采用（ ）架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与（ ）质量属性相关，通常可采用（ ）架构策略实现该属性。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43791,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 性能&nbsp; ",
        " 可用性&nbsp; ",
        " 易用性&nbsp; ",
        " 可修改性 "
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 49945,
    "question_title": "<p>（ &nbsp;）不属于可修改性考虑的内容。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 可维护性 ",
      " 可扩展性 ",
      " 结构重构 ",
      " 可变性 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 49945,
      "question_title": "<p>（ &nbsp;）不属于可修改性考虑的内容。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49945,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 可维护性 ",
        " 可扩展性 ",
        " 结构重构 ",
        " 可变性 "
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 49956,
    "question_title": "<p>某公司欲开发一个智能机器人系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中&quot;机器人系统主电源断电后，能够在10秒内自动启动备用电源并进行切换，恢复正常运行&quot;主要与（请作答此空 ）质量属性相关，通常可采用（）架构策略实现该属性；&quot;机器人在正常运动过程中如果发现前方2米内有人或者障碍物，应在1秒内停止并在2秒内选择一条新的运行路径&quot;主要与（）质量属性相关，通常可采用（）架构策略实现该属性；&quot;对机器人的远程控制命令应该进行加密，从而能够抵挡恶意的入侵破坏行为，并对攻击进行报警和记录&quot;主要与（）质量属性相关，通常可采用（）架构策略实现该属性。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 可用性 ",
      " 性能 ",
      " 易用性 ",
      " 可修改性 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 49956,
      "question_title": "<p>某公司欲开发一个智能机器人系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中&quot;机器人系统主电源断电后，能够在10秒内自动启动备用电源并进行切换，恢复正常运行&quot;主要与（请作答此空 ）质量属性相关，通常可采用（）架构策略实现该属性；&quot;机器人在正常运动过程中如果发现前方2米内有人或者障碍物，应在1秒内停止并在2秒内选择一条新的运行路径&quot;主要与（）质量属性相关，通常可采用（）架构策略实现该属性；&quot;对机器人的远程控制命令应该进行加密，从而能够抵挡恶意的入侵破坏行为，并对攻击进行报警和记录&quot;主要与（）质量属性相关，通常可采用（）架构策略实现该属性。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49956,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 可用性 ",
        " 性能 ",
        " 易用性 ",
        " 可修改性 "
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 63676,
    "question_title": "<p>某公司欲开发一个人员管理系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“管理系统遭遇断电后，能够在15秒内自动切换至备用系统并恢复正常运行”主要与（请作答此空）质量属性相关，通常可采用（　）架构策略实现该属性；“系统正常运行时，人员信息查询请求应该在2秒内返回结果”主要与（ 　）质量属性相关，通常可采用（　）架构策略实现该属性；“系统需要对用户的操作情况进行记录，并对所有针对系统的恶意操作行为进行报警和记录”主要与（　）质量属性相关，通常可采用（　）架构策略实现该属性。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 可用性 ",
      " 性能 ",
      " 易用性 ",
      " 可修改性 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 63676,
      "question_title": "<p>某公司欲开发一个人员管理系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“管理系统遭遇断电后，能够在15秒内自动切换至备用系统并恢复正常运行”主要与（请作答此空）质量属性相关，通常可采用（　）架构策略实现该属性；“系统正常运行时，人员信息查询请求应该在2秒内返回结果”主要与（ 　）质量属性相关，通常可采用（　）架构策略实现该属性；“系统需要对用户的操作情况进行记录，并对所有针对系统的恶意操作行为进行报警和记录”主要与（　）质量属性相关，通常可采用（　）架构策略实现该属性。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63676,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 可用性 ",
        " 性能 ",
        " 易用性 ",
        " 可修改性 "
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 151207,
    "question_title": "某单位为了建设健全的公路桥梁养护管理档案，拟开发一套公路桥梁在线管理系统。该系统要求正常负载情况下，系统必须在 0.5 秒内对用户的查询请求进行响应，这属于质量特性的（请作答此空）；网络失效后，系统需要在 10 秒内发现错误并启用备用系统，这属于质量特性的（）；更改系统的 Web 界面接口必须在 4 人周内完成，这属于质量特性的（）；如果&quot;养护报告生成&quot;业务逻辑的描述尚未达成共识，可能导致部分业务功能模块规则的矛盾，影响系统的可修改性，这属于系统的（）；更改系统加密的级别将对安全性和性能产生影响，这属于系统的（）；对查询请求处理时间的要求将影响系统的数据传输协议和处理过程的设计，这属于系统的（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 可用性 ",
      " 可靠性 ",
      " 性能 ",
      " 容错性 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 151207,
      "question_title": "某单位为了建设健全的公路桥梁养护管理档案，拟开发一套公路桥梁在线管理系统。该系统要求正常负载情况下，系统必须在 0.5 秒内对用户的查询请求进行响应，这属于质量特性的（请作答此空）；网络失效后，系统需要在 10 秒内发现错误并启用备用系统，这属于质量特性的（）；更改系统的 Web 界面接口必须在 4 人周内完成，这属于质量特性的（）；如果&quot;养护报告生成&quot;业务逻辑的描述尚未达成共识，可能导致部分业务功能模块规则的矛盾，影响系统的可修改性，这属于系统的（）；更改系统加密的级别将对安全性和性能产生影响，这属于系统的（）；对查询请求处理时间的要求将影响系统的数据传输协议和处理过程的设计，这属于系统的（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 151207,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 可用性 ",
        " 可靠性 ",
        " 性能 ",
        " 容错性 "
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 159215,
    "question_title": "软件的质量属性是衡量软件非功能性需求的重要因素。可用性质量属性主要关注软件系统的故障和它所带来的后果。（ ）是能够提高系统可用性的措施。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 心跳检测 ",
      " 模块的抽象化 ",
      " 用户授权 ",
      " 记录/重放 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 159215,
      "question_title": "软件的质量属性是衡量软件非功能性需求的重要因素。可用性质量属性主要关注软件系统的故障和它所带来的后果。（ ）是能够提高系统可用性的措施。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159215,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 心跳检测 ",
        " 模块的抽象化 ",
        " 用户授权 ",
        " 记录/重放 "
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 159237,
    "question_title": "<p>正确识别风险点、非风险点、敏感点和权衡点是进行软件架构评价的关键步骤。其中（ ）是实现一个特定质量属性的关键特征，该特征为一个或多个软件构件所共有。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 风验点 ",
      " 非风险点 ",
      " 敏感点 ",
      " 权衡点 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 159237,
      "question_title": "<p>正确识别风险点、非风险点、敏感点和权衡点是进行软件架构评价的关键步骤。其中（ ）是实现一个特定质量属性的关键特征，该特征为一个或多个软件构件所共有。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159237,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 风验点 ",
        " 非风险点 ",
        " 敏感点 ",
        " 权衡点 "
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 208455,
    "question_title": "基于场景的架构分析方法(Scenarios-based Architecture Analysis Method，SAAM)是卡耐基梅隆大学软件工程研究所的Kazman等人于1983年提出的一种非功能质量属性的架构分析方法，是最早形成文档并得到广泛应用的软件架构分析方法。SAAM的主要输入是问题描述、（请作答此空）和架构描述文档，其分析过程主要包括场景开发、（ ）、单个场景评估、场景交互和总体评估。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 问题说明 ",
      " 问题建模 ",
      " 需求说明 ",
      " 需求建模 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 208455,
      "question_title": "基于场景的架构分析方法(Scenarios-based Architecture Analysis Method，SAAM)是卡耐基梅隆大学软件工程研究所的Kazman等人于1983年提出的一种非功能质量属性的架构分析方法，是最早形成文档并得到广泛应用的软件架构分析方法。SAAM的主要输入是问题描述、（请作答此空）和架构描述文档，其分析过程主要包括场景开发、（ ）、单个场景评估、场景交互和总体评估。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208455,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 问题说明 ",
        " 问题建模 ",
        " 需求说明 ",
        " 需求建模 "
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 281321,
    "question_title": "<p>某服务器软件系统对可用性(Availability)、性能(Performance)和可修改性(Modifiability)的要求较高，（ ）设计策略能提高该系统的可用性，（ ）设计策略能够提高该系统的性能，（ ）设计策略能够提高该系统的可修改性。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "Ping/Echo",
      "限制访问",
      "运行时注册",
      "接口-实现分离"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 281321,
      "question_title": "<p>某服务器软件系统对可用性(Availability)、性能(Performance)和可修改性(Modifiability)的要求较高，（ ）设计策略能提高该系统的可用性，（ ）设计策略能够提高该系统的性能，（ ）设计策略能够提高该系统的可修改性。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281320,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "Ping/Echo",
        "限制访问",
        "运行时注册",
        "接口-实现分离"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 281322,
    "question_title": "<p>某服务器软件系统对可用性(Availability)、性能(Performance)和可修改性(Modifiability)的要求较高，（ ）设计策略能提高该系统的可用性，（ ）设计策略能够提高该系统的性能，（ ）设计策略能够提高该系统的可修改性。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "分层结构",
      "事务机制",
      "主动冗余",
      "队列调度"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 281322,
      "question_title": "<p>某服务器软件系统对可用性(Availability)、性能(Performance)和可修改性(Modifiability)的要求较高，（ ）设计策略能提高该系统的可用性，（ ）设计策略能够提高该系统的性能，（ ）设计策略能够提高该系统的可修改性。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281320,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "分层结构",
        "事务机制",
        "主动冗余",
        "队列调度"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 281323,
    "question_title": "<p>某服务器软件系统对可用性(Availability)、性能(Performance)和可修改性(Modifiability)的要求较高，（ ）设计策略能提高该系统的可用性，（ ）设计策略能够提高该系统的性能，（ ）设计策略能够提高该系统的可修改性。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "信息隐藏",
      "记录/回放",
      "任务模型",
      "回滚"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 281323,
      "question_title": "<p>某服务器软件系统对可用性(Availability)、性能(Performance)和可修改性(Modifiability)的要求较高，（ ）设计策略能提高该系统的可用性，（ ）设计策略能够提高该系统的性能，（ ）设计策略能够提高该系统的可修改性。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281320,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "信息隐藏",
        "记录/回放",
        "任务模型",
        "回滚"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 281340,
    "question_title": "<p>某公司在对一家用车库门嵌入式软件系统进行架构设计时，识别出两个关键的质量属性场景，其中“当车库门正常下降时，如果发现下面有障碍物，则系统停止下降的时间需要控制在0.1秒内”与（ &nbsp;）质量属性相关；“系统需要为部署在远程PC机上的智能家居系统留有控制接口，并支持在智能家居系统中对该系统进行远程错误诊断与调试”与（ ）质量属性相关。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "可用性",
      "性能",
      "可修改性",
      "可测试性"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 281340,
      "question_title": "<p>某公司在对一家用车库门嵌入式软件系统进行架构设计时，识别出两个关键的质量属性场景，其中“当车库门正常下降时，如果发现下面有障碍物，则系统停止下降的时间需要控制在0.1秒内”与（ &nbsp;）质量属性相关；“系统需要为部署在远程PC机上的智能家居系统留有控制接口，并支持在智能家居系统中对该系统进行远程错误诊断与调试”与（ ）质量属性相关。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281339,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "可用性",
        "性能",
        "可修改性",
        "可测试性"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 281341,
    "question_title": "<p>某公司在对一家用车库门嵌入式软件系统进行架构设计时，识别出两个关键的质量属性场景，其中“当车库门正常下降时，如果发现下面有障碍物，则系统停止下降的时间需要控制在0.1秒内”与（ &nbsp;）质量属性相关；“系统需要为部署在远程PC机上的智能家居系统留有控制接口，并支持在智能家居系统中对该系统进行远程错误诊断与调试”与（ ）质量属性相关。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "可用性",
      "性能",
      "可修改性",
      "可测试性"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 281341,
      "question_title": "<p>某公司在对一家用车库门嵌入式软件系统进行架构设计时，识别出两个关键的质量属性场景，其中“当车库门正常下降时，如果发现下面有障碍物，则系统停止下降的时间需要控制在0.1秒内”与（ &nbsp;）质量属性相关；“系统需要为部署在远程PC机上的智能家居系统留有控制接口，并支持在智能家居系统中对该系统进行远程错误诊断与调试”与（ ）质量属性相关。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281339,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "可用性",
        "性能",
        "可修改性",
        "可测试性"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 309503,
    "question_title": "<p>某单位为了建设健全的园林绿化管理档案，拟开发一套园林绿化管理在线管理系统。在系统的需求分析与架构设计阶段，用户提出的需求、质量属性描述和架构特性如下:</p><p>其中“系统应该具备完善的安全防护措施，能够对黑客的攻击行为进行检测与防御”主要与 （1） 质量属性相关，通常可采用 （2） 架构策略实现该属性；“网络失效后，系统需要在 10 秒内发现错误并启用备用系统”主要与 （3） 质量属性相关，通常可采用 （4） 架构策略实现该属性；“查询过程中涉及到的绿化产品的实时状态视频传输必须保证画面具有 1024*768 的分辨率， 40 帧 /秒的速率”主要与 （5） 质暈属性相关，通常可采用 （6） 架构策略实现该属性。在架构评估过程中，需要正确识别系统的架构风险、敏感点和权衡点，并进行合理的架构决策。更改系统加密的级别对安全性有所提升但是对性能会降低，这个是（7）。如果&quot;绿化报告生成&quot;业务逻辑的描述尚未达成共识，可能导致部分业务功能模块规则的矛盾，影响系统的可修改性，这个是（8）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 可用性 ",
      "性能",
      "安全性",
      "可修改性"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 309503,
      "question_title": "<p>某单位为了建设健全的园林绿化管理档案，拟开发一套园林绿化管理在线管理系统。在系统的需求分析与架构设计阶段，用户提出的需求、质量属性描述和架构特性如下:</p><p>其中“系统应该具备完善的安全防护措施，能够对黑客的攻击行为进行检测与防御”主要与 （1） 质量属性相关，通常可采用 （2） 架构策略实现该属性；“网络失效后，系统需要在 10 秒内发现错误并启用备用系统”主要与 （3） 质量属性相关，通常可采用 （4） 架构策略实现该属性；“查询过程中涉及到的绿化产品的实时状态视频传输必须保证画面具有 1024*768 的分辨率， 40 帧 /秒的速率”主要与 （5） 质暈属性相关，通常可采用 （6） 架构策略实现该属性。在架构评估过程中，需要正确识别系统的架构风险、敏感点和权衡点，并进行合理的架构决策。更改系统加密的级别对安全性有所提升但是对性能会降低，这个是（7）。如果&quot;绿化报告生成&quot;业务逻辑的描述尚未达成共识，可能导致部分业务功能模块规则的矛盾，影响系统的可修改性，这个是（8）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 309502,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 可用性 ",
        "性能",
        "安全性",
        "可修改性"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 310902,
    "question_title": "某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与(60)质量属性相关，通常可采用(61)架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与(62)质量属性相关，通常可采用(63)架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与(64)_质量属性相关，通常可采用(65)架构策略实现该属性。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "性能",
      "可用性",
      "易用性",
      "可修改性"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 310902,
      "question_title": "某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与(60)质量属性相关，通常可采用(61)架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与(62)质量属性相关，通常可采用(63)架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与(64)_质量属性相关，通常可采用(65)架构策略实现该属性。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310901,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "性能",
        "可用性",
        "易用性",
        "可修改性"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 310903,
    "question_title": "某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与(60)质量属性相关，通常可采用(61)架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与(62)质量属性相关，通常可采用(63)架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与(64)_质量属性相关，通常可采用(65)架构策略实现该属性。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "主动冗余",
      "信息隐藏",
      "抽象接口",
      "记录/回放"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 310903,
      "question_title": "某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与(60)质量属性相关，通常可采用(61)架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与(62)质量属性相关，通常可采用(63)架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与(64)_质量属性相关，通常可采用(65)架构策略实现该属性。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310901,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "主动冗余",
        "信息隐藏",
        "抽象接口",
        "记录/回放"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 310904,
    "question_title": "某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与(60)质量属性相关，通常可采用(61)架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与(62)质量属性相关，通常可采用(63)架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与(64)_质量属性相关，通常可采用(65)架构策略实现该属性。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "可测试性",
      "易用性",
      "性能",
      "互操作性"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 310904,
      "question_title": "某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与(60)质量属性相关，通常可采用(61)架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与(62)质量属性相关，通常可采用(63)架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与(64)_质量属性相关，通常可采用(65)架构策略实现该属性。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310901,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "可测试性",
        "易用性",
        "性能",
        "互操作性"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 310905,
    "question_title": "某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与(60)质量属性相关，通常可采用(61)架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与(62)质量属性相关，通常可采用(63)架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与(64)_质量属性相关，通常可采用(65)架构策略实现该属性。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "操作串行化",
      "资源调度",
      "心跳",
      "内置监控器"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 18,
      "belong_page": 1,
      "question_id": 310905,
      "question_title": "某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与(60)质量属性相关，通常可采用(61)架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与(62)质量属性相关，通常可采用(63)架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与(64)_质量属性相关，通常可采用(65)架构策略实现该属性。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310901,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "操作串行化",
        "资源调度",
        "心跳",
        "内置监控器"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 310906,
    "question_title": "某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与(60)质量属性相关，通常可采用(61)架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与(62)质量属性相关，通常可采用(63)架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与(64)_质量属性相关，通常可采用(65)架构策略实现该属性。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "可用性",
      "安全性",
      "可测试性",
      "可修改性"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 19,
      "belong_page": 1,
      "question_id": 310906,
      "question_title": "某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与(60)质量属性相关，通常可采用(61)架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与(62)质量属性相关，通常可采用(63)架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与(64)_质量属性相关，通常可采用(65)架构策略实现该属性。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310901,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "可用性",
        "安全性",
        "可测试性",
        "可修改性"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 310907,
    "question_title": "某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与(60)质量属性相关，通常可采用(61)架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与(62)质量属性相关，通常可采用(63)架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与(64)_质量属性相关，通常可采用(65)架构策略实现该属性。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "内置监控器",
      "记录/回放",
      "追踪审计&nbsp;",
      "维护现有接口"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 20,
      "belong_page": 1,
      "question_id": 310907,
      "question_title": "某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与(60)质量属性相关，通常可采用(61)架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与(62)质量属性相关，通常可采用(63)架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与(64)_质量属性相关，通常可采用(65)架构策略实现该属性。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310901,
      "score_rule": "",
      "material_text": null,
      "sort_son": "6",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "内置监控器",
        "记录/回放",
        "追踪审计&nbsp;",
        "维护现有接口"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 350352,
    "question_title": "<p>某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与&nbsp;（1） 质量属性相关，通常可采用&nbsp;（2） 架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与&nbsp;（3） 质量属性相关，通常可采用&nbsp;（4） 架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与&nbsp;（5） 质量属性相关，通常可采用&nbsp;（6） 架构策略实现该属性。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 性能 ",
      " 可用性 ",
      " 易用性 ",
      " 可修改性 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 21,
      "belong_page": 1,
      "question_id": 350352,
      "question_title": "<p>某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与&nbsp;（1） 质量属性相关，通常可采用&nbsp;（2） 架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与&nbsp;（3） 质量属性相关，通常可采用&nbsp;（4） 架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与&nbsp;（5） 质量属性相关，通常可采用&nbsp;（6） 架构策略实现该属性。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350351,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 性能 ",
        " 可用性 ",
        " 易用性 ",
        " 可修改性 "
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 350353,
    "question_title": "<p>某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与&nbsp;（1） 质量属性相关，通常可采用&nbsp;（2） 架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与&nbsp;（3） 质量属性相关，通常可采用&nbsp;（4） 架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与&nbsp;（5） 质量属性相关，通常可采用&nbsp;（6） 架构策略实现该属性。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 主动冗余 ",
      " 信息隐藏 ",
      " 抽象接口&nbsp;&nbsp; ",
      " 记录/回放 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 22,
      "belong_page": 1,
      "question_id": 350353,
      "question_title": "<p>某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与&nbsp;（1） 质量属性相关，通常可采用&nbsp;（2） 架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与&nbsp;（3） 质量属性相关，通常可采用&nbsp;（4） 架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与&nbsp;（5） 质量属性相关，通常可采用&nbsp;（6） 架构策略实现该属性。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350351,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 主动冗余 ",
        " 信息隐藏 ",
        " 抽象接口&nbsp;&nbsp; ",
        " 记录/回放 "
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 350354,
    "question_title": "<p>某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与&nbsp;（1） 质量属性相关，通常可采用&nbsp;（2） 架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与&nbsp;（3） 质量属性相关，通常可采用&nbsp;（4） 架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与&nbsp;（5） 质量属性相关，通常可采用&nbsp;（6） 架构策略实现该属性。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 可测试性 ",
      " 易用性 ",
      " 性能 ",
      " 互操作性 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 23,
      "belong_page": 1,
      "question_id": 350354,
      "question_title": "<p>某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与&nbsp;（1） 质量属性相关，通常可采用&nbsp;（2） 架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与&nbsp;（3） 质量属性相关，通常可采用&nbsp;（4） 架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与&nbsp;（5） 质量属性相关，通常可采用&nbsp;（6） 架构策略实现该属性。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350351,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 可测试性 ",
        " 易用性 ",
        " 性能 ",
        " 互操作性 "
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 350355,
    "question_title": "<p>某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与&nbsp;（1） 质量属性相关，通常可采用&nbsp;（2） 架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与&nbsp;（3） 质量属性相关，通常可采用&nbsp;（4） 架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与&nbsp;（5） 质量属性相关，通常可采用&nbsp;（6） 架构策略实现该属性。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 操作串行化 ",
      " 资源调度 ",
      " 心跳&nbsp;&nbsp; ",
      " 内置监控器 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 24,
      "belong_page": 1,
      "question_id": 350355,
      "question_title": "<p>某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与&nbsp;（1） 质量属性相关，通常可采用&nbsp;（2） 架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与&nbsp;（3） 质量属性相关，通常可采用&nbsp;（4） 架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与&nbsp;（5） 质量属性相关，通常可采用&nbsp;（6） 架构策略实现该属性。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350351,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 操作串行化 ",
        " 资源调度 ",
        " 心跳&nbsp;&nbsp; ",
        " 内置监控器 "
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 350356,
    "question_title": "<p>某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与&nbsp;（1） 质量属性相关，通常可采用&nbsp;（2） 架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与&nbsp;（3） 质量属性相关，通常可采用&nbsp;（4） 架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与&nbsp;（5） 质量属性相关，通常可采用&nbsp;（6） 架构策略实现该属性。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 可用性 ",
      " 安全性 ",
      " 可测试性 ",
      " 可修改性 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 25,
      "belong_page": 1,
      "question_id": 350356,
      "question_title": "<p>某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与&nbsp;（1） 质量属性相关，通常可采用&nbsp;（2） 架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与&nbsp;（3） 质量属性相关，通常可采用&nbsp;（4） 架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与&nbsp;（5） 质量属性相关，通常可采用&nbsp;（6） 架构策略实现该属性。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350351,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 可用性 ",
        " 安全性 ",
        " 可测试性 ",
        " 可修改性 "
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 350357,
    "question_title": "<p>某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与&nbsp;（1） 质量属性相关，通常可采用&nbsp;（2） 架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与&nbsp;（3） 质量属性相关，通常可采用&nbsp;（4） 架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与&nbsp;（5） 质量属性相关，通常可采用&nbsp;（6） 架构策略实现该属性。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 内置监控器 ",
      " 记录/回放 ",
      " 追踪审计 ",
      " 维护现有接口 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 26,
      "belong_page": 1,
      "question_id": 350357,
      "question_title": "<p>某公司欲开发一个网上商城系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“系统主站断电后，能够在2分钟内自动切换到备用站点，并恢复正常运行”主要与&nbsp;（1） 质量属性相关，通常可采用&nbsp;（2） 架构策略实现该属性；“在并发用户数不超过1000人时，用户的交易请求应该在0.5s内完成”主要与&nbsp;（3） 质量属性相关，通常可采用&nbsp;（4） 架构策略实现该属性；“系统应该能够抵挡恶意用户的入侵行为，并进行报警和记录”主要与&nbsp;（5） 质量属性相关，通常可采用&nbsp;（6） 架构策略实现该属性。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350351,
      "score_rule": "",
      "material_text": null,
      "sort_son": "6",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 内置监控器 ",
        " 记录/回放 ",
        " 追踪审计 ",
        " 维护现有接口 "
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 355067,
    "question_title": "<p>【51CTO学堂-学员回忆版】软件系统质量属性（Quality Attribute）是一个系统的可测量或者可测试的属性，它被用来描述系统满足利益相关者需求的程度，其中，（1）关注的是当需要修改缺陷、增加功能、提高质量属性时，定位修改点并实施修改的难易程度，（2）关注的是当用户数和数据量增加时，软件系统维持高服务质量的能力。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 可靠性 ",
      "可测试性",
      "可维护性&nbsp;",
      "可重用性"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 27,
      "belong_page": 1,
      "question_id": 355067,
      "question_title": "<p>【51CTO学堂-学员回忆版】软件系统质量属性（Quality Attribute）是一个系统的可测量或者可测试的属性，它被用来描述系统满足利益相关者需求的程度，其中，（1）关注的是当需要修改缺陷、增加功能、提高质量属性时，定位修改点并实施修改的难易程度，（2）关注的是当用户数和数据量增加时，软件系统维持高服务质量的能力。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 355066,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 可靠性 ",
        "可测试性",
        "可维护性&nbsp;",
        "可重用性"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 355075,
    "question_title": "<p>【51CTO学堂-学员回忆版】为了精确描述软件系统的质量属性，通常采用质量属性场景（Quality AttributeScenario）作为描述质量属性的手段。质量属性场景是一个具体的质量属性需求，是利益相关者与系统的交互的简短陈述，它由刺激源、刺激、环境、制品、（1）六部分组成。其中，想要学习系统特性、有效使用系统、使错误的影响最低、适配系统、对系统满意属于（2）质量属性场景的刺激。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "响应和响应度量",
      "系统和系统响应",
      "依赖和响应",
      "响应和优先"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 28,
      "belong_page": 1,
      "question_id": 355075,
      "question_title": "<p>【51CTO学堂-学员回忆版】为了精确描述软件系统的质量属性，通常采用质量属性场景（Quality AttributeScenario）作为描述质量属性的手段。质量属性场景是一个具体的质量属性需求，是利益相关者与系统的交互的简短陈述，它由刺激源、刺激、环境、制品、（1）六部分组成。其中，想要学习系统特性、有效使用系统、使错误的影响最低、适配系统、对系统满意属于（2）质量属性场景的刺激。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 355074,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "响应和响应度量",
        "系统和系统响应",
        "依赖和响应",
        "响应和优先"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 371988,
    "question_title": "<p>某公司欲开发一个在线教育平台。在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“网站在并发用户数量10万的负载情况下，用户请求的平均响应时间应小于3秒”这一场景主要与（1）质量属性相关，通常可采用（2）架构策略实现该属性；“主站宕机后，系统能够在10秒内自动切换至备用站点并恢复正常运行”主要与（3）质量属性相关，通常可采用（4）架构策略实现该属性； “系统完成上线后，少量的外围业务功能和界面的调整与修改不超过10人·月”主要与（5）质量属性相关。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "性能&nbsp;",
      "可用性",
      "易用性&nbsp;",
      "可修改性"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 29,
      "belong_page": 1,
      "question_id": 371988,
      "question_title": "<p>某公司欲开发一个在线教育平台。在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“网站在并发用户数量10万的负载情况下，用户请求的平均响应时间应小于3秒”这一场景主要与（1）质量属性相关，通常可采用（2）架构策略实现该属性；“主站宕机后，系统能够在10秒内自动切换至备用站点并恢复正常运行”主要与（3）质量属性相关，通常可采用（4）架构策略实现该属性； “系统完成上线后，少量的外围业务功能和界面的调整与修改不超过10人·月”主要与（5）质量属性相关。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371987,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "性能&nbsp;",
        "可用性",
        "易用性&nbsp;",
        "可修改性"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 371989,
    "question_title": "<p>某公司欲开发一个在线教育平台。在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“网站在并发用户数量10万的负载情况下，用户请求的平均响应时间应小于3秒”这一场景主要与（1）质量属性相关，通常可采用（2）架构策略实现该属性；“主站宕机后，系统能够在10秒内自动切换至备用站点并恢复正常运行”主要与（3）质量属性相关，通常可采用（4）架构策略实现该属性； “系统完成上线后，少量的外围业务功能和界面的调整与修改不超过10人·月”主要与（5）质量属性相关。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "抽象接口",
      "信息隐藏",
      "主动冗余&nbsp;",
      "资源调度"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 30,
      "belong_page": 1,
      "question_id": 371989,
      "question_title": "<p>某公司欲开发一个在线教育平台。在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“网站在并发用户数量10万的负载情况下，用户请求的平均响应时间应小于3秒”这一场景主要与（1）质量属性相关，通常可采用（2）架构策略实现该属性；“主站宕机后，系统能够在10秒内自动切换至备用站点并恢复正常运行”主要与（3）质量属性相关，通常可采用（4）架构策略实现该属性； “系统完成上线后，少量的外围业务功能和界面的调整与修改不超过10人·月”主要与（5）质量属性相关。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371987,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "抽象接口",
        "信息隐藏",
        "主动冗余&nbsp;",
        "资源调度"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 371990,
    "question_title": "<p>某公司欲开发一个在线教育平台。在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“网站在并发用户数量10万的负载情况下，用户请求的平均响应时间应小于3秒”这一场景主要与（1）质量属性相关，通常可采用（2）架构策略实现该属性；“主站宕机后，系统能够在10秒内自动切换至备用站点并恢复正常运行”主要与（3）质量属性相关，通常可采用（4）架构策略实现该属性； “系统完成上线后，少量的外围业务功能和界面的调整与修改不超过10人·月”主要与（5）质量属性相关。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "性能&nbsp;",
      "可用性",
      "可修改性",
      "易用性"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 31,
      "belong_page": 1,
      "question_id": 371990,
      "question_title": "<p>某公司欲开发一个在线教育平台。在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“网站在并发用户数量10万的负载情况下，用户请求的平均响应时间应小于3秒”这一场景主要与（1）质量属性相关，通常可采用（2）架构策略实现该属性；“主站宕机后，系统能够在10秒内自动切换至备用站点并恢复正常运行”主要与（3）质量属性相关，通常可采用（4）架构策略实现该属性； “系统完成上线后，少量的外围业务功能和界面的调整与修改不超过10人·月”主要与（5）质量属性相关。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371987,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "性能&nbsp;",
        "可用性",
        "可修改性",
        "易用性"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 371991,
    "question_title": "<p>某公司欲开发一个在线教育平台。在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“网站在并发用户数量10万的负载情况下，用户请求的平均响应时间应小于3秒”这一场景主要与（1）质量属性相关，通常可采用（2）架构策略实现该属性；“主站宕机后，系统能够在10秒内自动切换至备用站点并恢复正常运行”主要与（3）质量属性相关，通常可采用（4）架构策略实现该属性； “系统完成上线后，少量的外围业务功能和界面的调整与修改不超过10人·月”主要与（5）质量属性相关。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "记录／回放",
      "操作串行化",
      "心跳",
      "增加计算资源"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 32,
      "belong_page": 1,
      "question_id": 371991,
      "question_title": "<p>某公司欲开发一个在线教育平台。在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“网站在并发用户数量10万的负载情况下，用户请求的平均响应时间应小于3秒”这一场景主要与（1）质量属性相关，通常可采用（2）架构策略实现该属性；“主站宕机后，系统能够在10秒内自动切换至备用站点并恢复正常运行”主要与（3）质量属性相关，通常可采用（4）架构策略实现该属性； “系统完成上线后，少量的外围业务功能和界面的调整与修改不超过10人·月”主要与（5）质量属性相关。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371987,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "记录／回放",
        "操作串行化",
        "心跳",
        "增加计算资源"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 371992,
    "question_title": "<p>某公司欲开发一个在线教育平台。在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“网站在并发用户数量10万的负载情况下，用户请求的平均响应时间应小于3秒”这一场景主要与（1）质量属性相关，通常可采用（2）架构策略实现该属性；“主站宕机后，系统能够在10秒内自动切换至备用站点并恢复正常运行”主要与（3）质量属性相关，通常可采用（4）架构策略实现该属性； “系统完成上线后，少量的外围业务功能和界面的调整与修改不超过10人·月”主要与（5）质量属性相关。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "可用性",
      "性能",
      "易用性&nbsp;",
      "可修改性"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 33,
      "belong_page": 1,
      "question_id": 371992,
      "question_title": "<p>某公司欲开发一个在线教育平台。在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“网站在并发用户数量10万的负载情况下，用户请求的平均响应时间应小于3秒”这一场景主要与（1）质量属性相关，通常可采用（2）架构策略实现该属性；“主站宕机后，系统能够在10秒内自动切换至备用站点并恢复正常运行”主要与（3）质量属性相关，通常可采用（4）架构策略实现该属性； “系统完成上线后，少量的外围业务功能和界面的调整与修改不超过10人·月”主要与（5）质量属性相关。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371987,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "可用性",
        "性能",
        "易用性&nbsp;",
        "可修改性"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 507286,
    "question_title": "基于软件系统的生命周期,可以将软件系统的质量属性分为开发期质量属性和运行期质量属性两个部分。其中，（1）关注软件因适应新需求或需求变化而增加新功能的能力；（2）是关注软件系统同时兼顾向合法用户提供服务，以及阻止非授权使用的能力。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "安全性",
      "可扩展性",
      "性能",
      "可重用性"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 34,
      "belong_page": 1,
      "question_id": 507286,
      "question_title": "基于软件系统的生命周期,可以将软件系统的质量属性分为开发期质量属性和运行期质量属性两个部分。其中，（1）关注软件因适应新需求或需求变化而增加新功能的能力；（2）是关注软件系统同时兼顾向合法用户提供服务，以及阻止非授权使用的能力。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 507285,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "安全性",
        "可扩展性",
        "性能",
        "可重用性"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 507287,
    "question_title": "基于软件系统的生命周期,可以将软件系统的质量属性分为开发期质量属性和运行期质量属性两个部分。其中，（1）关注软件因适应新需求或需求变化而增加新功能的能力；（2）是关注软件系统同时兼顾向合法用户提供服务，以及阻止非授权使用的能力。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "可测试性",
      "安全性",
      "可移植性",
      "可用性"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 35,
      "belong_page": 1,
      "question_id": 507287,
      "question_title": "基于软件系统的生命周期,可以将软件系统的质量属性分为开发期质量属性和运行期质量属性两个部分。其中，（1）关注软件因适应新需求或需求变化而增加新功能的能力；（2）是关注软件系统同时兼顾向合法用户提供服务，以及阻止非授权使用的能力。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 507285,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "可测试性",
        "安全性",
        "可移植性",
        "可用性"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 507292,
    "question_title": "（ ）不属于可用性。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "可用时间",
      "可用时间间隔",
      "数据延迟时间",
      "故障间隔"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 36,
      "belong_page": 1,
      "question_id": 507292,
      "question_title": "（ ）不属于可用性。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507292,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "可用时间",
        "可用时间间隔",
        "数据延迟时间",
        "故障间隔"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 507330,
    "question_title": "下面不属于系统易用性关注的指标的是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "服务器修复能力",
      "用户满意度",
      "系统学习曲线",
      "操作效率"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 37,
      "belong_page": 1,
      "question_id": 507330,
      "question_title": "下面不属于系统易用性关注的指标的是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507330,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "服务器修复能力",
        "用户满意度",
        "系统学习曲线",
        "操作效率"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 523296,
    "question_title": "敏感数据密文处理属于的质量属性是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "安全性",
      "可靠性",
      "性能",
      "可用性"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 38,
      "belong_page": 1,
      "question_id": 523296,
      "question_title": "敏感数据密文处理属于的质量属性是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523296,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "安全性",
        "可靠性",
        "性能",
        "可用性"
      ]
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 54354,
    "question_title": "<p>阅读以下软件架构设计的问题，在答题纸上回答问题1和问题2。<br/>某软件开发公司欲为某电子商务企业开发一个在线交易平台，支持客户完成网上购物活动中的在线交易。在系统开发之初，企业对该平台提出了如下要求：<br/>（1）在线交易平台必须在1s内完成客户的交易请求。<br/>（2）该平台必须保证客户个人信息和交易信息的安全。<br/>（3）当发生故障时，该平台的平均故障恢复时间必须小于10s。<br/>（4）由于企业业务发展较快，需要经常为该平台添加新功能或进行硬件升级。添加新功能或进行硬件升级必须在6小时内完成。<br/>针对这些要求，该软件开发公司决定采用基于架构的软件开发方法，以架构为核心进行在线交易平台的设计与实现。<br/>【问题1】（9分）<br/>软件质量属性是影响软件架构设计的重要因素。请用200字以内的文字列举六种不同的软件质量属性名称，并解释其含义。<br/>【问题2】（16分）<br/>请对该在线交易平台的4个要求进行分析，用300字以内的文字指出每个要求对应何种软件质量属性；并针对每种软件质量属性，各给出2种实现该质量属性的架构设计策略。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题1】<br/>常见的软件质量属性有多种，例如性能（Performance）、可用性（Availability）、可靠性（Reliability）、健壮性（Robustness）、安全性（Security）、可修改性（Modification）、可变性（Changeability）、易用性（Usability）、可测试性（Testability）、功能性（Functionality）和互操作性（Inter-operation）等。<br/>这些质量属性的具体含义是：<br/>（1）性能是指系统的响应能力，即要经过多长时间才能对某个事件做出响应，或者在某段时间内系统所能处理事件的个数。<br/>（2）可用性是系统能够正常运行的时间比例。<br/>（3）可靠性是指软件系统在应用或错误面前，在意外或错误使用的情况下维持软件系统功能特性的基本能力。<br/>（4）健壮性是指在处理或环境中，系统能够承受压力或变更的能力。<br/>（5）安全性是指系统向合法用户提供服务的同时能够阻止非授权用户使用的企图或拒绝服务的能力。<br/>（6）可修改性是指能够快速地以较高的性能价格比对系统进行变更的能力。<br/>（7）可变性是指体系结构经扩充或变更成为新体系结构的能力。<br/>（8）易用性是衡量用户使用一个软件产品完成指定任务的难易程度。<br/>（9）可测试性是指软件发现故障并隔离、定位其故障的能力特性，以及在一定的时间和成本前提下，进行测试设计、测试执行的能力。<br/>（10）功能性是系统所能完成所期望工作的能力。<br/>（11）互操作性是指系统与外界或系统与系统之间的相互作用能力。<br/>【问题2】<br/>（1）在线交易平台必须在1s内完成客户的交易请求。该要求主要对应性能，可以采用的架构设计策略有增加计算资源、改善资源需求（减少计算复杂度等）、资源管理（并发、数据复制等）和资源调度（先进先出队列、优先级队列等）。<br/>（2）该平台必须严格保证客户个人信息和交易信息的保密性和安全性。该要求主要对应安全性，可以采用的架构设计策略有抵御攻击（授权、认证和限制访问等）、攻击检测（入侵检测等）、从攻击中恢复（部分可用性策略）和信息审计等。<br/>（3）当发生故障时，该平台的平均故障恢复时间必须小于l0s。该要求主要对应可用性，可以采用的架构设计策略有Ping/Echo、心跳、异常和主动冗余等。<br/>（4）由于企业业务发展较快，需要经常为该平台添加新功能或进行硬件升级。添加新功能或进行平台升级必须在6小时内完成。该要求主要对应可修改性，可以采用的架构设计策略有软件模块泛化、限制模块之间通信、使用中介和延迟绑定等。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 39,
      "belong_page": 1,
      "question_id": 54354,
      "question_title": "<p>阅读以下软件架构设计的问题，在答题纸上回答问题1和问题2。<br/>某软件开发公司欲为某电子商务企业开发一个在线交易平台，支持客户完成网上购物活动中的在线交易。在系统开发之初，企业对该平台提出了如下要求：<br/>（1）在线交易平台必须在1s内完成客户的交易请求。<br/>（2）该平台必须保证客户个人信息和交易信息的安全。<br/>（3）当发生故障时，该平台的平均故障恢复时间必须小于10s。<br/>（4）由于企业业务发展较快，需要经常为该平台添加新功能或进行硬件升级。添加新功能或进行硬件升级必须在6小时内完成。<br/>针对这些要求，该软件开发公司决定采用基于架构的软件开发方法，以架构为核心进行在线交易平台的设计与实现。<br/>【问题1】（9分）<br/>软件质量属性是影响软件架构设计的重要因素。请用200字以内的文字列举六种不同的软件质量属性名称，并解释其含义。<br/>【问题2】（16分）<br/>请对该在线交易平台的4个要求进行分析，用300字以内的文字指出每个要求对应何种软件质量属性；并针对每种软件质量属性，各给出2种实现该质量属性的架构设计策略。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 54354,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题1】<br/>常见的软件质量属性有多种，例如性能（Performance）、可用性（Availability）、可靠性（Reliability）、健壮性（Robustness）、安全性（Security）、可修改性（Modification）、可变性（Changeability）、易用性（Usability）、可测试性（Testability）、功能性（Functionality）和互操作性（Inter-operation）等。<br/>这些质量属性的具体含义是：<br/>（1）性能是指系统的响应能力，即要经过多长时间才能对某个事件做出响应，或者在某段时间内系统所能处理事件的个数。<br/>（2）可用性是系统能够正常运行的时间比例。<br/>（3）可靠性是指软件系统在应用或错误面前，在意外或错误使用的情况下维持软件系统功能特性的基本能力。<br/>（4）健壮性是指在处理或环境中，系统能够承受压力或变更的能力。<br/>（5）安全性是指系统向合法用户提供服务的同时能够阻止非授权用户使用的企图或拒绝服务的能力。<br/>（6）可修改性是指能够快速地以较高的性能价格比对系统进行变更的能力。<br/>（7）可变性是指体系结构经扩充或变更成为新体系结构的能力。<br/>（8）易用性是衡量用户使用一个软件产品完成指定任务的难易程度。<br/>（9）可测试性是指软件发现故障并隔离、定位其故障的能力特性，以及在一定的时间和成本前提下，进行测试设计、测试执行的能力。<br/>（10）功能性是系统所能完成所期望工作的能力。<br/>（11）互操作性是指系统与外界或系统与系统之间的相互作用能力。<br/>【问题2】<br/>（1）在线交易平台必须在1s内完成客户的交易请求。该要求主要对应性能，可以采用的架构设计策略有增加计算资源、改善资源需求（减少计算复杂度等）、资源管理（并发、数据复制等）和资源调度（先进先出队列、优先级队列等）。<br/>（2）该平台必须严格保证客户个人信息和交易信息的保密性和安全性。该要求主要对应安全性，可以采用的架构设计策略有抵御攻击（授权、认证和限制访问等）、攻击检测（入侵检测等）、从攻击中恢复（部分可用性策略）和信息审计等。<br/>（3）当发生故障时，该平台的平均故障恢复时间必须小于l0s。该要求主要对应可用性，可以采用的架构设计策略有Ping/Echo、心跳、异常和主动冗余等。<br/>（4）由于企业业务发展较快，需要经常为该平台添加新功能或进行硬件升级。添加新功能或进行平台升级必须在6小时内完成。该要求主要对应可修改性，可以采用的架构设计策略有软件模块泛化、限制模块之间通信、使用中介和延迟绑定等。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 63698,
    "question_title": "<p>阅读以下关于软件系统设计的叙述，在答题纸上回答问题1至问题3。</p><p>[说明]某文化产业集团委托软件公司开发一套文化用品商城系统，业务涉及文化用品销售、定制、竞拍和点评等板块，以提升商城的信息化建设水平。该软件公司组织项目组完成了需求调研，现已进入到系统架构设计阶段。考虑到系统需求对架构设计决策的影响，项目组先列出了可能影响系统架构设计的部分需求如下:</p><p>(a) 用户界面支持用户的个性化定制;</p><p>(b) 系统需要支持当前主流的标准和服务，特别是通信协议和平台接口;</p><p>(c) 用户操作的响应时间应不大于3秒，竞拍板块不大于1秒;</p><p>(d) 系统具有故障诊断和快速恢复能力;</p><p>(e) 用户密码需要加密传输;</p><p>(f) 系统需要支持不低于2G的数据缓存;</p><p>(g) 用户操作停滞时间超过定时限需要重新登录验证;</p><p>(h) 系统支持用户选择汉语、英语或法语三种语言之一进行操作。</p><p>项目组提出了两种系统架构设计方案:瘦客户端C/S架构和胖客户端C/S架构，经过对，上述需求逐条分析和讨论，最终决定采用瘦客户端C/S架构进行设计。</p><p><br/></p><p>[问题1](8分)&nbsp;</p><p>在系统架构设计中，决定系统架构设计的非功能性需求主要有四类:操作性需求、性能需求、安全性需求和文化需求。请简要说明四类需求的含义。</p><p>[问题2] (8分)</p><p>根据表1-1的分类，将题干所给出的系统需求(a) ~ (h) 分别填入(1) ~ (4)&nbsp;</p><p>表1-1需求分类</p><p><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181127/1543312292494065.jpg\" title=\"1543312292494065.jpg\" alt=\"1.jpg\"/></p><p>问题3 (9分)<br/></p><p>请说明瘦客户端C/S架构能够满足题干中给出的哪些系统需求(只需要回答出三个系统需求)。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>[问题1]</p><p>系统性能需求( Performance Requirements) : 指响应时间、吞吐量、准确性、有效性、资源利用率等与系统完成任务效率相关的指标。可靠性、可用性等指标可归为此类。</p><p>安全性需求( Security Requirements ) :系统向合法用户提供服务并阻止非授权用户使用服务方面的系统需求。</p><p>操作性需求( Operational Requirements) :与用户操作使用系统相关的一些需求 。</p><p>文化需求( Cultural Requirements) : 带有文化背景因素的系统需求。</p><p>[问题2]</p><p>(1) (a) (b)</p><p>(2) (c)(d)(f)</p><p>(3) (e) (g)</p><p>(4) (h)</p><p>[问题3]</p><p>b,c,h（此题不严谨）</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 40,
      "belong_page": 1,
      "question_id": 63698,
      "question_title": "<p>阅读以下关于软件系统设计的叙述，在答题纸上回答问题1至问题3。</p><p>[说明]某文化产业集团委托软件公司开发一套文化用品商城系统，业务涉及文化用品销售、定制、竞拍和点评等板块，以提升商城的信息化建设水平。该软件公司组织项目组完成了需求调研，现已进入到系统架构设计阶段。考虑到系统需求对架构设计决策的影响，项目组先列出了可能影响系统架构设计的部分需求如下:</p><p>(a) 用户界面支持用户的个性化定制;</p><p>(b) 系统需要支持当前主流的标准和服务，特别是通信协议和平台接口;</p><p>(c) 用户操作的响应时间应不大于3秒，竞拍板块不大于1秒;</p><p>(d) 系统具有故障诊断和快速恢复能力;</p><p>(e) 用户密码需要加密传输;</p><p>(f) 系统需要支持不低于2G的数据缓存;</p><p>(g) 用户操作停滞时间超过定时限需要重新登录验证;</p><p>(h) 系统支持用户选择汉语、英语或法语三种语言之一进行操作。</p><p>项目组提出了两种系统架构设计方案:瘦客户端C/S架构和胖客户端C/S架构，经过对，上述需求逐条分析和讨论，最终决定采用瘦客户端C/S架构进行设计。</p><p><br/></p><p>[问题1](8分)&nbsp;</p><p>在系统架构设计中，决定系统架构设计的非功能性需求主要有四类:操作性需求、性能需求、安全性需求和文化需求。请简要说明四类需求的含义。</p><p>[问题2] (8分)</p><p>根据表1-1的分类，将题干所给出的系统需求(a) ~ (h) 分别填入(1) ~ (4)&nbsp;</p><p>表1-1需求分类</p><p><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181127/1543312292494065.jpg\" title=\"1543312292494065.jpg\" alt=\"1.jpg\"/></p><p>问题3 (9分)<br/></p><p>请说明瘦客户端C/S架构能够满足题干中给出的哪些系统需求(只需要回答出三个系统需求)。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 63698,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>[问题1]</p><p>系统性能需求( Performance Requirements) : 指响应时间、吞吐量、准确性、有效性、资源利用率等与系统完成任务效率相关的指标。可靠性、可用性等指标可归为此类。</p><p>安全性需求( Security Requirements ) :系统向合法用户提供服务并阻止非授权用户使用服务方面的系统需求。</p><p>操作性需求( Operational Requirements) :与用户操作使用系统相关的一些需求 。</p><p>文化需求( Cultural Requirements) : 带有文化背景因素的系统需求。</p><p>[问题2]</p><p>(1) (a) (b)</p><p>(2) (c)(d)(f)</p><p>(3) (e) (g)</p><p>(4) (h)</p><p>[问题3]</p><p>b,c,h（此题不严谨）</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 151259,
    "question_title": "<p>阅读以下关于软件架构评估的说明，回答下列问题。</p><p style=\"margin-top: 5px;text-indent: 28px\">【说明】</p><p>某软件公司拟为某市级公安机关开发一套特种车辆管理与监控系统，以提高特种车辆管理的效率和准确性。在系统需求分析与架构设计阶段，用户提出的部分需求和关键质量属性场景如下：</p><p>&nbsp;&nbsp; &nbsp;(a)系统用户分为管理员、分管领导和普通民警等三类；</p><p>&nbsp;&nbsp; &nbsp;(b)正常负载情况下，系统必须在0.5秒内对用户的车辆查询请求进行响应；</p><p>&nbsp;&nbsp; &nbsp;(c)系统能够抵御99.999%的黑客攻击；</p><p>&nbsp;&nbsp; &nbsp;(d)系统的用户名必须以字母开头，长度不少于5个字符；</p><p>&nbsp;&nbsp; &nbsp;(e)对查询请求处理时间的要求将影响系统的数据传输协议和处理过程的设计；</p><p>&nbsp;&nbsp; &nbsp;(f)网络失效后，系统需要在2分钟内发现并启用备用网络系统；</p><p>&nbsp;&nbsp; &nbsp;(g)在系统升级时，需要保证在1个月内添加一个新的消息处理中间件；</p><p>&nbsp;&nbsp; &nbsp;(h)查询过程中涉及到的车辆实时视频传输必须保证20帧/秒的速率，且画面具有600×480的分辨率；</p><p>&nbsp;&nbsp; &nbsp;(i)更改系统加密的级别将对安全性和性能产生影响；</p><p>&nbsp;&nbsp; &nbsp;(j)系统主站点断电后，需要在3秒内将请求重定向到备用站点；</p><p>&nbsp;&nbsp; &nbsp;(k)假设每秒中用户查询请求的数量是10个，处理请求的时间为30毫秒，则“在1秒内完成用户的查询请求”这一要求是可以实现的；</p><p>&nbsp;&nbsp; &nbsp;(l)对用户信息数据的授权访问必须保证99.999%的安全性；</p><p>&nbsp;&nbsp; &nbsp;(m)目前对“车辆信息实时监控”业务逻辑的描述尚未达成共识，这可能导致部分业务功能模块的重复，影响系统的可修改性；</p><p>&nbsp;&nbsp; &nbsp;(n)更改系统的Web界面接口必须在1周内完成；</p><p>&nbsp;&nbsp; &nbsp;(o)系统需要提供远程调试接口，并支持系统的远程调试。</p><p>&nbsp;&nbsp; &nbsp;在对系统需求和质量属性场景进行分析的基础上，系统的架构师给出了三个候选的架构设计方案。公司目前正在组织系统开发的相关人员对系统架构进行评估。</p><p>【问题1】（12分）</p><p>在架构评估过程中，质量属性效用树(utility tree)是对系统质量属性进行识别和优先级排序的重要工具。请给出合适的质量属性，填入图1中(1)、(2)空白处；并选择题干描述中的(a)～(o)，将恰当的序号填入(3)～(6)空白处，完成该系统的效用树。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20190925/1569399023297847.jpg\" title=\"1569399023297847.jpg\" alt=\"1.jpg\"/><br/><p>【问题2】（3分）</p><p>在架构评估过程中，需要正确识别系统的架构风险、敏感点和权衡点请从题干描述中的(a)～(o)各选出1个属于系统架构风险、敏感点和权衡点的描述。</p>【问题3】（10分）<p>该项目的四种质量属性分别用什么设计策略实现？（每种举例2个，只写名词即可）</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "【问题1】<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20190925/1569399071239732.jpg\" title=\"1569399071239732.jpg\" alt=\"1.jpg\"/><p>【问题2】<br/></p><p>(m)描述的是系统架构风险；(e)描述的是敏感点；(i)描述的是权衡点。</p><p>【问题3】<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20190925/1569399110382196.jpg\" title=\"1569399110382196.jpg\" alt=\"1.jpg\"/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 41,
      "belong_page": 1,
      "question_id": 151259,
      "question_title": "<p>阅读以下关于软件架构评估的说明，回答下列问题。</p><p style=\"margin-top: 5px;text-indent: 28px\">【说明】</p><p>某软件公司拟为某市级公安机关开发一套特种车辆管理与监控系统，以提高特种车辆管理的效率和准确性。在系统需求分析与架构设计阶段，用户提出的部分需求和关键质量属性场景如下：</p><p>&nbsp;&nbsp; &nbsp;(a)系统用户分为管理员、分管领导和普通民警等三类；</p><p>&nbsp;&nbsp; &nbsp;(b)正常负载情况下，系统必须在0.5秒内对用户的车辆查询请求进行响应；</p><p>&nbsp;&nbsp; &nbsp;(c)系统能够抵御99.999%的黑客攻击；</p><p>&nbsp;&nbsp; &nbsp;(d)系统的用户名必须以字母开头，长度不少于5个字符；</p><p>&nbsp;&nbsp; &nbsp;(e)对查询请求处理时间的要求将影响系统的数据传输协议和处理过程的设计；</p><p>&nbsp;&nbsp; &nbsp;(f)网络失效后，系统需要在2分钟内发现并启用备用网络系统；</p><p>&nbsp;&nbsp; &nbsp;(g)在系统升级时，需要保证在1个月内添加一个新的消息处理中间件；</p><p>&nbsp;&nbsp; &nbsp;(h)查询过程中涉及到的车辆实时视频传输必须保证20帧/秒的速率，且画面具有600×480的分辨率；</p><p>&nbsp;&nbsp; &nbsp;(i)更改系统加密的级别将对安全性和性能产生影响；</p><p>&nbsp;&nbsp; &nbsp;(j)系统主站点断电后，需要在3秒内将请求重定向到备用站点；</p><p>&nbsp;&nbsp; &nbsp;(k)假设每秒中用户查询请求的数量是10个，处理请求的时间为30毫秒，则“在1秒内完成用户的查询请求”这一要求是可以实现的；</p><p>&nbsp;&nbsp; &nbsp;(l)对用户信息数据的授权访问必须保证99.999%的安全性；</p><p>&nbsp;&nbsp; &nbsp;(m)目前对“车辆信息实时监控”业务逻辑的描述尚未达成共识，这可能导致部分业务功能模块的重复，影响系统的可修改性；</p><p>&nbsp;&nbsp; &nbsp;(n)更改系统的Web界面接口必须在1周内完成；</p><p>&nbsp;&nbsp; &nbsp;(o)系统需要提供远程调试接口，并支持系统的远程调试。</p><p>&nbsp;&nbsp; &nbsp;在对系统需求和质量属性场景进行分析的基础上，系统的架构师给出了三个候选的架构设计方案。公司目前正在组织系统开发的相关人员对系统架构进行评估。</p><p>【问题1】（12分）</p><p>在架构评估过程中，质量属性效用树(utility tree)是对系统质量属性进行识别和优先级排序的重要工具。请给出合适的质量属性，填入图1中(1)、(2)空白处；并选择题干描述中的(a)～(o)，将恰当的序号填入(3)～(6)空白处，完成该系统的效用树。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20190925/1569399023297847.jpg\" title=\"1569399023297847.jpg\" alt=\"1.jpg\"/><br/><p>【问题2】（3分）</p><p>在架构评估过程中，需要正确识别系统的架构风险、敏感点和权衡点请从题干描述中的(a)～(o)各选出1个属于系统架构风险、敏感点和权衡点的描述。</p>【问题3】（10分）<p>该项目的四种质量属性分别用什么设计策略实现？（每种举例2个，只写名词即可）</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 151259,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "【问题1】<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20190925/1569399071239732.jpg\" title=\"1569399071239732.jpg\" alt=\"1.jpg\"/><p>【问题2】<br/></p><p>(m)描述的是系统架构风险；(e)描述的是敏感点；(i)描述的是权衡点。</p><p>【问题3】<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20190925/1569399110382196.jpg\" title=\"1569399110382196.jpg\" alt=\"1.jpg\"/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 286348,
    "question_title": "<p>试题一：</p><p>某公司拟开发一套在线软件开发系统，支持用户通过浏览器在线进行软件开发活动。该系统的重要功能，包括我的编辑，语法高亮提示，代码编频，系统调试，代码气库管理等，在需求分析与架构设计阶段，公司提出的需求和质量属性描述如下：</p><p>&nbsp;a)根据用户的付费情况对用户进行分类，并根据类别提供相应的开发功能。</p><p>&nbsp;b)在正常负载情况下，系统应该在0.2s内对用户的界面操作请求进行响应</p><p>&nbsp;c)系统应该具备完善的安全防护措措施，能够对黑客的攻击行为进行检测和防御</p><p>&nbsp;d)系统主站点断电后应在3s内将请求重定向到备用站点</p><p>e)系统支持中文昵称，但用户名必须以字母开头，长度不少于8个字符</p><p>&nbsp;f)系统宕机后，需要在15s内发现错误，并启用备用系统</p><p>&nbsp;g)在正常负载情况下，用户的代码提交请求应在0.5s内完成</p><p>&nbsp;h)系统支持硬件设备灵活扩容，应保证在2人天内完成</p><p>&nbsp;i)系统需要针对代码仓库的所有操作进行详细记录，便于后期查阅与审计</p><p>&nbsp;j)更改系统web界面风格需要在4人天内完成</p><p>&nbsp;k)系统本身需要提供远程调试接口，支持开发团队进行远程排错</p><p>在对系统需求质量属性和架构特性进行分析的基础上，该公司的系统架构给了两种方案</p><p>一、</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201108/1604816273737686.jpg\" title=\"1604816273737686.jpg\" alt=\"1.jpg\"/><p>二、质量属性填入（1）（2） &nbsp;（a-k）填入（3）-（6）</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201108/1604816289466789.jpg\" title=\"1604816289466789.jpg\" alt=\"1.jpg\"/>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>一、</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201108/1604816336828787.jpg\" title=\"1604816336828787.jpg\" alt=\"1.jpg\"/><p>二、</p><p>（1）安全性（2） 可修改性 （3）g（4）i（5）f（6）j</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 42,
      "belong_page": 1,
      "question_id": 286348,
      "question_title": "<p>试题一：</p><p>某公司拟开发一套在线软件开发系统，支持用户通过浏览器在线进行软件开发活动。该系统的重要功能，包括我的编辑，语法高亮提示，代码编频，系统调试，代码气库管理等，在需求分析与架构设计阶段，公司提出的需求和质量属性描述如下：</p><p>&nbsp;a)根据用户的付费情况对用户进行分类，并根据类别提供相应的开发功能。</p><p>&nbsp;b)在正常负载情况下，系统应该在0.2s内对用户的界面操作请求进行响应</p><p>&nbsp;c)系统应该具备完善的安全防护措措施，能够对黑客的攻击行为进行检测和防御</p><p>&nbsp;d)系统主站点断电后应在3s内将请求重定向到备用站点</p><p>e)系统支持中文昵称，但用户名必须以字母开头，长度不少于8个字符</p><p>&nbsp;f)系统宕机后，需要在15s内发现错误，并启用备用系统</p><p>&nbsp;g)在正常负载情况下，用户的代码提交请求应在0.5s内完成</p><p>&nbsp;h)系统支持硬件设备灵活扩容，应保证在2人天内完成</p><p>&nbsp;i)系统需要针对代码仓库的所有操作进行详细记录，便于后期查阅与审计</p><p>&nbsp;j)更改系统web界面风格需要在4人天内完成</p><p>&nbsp;k)系统本身需要提供远程调试接口，支持开发团队进行远程排错</p><p>在对系统需求质量属性和架构特性进行分析的基础上，该公司的系统架构给了两种方案</p><p>一、</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201108/1604816273737686.jpg\" title=\"1604816273737686.jpg\" alt=\"1.jpg\"/><p>二、质量属性填入（1）（2） &nbsp;（a-k）填入（3）-（6）</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201108/1604816289466789.jpg\" title=\"1604816289466789.jpg\" alt=\"1.jpg\"/>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 286348,
      "score_rule": "",
      "material_text": "<p>试题一：</p><p>某公司拟开发一套在线软件开发系统，支持用户通过浏览器在线进行软件开发活动。该系统的重要功能，包括我的编辑，语法高亮提示，代码编频，系统调试，代码气库管理等，在需求分析与架构设计阶段，公司提出的需求和质量属性描述如下：</p><p>&nbsp;a)根据用户的付费情况对用户进行分类，并根据类别提供相应的开发功能。</p><p>&nbsp;b)在正常负载情况下，系统应该在0.2s内对用户的界面操作请求进行响应</p><p>&nbsp;c)系统应该具备完善的安全防护措措施，能够对黑客的攻击行为进行检测和防御</p><p>&nbsp;d)系统主站点断电后应在3s内将请求重定向到备用站点</p><p>e)系统支持中文昵称，但用户名必须以字母开头，长度不少于8个字符</p><p>&nbsp;f)系统宕机后，需要在15s内发现错误，并启用备用系统</p><p>&nbsp;g)在正常负载情况下，用户的代码提交请求应在0.5s内完成</p><p>&nbsp;h)系统支持硬件设备灵活扩容，应保证在2人天内完成</p><p>&nbsp;i)系统需要针对代码仓库的所有操作进行详细记录，便于后期查阅与审计</p><p>&nbsp;j)更改系统web界面风格需要在4人天内完成</p><p>&nbsp;k)系统本身需要提供远程调试接口，支持开发团队进行远程排错</p><p>在对系统需求质量属性和架构特性进行分析的基础上，该公司的系统架构给了两种方案</p><p>一、</p><img src=\"https://s2.51cto.com/images/20201108/1604816273737686.jpg\" title=\"1604816273737686.jpg\" alt=\"1.jpg\"/><p>二、质量属性填入（1）（2） &nbsp;（a-k）填入（3）-（6）</p><img src=\"https://s2.51cto.com/images/20201108/1604816289466789.jpg\" title=\"1604816289466789.jpg\" alt=\"1.jpg\"/>",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>一、</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201108/1604816336828787.jpg\" title=\"1604816336828787.jpg\" alt=\"1.jpg\"/><p>二、</p><p>（1）安全性（2） 可修改性 （3）g（4）i（5）f（6）j</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 309527,
    "question_title": "<p>【问题 1】(9 分)</p><p>在架构评估过程中，质量属性效用树 (utility tree) 是对系统质量属性进行识别和优先级排序的重要工具。请问什么是质量效应树，从题中给出质量效应树对应的四个属性编号。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>质量效应树：识别质量属性并排序，主要从性能、可用性、可修改性、安全性四个方面。&nbsp;</p><p>性能描述的是：c ； 可用性描述的是：e；可修改性描述的是：g。 安全性是b。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 43,
      "belong_page": 1,
      "question_id": 309527,
      "question_title": "<p>【问题 1】(9 分)</p><p>在架构评估过程中，质量属性效用树 (utility tree) 是对系统质量属性进行识别和优先级排序的重要工具。请问什么是质量效应树，从题中给出质量效应树对应的四个属性编号。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 309526,
      "score_rule": "",
      "material_text": "<p>试题一（共25分）</p><p>阅读以下关于软件架构的叙述，在答题纸上回答问题1和问题2。</p><p><br/></p><p>【说明】</p><p>某B2C公司因业务扩展，客户增长迅速，需建立一套在线交易系统实现在线电子商务活动，在需求分析与架构设计阶段，该公司提出的需求、质量属性描述和架构特性如下：</p><p>(a)系统用户分为系统管理员、系统操作员和ESS用户三类。</p><p>(b)当用户视图从外部站点修改系统数据的时候，应该对用户身份进行验证，阻止对数据的访问；</p><p>(c)在正常负载情况下，系统应在1秒内对用户的商品查询请求进行响应；</p><p>(d)单元测试人员在输入商品关键字进行查询商品时，系统能够通过关键字检索出商品信息呈现出来；</p><p>(e)系统主站点断电后，应在5秒内将请求重定向到备用站点；</p><p>(f)用户取消自己即将生成的交易时，系统可以取消交易并系统删除交易恢复以前的界面；</p><p>&nbsp;(g)新年来临，当该B2C网站需求在1个月内将界面更改为新年主题增加抽奖红包功能。</p><p>&nbsp;(h)交易系统需要增强加密的级别安全性会提高但是会带来性能下降;</p><p>(i)系统应对用户信息数据库的所有操作都进行完整记录；</p><p>&nbsp;(j)系统必须提供远程调试接口，并支持远程调试。</p><p>（k）如果客户对于系统业务规则尚未达成共识，可能导致部分业务功能模块规则的矛盾，但是目前这种矛盾是可以控制的。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>质量效应树：识别质量属性并排序，主要从性能、可用性、可修改性、安全性四个方面。&nbsp;</p><p>性能描述的是：c ； 可用性描述的是：e；可修改性描述的是：g。 安全性是b。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 310920,
    "question_title": "<p>问题一（8分）：如果使用体系结构权衡分析法（ATAM）对该项目架构设计进行评估，请完成下图中该项目的质量属性效用树，并填写（1）~（8）。<br/></p><p>图 1-1 项目质量属性效用树</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210924/1632414619276875.jpg\" title=\"1632414619276875.jpg\" alt=\"1.jpg\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）可用性 （2）可修改性</p><p>性能：1，2</p><p>可用性：10，11，12</p><p>安全性：3，4，7</p><p>可修改性：6，8</p><p><br/></p><p>可变性：13</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 44,
      "belong_page": 1,
      "question_id": 310920,
      "question_title": "<p>问题一（8分）：如果使用体系结构权衡分析法（ATAM）对该项目架构设计进行评估，请完成下图中该项目的质量属性效用树，并填写（1）~（8）。<br/></p><p>图 1-1 项目质量属性效用树</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210924/1632414619276875.jpg\" title=\"1632414619276875.jpg\" alt=\"1.jpg\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 310919,
      "score_rule": "",
      "material_text": "<p>试题一</p><p>国内某知名互联网公司拥有庞大的用户基础，为了扩展其业务、拓宽市场范围、吸引更多受众群体，计划在原有的短视频基础业务上增加科普类短视频、系列课程及直播授课等业务。</p><p>在筹备期间，市场部门、研发中心的系统分析师和系统架构师均参与了受众分析、产品规划、需求搭建等工作。经过梳理，并获得技术总监首肯，最终确定了以下非功能需求：</p><p>1.&nbsp;网络条件正常的情况下，首次加载用户程序需要在3秒内展示用户请求的视频信息，并且立即缓存3-5条视频的前15秒内容；</p><p>2.&nbsp;网络条件正常的情况下，每20条评论加载及刷新时间不得超过3秒；</p><p>3.&nbsp;视频及数据内容传输过程中需要地址漂移或加密传输</p><p>4.&nbsp;不同的用户具有不同的身份及权限，需要在用户身份真实可信的前提下，提供可信的授权管理服务；</p><p>5.&nbsp;对于用户输入有相应的输入提示，有用户数据检查，预防数据异常及非法内容；</p><p>6.&nbsp;开发代码严格遵循开发规范，任何函数块不得超过80行规范；</p><p>7.&nbsp;系统要能够保护数据不被非法/越权访问和篡改，要确保机密性和完整性，并提供数据审计功能；</p><p>8.&nbsp;90%以上的设计问题修改时间不超过3个工作日，90%以上的开发不问修改时间不超过1个工作日；</p><p>9.&nbsp;产品必须提供可跟踪任何数据库字段的工具</p><p>10.&nbsp;提供数据及其缓存的备份和恢复功能，能够及时恢复和还原系统数据；</p><p>11.&nbsp;系统能够7X24小时运行，全年持续运行故障停运时间累计不得超过12小时；</p><p>12.&nbsp;在95%得故障中，系统最多需要30秒重启；</p><p>整体构件组装方案可调整，预留扩展点以便扩展和重组。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）可用性 （2）可修改性</p><p>性能：1，2</p><p>可用性：10，11，12</p><p>安全性：3，4，7</p><p>可修改性：6，8</p><p><br/></p><p>可变性：13</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 310921,
    "question_title": "<p>问题二（12分）：随着项目推进，体系结构评估过程中采用了 ATAM 的体系结构评估方法。在架构设计中系统架构师提出：</p><p>a. 3中关于数据地址漂移或加密传输的决策，可能会增加处理时间或降低信息保密性；</p><p>b. 8中的要求可能会增加设计和开发所需时间，也可能对系统运维成本有所增加；</p><p>c. 6属于最佳实践，实际工作中可以适当放宽要求；</p><p>d. 11中系统视频存储采用现有短视频媒体云服务，当前系统的可用性会收到云服务可用性的影响。</p><p>请问什么是敏感点、权衡点、风险点和非风险点？系统架构师提出的问题都对应上诉的哪些关注点？</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>敏感点是指为了实现某种特定的质量属性，一个或多个构件所具有的特性。</p><p>权衡点是影响多个质量属性的特性，是多个质量属性的敏感点。</p><p>风险点是指架构设计中潜在的、存在问题的架构决策所带来的隐患。</p><p>非风险点是指架构设计中不会造成潜在问题的架构决策的关注点。</p><p>a.权衡点 b.风险点 c.非风险点 d.风险点</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 45,
      "belong_page": 1,
      "question_id": 310921,
      "question_title": "<p>问题二（12分）：随着项目推进，体系结构评估过程中采用了 ATAM 的体系结构评估方法。在架构设计中系统架构师提出：</p><p>a. 3中关于数据地址漂移或加密传输的决策，可能会增加处理时间或降低信息保密性；</p><p>b. 8中的要求可能会增加设计和开发所需时间，也可能对系统运维成本有所增加；</p><p>c. 6属于最佳实践，实际工作中可以适当放宽要求；</p><p>d. 11中系统视频存储采用现有短视频媒体云服务，当前系统的可用性会收到云服务可用性的影响。</p><p>请问什么是敏感点、权衡点、风险点和非风险点？系统架构师提出的问题都对应上诉的哪些关注点？</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 310919,
      "score_rule": "",
      "material_text": "<p>试题一</p><p>国内某知名互联网公司拥有庞大的用户基础，为了扩展其业务、拓宽市场范围、吸引更多受众群体，计划在原有的短视频基础业务上增加科普类短视频、系列课程及直播授课等业务。</p><p>在筹备期间，市场部门、研发中心的系统分析师和系统架构师均参与了受众分析、产品规划、需求搭建等工作。经过梳理，并获得技术总监首肯，最终确定了以下非功能需求：</p><p>1.&nbsp;网络条件正常的情况下，首次加载用户程序需要在3秒内展示用户请求的视频信息，并且立即缓存3-5条视频的前15秒内容；</p><p>2.&nbsp;网络条件正常的情况下，每20条评论加载及刷新时间不得超过3秒；</p><p>3.&nbsp;视频及数据内容传输过程中需要地址漂移或加密传输</p><p>4.&nbsp;不同的用户具有不同的身份及权限，需要在用户身份真实可信的前提下，提供可信的授权管理服务；</p><p>5.&nbsp;对于用户输入有相应的输入提示，有用户数据检查，预防数据异常及非法内容；</p><p>6.&nbsp;开发代码严格遵循开发规范，任何函数块不得超过80行规范；</p><p>7.&nbsp;系统要能够保护数据不被非法/越权访问和篡改，要确保机密性和完整性，并提供数据审计功能；</p><p>8.&nbsp;90%以上的设计问题修改时间不超过3个工作日，90%以上的开发不问修改时间不超过1个工作日；</p><p>9.&nbsp;产品必须提供可跟踪任何数据库字段的工具</p><p>10.&nbsp;提供数据及其缓存的备份和恢复功能，能够及时恢复和还原系统数据；</p><p>11.&nbsp;系统能够7X24小时运行，全年持续运行故障停运时间累计不得超过12小时；</p><p>12.&nbsp;在95%得故障中，系统最多需要30秒重启；</p><p>整体构件组装方案可调整，预留扩展点以便扩展和重组。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>敏感点是指为了实现某种特定的质量属性，一个或多个构件所具有的特性。</p><p>权衡点是影响多个质量属性的特性，是多个质量属性的敏感点。</p><p>风险点是指架构设计中潜在的、存在问题的架构决策所带来的隐患。</p><p>非风险点是指架构设计中不会造成潜在问题的架构决策的关注点。</p><p>a.权衡点 b.风险点 c.非风险点 d.风险点</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 310922,
    "question_title": "<p>问题三（5分）：请用300字以内简述ATAM架构评估方法的主要过程。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>描述和介绍阶段：描述ATAM方法，描述业务动机，描述架构</p><p>调查和分析阶段：确定架构方法，生成质量属性效用树，分析架构方法</p><p>测试阶段：讨论场景和对场景分级，分析架构方法</p><p>最终阶段：描述评估结果</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 46,
      "belong_page": 1,
      "question_id": 310922,
      "question_title": "<p>问题三（5分）：请用300字以内简述ATAM架构评估方法的主要过程。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 310919,
      "score_rule": "",
      "material_text": "<p>试题一</p><p>国内某知名互联网公司拥有庞大的用户基础，为了扩展其业务、拓宽市场范围、吸引更多受众群体，计划在原有的短视频基础业务上增加科普类短视频、系列课程及直播授课等业务。</p><p>在筹备期间，市场部门、研发中心的系统分析师和系统架构师均参与了受众分析、产品规划、需求搭建等工作。经过梳理，并获得技术总监首肯，最终确定了以下非功能需求：</p><p>1.&nbsp;网络条件正常的情况下，首次加载用户程序需要在3秒内展示用户请求的视频信息，并且立即缓存3-5条视频的前15秒内容；</p><p>2.&nbsp;网络条件正常的情况下，每20条评论加载及刷新时间不得超过3秒；</p><p>3.&nbsp;视频及数据内容传输过程中需要地址漂移或加密传输</p><p>4.&nbsp;不同的用户具有不同的身份及权限，需要在用户身份真实可信的前提下，提供可信的授权管理服务；</p><p>5.&nbsp;对于用户输入有相应的输入提示，有用户数据检查，预防数据异常及非法内容；</p><p>6.&nbsp;开发代码严格遵循开发规范，任何函数块不得超过80行规范；</p><p>7.&nbsp;系统要能够保护数据不被非法/越权访问和篡改，要确保机密性和完整性，并提供数据审计功能；</p><p>8.&nbsp;90%以上的设计问题修改时间不超过3个工作日，90%以上的开发不问修改时间不超过1个工作日；</p><p>9.&nbsp;产品必须提供可跟踪任何数据库字段的工具</p><p>10.&nbsp;提供数据及其缓存的备份和恢复功能，能够及时恢复和还原系统数据；</p><p>11.&nbsp;系统能够7X24小时运行，全年持续运行故障停运时间累计不得超过12小时；</p><p>12.&nbsp;在95%得故障中，系统最多需要30秒重启；</p><p>整体构件组装方案可调整，预留扩展点以便扩展和重组。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>描述和介绍阶段：描述ATAM方法，描述业务动机，描述架构</p><p>调查和分析阶段：确定架构方法，生成质量属性效用树，分析架构方法</p><p>测试阶段：讨论场景和对场景分级，分析架构方法</p><p>最终阶段：描述评估结果</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 312997,
    "question_title": "<p>【问题1】（6分）</p><p>软件质量属性是影响软件架构设计的重要因素。请用200字以内的文字列举六种不同的软件质量属性名称，并解释其含义。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题1】</p><p>常见的软件质量属性有多种，例如性能（Performance）、可用性（Availability）、可靠性（Reliability）、健壮性（Robustness）、安全性（Security）、可修改性（Modification）、可变性（Changeability）、易用性（Usability）、可测试性（Testability）、功能性（Functionality）和互操作性（Inter-operation）等。</p><p>这些质量属性的具体含义是：</p><p>（1）性能是指系统的响应能力，即要经过多长时间才能对某个事件做出响应，或者在某段时间内系统所能处理事件的个数。</p><p>（2）可用性是系统能够正常运行的时间比例。</p><p>（3）可靠性是指软件系统在应用或错误面前，在意外或错误使用的情况下维持软件系统功能特性的基本能力。</p><p>（4）健壮性是指在处理或环境中，系统能够承受压力或变更的能力。</p><p>（5）安全性是指系统向合法用户提供服务的同时能够阻止非授权用户使用的企图或拒绝服务的能力。</p><p>（6）可修改性是指能够快速地以较高的性能价格比对系统进行变更的能力。</p><p>（7）可变性是指体系结构经扩充或变更成为新体系结构的能力。</p><p>（8）易用性是衡量用户使用一个软件产品完成指定任务的难易程度。</p><p>（9）可测试性是指软件发现故障并隔离、定位其故障的能力特性，以及在一定的时间和成本前提下，进行测试设计、测试执行的能力。</p><p>（10）功能性是系统所能完成所期望工作的能力。</p><p>（11）互操作性是指系统与外界或系统与系统之间的相互作用能力。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 47,
      "belong_page": 1,
      "question_id": 312997,
      "question_title": "<p>【问题1】（6分）</p><p>软件质量属性是影响软件架构设计的重要因素。请用200字以内的文字列举六种不同的软件质量属性名称，并解释其含义。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 312996,
      "score_rule": "",
      "material_text": "<p>试题一（15分）</p><p>阅读以下软件架构设计的问题，在答题纸上回答问题1和问题2。</p><p>某软件开发公司欲为某电子商务企业开发一个在线交易平台，支持客户完成网上购物活动中的在线交易。在系统开发之初，企业对该平台提出了如下要求：</p><p>（1）在线交易平台必须在1s内完成客户的交易请求。</p><p>（2）该平台必须保证客户个人信息和交易信息的安全。</p><p>（3）当发生故障时，该平台的平均故障恢复时间必须小于10s。</p><p>（4）由于企业业务发展较快，需要经常为该平台添加新功能或进行硬件升级。添加新功能或进行硬件升级必须在6小时内完成。</p><p>针对这些要求，该软件开发公司决定采用基于架构的软件开发方法，以架构为核心进行在线交易平台的设计与实现。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题1】</p><p>常见的软件质量属性有多种，例如性能（Performance）、可用性（Availability）、可靠性（Reliability）、健壮性（Robustness）、安全性（Security）、可修改性（Modification）、可变性（Changeability）、易用性（Usability）、可测试性（Testability）、功能性（Functionality）和互操作性（Inter-operation）等。</p><p>这些质量属性的具体含义是：</p><p>（1）性能是指系统的响应能力，即要经过多长时间才能对某个事件做出响应，或者在某段时间内系统所能处理事件的个数。</p><p>（2）可用性是系统能够正常运行的时间比例。</p><p>（3）可靠性是指软件系统在应用或错误面前，在意外或错误使用的情况下维持软件系统功能特性的基本能力。</p><p>（4）健壮性是指在处理或环境中，系统能够承受压力或变更的能力。</p><p>（5）安全性是指系统向合法用户提供服务的同时能够阻止非授权用户使用的企图或拒绝服务的能力。</p><p>（6）可修改性是指能够快速地以较高的性能价格比对系统进行变更的能力。</p><p>（7）可变性是指体系结构经扩充或变更成为新体系结构的能力。</p><p>（8）易用性是衡量用户使用一个软件产品完成指定任务的难易程度。</p><p>（9）可测试性是指软件发现故障并隔离、定位其故障的能力特性，以及在一定的时间和成本前提下，进行测试设计、测试执行的能力。</p><p>（10）功能性是系统所能完成所期望工作的能力。</p><p>（11）互操作性是指系统与外界或系统与系统之间的相互作用能力。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 312998,
    "question_title": "<p>【问题2】（9分）</p><p>请对该在线交易平台的4个要求进行分析，用300字以内的文字指出每个要求对应何种软件质量属性；并针对每种软件质量属性，各给出2种实现该质量属性的架构设计策略。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题2】</p><p>（1）在线交易平台必须在1s内完成客户的交易请求。该要求主要对应性能，可以采用的架构设计策略有增加计算资源、改善资源需求（减少计算复杂度等）、资源管理（并发、数据复制等）和资源调度（先进先出队列、优先级队列等）。</p><p>（2）该平台必须严格保证客户个人信息和交易信息的保密性和安全性。该要求主要对应安全性，可以采用的架构设计策略有抵御攻击（授权、认证和限制访问等）、攻击检测（入侵检测等）、从攻击中恢复（部分可用性策略）和信息审计等。</p><p>（3）当发生故障时，该平台的平均故障恢复时间必须小于l0s。该要求主要对应可用性，可以采用的架构设计策略有Ping/Echo、心跳、异常和主动冗余等。</p><p>（4）由于企业业务发展较快，需要经常为该平台添加新功能或进行硬件升级。添加新功能或进行平台升级必须在6小时内完成。该要求主要对应可修改性，可以采用的架构设计策略有软件模块泛化、限制模块之间通信、使用中介和延迟绑定等。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 48,
      "belong_page": 1,
      "question_id": 312998,
      "question_title": "<p>【问题2】（9分）</p><p>请对该在线交易平台的4个要求进行分析，用300字以内的文字指出每个要求对应何种软件质量属性；并针对每种软件质量属性，各给出2种实现该质量属性的架构设计策略。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 312996,
      "score_rule": "",
      "material_text": "<p>试题一（15分）</p><p>阅读以下软件架构设计的问题，在答题纸上回答问题1和问题2。</p><p>某软件开发公司欲为某电子商务企业开发一个在线交易平台，支持客户完成网上购物活动中的在线交易。在系统开发之初，企业对该平台提出了如下要求：</p><p>（1）在线交易平台必须在1s内完成客户的交易请求。</p><p>（2）该平台必须保证客户个人信息和交易信息的安全。</p><p>（3）当发生故障时，该平台的平均故障恢复时间必须小于10s。</p><p>（4）由于企业业务发展较快，需要经常为该平台添加新功能或进行硬件升级。添加新功能或进行硬件升级必须在6小时内完成。</p><p>针对这些要求，该软件开发公司决定采用基于架构的软件开发方法，以架构为核心进行在线交易平台的设计与实现。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题2】</p><p>（1）在线交易平台必须在1s内完成客户的交易请求。该要求主要对应性能，可以采用的架构设计策略有增加计算资源、改善资源需求（减少计算复杂度等）、资源管理（并发、数据复制等）和资源调度（先进先出队列、优先级队列等）。</p><p>（2）该平台必须严格保证客户个人信息和交易信息的保密性和安全性。该要求主要对应安全性，可以采用的架构设计策略有抵御攻击（授权、认证和限制访问等）、攻击检测（入侵检测等）、从攻击中恢复（部分可用性策略）和信息审计等。</p><p>（3）当发生故障时，该平台的平均故障恢复时间必须小于l0s。该要求主要对应可用性，可以采用的架构设计策略有Ping/Echo、心跳、异常和主动冗余等。</p><p>（4）由于企业业务发展较快，需要经常为该平台添加新功能或进行硬件升级。添加新功能或进行平台升级必须在6小时内完成。该要求主要对应可修改性，可以采用的架构设计策略有软件模块泛化、限制模块之间通信、使用中介和延迟绑定等。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 352336,
    "question_title": "<p>【问题1】（10分）</p><p>识别软件架构质量属性是进行架构设计的重要步骤， 请分析题干中的需求描述，填写表 1- 1 中（&nbsp;1 ）&nbsp;~ （&nbsp;5 ）&nbsp;处的空白。</p><p>表 1-1 &nbsp;&nbsp;质量属性识别表</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663933257414724.png\" title=\"1663933257414724.png\" alt=\"image.png\"/><br/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）f &nbsp;&nbsp;（2）性能 &nbsp;（3）&nbsp;g &nbsp;&nbsp;&nbsp;（4）&nbsp;h &nbsp;&nbsp;&nbsp;（5）&nbsp;b</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 49,
      "belong_page": 1,
      "question_id": 352336,
      "question_title": "<p>【问题1】（10分）</p><p>识别软件架构质量属性是进行架构设计的重要步骤， 请分析题干中的需求描述，填写表 1- 1 中（&nbsp;1 ）&nbsp;~ （&nbsp;5 ）&nbsp;处的空白。</p><p>表 1-1 &nbsp;&nbsp;质量属性识别表</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663933257414724.png\" title=\"1663933257414724.png\" alt=\"image.png\"/><br/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 352335,
      "score_rule": "",
      "material_text": "<span style=\"text-indent: 32px;\">试题一</span><p>阅读以下关于软件架构设计的叙述， 在答题纸上回答问题 1~3。</p><p>【说明】</p><p>某软件公司为某品牌手机厂商开发一套手机应用程序集成开发环境，以提高开发手机应 用程序的质量和效率。在项目之初，公司的系统分析师对该集成开发环境的需求进行了调研和分析，具体描述如下。</p><p>a．需要支持和兼容该厂商的全系列硬件。</p><p>b．经过调研，手机应用开发人员更倾向于使用Android系统，因此集成开发环境的界面需要与 Android平台上的主流开发工具的界面风格保持一致。</p><p>c．支持相关开发数据在云端存储，需要保证在云端存储数据的机密性和完整性。</p><p>d．支持用户备份和加载配置。</p><p>e．支持不同模型的自动转换，在初始需求中定义的机器性能条件下， 对于一个包含 50 个对象的设计模型，将其转换为相应代码框架时所消耗时间不超过 5 s。</p><p>f．能够连续运行的时间不小于 360 小时，意外退出后能够在 10 s 之内自动重启。</p><p>g．集成开发环境具有丰富的插件库。</p><p>h．支持应用开发过程中的代码调试功能，开发人员可以设置断点并启动调试。编辑器可以自动卷屏并命中断点， 能通过变量监视器查看当前变量取值。</p><p>在对需求进行分析后，公司的架构师小张查阅了相关的资料，认为该集成开发环境应该 采用管道-过滤器（Pipe-Filter）的架构风格。公司的资深架构师王工在仔细分析后，认为应该采用数据仓储（Data Repository）的架构风格。公司经过评审，最终采用了王工的方案。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）f &nbsp;&nbsp;（2）性能 &nbsp;（3）&nbsp;g &nbsp;&nbsp;&nbsp;（4）&nbsp;h &nbsp;&nbsp;&nbsp;（5）&nbsp;b</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 352448,
    "question_title": "<p>【问题1】（12分）</p><p>在架构评估过程中，质量属性效用树(utility tree)是对系统质量属性进行识别和优先级排序的重要工具。请给出合适的质量属性，填入图1中(1)、(2)空白处；并选择题干描述中的(a)～(o)，将恰当的序号填入(3)～(6)空白处，完成该系统的效用树。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663936518877204.png\" title=\"1663936518877204.png\" alt=\"image.png\"/><br/><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 图1 &nbsp;特种车辆管理与监控系统效用树</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663936539488340.png\" title=\"1663936539488340.png\" alt=\"image.png\"/>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 50,
      "belong_page": 1,
      "question_id": 352448,
      "question_title": "<p>【问题1】（12分）</p><p>在架构评估过程中，质量属性效用树(utility tree)是对系统质量属性进行识别和优先级排序的重要工具。请给出合适的质量属性，填入图1中(1)、(2)空白处；并选择题干描述中的(a)～(o)，将恰当的序号填入(3)～(6)空白处，完成该系统的效用树。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663936518877204.png\" title=\"1663936518877204.png\" alt=\"image.png\"/><br/><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 图1 &nbsp;特种车辆管理与监控系统效用树</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 352447,
      "score_rule": "",
      "material_text": "<p style=\"margin-top: 21px;text-indent: 29px\">试题一</p><p>阅读以下关于软件架构评估的说明，回答下列问题。</p><p style=\"margin-top: 5px;text-indent: 28px\">【说明】</p><p>某软件公司拟为某市级公安机关开发一套特种车辆管理与监控系统，以提高特种车辆管理的效率和准确性。在系统需求分析与架构设计阶段，用户提出的部分需求和关键质量属性场景如下：</p><p>&nbsp;&nbsp; &nbsp;(a)系统用户分为管理员、分管领导和普通民警等三类；</p><p>&nbsp;&nbsp; &nbsp;(b)正常负载情况下，系统必须在0.5秒内对用户的车辆查询请求进行响应；</p><p>&nbsp;&nbsp; &nbsp;(c)系统能够抵御99.999%的黑客攻击；</p><p>&nbsp;&nbsp; &nbsp;(d)系统的用户名必须以字母开头，长度不少于5个字符；</p><p>&nbsp;&nbsp; &nbsp;(e)对查询请求处理时间的要求将影响系统的数据传输协议和处理过程的设计；</p><p>&nbsp;&nbsp; &nbsp;(f)网络失效后，系统需要在2分钟内发现并启用备用网络系统；</p><p>&nbsp;&nbsp; &nbsp;(g)在系统升级时，需要保证在1个月内添加一个新的消息处理中间件；</p><p>&nbsp;&nbsp; &nbsp;(h)查询过程中涉及到的车辆实时视频传输必须保证20帧/秒的速率，且画面具有600×480的分辨率；</p><p>&nbsp;&nbsp; &nbsp;(i)更改系统加密的级别将对安全性和性能产生影响；</p><p>&nbsp;&nbsp; &nbsp;(j)系统主站点断电后，需要在3秒内将请求重定向到备用站点；</p><p>&nbsp;&nbsp; &nbsp;(k)假设每秒中用户查询请求的数量是10个，处理请求的时间为30毫秒，则“在1秒内完成用户的查询请求”这一要求是可以实现的；</p><p>&nbsp;&nbsp; &nbsp;(l)对用户信息数据的授权访问必须保证99.999%的安全性；</p><p>&nbsp;&nbsp; &nbsp;(m)目前对“车辆信息实时监控”业务逻辑的描述尚未达成共识，这可能导致部分业务功能模块的重复，影响系统的可修改性；</p><p>&nbsp;&nbsp; &nbsp;(n)更改系统的Web界面接口必须在1周内完成；</p><p>&nbsp;&nbsp; &nbsp;(o)系统需要提供远程调试接口，并支持系统的远程调试。</p><p>&nbsp;&nbsp; &nbsp;在对系统需求和质量属性场景进行分析的基础上，系统的架构师给出了三个候选的架构设计方案。公司目前正在组织系统开发的相关人员对系统架构进行评估。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663936539488340.png\" title=\"1663936539488340.png\" alt=\"image.png\"/>"
      ],
      "option": null
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 352450,
    "question_title": "<p>【问题3】（10分）</p><p>该项目的四种质量属性分别用什么设计策略实现？（每种举例2个，只写名词即可）</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663936557449998.png\" title=\"1663936557449998.png\" alt=\"image.png\"/>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 51,
      "belong_page": 1,
      "question_id": 352450,
      "question_title": "<p>【问题3】（10分）</p><p>该项目的四种质量属性分别用什么设计策略实现？（每种举例2个，只写名词即可）</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 352447,
      "score_rule": "",
      "material_text": "<p style=\"margin-top: 21px;text-indent: 29px\">试题一</p><p>阅读以下关于软件架构评估的说明，回答下列问题。</p><p style=\"margin-top: 5px;text-indent: 28px\">【说明】</p><p>某软件公司拟为某市级公安机关开发一套特种车辆管理与监控系统，以提高特种车辆管理的效率和准确性。在系统需求分析与架构设计阶段，用户提出的部分需求和关键质量属性场景如下：</p><p>&nbsp;&nbsp; &nbsp;(a)系统用户分为管理员、分管领导和普通民警等三类；</p><p>&nbsp;&nbsp; &nbsp;(b)正常负载情况下，系统必须在0.5秒内对用户的车辆查询请求进行响应；</p><p>&nbsp;&nbsp; &nbsp;(c)系统能够抵御99.999%的黑客攻击；</p><p>&nbsp;&nbsp; &nbsp;(d)系统的用户名必须以字母开头，长度不少于5个字符；</p><p>&nbsp;&nbsp; &nbsp;(e)对查询请求处理时间的要求将影响系统的数据传输协议和处理过程的设计；</p><p>&nbsp;&nbsp; &nbsp;(f)网络失效后，系统需要在2分钟内发现并启用备用网络系统；</p><p>&nbsp;&nbsp; &nbsp;(g)在系统升级时，需要保证在1个月内添加一个新的消息处理中间件；</p><p>&nbsp;&nbsp; &nbsp;(h)查询过程中涉及到的车辆实时视频传输必须保证20帧/秒的速率，且画面具有600×480的分辨率；</p><p>&nbsp;&nbsp; &nbsp;(i)更改系统加密的级别将对安全性和性能产生影响；</p><p>&nbsp;&nbsp; &nbsp;(j)系统主站点断电后，需要在3秒内将请求重定向到备用站点；</p><p>&nbsp;&nbsp; &nbsp;(k)假设每秒中用户查询请求的数量是10个，处理请求的时间为30毫秒，则“在1秒内完成用户的查询请求”这一要求是可以实现的；</p><p>&nbsp;&nbsp; &nbsp;(l)对用户信息数据的授权访问必须保证99.999%的安全性；</p><p>&nbsp;&nbsp; &nbsp;(m)目前对“车辆信息实时监控”业务逻辑的描述尚未达成共识，这可能导致部分业务功能模块的重复，影响系统的可修改性；</p><p>&nbsp;&nbsp; &nbsp;(n)更改系统的Web界面接口必须在1周内完成；</p><p>&nbsp;&nbsp; &nbsp;(o)系统需要提供远程调试接口，并支持系统的远程调试。</p><p>&nbsp;&nbsp; &nbsp;在对系统需求和质量属性场景进行分析的基础上，系统的架构师给出了三个候选的架构设计方案。公司目前正在组织系统开发的相关人员对系统架构进行评估。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663936557449998.png\" title=\"1663936557449998.png\" alt=\"image.png\"/>"
      ],
      "option": null
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 356274,
    "question_title": "<p>【问题1】(12分)</p><p>在架构评估过程中，质量属性效用树 (utility tree)是对系统质量属性进行识别和优先级排序的重要工具。请将合适的质量属性名称填入图1-1中(1)、(2)空白处，并选择题干描述的(a)~(k)填入(3)~(6)空白处，完成该系统的效用树。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221122/1669110053411231.png\" title=\"1669110053411231.png\" alt=\"image.png\"/><br/><p>图1-1会员与促销管理系统效用树</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）安全性 （2）可修改性 （3）e （4）j （5）h （6）k&nbsp;</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 52,
      "belong_page": 1,
      "question_id": 356274,
      "question_title": "<p>【问题1】(12分)</p><p>在架构评估过程中，质量属性效用树 (utility tree)是对系统质量属性进行识别和优先级排序的重要工具。请将合适的质量属性名称填入图1-1中(1)、(2)空白处，并选择题干描述的(a)~(k)填入(3)~(6)空白处，完成该系统的效用树。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221122/1669110053411231.png\" title=\"1669110053411231.png\" alt=\"image.png\"/><br/><p>图1-1会员与促销管理系统效用树</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 356273,
      "score_rule": "",
      "material_text": "<p>试题一(共25分) ：</p><p>阅读以下关于软件架构设计与评估的叙述，在答题纸上回答问题1和问题2。</p><p>【说明】</p><p>某电子商务公司拟升级其会员与促销管理系统，向用户提供个性化服务，提高用户的粘性。在项目立项之初，公司领导层一致认为本次升级的主要目标是提升会员管理方式的灵活性，由于当前用户规模不大，业务也相对简单，系统性能方面不做过多考虑，新系统除了保持现有的四级固定会员制度外，还需要根据用户的消费金额、偏好、重复性等相关特征动态调整商品的折扣力度，并支持在特定的活动周期内主动筛选与活动主题高度相关的用户集合，提供个性化的打折促销活动。</p><p>在需求分析与架构设计阶段，公司提出的需求和质量属性描述如下：</p><p>(a)管理员能够在页面上灵活设置折扣力度规则和促销活动逻辑，设置后即可生效；</p><p>(b)系统应该具备完整的安全防护措施，支持对恶意攻击行为进行检测与报警；</p><p>(c)在正常负载情况下，系统应在0.3秒内对用户的界面操作请求进行响应；</p><p>(d)用户名是系统唯一标识，要求以字母开头，由数字和字母组合而成，长度不少于6个字符。</p><p>(e)在正常负载情况下，用户支付商品费用后在3秒内确认订单支付信息；</p><p>(f)系统主站点电力中断后，应在5秒内将请求重定向到备用站点；</p><p>(g)系统支持横向存储扩展，要求在2人天内完成所有的扩展与测试工作；</p><p>(h)系统宕机后，需要在10秒内感知错误，并自动启动热备份系统；</p><p>(i)系统需要内置接口函数，支持开发团队进行功能调试与系统诊断；</p><p>(j)系统需要为所有的用户操作行为进行详细记录，便于后期查阅与审计；</p><p>(k)支持对系统的外观进行调整和配置，调整工作需要在4人天内完成。</p><p>在对系统需求、质量属性描述和架构特性进行分析的基础上，系统架构师给出了两种候选的架构设计方案，公司目前正在组织相关专家对系统架构进行评估。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）安全性 （2）可修改性 （3）e （4）j （5）h （6）k&nbsp;</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9394",
    "section_name": "系统质量属性与架构评估（第二版） - 软件系统质量属性",
    "question_id": 371562,
    "question_title": "<p>【问题1】（10分）</p><p>识别软件架构质量属性是进行架构设计的重要步骤， 请分析题干中的需求描述，填写表 1- 1 中（ 1 ） ~ （ 5 ） 处的空白。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230916/1694870662600556.png\" title=\"1694870662600556.png\" alt=\"image.png\" width=\"466\" height=\"379\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）f &nbsp;&nbsp;（2）性能 &nbsp;（3） g &nbsp;&nbsp;&nbsp;（4） h &nbsp;&nbsp;&nbsp;（5） b</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 53,
      "belong_page": 1,
      "question_id": 371562,
      "question_title": "<p>【问题1】（10分）</p><p>识别软件架构质量属性是进行架构设计的重要步骤， 请分析题干中的需求描述，填写表 1- 1 中（ 1 ） ~ （ 5 ） 处的空白。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230916/1694870662600556.png\" title=\"1694870662600556.png\" alt=\"image.png\" width=\"466\" height=\"379\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 371561,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件架构设计的叙述， 在答题纸上回答问题 1~3。</p><p>【说明】</p><p>某软件公司为某品牌手机厂商开发一套手机应用程序集成开发环境，以提高开发手机应 用程序的质量和效率。在项目之初，公司的系统分析师对该集成开发环境的需求进行了调研和分析，具体描述如下。</p><p>a．需要支持和兼容该厂商的全系列硬件。</p><p>b．经过调研，手机应用开发人员更倾向于使用Android系统，因此集成开发环境的界面需要与 Android平台上的主流开发工具的界面风格保持一致。</p><p>c．支持相关开发数据在云端存储，需要保证在云端存储数据的机密性和完整性。</p><p>d．支持用户备份和加载配置。</p><p>e．支持不同模型的自动转换，在初始需求中定义的机器性能条件下， 对于一个包含 50 个对象的设计模型，将其转换为相应代码框架时所消耗时间不超过 5 s。</p><p>f．能够连续运行的时间不小于 360 小时，意外退出后能够在 10 s 之内自动重启。</p><p>g．集成开发环境具有丰富的插件库。</p><p>h．支持应用开发过程中的代码调试功能，开发人员可以设置断点并启动调试。编辑器可以自动卷屏并命中断点， 能通过变量监视器查看当前变量取值。</p><p>在对需求进行分析后，公司的架构师小张查阅了相关的资料，认为该集成开发环境应该 采用管道-过滤器（Pipe-Filter）的架构风格。公司的资深架构师王工在仔细分析后，认为应该采用数据仓储（Data Repository）的架构风格。公司经过评审，最终采用了王工的方案。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）f &nbsp;&nbsp;（2）性能 &nbsp;（3） g &nbsp;&nbsp;&nbsp;（4） h &nbsp;&nbsp;&nbsp;（5） b</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176864.568702
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 43797,
    "question_title": "<p><br/></p><p>架构权衡分析方法(Architecture Tradeoff Analysis Method，ATAM)是在基于场景的架构分析方法(Scenarios-based Architecture Analysis Method，SAAM)基础之上发展起来的，主要包括场景和需求收集、(请作答此空)、属性模型构造和分析、属性模型折中等4个阶段。ATAM方法要求在系统开发之前，首先对这些质量属性进行_(63)和折中。</p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 架构视图和场景实现&nbsp; ",
      " 架构风格和场景分析 ",
      " 架构设计和目标分析&nbsp;&nbsp; ",
      " 架构描述和需求评估 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43797,
      "question_title": "<p><br/></p><p>架构权衡分析方法(Architecture Tradeoff Analysis Method，ATAM)是在基于场景的架构分析方法(Scenarios-based Architecture Analysis Method，SAAM)基础之上发展起来的，主要包括场景和需求收集、(请作答此空)、属性模型构造和分析、属性模型折中等4个阶段。ATAM方法要求在系统开发之前，首先对这些质量属性进行_(63)和折中。</p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43797,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 架构视图和场景实现&nbsp; ",
        " 架构风格和场景分析 ",
        " 架构设计和目标分析&nbsp;&nbsp; ",
        " 架构描述和需求评估 "
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 54333,
    "question_title": "<p>正确识别风险点、非风险点、敏感点和权衡点是进行软件架构评价的关键步骤。其中（请作答此空）是实现一个特定质量属性的关键特征，该特征为一个或多个软件构件所共有。&quot;改变加密的级别可能会对安全性和性能都产生显著的影响&quot;，这是一个对系统（ &nbsp;）的描述。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 风险点 ",
      " 非风险点 ",
      " 敏感点 ",
      " 权衡点 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 54333,
      "question_title": "<p>正确识别风险点、非风险点、敏感点和权衡点是进行软件架构评价的关键步骤。其中（请作答此空）是实现一个特定质量属性的关键特征，该特征为一个或多个软件构件所共有。&quot;改变加密的级别可能会对安全性和性能都产生显著的影响&quot;，这是一个对系统（ &nbsp;）的描述。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54333,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 风险点 ",
        " 非风险点 ",
        " 敏感点 ",
        " 权衡点 "
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 54335,
    "question_title": "<p>（请作答此空）的选择是开发一个软件系统时的基本设计决策；（ &nbsp;）是最低层的模式，关注软件系统的设计与实现，描述了如何实现构件及构件之间的关系。引用一计数是C++管理动态资源时常用的一种（ &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 架构模式 ",
      " 惯用法 ",
      " 设计模式 ",
      " 分析模式 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 54335,
      "question_title": "<p>（请作答此空）的选择是开发一个软件系统时的基本设计决策；（ &nbsp;）是最低层的模式，关注软件系统的设计与实现，描述了如何实现构件及构件之间的关系。引用一计数是C++管理动态资源时常用的一种（ &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54335,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 架构模式 ",
        " 惯用法 ",
        " 设计模式 ",
        " 分析模式 "
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 54338,
    "question_title": "<p>软件架构评估中，评估人员主要关注系统的质量属性，并确定采用何种架构更为合适。在对某个应用软件进行评估时，该应用软件采用的Web服务器所支持的并发连接数是整个系统性能的一个（请作答此空）；改变加密级别可能会对安全性和操作性均产生重要影响，则加密级别是系统的一个（ &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 检查点 ",
      " 敏感点 ",
      " 权衡点 ",
      " 风险点 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 54338,
      "question_title": "<p>软件架构评估中，评估人员主要关注系统的质量属性，并确定采用何种架构更为合适。在对某个应用软件进行评估时，该应用软件采用的Web服务器所支持的并发连接数是整个系统性能的一个（请作答此空）；改变加密级别可能会对安全性和操作性均产生重要影响，则加密级别是系统的一个（ &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54338,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 检查点 ",
        " 敏感点 ",
        " 权衡点 ",
        " 风险点 "
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 63659,
    "question_title": "<p>体系结构权衡分析方法（Architecture Tradeoff Analysis Method，ATAM）包含4个主要的活动领域，分别是场景和需求收集、体系结构视图和场景实现、（请作答此空） 、折中。基于场景的架构分析方法（Scenarios-based Architecture Analysis Method， SAAM）的主要输入是问题描述、需求声明和（　）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 架构设计 ",
      " 问题分析与建模 ",
      " 属性模型构造和分析 ",
      " 质量建模 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 63659,
      "question_title": "<p>体系结构权衡分析方法（Architecture Tradeoff Analysis Method，ATAM）包含4个主要的活动领域，分别是场景和需求收集、体系结构视图和场景实现、（请作答此空） 、折中。基于场景的架构分析方法（Scenarios-based Architecture Analysis Method， SAAM）的主要输入是问题描述、需求声明和（　）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63659,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 架构设计 ",
        " 问题分析与建模 ",
        " 属性模型构造和分析 ",
        " 质量建模 "
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 281325,
    "question_title": "<p>正确识别风险点、非风险点、敏感点和权衡点是进行软件架构评价的关键步骤。其中（ ）是实现一个特定质量属性的关键特征，该特征为一个或多个软件构件所共有。“改变加密的级别可能会对安全性和性能都产生显著的影响”，这是一个对系统（ ）的描述。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "风险点",
      "非风险点",
      "敏感点",
      "权衡点"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 281325,
      "question_title": "<p>正确识别风险点、非风险点、敏感点和权衡点是进行软件架构评价的关键步骤。其中（ ）是实现一个特定质量属性的关键特征，该特征为一个或多个软件构件所共有。“改变加密的级别可能会对安全性和性能都产生显著的影响”，这是一个对系统（ ）的描述。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281324,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "风险点",
        "非风险点",
        "敏感点",
        "权衡点"
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 281326,
    "question_title": "<p>正确识别风险点、非风险点、敏感点和权衡点是进行软件架构评价的关键步骤。其中（ ）是实现一个特定质量属性的关键特征，该特征为一个或多个软件构件所共有。“改变加密的级别可能会对安全性和性能都产生显著的影响”，这是一个对系统（ ）的描述。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "风险点",
      "非风险点",
      "敏感点",
      "权衡点"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 281326,
      "question_title": "<p>正确识别风险点、非风险点、敏感点和权衡点是进行软件架构评价的关键步骤。其中（ ）是实现一个特定质量属性的关键特征，该特征为一个或多个软件构件所共有。“改变加密的级别可能会对安全性和性能都产生显著的影响”，这是一个对系统（ ）的描述。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281324,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "风险点",
        "非风险点",
        "敏感点",
        "权衡点"
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 284678,
    "question_title": "<p>软件架构评估中，评估人员主要关注系统的质量属性，并确定采用何种架构更为合适。在对某个应用软件进行评估时，该应用软件采用的Web服务器所支持的并发连接数是整个系统性能的一个 （1） ；改变加密级别可能会对安全性和操作性均产生重要影响，则加密级别是系统的一个 （2） 。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "检查点",
      "敏感点",
      "权衡点",
      "风险点"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 284678,
      "question_title": "<p>软件架构评估中，评估人员主要关注系统的质量属性，并确定采用何种架构更为合适。在对某个应用软件进行评估时，该应用软件采用的Web服务器所支持的并发连接数是整个系统性能的一个 （1） ；改变加密级别可能会对安全性和操作性均产生重要影响，则加密级别是系统的一个 （2） 。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 284677,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "检查点",
        "敏感点",
        "权衡点",
        "风险点"
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 284679,
    "question_title": "<p>软件架构评估中，评估人员主要关注系统的质量属性，并确定采用何种架构更为合适。在对某个应用软件进行评估时，该应用软件采用的Web服务器所支持的并发连接数是整个系统性能的一个 （1） ；改变加密级别可能会对安全性和操作性均产生重要影响，则加密级别是系统的一个 （2） 。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "检查点",
      "敏感点",
      "权衡点",
      "风险点"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 284679,
      "question_title": "<p>软件架构评估中，评估人员主要关注系统的质量属性，并确定采用何种架构更为合适。在对某个应用软件进行评估时，该应用软件采用的Web服务器所支持的并发连接数是整个系统性能的一个 （1） ；改变加密级别可能会对安全性和操作性均产生重要影响，则加密级别是系统的一个 （2） 。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 284677,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "检查点",
        "敏感点",
        "权衡点",
        "风险点"
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 309493,
    "question_title": "软件架构评估方式主要有三种：基于调查问卷方式、基于度量的方式和基于场景的方式。（1）用于实施阶段的早期，评估者对架构粗略了解，较主观。基于场景的方式又进一步分为SAAM、ATAM和CBAM，（2）是用来对架构建立的成本来进行设计和建模，让决策者根据投资收益率来选择合适的架构，可以看做对ATAM的补充，在ATAM确定质量合理的基础上，再对效益进行分析。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "基于调查问卷方式",
      "基于度量的方式",
      "基于场景的方式",
      "三者都是"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 309493,
      "question_title": "软件架构评估方式主要有三种：基于调查问卷方式、基于度量的方式和基于场景的方式。（1）用于实施阶段的早期，评估者对架构粗略了解，较主观。基于场景的方式又进一步分为SAAM、ATAM和CBAM，（2）是用来对架构建立的成本来进行设计和建模，让决策者根据投资收益率来选择合适的架构，可以看做对ATAM的补充，在ATAM确定质量合理的基础上，再对效益进行分析。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 309492,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "基于调查问卷方式",
        "基于度量的方式",
        "基于场景的方式",
        "三者都是"
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 309494,
    "question_title": "软件架构评估方式主要有三种：基于调查问卷方式、基于度量的方式和基于场景的方式。（1）用于实施阶段的早期，评估者对架构粗略了解，较主观。基于场景的方式又进一步分为SAAM、ATAM和CBAM，（2）是用来对架构建立的成本来进行设计和建模，让决策者根据投资收益率来选择合适的架构，可以看做对ATAM的补充，在ATAM确定质量合理的基础上，再对效益进行分析。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "SAAM",
      "ATAM",
      "CBAM",
      "问卷调查"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 309494,
      "question_title": "软件架构评估方式主要有三种：基于调查问卷方式、基于度量的方式和基于场景的方式。（1）用于实施阶段的早期，评估者对架构粗略了解，较主观。基于场景的方式又进一步分为SAAM、ATAM和CBAM，（2）是用来对架构建立的成本来进行设计和建模，让决策者根据投资收益率来选择合适的架构，可以看做对ATAM的补充，在ATAM确定质量合理的基础上，再对效益进行分析。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 309492,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "SAAM",
        "ATAM",
        "CBAM",
        "问卷调查"
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 350359,
    "question_title": "<p>架构权衡分析方法（Architecture Tradeoff Analysis Method，ATAM）是在基于场景的架构分析方法（Scenarios-based Architecture Analysis Method，SAAM）基础之上发展起来的，主要包括场景和需求收集、&nbsp;（1） 、属性模型构造和分析、属性模型折中等4个阶段。ATAM方法要求在系统开发之前，首先对这些质量属性进行&nbsp;（2） 和折中。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 架构视图和场景实现 ",
      " 架构风格和场景分析 ",
      " 架构设计和目标分析 ",
      " 架构描述和需求评估 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 350359,
      "question_title": "<p>架构权衡分析方法（Architecture Tradeoff Analysis Method，ATAM）是在基于场景的架构分析方法（Scenarios-based Architecture Analysis Method，SAAM）基础之上发展起来的，主要包括场景和需求收集、&nbsp;（1） 、属性模型构造和分析、属性模型折中等4个阶段。ATAM方法要求在系统开发之前，首先对这些质量属性进行&nbsp;（2） 和折中。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350358,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 架构视图和场景实现 ",
        " 架构风格和场景分析 ",
        " 架构设计和目标分析 ",
        " 架构描述和需求评估 "
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 350360,
    "question_title": "<p>架构权衡分析方法（Architecture Tradeoff Analysis Method，ATAM）是在基于场景的架构分析方法（Scenarios-based Architecture Analysis Method，SAAM）基础之上发展起来的，主要包括场景和需求收集、&nbsp;（1） 、属性模型构造和分析、属性模型折中等4个阶段。ATAM方法要求在系统开发之前，首先对这些质量属性进行&nbsp;（2） 和折中。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 设计 ",
      " 实现 ",
      " 测试 ",
      " 评价 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 350360,
      "question_title": "<p>架构权衡分析方法（Architecture Tradeoff Analysis Method，ATAM）是在基于场景的架构分析方法（Scenarios-based Architecture Analysis Method，SAAM）基础之上发展起来的，主要包括场景和需求收集、&nbsp;（1） 、属性模型构造和分析、属性模型折中等4个阶段。ATAM方法要求在系统开发之前，首先对这些质量属性进行&nbsp;（2） 和折中。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 350358,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 设计 ",
        " 实现 ",
        " 测试 ",
        " 评价 "
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 352314,
    "question_title": "<p>&nbsp;某公司欲开发一个智能机器人系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“机器人系统主电源断电后，能够在10s内自动启动备用电源并进行切换，恢复正常运行”主要与&nbsp;（1）&nbsp;质量属性相关，通常可采用&nbsp;（2）&nbsp;架构策略实现该属性；“机器人在正常运动过程中如果发现前方2米内有人或者障碍物，应在1s内停止并在2s内选择一条新的运行路径”主要与&nbsp;（3）&nbsp;质量属性相关，通常可采用&nbsp;（4）&nbsp;架构策略实现该属性；“对机器人的远程控制命令应该进行加密，从而能够抵挡恶意的入侵破坏行为，并对攻击进行报警和记录”主要与&nbsp;（5）&nbsp;质量属性相关，通常可采用&nbsp;（6）&nbsp;架构策略实现该属性。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 可用性 ",
      " 性能 ",
      " 易用性 ",
      " 可修改性 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 352314,
      "question_title": "<p>&nbsp;某公司欲开发一个智能机器人系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“机器人系统主电源断电后，能够在10s内自动启动备用电源并进行切换，恢复正常运行”主要与&nbsp;（1）&nbsp;质量属性相关，通常可采用&nbsp;（2）&nbsp;架构策略实现该属性；“机器人在正常运动过程中如果发现前方2米内有人或者障碍物，应在1s内停止并在2s内选择一条新的运行路径”主要与&nbsp;（3）&nbsp;质量属性相关，通常可采用&nbsp;（4）&nbsp;架构策略实现该属性；“对机器人的远程控制命令应该进行加密，从而能够抵挡恶意的入侵破坏行为，并对攻击进行报警和记录”主要与&nbsp;（5）&nbsp;质量属性相关，通常可采用&nbsp;（6）&nbsp;架构策略实现该属性。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352313,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 可用性 ",
        " 性能 ",
        " 易用性 ",
        " 可修改性 "
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 352317,
    "question_title": "<p>&nbsp;某公司欲开发一个智能机器人系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“机器人系统主电源断电后，能够在10s内自动启动备用电源并进行切换，恢复正常运行”主要与&nbsp;（1）&nbsp;质量属性相关，通常可采用&nbsp;（2）&nbsp;架构策略实现该属性；“机器人在正常运动过程中如果发现前方2米内有人或者障碍物，应在1s内停止并在2s内选择一条新的运行路径”主要与&nbsp;（3）&nbsp;质量属性相关，通常可采用&nbsp;（4）&nbsp;架构策略实现该属性；“对机器人的远程控制命令应该进行加密，从而能够抵挡恶意的入侵破坏行为，并对攻击进行报警和记录”主要与&nbsp;（5）&nbsp;质量属性相关，通常可采用&nbsp;（6）&nbsp;架构策略实现该属性。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 资源调度 ",
      " 操作串行化  <br/> ",
      " 心跳  <br/> ",
      " 内置监控器 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 352317,
      "question_title": "<p>&nbsp;某公司欲开发一个智能机器人系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“机器人系统主电源断电后，能够在10s内自动启动备用电源并进行切换，恢复正常运行”主要与&nbsp;（1）&nbsp;质量属性相关，通常可采用&nbsp;（2）&nbsp;架构策略实现该属性；“机器人在正常运动过程中如果发现前方2米内有人或者障碍物，应在1s内停止并在2s内选择一条新的运行路径”主要与&nbsp;（3）&nbsp;质量属性相关，通常可采用&nbsp;（4）&nbsp;架构策略实现该属性；“对机器人的远程控制命令应该进行加密，从而能够抵挡恶意的入侵破坏行为，并对攻击进行报警和记录”主要与&nbsp;（5）&nbsp;质量属性相关，通常可采用&nbsp;（6）&nbsp;架构策略实现该属性。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352313,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 资源调度 ",
        " 操作串行化  <br/> ",
        " 心跳  <br/> ",
        " 内置监控器 "
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 352319,
    "question_title": "<p>&nbsp;某公司欲开发一个智能机器人系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“机器人系统主电源断电后，能够在10s内自动启动备用电源并进行切换，恢复正常运行”主要与&nbsp;（1）&nbsp;质量属性相关，通常可采用&nbsp;（2）&nbsp;架构策略实现该属性；“机器人在正常运动过程中如果发现前方2米内有人或者障碍物，应在1s内停止并在2s内选择一条新的运行路径”主要与&nbsp;（3）&nbsp;质量属性相关，通常可采用&nbsp;（4）&nbsp;架构策略实现该属性；“对机器人的远程控制命令应该进行加密，从而能够抵挡恶意的入侵破坏行为，并对攻击进行报警和记录”主要与&nbsp;（5）&nbsp;质量属性相关，通常可采用&nbsp;（6）&nbsp;架构策略实现该属性。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 内置监控器 ",
      " 追踪审计 ",
      " 记录/回放 ",
      " 维护现有接口 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 352319,
      "question_title": "<p>&nbsp;某公司欲开发一个智能机器人系统，在架构设计阶段，公司的架构师识别出3个核心质量属性场景。其中“机器人系统主电源断电后，能够在10s内自动启动备用电源并进行切换，恢复正常运行”主要与&nbsp;（1）&nbsp;质量属性相关，通常可采用&nbsp;（2）&nbsp;架构策略实现该属性；“机器人在正常运动过程中如果发现前方2米内有人或者障碍物，应在1s内停止并在2s内选择一条新的运行路径”主要与&nbsp;（3）&nbsp;质量属性相关，通常可采用&nbsp;（4）&nbsp;架构策略实现该属性；“对机器人的远程控制命令应该进行加密，从而能够抵挡恶意的入侵破坏行为，并对攻击进行报警和记录”主要与&nbsp;（5）&nbsp;质量属性相关，通常可采用&nbsp;（6）&nbsp;架构策略实现该属性。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352313,
      "score_rule": "",
      "material_text": null,
      "sort_son": "6",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 内置监控器 ",
        " 追踪审计 ",
        " 记录/回放 ",
        " 维护现有接口 "
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 352320,
    "question_title": "<p>&nbsp;M 画家将自己创作的一幅美术作品原件赠予了L公司，L公司获得了该作品的&nbsp;（64） 。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 著作权 ",
      " 发表权 ",
      " 商标权 ",
      " 展览权 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 352320,
      "question_title": "<p>&nbsp;M 画家将自己创作的一幅美术作品原件赠予了L公司，L公司获得了该作品的&nbsp;（64） 。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352320,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 著作权 ",
        " 发表权 ",
        " 商标权 ",
        " 展览权 "
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 352384,
    "question_title": "<p>某单位为了建设健全的公路桥梁养护管理档案，拟开发一套公路桥梁在线管理系统。该系统要求正常负载情况下，系统必须在 0.5 秒内对用户的查询请求进行响应，这属于质量特性的（1）；网络失效后，系统需要在 10 秒内发现错误并启用备用系统，这属于质量特性的（2）；更改系统的 Web 界面接口必须在 4 人周内完成，这属于质量特性的（3）；如果&quot;养护报告生成&quot;业务逻辑的描述尚未达成共识，可能导致部分业务功能模块规则的矛盾，影响系统的可修改性，这属于系统的（4）；更改系统加密的级别将对安全性和性能产生影响，这属于系统的（5）；对查询请求处理时间的要求将影响系统的数据传输协议和处理过程的设计，这属于系统的（6）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 可用性 ",
      " 可靠性 ",
      " 性能 ",
      " 容错性 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 18,
      "belong_page": 1,
      "question_id": 352384,
      "question_title": "<p>某单位为了建设健全的公路桥梁养护管理档案，拟开发一套公路桥梁在线管理系统。该系统要求正常负载情况下，系统必须在 0.5 秒内对用户的查询请求进行响应，这属于质量特性的（1）；网络失效后，系统需要在 10 秒内发现错误并启用备用系统，这属于质量特性的（2）；更改系统的 Web 界面接口必须在 4 人周内完成，这属于质量特性的（3）；如果&quot;养护报告生成&quot;业务逻辑的描述尚未达成共识，可能导致部分业务功能模块规则的矛盾，影响系统的可修改性，这属于系统的（4）；更改系统加密的级别将对安全性和性能产生影响，这属于系统的（5）；对查询请求处理时间的要求将影响系统的数据传输协议和处理过程的设计，这属于系统的（6）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352383,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 可用性 ",
        " 可靠性 ",
        " 性能 ",
        " 容错性 "
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 352385,
    "question_title": "<p>某单位为了建设健全的公路桥梁养护管理档案，拟开发一套公路桥梁在线管理系统。该系统要求正常负载情况下，系统必须在 0.5 秒内对用户的查询请求进行响应，这属于质量特性的（1）；网络失效后，系统需要在 10 秒内发现错误并启用备用系统，这属于质量特性的（2）；更改系统的 Web 界面接口必须在 4 人周内完成，这属于质量特性的（3）；如果&quot;养护报告生成&quot;业务逻辑的描述尚未达成共识，可能导致部分业务功能模块规则的矛盾，影响系统的可修改性，这属于系统的（4）；更改系统加密的级别将对安全性和性能产生影响，这属于系统的（5）；对查询请求处理时间的要求将影响系统的数据传输协议和处理过程的设计，这属于系统的（6）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 可用性 ",
      " 可修改性 ",
      " 可靠性 ",
      " 安全性 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 19,
      "belong_page": 1,
      "question_id": 352385,
      "question_title": "<p>某单位为了建设健全的公路桥梁养护管理档案，拟开发一套公路桥梁在线管理系统。该系统要求正常负载情况下，系统必须在 0.5 秒内对用户的查询请求进行响应，这属于质量特性的（1）；网络失效后，系统需要在 10 秒内发现错误并启用备用系统，这属于质量特性的（2）；更改系统的 Web 界面接口必须在 4 人周内完成，这属于质量特性的（3）；如果&quot;养护报告生成&quot;业务逻辑的描述尚未达成共识，可能导致部分业务功能模块规则的矛盾，影响系统的可修改性，这属于系统的（4）；更改系统加密的级别将对安全性和性能产生影响，这属于系统的（5）；对查询请求处理时间的要求将影响系统的数据传输协议和处理过程的设计，这属于系统的（6）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352383,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 可用性 ",
        " 可修改性 ",
        " 可靠性 ",
        " 安全性 "
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 352386,
    "question_title": "<p>某单位为了建设健全的公路桥梁养护管理档案，拟开发一套公路桥梁在线管理系统。该系统要求正常负载情况下，系统必须在 0.5 秒内对用户的查询请求进行响应，这属于质量特性的（1）；网络失效后，系统需要在 10 秒内发现错误并启用备用系统，这属于质量特性的（2）；更改系统的 Web 界面接口必须在 4 人周内完成，这属于质量特性的（3）；如果&quot;养护报告生成&quot;业务逻辑的描述尚未达成共识，可能导致部分业务功能模块规则的矛盾，影响系统的可修改性，这属于系统的（4）；更改系统加密的级别将对安全性和性能产生影响，这属于系统的（5）；对查询请求处理时间的要求将影响系统的数据传输协议和处理过程的设计，这属于系统的（6）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 可用性  <br/> ",
      " 可修改性&nbsp;  <br/> ",
      " 可靠性&nbsp;  &nbsp; ",
      " 安全性&nbsp; &nbsp;  <br/> "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 20,
      "belong_page": 1,
      "question_id": 352386,
      "question_title": "<p>某单位为了建设健全的公路桥梁养护管理档案，拟开发一套公路桥梁在线管理系统。该系统要求正常负载情况下，系统必须在 0.5 秒内对用户的查询请求进行响应，这属于质量特性的（1）；网络失效后，系统需要在 10 秒内发现错误并启用备用系统，这属于质量特性的（2）；更改系统的 Web 界面接口必须在 4 人周内完成，这属于质量特性的（3）；如果&quot;养护报告生成&quot;业务逻辑的描述尚未达成共识，可能导致部分业务功能模块规则的矛盾，影响系统的可修改性，这属于系统的（4）；更改系统加密的级别将对安全性和性能产生影响，这属于系统的（5）；对查询请求处理时间的要求将影响系统的数据传输协议和处理过程的设计，这属于系统的（6）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352383,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 可用性  <br/> ",
        " 可修改性&nbsp;  <br/> ",
        " 可靠性&nbsp;  &nbsp; ",
        " 安全性&nbsp; &nbsp;  <br/> "
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 352387,
    "question_title": "<p>某单位为了建设健全的公路桥梁养护管理档案，拟开发一套公路桥梁在线管理系统。该系统要求正常负载情况下，系统必须在 0.5 秒内对用户的查询请求进行响应，这属于质量特性的（1）；网络失效后，系统需要在 10 秒内发现错误并启用备用系统，这属于质量特性的（2）；更改系统的 Web 界面接口必须在 4 人周内完成，这属于质量特性的（3）；如果&quot;养护报告生成&quot;业务逻辑的描述尚未达成共识，可能导致部分业务功能模块规则的矛盾，影响系统的可修改性，这属于系统的（4）；更改系统加密的级别将对安全性和性能产生影响，这属于系统的（5）；对查询请求处理时间的要求将影响系统的数据传输协议和处理过程的设计，这属于系统的（6）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 权衡点&nbsp; ",
      " 风险点&nbsp; ",
      " 敏感点&nbsp; ",
      " 非风险点&nbsp; "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 21,
      "belong_page": 1,
      "question_id": 352387,
      "question_title": "<p>某单位为了建设健全的公路桥梁养护管理档案，拟开发一套公路桥梁在线管理系统。该系统要求正常负载情况下，系统必须在 0.5 秒内对用户的查询请求进行响应，这属于质量特性的（1）；网络失效后，系统需要在 10 秒内发现错误并启用备用系统，这属于质量特性的（2）；更改系统的 Web 界面接口必须在 4 人周内完成，这属于质量特性的（3）；如果&quot;养护报告生成&quot;业务逻辑的描述尚未达成共识，可能导致部分业务功能模块规则的矛盾，影响系统的可修改性，这属于系统的（4）；更改系统加密的级别将对安全性和性能产生影响，这属于系统的（5）；对查询请求处理时间的要求将影响系统的数据传输协议和处理过程的设计，这属于系统的（6）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352383,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 权衡点&nbsp; ",
        " 风险点&nbsp; ",
        " 敏感点&nbsp; ",
        " 非风险点&nbsp; "
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 352388,
    "question_title": "<p>某单位为了建设健全的公路桥梁养护管理档案，拟开发一套公路桥梁在线管理系统。该系统要求正常负载情况下，系统必须在 0.5 秒内对用户的查询请求进行响应，这属于质量特性的（1）；网络失效后，系统需要在 10 秒内发现错误并启用备用系统，这属于质量特性的（2）；更改系统的 Web 界面接口必须在 4 人周内完成，这属于质量特性的（3）；如果&quot;养护报告生成&quot;业务逻辑的描述尚未达成共识，可能导致部分业务功能模块规则的矛盾，影响系统的可修改性，这属于系统的（4）；更改系统加密的级别将对安全性和性能产生影响，这属于系统的（5）；对查询请求处理时间的要求将影响系统的数据传输协议和处理过程的设计，这属于系统的（6）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 权衡点 ",
      "&nbsp;风险点",
      "&nbsp;敏感点",
      "&nbsp;非风险点"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 22,
      "belong_page": 1,
      "question_id": 352388,
      "question_title": "<p>某单位为了建设健全的公路桥梁养护管理档案，拟开发一套公路桥梁在线管理系统。该系统要求正常负载情况下，系统必须在 0.5 秒内对用户的查询请求进行响应，这属于质量特性的（1）；网络失效后，系统需要在 10 秒内发现错误并启用备用系统，这属于质量特性的（2）；更改系统的 Web 界面接口必须在 4 人周内完成，这属于质量特性的（3）；如果&quot;养护报告生成&quot;业务逻辑的描述尚未达成共识，可能导致部分业务功能模块规则的矛盾，影响系统的可修改性，这属于系统的（4）；更改系统加密的级别将对安全性和性能产生影响，这属于系统的（5）；对查询请求处理时间的要求将影响系统的数据传输协议和处理过程的设计，这属于系统的（6）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352383,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 权衡点 ",
        "&nbsp;风险点",
        "&nbsp;敏感点",
        "&nbsp;非风险点"
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 352389,
    "question_title": "<p>某单位为了建设健全的公路桥梁养护管理档案，拟开发一套公路桥梁在线管理系统。该系统要求正常负载情况下，系统必须在 0.5 秒内对用户的查询请求进行响应，这属于质量特性的（1）；网络失效后，系统需要在 10 秒内发现错误并启用备用系统，这属于质量特性的（2）；更改系统的 Web 界面接口必须在 4 人周内完成，这属于质量特性的（3）；如果&quot;养护报告生成&quot;业务逻辑的描述尚未达成共识，可能导致部分业务功能模块规则的矛盾，影响系统的可修改性，这属于系统的（4）；更改系统加密的级别将对安全性和性能产生影响，这属于系统的（5）；对查询请求处理时间的要求将影响系统的数据传输协议和处理过程的设计，这属于系统的（6）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " 权衡点 ",
      " 风险点&nbsp; ",
      " 敏感点 ",
      " 非风险点&nbsp; "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 23,
      "belong_page": 1,
      "question_id": 352389,
      "question_title": "<p>某单位为了建设健全的公路桥梁养护管理档案，拟开发一套公路桥梁在线管理系统。该系统要求正常负载情况下，系统必须在 0.5 秒内对用户的查询请求进行响应，这属于质量特性的（1）；网络失效后，系统需要在 10 秒内发现错误并启用备用系统，这属于质量特性的（2）；更改系统的 Web 界面接口必须在 4 人周内完成，这属于质量特性的（3）；如果&quot;养护报告生成&quot;业务逻辑的描述尚未达成共识，可能导致部分业务功能模块规则的矛盾，影响系统的可修改性，这属于系统的（4）；更改系统加密的级别将对安全性和性能产生影响，这属于系统的（5）；对查询请求处理时间的要求将影响系统的数据传输协议和处理过程的设计，这属于系统的（6）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 352383,
      "score_rule": "",
      "material_text": null,
      "sort_son": "6",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 权衡点 ",
        " 风险点&nbsp; ",
        " 敏感点 ",
        " 非风险点&nbsp; "
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 355083,
    "question_title": "<p>【51CTO学堂-学员回忆版】改变加密级别可能会对安全性和性能产生非常重要的影响，因此在软件架构评估中，该设计决策是一个（58）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 敏感点 ",
      " 风险点&nbsp; ",
      " 权衡点 ",
      " 非风险点 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 24,
      "belong_page": 1,
      "question_id": 355083,
      "question_title": "<p>【51CTO学堂-学员回忆版】改变加密级别可能会对安全性和性能产生非常重要的影响，因此在软件架构评估中，该设计决策是一个（58）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 355083,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 敏感点 ",
        " 风险点&nbsp; ",
        " 权衡点 ",
        " 非风险点 "
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 355088,
    "question_title": "<p>【51CTO学堂-学员回忆版】效用树是采用架构权衡分析方法（Architecture Tradeoff Analysis Method， ATAM）进行架构评估的工具之一，其树形结构从根部到叶子节点依次为（59）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 树根、属性分类、优先级，质量属性场景 ",
      " 树根、质量属性、属性分类，质量属性场景 ",
      " 树根、优先级、质量属性、质量属性场景 ",
      " 树根、质量属性、属性分类，优先级 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 25,
      "belong_page": 1,
      "question_id": 355088,
      "question_title": "<p>【51CTO学堂-学员回忆版】效用树是采用架构权衡分析方法（Architecture Tradeoff Analysis Method， ATAM）进行架构评估的工具之一，其树形结构从根部到叶子节点依次为（59）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 355088,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 树根、属性分类、优先级，质量属性场景 ",
        " 树根、质量属性、属性分类，质量属性场景 ",
        " 树根、优先级、质量属性、质量属性场景 ",
        " 树根、质量属性、属性分类，优先级 "
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 355091,
    "question_title": "<p>【51CTO学堂-学员回忆版】平均失效等待时间（mean time to failure，MTTF）和平均失效间隔时间（mcan time between failure，MTBF）是进行系统可靠性分析时的要指标，在失效率为常数和修复时间很短的情况下，（60）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " MTTF远远小于MTBF ",
      " MTTF和MTBF无法计算 ",
      " MTTF远远大于MTBF ",
      " MTTF和MTBF几乎相等 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 26,
      "belong_page": 1,
      "question_id": 355091,
      "question_title": "<p>【51CTO学堂-学员回忆版】平均失效等待时间（mean time to failure，MTTF）和平均失效间隔时间（mcan time between failure，MTBF）是进行系统可靠性分析时的要指标，在失效率为常数和修复时间很短的情况下，（60）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 355091,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " MTTF远远小于MTBF ",
        " MTTF和MTBF无法计算 ",
        " MTTF远远大于MTBF ",
        " MTTF和MTBF几乎相等 "
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 355109,
    "question_title": "【51CTO学堂-学员回忆版】5G网络采用（64）可将5G网络分割成多张虚拟网络，每个虚拟网络的接入，传输和核心网是逻辑独立的，任何一个虚拟网络发生故障都不会影响到其它虚拟网络。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "网路切片技术",
      "边缘计算技术",
      "网络隔离技术",
      "软件定义网路技术"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 27,
      "belong_page": 1,
      "question_id": 355109,
      "question_title": "【51CTO学堂-学员回忆版】5G网络采用（64）可将5G网络分割成多张虚拟网络，每个虚拟网络的接入，传输和核心网是逻辑独立的，任何一个虚拟网络发生故障都不会影响到其它虚拟网络。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 355109,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "网路切片技术",
        "边缘计算技术",
        "网络隔离技术",
        "软件定义网路技术"
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 371542,
    "question_title": "<p>关于MVP模式说法错误的是 （62） 。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "允许M与V直接交互",
      "P负责逻辑的处理",
      "M提供数据",
      "V负责显示"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 28,
      "belong_page": 1,
      "question_id": 371542,
      "question_title": "<p>关于MVP模式说法错误的是 （62） 。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371542,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "允许M与V直接交互",
        "P负责逻辑的处理",
        "M提供数据",
        "V负责显示"
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 371972,
    "question_title": "在软件架构评估中， （1）是影响多个质量属性的特性，是多个质量属性的（2）例如，提高加密级别可以提高安全性，但可能要耗费更多的处理时间，影响系统性能。如果某个机密消息的处理有严格的时间延迟要求，则加密级别可能就会成为一个（3）。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "敏感点",
      "权衡点",
      "风险决策",
      "无风险决策"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 29,
      "belong_page": 1,
      "question_id": 371972,
      "question_title": "在软件架构评估中， （1）是影响多个质量属性的特性，是多个质量属性的（2）例如，提高加密级别可以提高安全性，但可能要耗费更多的处理时间，影响系统性能。如果某个机密消息的处理有严格的时间延迟要求，则加密级别可能就会成为一个（3）。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371971,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "敏感点",
        "权衡点",
        "风险决策",
        "无风险决策"
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 371973,
    "question_title": "在软件架构评估中， （1）是影响多个质量属性的特性，是多个质量属性的（2）例如，提高加密级别可以提高安全性，但可能要耗费更多的处理时间，影响系统性能。如果某个机密消息的处理有严格的时间延迟要求，则加密级别可能就会成为一个（3）。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "敏感点",
      "权衡点",
      "风险决策",
      "无风险决策"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 30,
      "belong_page": 1,
      "question_id": 371973,
      "question_title": "在软件架构评估中， （1）是影响多个质量属性的特性，是多个质量属性的（2）例如，提高加密级别可以提高安全性，但可能要耗费更多的处理时间，影响系统性能。如果某个机密消息的处理有严格的时间延迟要求，则加密级别可能就会成为一个（3）。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371971,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "敏感点",
        "权衡点",
        "风险决策",
        "无风险决策"
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 371974,
    "question_title": "在软件架构评估中， （1）是影响多个质量属性的特性，是多个质量属性的（2）例如，提高加密级别可以提高安全性，但可能要耗费更多的处理时间，影响系统性能。如果某个机密消息的处理有严格的时间延迟要求，则加密级别可能就会成为一个（3）。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "敏感点",
      "权衡点",
      "风险决策",
      "无风险决策"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 31,
      "belong_page": 1,
      "question_id": 371974,
      "question_title": "在软件架构评估中， （1）是影响多个质量属性的特性，是多个质量属性的（2）例如，提高加密级别可以提高安全性，但可能要耗费更多的处理时间，影响系统性能。如果某个机密消息的处理有严格的时间延迟要求，则加密级别可能就会成为一个（3）。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371971,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "敏感点",
        "权衡点",
        "风险决策",
        "无风险决策"
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 507309,
    "question_title": "质量属于场景的（1）是激励到达后所采取的行动 ，使用哪两个图可以描述用户界面元素和界面跳转（2）。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "刺激源",
      "响应",
      "制品",
      "环境"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 32,
      "belong_page": 1,
      "question_id": 507309,
      "question_title": "质量属于场景的（1）是激励到达后所采取的行动 ，使用哪两个图可以描述用户界面元素和界面跳转（2）。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 507308,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "刺激源",
        "响应",
        "制品",
        "环境"
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 507310,
    "question_title": "质量属于场景的（1）是激励到达后所采取的行动 ，使用哪两个图可以描述用户界面元素和界面跳转（2）。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "用例图、活动图",
      "用例图、顺序图",
      "类图、活动图",
      "类图、顺序图"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 33,
      "belong_page": 1,
      "question_id": 507310,
      "question_title": "质量属于场景的（1）是激励到达后所采取的行动 ，使用哪两个图可以描述用户界面元素和界面跳转（2）。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 507308,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "用例图、活动图",
        "用例图、顺序图",
        "类图、活动图",
        "类图、顺序图"
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 507336,
    "question_title": "时间要求和安全性是一对矛盾点，某项目对时间有明确要求，这时安全性就成了（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "敏感点",
      "权衡点",
      "风险点",
      "非风险点"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 34,
      "belong_page": 1,
      "question_id": 507336,
      "question_title": "时间要求和安全性是一对矛盾点，某项目对时间有明确要求，这时安全性就成了（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507336,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "敏感点",
        "权衡点",
        "风险点",
        "非风险点"
      ]
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 45917,
    "question_title": "<p>试题一(共 25 分)</p><p>阅读以下关于软件架构评估的叙述，在答题纸上回答问题 1 和问题 2.</p><p>【说明】</p><p>某单位为了建设健全的公路桥梁养护管理档案，拟开发一套公路桥梁在线管理系统。在系统的需求分析与架构设计阶段，用户提出的需求、质量属性描述和架构特性如下:</p><p>(a) 系统用户分为高级管理员、数据管理员和数据维护员等三类:</p><p>(b) 系统应该具备完善的安全防护措施，能够对黑客的攻击行为进行检测与防御:</p><p>(c) 正常负载情况下，系统必须在 0.5 秒内对用户的查询请求进行响应:</p><p>(d) 对查询请求处理时间的要求将影响系统的数据传输协议和处理过程的设计:</p><p>(e) 系统的用户名不能为中文，要求必须以字母开头，长度不少于 5 个字符;</p><p>(f) 更改系统加密的级别将对安全性和性能产生影响;</p><p>(g) 网络失效后，系统需要在 10 秒内发现错误并启用备用系统，</p><p>(h) 查询过程中涉及到的桥梁与公路的实时状态视频传输必须保证画面具有 1024*768 的分辨率， 40 帧 /秒的速率:</p><p>(i) 在系统升级时，必须保证在 10 人月内可添加一个新的消息处理中间件:</p><p>(j) 系统主站点断电后，必须在 3 秒内将请求重定向到备用站点:</p><p>(k) 如果每秒钟用户查询请求的数量是 10 个，处理单个请求的时间为 30 毫秒，则系统应保证在 1 秒内完成用户的查询请求:</p><p>(l) 对桥梁信息数据库的所有操作都必须进行完整记录:</p><p>(m) 更改系统的 Web 界面接口必须在 4 人周内完成:</p><p>(n) 如果&quot;养护报告生成&quot;业务逻辑的描述尚未达成共识，可能导致部分业务功能模块规则的矛盾，影响系统的可修改性</p><p>(o) 系统必须提供远程调试接口，并支持系统的远程调试。</p><p>在对系统需求，质量属性描述和架构特性进行分析的基础上，系统的架构师给出了三个候选的架构设计方案，公司目前正在组织系统开发的相关人员对系统架构进行评估。</p><p>&nbsp;</p><p>【问题 1】(12 分)</p><p>在架构评估过程中，质量属性效用树 (utility tree) 是对系统质量属性进行识别和优先级排序的重要工具。请给出合适的质量属性，填入图 1-1 中 (1)、(2) 空白处:并选择题干描述的 (a)~ (0) ，填入(3)~(6) 空白处，完成该系统的效用树。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20180827/1535368131569975.png\" title=\"1535368131569975.png\" alt=\"图片.png\"/><br/>【问题 2】(13 分)</p><p>在架构评估过程中，需要正确识别系统的架构风险、敏感点和权衡点，并进行合理的架构决策。请用 300 字以内的文字给出系统架构风险、敏感点和权衡点的定义，并从题干(a) - (0) 中分别选出 1 个对系统架构风险、敏感点和权衡点最为恰当的描述。</p><p><br/></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>参考答案：</p><p>在架构评估过程中，质量属性效用树(utility tree)是对系统质量属性进行识别和优先级排序的重要工具。效用树主要关注性能、可修改性、可用性和安全4个方面</p><p>（1）~（6）内容如下：</p><p>（1）安全性 &nbsp;&nbsp;（2）可修改性 &nbsp;&nbsp;&nbsp;（3）h &nbsp;&nbsp;&nbsp;（4）l &nbsp;&nbsp;&nbsp;&nbsp;（5）j &nbsp;&nbsp;&nbsp;（6）m</p><p><br/></p><p>参考答案：</p><p>统架构风险是指架构设计中潜在的、存在问题的架构决策所带来的隐患。敏感点是为了实现某种特定质量属性，一个或多个系统组件所具有的特性。权衡点是影响多个质量属性，并对多个质量属性来说都是敏感点的系统属性。根据上述分析可知题干描述中，(n)描述的是系统架构风险；(d)描述的是敏感点；(f)描述的是权衡点。</p><p><br/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 35,
      "belong_page": 1,
      "question_id": 45917,
      "question_title": "<p>试题一(共 25 分)</p><p>阅读以下关于软件架构评估的叙述，在答题纸上回答问题 1 和问题 2.</p><p>【说明】</p><p>某单位为了建设健全的公路桥梁养护管理档案，拟开发一套公路桥梁在线管理系统。在系统的需求分析与架构设计阶段，用户提出的需求、质量属性描述和架构特性如下:</p><p>(a) 系统用户分为高级管理员、数据管理员和数据维护员等三类:</p><p>(b) 系统应该具备完善的安全防护措施，能够对黑客的攻击行为进行检测与防御:</p><p>(c) 正常负载情况下，系统必须在 0.5 秒内对用户的查询请求进行响应:</p><p>(d) 对查询请求处理时间的要求将影响系统的数据传输协议和处理过程的设计:</p><p>(e) 系统的用户名不能为中文，要求必须以字母开头，长度不少于 5 个字符;</p><p>(f) 更改系统加密的级别将对安全性和性能产生影响;</p><p>(g) 网络失效后，系统需要在 10 秒内发现错误并启用备用系统，</p><p>(h) 查询过程中涉及到的桥梁与公路的实时状态视频传输必须保证画面具有 1024*768 的分辨率， 40 帧 /秒的速率:</p><p>(i) 在系统升级时，必须保证在 10 人月内可添加一个新的消息处理中间件:</p><p>(j) 系统主站点断电后，必须在 3 秒内将请求重定向到备用站点:</p><p>(k) 如果每秒钟用户查询请求的数量是 10 个，处理单个请求的时间为 30 毫秒，则系统应保证在 1 秒内完成用户的查询请求:</p><p>(l) 对桥梁信息数据库的所有操作都必须进行完整记录:</p><p>(m) 更改系统的 Web 界面接口必须在 4 人周内完成:</p><p>(n) 如果&quot;养护报告生成&quot;业务逻辑的描述尚未达成共识，可能导致部分业务功能模块规则的矛盾，影响系统的可修改性</p><p>(o) 系统必须提供远程调试接口，并支持系统的远程调试。</p><p>在对系统需求，质量属性描述和架构特性进行分析的基础上，系统的架构师给出了三个候选的架构设计方案，公司目前正在组织系统开发的相关人员对系统架构进行评估。</p><p>&nbsp;</p><p>【问题 1】(12 分)</p><p>在架构评估过程中，质量属性效用树 (utility tree) 是对系统质量属性进行识别和优先级排序的重要工具。请给出合适的质量属性，填入图 1-1 中 (1)、(2) 空白处:并选择题干描述的 (a)~ (0) ，填入(3)~(6) 空白处，完成该系统的效用树。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20180827/1535368131569975.png\" title=\"1535368131569975.png\" alt=\"图片.png\"/><br/>【问题 2】(13 分)</p><p>在架构评估过程中，需要正确识别系统的架构风险、敏感点和权衡点，并进行合理的架构决策。请用 300 字以内的文字给出系统架构风险、敏感点和权衡点的定义，并从题干(a) - (0) 中分别选出 1 个对系统架构风险、敏感点和权衡点最为恰当的描述。</p><p><br/></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 45917,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>参考答案：</p><p>在架构评估过程中，质量属性效用树(utility tree)是对系统质量属性进行识别和优先级排序的重要工具。效用树主要关注性能、可修改性、可用性和安全4个方面</p><p>（1）~（6）内容如下：</p><p>（1）安全性 &nbsp;&nbsp;（2）可修改性 &nbsp;&nbsp;&nbsp;（3）h &nbsp;&nbsp;&nbsp;（4）l &nbsp;&nbsp;&nbsp;&nbsp;（5）j &nbsp;&nbsp;&nbsp;（6）m</p><p><br/></p><p>参考答案：</p><p>统架构风险是指架构设计中潜在的、存在问题的架构决策所带来的隐患。敏感点是为了实现某种特定质量属性，一个或多个系统组件所具有的特性。权衡点是影响多个质量属性，并对多个质量属性来说都是敏感点的系统属性。根据上述分析可知题干描述中，(n)描述的是系统架构风险；(d)描述的是敏感点；(f)描述的是权衡点。</p><p><br/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 303760,
    "question_title": "<p>试题二 &nbsp;论软件系统架构评估及其应用</p><p>对于软件系统，尤其是大规模复杂软件系统而言，软件系统架构对于确保最终系统的质量具有十分重要的意义。在系统架构设计结束后，为保证架构设计的合理性、完整性和针对性，保证系统质量，降低成本及投资风险，需要对设计好的系统架构进行评估。架构评估是软件开发过程中的重要环节。</p><p>&nbsp;</p><p>请围绕“软件系统架构评估及其应用”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你所参与管理或开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.详细阐述有哪些不同的软件系统架构评估方法，并从评估目标、质量属性和评估活动等方面论述其区别。</p><p>3.详细说明你所参与的软件开发项目中，使用了哪种评估方法，具体实施过程和效果如何。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>1.&nbsp;简要描述所参与架构评估的软件系统，并明确指出在评估过程中承担的主要工作。</p><p>2.&nbsp;分析软件系统架构评估中所普遍关注的质量属性，并详细阐述每种质量属性的具体含义。</p><p>系统架构评估中普遍关注的质量属性包括：</p><p>1)&nbsp;性能</p><p>性能是指系统的响应能力，即需要多长时间才能对某个事件做出响应，或者在某段事件内系统所能处理的事件个数。经常用单位事件内所处理事务的数量或系统完成某个事务处理所需的时间来对性能进行定量表示。</p><p>2)&nbsp;可靠性</p><p>可靠性是软件系统在应用或者系统错误面前，在意外或者错误使用的情况下维持软件系统的功能特性的基本能力。</p><p>3)&nbsp;可用性</p><p>可用性是系统能够正常运行的时间比例。经常用两次故障之间的时间长度或在出现故障时系统能够恢复正常的速度来表示。</p><p>4)&nbsp;安全性</p><p>安全性是指系统在向合法用户提供服务的同时能够阻止非授权用户使用的企图或拒绝服务的能力。</p><p>5)&nbsp;可修改性</p><p>可修改性是指能够快速地以较高的性能价格比对系统进行变更的能力，包括可维护性、可扩展性、结构重构、可移植性。</p><p>6)&nbsp;功能性</p><p>功能性是系统所能完成所期望的工作的能力。一项任务的完成需要系统中许多或大多数构件的相互协作。</p><p>7)&nbsp;可变性</p><p>可变性是指体系结构经扩充或变更而成为新体系结构的能力。</p><p>8)&nbsp;互操作性</p><p>互操作性是指作为系统组成部分的软件不是独立存在的，经常与其他系统或自身环境相互作用。如程序和用其他编程语言编写的软件系统的交互作用就是互操作性的问题。</p><p>3.&nbsp;分析软件系统架构评估种现阶段主要评估方法</p><p>业界已开发出多种软件架构评估的方法,按基于的技术手段来看,可以分为三类:基于调查问卷或检查表的方式、基于场景的方式和基于度量的方式。</p><p>1)&nbsp;基于调查问卷或检查表的方式:该方式的关键是要设计好问卷或检查表,它充分利用系统相关人员的经验和知识,获得对架构的评估。其缺点是在很大程度上依赖于评估人员的主观推断。</p><p>2） 基于场景的方式:基于场景的方式由SEI首先提出并应用在架构权衡分析法(Architecture Tradeoff Analysis Method, ATAM)和软件架构分析方法(Software&nbsp;Architecture Analysis Method, SAAM)中。它是通过分析软件架构对场景(也就是对系统的使用或修改活动)的支持程度,从而判断该架构对这一场景所代表的质量需求的满足程度。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;(1)架构权衡分析方法ATAM是一种系统架构评估方法,主要在系统开发之前,针对性能、可用性、安全性和可修改性等质量属性进行评价和折中。ATAM可以分为4个主要的活动阶段,包括需求收集、架构视图描述、属性模型构造和分析、架构决策与折中,整个评估过程强调以属性作为架构评估的核心概念。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;(2) SAAM是最早形成文档并得到广泛应用的软件架构分析方法。SAAM的主要输入是问题描述、需求说明和架构描述,其分析过程主要包括场景开发、架构描述、单个场景评估、场景交互和总体评估。</p><p>3) 基于度量的方式:制定一些定量值来度量架构,如代码行数等。要制定质量属性和度量结果之间的映射。</p><p>4. 针对实际参与的软件系统架构评估，说明所采用的评估方法，并描述其具体实施过程和效果。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 36,
      "belong_page": 1,
      "question_id": 303760,
      "question_title": "<p>试题二 &nbsp;论软件系统架构评估及其应用</p><p>对于软件系统，尤其是大规模复杂软件系统而言，软件系统架构对于确保最终系统的质量具有十分重要的意义。在系统架构设计结束后，为保证架构设计的合理性、完整性和针对性，保证系统质量，降低成本及投资风险，需要对设计好的系统架构进行评估。架构评估是软件开发过程中的重要环节。</p><p>&nbsp;</p><p>请围绕“软件系统架构评估及其应用”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你所参与管理或开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.详细阐述有哪些不同的软件系统架构评估方法，并从评估目标、质量属性和评估活动等方面论述其区别。</p><p>3.详细说明你所参与的软件开发项目中，使用了哪种评估方法，具体实施过程和效果如何。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 303760,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>1.&nbsp;简要描述所参与架构评估的软件系统，并明确指出在评估过程中承担的主要工作。</p><p>2.&nbsp;分析软件系统架构评估中所普遍关注的质量属性，并详细阐述每种质量属性的具体含义。</p><p>系统架构评估中普遍关注的质量属性包括：</p><p>1)&nbsp;性能</p><p>性能是指系统的响应能力，即需要多长时间才能对某个事件做出响应，或者在某段事件内系统所能处理的事件个数。经常用单位事件内所处理事务的数量或系统完成某个事务处理所需的时间来对性能进行定量表示。</p><p>2)&nbsp;可靠性</p><p>可靠性是软件系统在应用或者系统错误面前，在意外或者错误使用的情况下维持软件系统的功能特性的基本能力。</p><p>3)&nbsp;可用性</p><p>可用性是系统能够正常运行的时间比例。经常用两次故障之间的时间长度或在出现故障时系统能够恢复正常的速度来表示。</p><p>4)&nbsp;安全性</p><p>安全性是指系统在向合法用户提供服务的同时能够阻止非授权用户使用的企图或拒绝服务的能力。</p><p>5)&nbsp;可修改性</p><p>可修改性是指能够快速地以较高的性能价格比对系统进行变更的能力，包括可维护性、可扩展性、结构重构、可移植性。</p><p>6)&nbsp;功能性</p><p>功能性是系统所能完成所期望的工作的能力。一项任务的完成需要系统中许多或大多数构件的相互协作。</p><p>7)&nbsp;可变性</p><p>可变性是指体系结构经扩充或变更而成为新体系结构的能力。</p><p>8)&nbsp;互操作性</p><p>互操作性是指作为系统组成部分的软件不是独立存在的，经常与其他系统或自身环境相互作用。如程序和用其他编程语言编写的软件系统的交互作用就是互操作性的问题。</p><p>3.&nbsp;分析软件系统架构评估种现阶段主要评估方法</p><p>业界已开发出多种软件架构评估的方法,按基于的技术手段来看,可以分为三类:基于调查问卷或检查表的方式、基于场景的方式和基于度量的方式。</p><p>1)&nbsp;基于调查问卷或检查表的方式:该方式的关键是要设计好问卷或检查表,它充分利用系统相关人员的经验和知识,获得对架构的评估。其缺点是在很大程度上依赖于评估人员的主观推断。</p><p>2） 基于场景的方式:基于场景的方式由SEI首先提出并应用在架构权衡分析法(Architecture Tradeoff Analysis Method, ATAM)和软件架构分析方法(Software&nbsp;Architecture Analysis Method, SAAM)中。它是通过分析软件架构对场景(也就是对系统的使用或修改活动)的支持程度,从而判断该架构对这一场景所代表的质量需求的满足程度。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;(1)架构权衡分析方法ATAM是一种系统架构评估方法,主要在系统开发之前,针对性能、可用性、安全性和可修改性等质量属性进行评价和折中。ATAM可以分为4个主要的活动阶段,包括需求收集、架构视图描述、属性模型构造和分析、架构决策与折中,整个评估过程强调以属性作为架构评估的核心概念。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;(2) SAAM是最早形成文档并得到广泛应用的软件架构分析方法。SAAM的主要输入是问题描述、需求说明和架构描述,其分析过程主要包括场景开发、架构描述、单个场景评估、场景交互和总体评估。</p><p>3) 基于度量的方式:制定一些定量值来度量架构,如代码行数等。要制定质量属性和度量结果之间的映射。</p><p>4. 针对实际参与的软件系统架构评估，说明所采用的评估方法，并描述其具体实施过程和效果。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 309528,
    "question_title": "<p>【问题 2】(3 分)</p><p>在架构评估过程中，需要正确识别系统的架构风险、敏感点和权衡点，并进行合理的架构决策。请用 300 字以内的文字给出系统架构风险、敏感点和权衡点的定义，并从题干(a) - (k) 中分别选出 1 个对系统架构非风险点和权衡点最为恰当的描述。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>非风险点是k；权衡点是h。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 37,
      "belong_page": 1,
      "question_id": 309528,
      "question_title": "<p>【问题 2】(3 分)</p><p>在架构评估过程中，需要正确识别系统的架构风险、敏感点和权衡点，并进行合理的架构决策。请用 300 字以内的文字给出系统架构风险、敏感点和权衡点的定义，并从题干(a) - (k) 中分别选出 1 个对系统架构非风险点和权衡点最为恰当的描述。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 309526,
      "score_rule": "",
      "material_text": "<p>试题一（共25分）</p><p>阅读以下关于软件架构的叙述，在答题纸上回答问题1和问题2。</p><p><br/></p><p>【说明】</p><p>某B2C公司因业务扩展，客户增长迅速，需建立一套在线交易系统实现在线电子商务活动，在需求分析与架构设计阶段，该公司提出的需求、质量属性描述和架构特性如下：</p><p>(a)系统用户分为系统管理员、系统操作员和ESS用户三类。</p><p>(b)当用户视图从外部站点修改系统数据的时候，应该对用户身份进行验证，阻止对数据的访问；</p><p>(c)在正常负载情况下，系统应在1秒内对用户的商品查询请求进行响应；</p><p>(d)单元测试人员在输入商品关键字进行查询商品时，系统能够通过关键字检索出商品信息呈现出来；</p><p>(e)系统主站点断电后，应在5秒内将请求重定向到备用站点；</p><p>(f)用户取消自己即将生成的交易时，系统可以取消交易并系统删除交易恢复以前的界面；</p><p>&nbsp;(g)新年来临，当该B2C网站需求在1个月内将界面更改为新年主题增加抽奖红包功能。</p><p>&nbsp;(h)交易系统需要增强加密的级别安全性会提高但是会带来性能下降;</p><p>(i)系统应对用户信息数据库的所有操作都进行完整记录；</p><p>&nbsp;(j)系统必须提供远程调试接口，并支持远程调试。</p><p>（k）如果客户对于系统业务规则尚未达成共识，可能导致部分业务功能模块规则的矛盾，但是目前这种矛盾是可以控制的。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>非风险点是k；权衡点是h。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9395",
    "section_name": "系统质量属性与架构评估（第二版） - 系统架构评估",
    "question_id": 352449,
    "question_title": "<p>【问题2】（3分）</p><p>在架构评估过程中，需要正确识别系统的架构风险、敏感点和权衡点请从题干描述中的(a)～(o)各选出1个属于系统架构风险、敏感点和权衡点的描述。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>(m)描述的是系统架构风险；(e)描述的是敏感点；(i)描述的是权衡点。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 38,
      "belong_page": 1,
      "question_id": 352449,
      "question_title": "<p>【问题2】（3分）</p><p>在架构评估过程中，需要正确识别系统的架构风险、敏感点和权衡点请从题干描述中的(a)～(o)各选出1个属于系统架构风险、敏感点和权衡点的描述。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 352447,
      "score_rule": "",
      "material_text": "<p style=\"margin-top: 21px;text-indent: 29px\">试题一</p><p>阅读以下关于软件架构评估的说明，回答下列问题。</p><p style=\"margin-top: 5px;text-indent: 28px\">【说明】</p><p>某软件公司拟为某市级公安机关开发一套特种车辆管理与监控系统，以提高特种车辆管理的效率和准确性。在系统需求分析与架构设计阶段，用户提出的部分需求和关键质量属性场景如下：</p><p>&nbsp;&nbsp; &nbsp;(a)系统用户分为管理员、分管领导和普通民警等三类；</p><p>&nbsp;&nbsp; &nbsp;(b)正常负载情况下，系统必须在0.5秒内对用户的车辆查询请求进行响应；</p><p>&nbsp;&nbsp; &nbsp;(c)系统能够抵御99.999%的黑客攻击；</p><p>&nbsp;&nbsp; &nbsp;(d)系统的用户名必须以字母开头，长度不少于5个字符；</p><p>&nbsp;&nbsp; &nbsp;(e)对查询请求处理时间的要求将影响系统的数据传输协议和处理过程的设计；</p><p>&nbsp;&nbsp; &nbsp;(f)网络失效后，系统需要在2分钟内发现并启用备用网络系统；</p><p>&nbsp;&nbsp; &nbsp;(g)在系统升级时，需要保证在1个月内添加一个新的消息处理中间件；</p><p>&nbsp;&nbsp; &nbsp;(h)查询过程中涉及到的车辆实时视频传输必须保证20帧/秒的速率，且画面具有600×480的分辨率；</p><p>&nbsp;&nbsp; &nbsp;(i)更改系统加密的级别将对安全性和性能产生影响；</p><p>&nbsp;&nbsp; &nbsp;(j)系统主站点断电后，需要在3秒内将请求重定向到备用站点；</p><p>&nbsp;&nbsp; &nbsp;(k)假设每秒中用户查询请求的数量是10个，处理请求的时间为30毫秒，则“在1秒内完成用户的查询请求”这一要求是可以实现的；</p><p>&nbsp;&nbsp; &nbsp;(l)对用户信息数据的授权访问必须保证99.999%的安全性；</p><p>&nbsp;&nbsp; &nbsp;(m)目前对“车辆信息实时监控”业务逻辑的描述尚未达成共识，这可能导致部分业务功能模块的重复，影响系统的可修改性；</p><p>&nbsp;&nbsp; &nbsp;(n)更改系统的Web界面接口必须在1周内完成；</p><p>&nbsp;&nbsp; &nbsp;(o)系统需要提供远程调试接口，并支持系统的远程调试。</p><p>&nbsp;&nbsp; &nbsp;在对系统需求和质量属性场景进行分析的基础上，系统的架构师给出了三个候选的架构设计方案。公司目前正在组织系统开发的相关人员对系统架构进行评估。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>(m)描述的是系统架构风险；(e)描述的是敏感点；(i)描述的是权衡点。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176865.8310003
  },
  {
    "section_id": "9396",
    "section_name": "系统质量属性与架构评估（第二版） - ATAM方法架构评估实践",
    "question_id": 507294,
    "question_title": "<p>ATAM头脑风暴的三种场景是（ ）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 用例场景、增长场景、探索性场景 ",
      " 用例场景、增长场景、环境场景 ",
      " 用例场景、探索性场景、环境场景 ",
      " 用例场景、环境场景、降低场景 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 507294,
      "question_title": "<p>ATAM头脑风暴的三种场景是（ ）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507294,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 用例场景、增长场景、探索性场景 ",
        " 用例场景、增长场景、环境场景 ",
        " 用例场景、探索性场景、环境场景 ",
        " 用例场景、环境场景、降低场景 "
      ]
    },
    "crawl_time": 1753176866.9983222
  },
  {
    "section_id": "9396",
    "section_name": "系统质量属性与架构评估（第二版） - ATAM方法架构评估实践",
    "question_id": 507343,
    "question_title": "在软件架构评估中，(1)方法采用效用树这一工具来对质量属性进行分类和优先级排序。效用树的结构包括：（2）。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "SAEM",
      "ATAM",
      "SAAM",
      "CBAM"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 507343,
      "question_title": "在软件架构评估中，(1)方法采用效用树这一工具来对质量属性进行分类和优先级排序。效用树的结构包括：（2）。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 507342,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "SAEM",
        "ATAM",
        "SAAM",
        "CBAM"
      ]
    },
    "crawl_time": 1753176866.9983222
  },
  {
    "section_id": "9396",
    "section_name": "系统质量属性与架构评估（第二版） - ATAM方法架构评估实践",
    "question_id": 507344,
    "question_title": "在软件架构评估中，(1)方法采用效用树这一工具来对质量属性进行分类和优先级排序。效用树的结构包括：（2）。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "树根--质量属性--属性分类--质量属性场景(叶子节点)",
      "树根--属性分类--属性描述--质量属性场景(叶子节点)",
      "树根--质量属性--属性描述--质量属性场景(叶子节点)",
      "树根--功能需求--需求描述--质量属性场景(叶子节点)"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 507344,
      "question_title": "在软件架构评估中，(1)方法采用效用树这一工具来对质量属性进行分类和优先级排序。效用树的结构包括：（2）。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 507342,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "树根--质量属性--属性分类--质量属性场景(叶子节点)",
        "树根--属性分类--属性描述--质量属性场景(叶子节点)",
        "树根--质量属性--属性描述--质量属性场景(叶子节点)",
        "树根--功能需求--需求描述--质量属性场景(叶子节点)"
      ]
    },
    "crawl_time": 1753176866.9983222
  },
  {
    "section_id": "9398",
    "section_name": "软件可靠性基础知识（第二版） - 软件可靠性基本概念",
    "question_id": 354823,
    "question_title": "【51CTO学堂-学员回忆版】系统(16)是指在规定的时间内和规定条件下能有效地实现规定功能的能力。它不仅取决于规定的使用条件等因素，还与设计技术有关。常用的度量指标主要有故障率(或失效率)、平均失效等待时间、平均失效间隔时间和可靠度等。其中，(17)是系统在规定工作时间内无故障的概率。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "可靠性",
      "可用性",
      "可理解性",
      "可测试性"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 354823,
      "question_title": "【51CTO学堂-学员回忆版】系统(16)是指在规定的时间内和规定条件下能有效地实现规定功能的能力。它不仅取决于规定的使用条件等因素，还与设计技术有关。常用的度量指标主要有故障率(或失效率)、平均失效等待时间、平均失效间隔时间和可靠度等。其中，(17)是系统在规定工作时间内无故障的概率。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354822,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "可靠性",
        "可用性",
        "可理解性",
        "可测试性"
      ]
    },
    "crawl_time": 1753176868.2115963
  },
  {
    "section_id": "9398",
    "section_name": "软件可靠性基础知识（第二版） - 软件可靠性基本概念",
    "question_id": 354824,
    "question_title": "【51CTO学堂-学员回忆版】系统(16)是指在规定的时间内和规定条件下能有效地实现规定功能的能力。它不仅取决于规定的使用条件等因素，还与设计技术有关。常用的度量指标主要有故障率(或失效率)、平均失效等待时间、平均失效间隔时间和可靠度等。其中，(17)是系统在规定工作时间内无故障的概率。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "失效率",
      "平均失效等待时间",
      "平均失效间隔时间",
      "可靠度"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 354824,
      "question_title": "【51CTO学堂-学员回忆版】系统(16)是指在规定的时间内和规定条件下能有效地实现规定功能的能力。它不仅取决于规定的使用条件等因素，还与设计技术有关。常用的度量指标主要有故障率(或失效率)、平均失效等待时间、平均失效间隔时间和可靠度等。其中，(17)是系统在规定工作时间内无故障的概率。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354822,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "失效率",
        "平均失效等待时间",
        "平均失效间隔时间",
        "可靠度"
      ]
    },
    "crawl_time": 1753176868.2115963
  },
  {
    "section_id": "9398",
    "section_name": "软件可靠性基础知识（第二版） - 软件可靠性基本概念",
    "question_id": 355107,
    "question_title": "<p>在进行架构评估时，首先要明确具体的质量目标，并以之作为判定该架构优劣的标准。为得出这些目标而采用的机制叫做场景，场景是从（63）的角度对与系统的交互的简短措述。</p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 用户 ",
      " 系统架构师 ",
      " 项目管理者  <br/> ",
      " 风险承担者 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 355107,
      "question_title": "<p>在进行架构评估时，首先要明确具体的质量目标，并以之作为判定该架构优劣的标准。为得出这些目标而采用的机制叫做场景，场景是从（63）的角度对与系统的交互的简短措述。</p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 355107,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 用户 ",
        " 系统架构师 ",
        " 项目管理者  <br/> ",
        " 风险承担者 "
      ]
    },
    "crawl_time": 1753176868.2125983
  },
  {
    "section_id": "9398",
    "section_name": "软件可靠性基础知识（第二版） - 软件可靠性基本概念",
    "question_id": 373701,
    "question_title": "在系统性能评价中通常用平均无故障时间（MTBF）和平均故障修复时间（MTTR）分别表示计算机系统的可靠性和可用性，以下关于MTBF和MTTR的说法中，错误的是（59）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "平均无故障时间，也就是平均运行多久不出故障，这个时间越大，可用性越好",
      "平均故障修复时间，也就是每次故障需要多长时间恢复为正常状态，这个时间越小越好",
      "如果两次故障的间隔时间长，而每次故障的修复时间短，则系统的可靠性高",
      "MTBF小，MTTR大表示系统具有高可靠性和高可用性"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 373701,
      "question_title": "在系统性能评价中通常用平均无故障时间（MTBF）和平均故障修复时间（MTTR）分别表示计算机系统的可靠性和可用性，以下关于MTBF和MTTR的说法中，错误的是（59）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373701,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "平均无故障时间，也就是平均运行多久不出故障，这个时间越大，可用性越好",
        "平均故障修复时间，也就是每次故障需要多长时间恢复为正常状态，这个时间越小越好",
        "如果两次故障的间隔时间长，而每次故障的修复时间短，则系统的可靠性高",
        "MTBF小，MTTR大表示系统具有高可靠性和高可用性"
      ]
    },
    "crawl_time": 1753176868.2125983
  },
  {
    "section_id": "9398",
    "section_name": "软件可靠性基础知识（第二版） - 软件可靠性基本概念",
    "question_id": 523285,
    "question_title": "以下不属于可靠性的是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "容错性",
      "成熟性",
      "可恢复性",
      "健壮性"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 523285,
      "question_title": "以下不属于可靠性的是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523285,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "容错性",
        "成熟性",
        "可恢复性",
        "健壮性"
      ]
    },
    "crawl_time": 1753176868.2125983
  },
  {
    "section_id": "9398",
    "section_name": "软件可靠性基础知识（第二版） - 软件可靠性基本概念",
    "question_id": 43813,
    "question_title": "<p>阅读以下关于嵌入式系统可靠性设计方面的描述，回答下列问题。<br/>【说明】某宇航公司长期从事宇航装备的研制工作，嵌入式系统的可靠性分析与设计已成为该公司产品研制中的核心工作，随着宇航装备的综合化技术发展，嵌入式软件规模发生了巨大变化，代码规模已从原来的几十万扩展到上百万，从而带来了由于软件失效而引起系统可靠性降低的隐患。公司领导非常重视软件可靠性工作，决定抽调王工程师等5人组建可靠性研究团队，专门研究提高本公司宇航装备的系统可靠性和软件可靠性问题，并要求在三个月内，给出本公司在系统和软件设计方面如何考虑可靠性设计的方法和规范。可靠性研究团队很快拿出了系统及硬件的可靠性提高方案，但对于软件可靠性问题始终没有研究出一种普遍认同的方法。<br/>【问题1】请用200字以内文字说明系统可靠性的定义及包含的4个子特性，并简要指出提高系统可靠性一般采用哪些技术?<br/>【问题2】王工带领的可靠性研究团队之所以没能快速取得软件可靠性问题的技术突破，其核心原因是他们没有搞懂高可靠性软件应具备的特点。软件可靠性一般致力于系统性地减少和消除对软件程序性能有不利影响的系统故障。除非被修改，否则软件系统不会随着时间的推移而发生退化。请根据你对软件可靠性的理解，给出下表所列出的硬件可靠性特征与其对应的软件可靠性特征之间的差异或相似之处，将答案写在答题纸上。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211130/1638258162853319.png\" title=\"1638258162853319.png\" alt=\"屏幕截图 2021-11-30.png\"/><br/>【问题3】王工带领的可靠性研究团队在分析了大量相关资料基础上，提出软件的质量和可靠性必须在开发过程构建到软件中，也就是说，为了提高软件的可靠性，必须在需求分析、设计阶段开展软件可靠性筹划和设计。研究团队针对本公司承担的飞行控制系统制定出了一套飞控软件的可靠性设计要求。飞行控制系统是一种双余度同构型系统，输入采用了独立的两路数据通道，在系统内完成输入数据的交叉对比、表决、制导率计算，输出数据的交叉对比、表决、输出等功能，系统的监控模块实现对系统失效或失步的检测与定位。其软件的可靠性设计包括恢复块方法和N版本程序设计方法。请根据恢复块方法工作原理完成下图，在(1)～(4)中填入恰当的内容。并比较恢复块方法与N版本程序设计方法，将比较结果(5)～(8)填入下表中。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211130/1638258195510300.png\" title=\"1638258195510300.png\" alt=\"屏幕截图 2021-11-30.png\"/><br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211130/1638258246245025.png\" title=\"1638258246245025.png\" alt=\"屏幕截图 2021-11-30.png\"/></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>答案：<br/>问题1：<br/>系统可靠性定义：系统在规定的时间内及规定的环境条件下，完成规定功能的能力，就是系统无故障运行的概率。&nbsp;&nbsp; &nbsp;<br/>根据国家标准《软件工程产品质量&nbsp;第1部分：质量模型》(GB/T 16260.1—2006)的规定，系统可靠性包括：成熟性、容错性、易恢复性和可靠性的依从性4个子特性。&nbsp;&nbsp; <br/>&nbsp;提高系统可靠性一般采用以下4类技术：&nbsp;&nbsp; &nbsp;(1)冗余技术；&nbsp;&nbsp; &nbsp;(2)软件容错技术；&nbsp;&nbsp; &nbsp;(3)双机容错技术；&nbsp;&nbsp; &nbsp;(4)集群技术。<br/>问题2：<br/>(1)从硬件角度分析，由于硬件一旦生产完成，其可靠性指标将会随着使用时间延长而逐步老化，从而带来可靠性降低，即呈现失效率服从浴缸曲线；而软件不存在随时间延长而老化的现象，因此，在不考虑软件演化的情况下，失效率在统计上是非增的。&nbsp;&nbsp; &nbsp;<br/>(2)由于硬件是由多种电子器件组成，即使不使用，材料劣化也会导致失效；而软件就不同了，软件一旦调试完成，固化到设备中，在不考虑存储介质的老化因素的前提下，即使不使用该软件，软件也永远不会发生失效。&nbsp;&nbsp; <br/>&nbsp;(3)由于硬件存在可更换性，其硬件通过维修，可恢复原始状态；而对于软件而言，一旦需要维护，必然是存在需求更改、程序存在bug等现象，其维护必然会创建新的软件代码。&nbsp;&nbsp; <br/>&nbsp;(4)一般而言，硬件失效存在一个发展过程，在发生故障之前必然会有报警现象出现，而软件失效之前很少会有警告。<br/>问题3：<br/>1．恢复块方法：&nbsp;&nbsp; &nbsp;(1)主块&nbsp;&nbsp; &nbsp;(2)验证测试&nbsp;&nbsp; &nbsp;(3)输出正确结果&nbsp;&nbsp; &nbsp;(4)异常处理&nbsp;&nbsp; &nbsp;<br/>2．恢复块方法与N版本程序设计的比较&nbsp;&nbsp; &nbsp;(5)表决&nbsp;&nbsp; &nbsp;(6)反向恢复&nbsp;&nbsp; &nbsp;(7)差&nbsp;&nbsp; &nbsp;(8)好</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 43813,
      "question_title": "<p>阅读以下关于嵌入式系统可靠性设计方面的描述，回答下列问题。<br/>【说明】某宇航公司长期从事宇航装备的研制工作，嵌入式系统的可靠性分析与设计已成为该公司产品研制中的核心工作，随着宇航装备的综合化技术发展，嵌入式软件规模发生了巨大变化，代码规模已从原来的几十万扩展到上百万，从而带来了由于软件失效而引起系统可靠性降低的隐患。公司领导非常重视软件可靠性工作，决定抽调王工程师等5人组建可靠性研究团队，专门研究提高本公司宇航装备的系统可靠性和软件可靠性问题，并要求在三个月内，给出本公司在系统和软件设计方面如何考虑可靠性设计的方法和规范。可靠性研究团队很快拿出了系统及硬件的可靠性提高方案，但对于软件可靠性问题始终没有研究出一种普遍认同的方法。<br/>【问题1】请用200字以内文字说明系统可靠性的定义及包含的4个子特性，并简要指出提高系统可靠性一般采用哪些技术?<br/>【问题2】王工带领的可靠性研究团队之所以没能快速取得软件可靠性问题的技术突破，其核心原因是他们没有搞懂高可靠性软件应具备的特点。软件可靠性一般致力于系统性地减少和消除对软件程序性能有不利影响的系统故障。除非被修改，否则软件系统不会随着时间的推移而发生退化。请根据你对软件可靠性的理解，给出下表所列出的硬件可靠性特征与其对应的软件可靠性特征之间的差异或相似之处，将答案写在答题纸上。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211130/1638258162853319.png\" title=\"1638258162853319.png\" alt=\"屏幕截图 2021-11-30.png\"/><br/>【问题3】王工带领的可靠性研究团队在分析了大量相关资料基础上，提出软件的质量和可靠性必须在开发过程构建到软件中，也就是说，为了提高软件的可靠性，必须在需求分析、设计阶段开展软件可靠性筹划和设计。研究团队针对本公司承担的飞行控制系统制定出了一套飞控软件的可靠性设计要求。飞行控制系统是一种双余度同构型系统，输入采用了独立的两路数据通道，在系统内完成输入数据的交叉对比、表决、制导率计算，输出数据的交叉对比、表决、输出等功能，系统的监控模块实现对系统失效或失步的检测与定位。其软件的可靠性设计包括恢复块方法和N版本程序设计方法。请根据恢复块方法工作原理完成下图，在(1)～(4)中填入恰当的内容。并比较恢复块方法与N版本程序设计方法，将比较结果(5)～(8)填入下表中。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211130/1638258195510300.png\" title=\"1638258195510300.png\" alt=\"屏幕截图 2021-11-30.png\"/><br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211130/1638258246245025.png\" title=\"1638258246245025.png\" alt=\"屏幕截图 2021-11-30.png\"/></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 43813,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>答案：<br/>问题1：<br/>系统可靠性定义：系统在规定的时间内及规定的环境条件下，完成规定功能的能力，就是系统无故障运行的概率。&nbsp;&nbsp; &nbsp;<br/>根据国家标准《软件工程产品质量&nbsp;第1部分：质量模型》(GB/T 16260.1—2006)的规定，系统可靠性包括：成熟性、容错性、易恢复性和可靠性的依从性4个子特性。&nbsp;&nbsp; <br/>&nbsp;提高系统可靠性一般采用以下4类技术：&nbsp;&nbsp; &nbsp;(1)冗余技术；&nbsp;&nbsp; &nbsp;(2)软件容错技术；&nbsp;&nbsp; &nbsp;(3)双机容错技术；&nbsp;&nbsp; &nbsp;(4)集群技术。<br/>问题2：<br/>(1)从硬件角度分析，由于硬件一旦生产完成，其可靠性指标将会随着使用时间延长而逐步老化，从而带来可靠性降低，即呈现失效率服从浴缸曲线；而软件不存在随时间延长而老化的现象，因此，在不考虑软件演化的情况下，失效率在统计上是非增的。&nbsp;&nbsp; &nbsp;<br/>(2)由于硬件是由多种电子器件组成，即使不使用，材料劣化也会导致失效；而软件就不同了，软件一旦调试完成，固化到设备中，在不考虑存储介质的老化因素的前提下，即使不使用该软件，软件也永远不会发生失效。&nbsp;&nbsp; <br/>&nbsp;(3)由于硬件存在可更换性，其硬件通过维修，可恢复原始状态；而对于软件而言，一旦需要维护，必然是存在需求更改、程序存在bug等现象，其维护必然会创建新的软件代码。&nbsp;&nbsp; <br/>&nbsp;(4)一般而言，硬件失效存在一个发展过程，在发生故障之前必然会有报警现象出现，而软件失效之前很少会有警告。<br/>问题3：<br/>1．恢复块方法：&nbsp;&nbsp; &nbsp;(1)主块&nbsp;&nbsp; &nbsp;(2)验证测试&nbsp;&nbsp; &nbsp;(3)输出正确结果&nbsp;&nbsp; &nbsp;(4)异常处理&nbsp;&nbsp; &nbsp;<br/>2．恢复块方法与N版本程序设计的比较&nbsp;&nbsp; &nbsp;(5)表决&nbsp;&nbsp; &nbsp;(6)反向恢复&nbsp;&nbsp; &nbsp;(7)差&nbsp;&nbsp; &nbsp;(8)好</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176868.2125983
  },
  {
    "section_id": "9401",
    "section_name": "软件可靠性基础知识（第二版） - 软件可靠性设计",
    "question_id": 43748,
    "question_title": "<p>假如有3块容量是80G的硬盘做RAID 5阵列，则这个RAID 5的容量是（请作答此空）；而如果有2块80G的盘和1块40G的盘，此时RAID 5的容量是（ ）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 240G ",
      " 160G&nbsp; ",
      " 80G&nbsp; ",
      " 40G "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43748,
      "question_title": "<p>假如有3块容量是80G的硬盘做RAID 5阵列，则这个RAID 5的容量是（请作答此空）；而如果有2块80G的盘和1块40G的盘，此时RAID 5的容量是（ ）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43748,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 240G ",
        " 160G&nbsp; ",
        " 80G&nbsp; ",
        " 40G "
      ]
    },
    "crawl_time": 1753176869.3793223
  },
  {
    "section_id": "9401",
    "section_name": "软件可靠性基础知识（第二版） - 软件可靠性设计",
    "question_id": 354902,
    "question_title": "<p>在白盒测试中，测试强度最高的是（40）</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 语句覆盖 ",
      " 分支覆盖 ",
      " 判定覆盖 ",
      " 路径覆盖 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 354902,
      "question_title": "<p>在白盒测试中，测试强度最高的是（40）</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354902,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 语句覆盖 ",
        " 分支覆盖 ",
        " 判定覆盖 ",
        " 路径覆盖 "
      ]
    },
    "crawl_time": 1753176869.3793223
  },
  {
    "section_id": "9401",
    "section_name": "软件可靠性基础知识（第二版） - 软件可靠性设计",
    "question_id": 507316,
    "question_title": "N版本设计较传统多的三个步骤是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "相同成分规范评审、相异性确认、面对面测试",
      "相同成分规范评审、相异性确认、背对背测试",
      "相异成分规范评审、相异性确认 、背对背测试",
      "相异成分规范评审、相同性确认 、背对背测试"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 507316,
      "question_title": "N版本设计较传统多的三个步骤是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507316,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "相同成分规范评审、相异性确认、面对面测试",
        "相同成分规范评审、相异性确认、背对背测试",
        "相异成分规范评审、相异性确认 、背对背测试",
        "相异成分规范评审、相同性确认 、背对背测试"
      ]
    },
    "crawl_time": 1753176869.3793223
  },
  {
    "section_id": "9401",
    "section_name": "软件可靠性基础知识（第二版） - 软件可靠性设计",
    "question_id": 208632,
    "question_title": "<p>论软件可靠性设计技术的应用</p><p>随着软件的日益普及，系统中软件成分不断增加，使得系统对软件的依赖越来越强。软件的可靠性对系统可靠性的影响越来越大。而实践证明，保障软件可靠性最有效、最经济、最重要的手段是在软件设计阶段采取措施进行可靠性控制，为此提出了软件可靠性设计的概念。</p><p>软件可靠性设计就是在常规的软件设计中，应用各种方法和技术，使软件设计在兼顾用户功能和性能需求的同时，全面满足软件的可靠性要求。软件可靠性设计应和软件的常规设计紧密结合，贯穿于软件设计过程的始终。</p><p>请围绕“软件可靠性设计技术的应用”论题，依次从以下三个方面进行论述。</p><p>1．概要叙述你参与管理和开发的软件项目以及你在其中所承担的主要工作。</p><p>2．结合项目实际，论述你在项目开发过程中，进行软件可靠性设计时遵循的基本原则；论述你在该项目中所采用的具体可靠性设计技术。</p><p>3．阐述你在具体的可靠性设计工作中，为了分析影响软件可靠性的主要因素，所采用的可靠性分析方法。<span style=\"font-size: 16px;\"></span></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>请看解析</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 208632,
      "question_title": "<p>论软件可靠性设计技术的应用</p><p>随着软件的日益普及，系统中软件成分不断增加，使得系统对软件的依赖越来越强。软件的可靠性对系统可靠性的影响越来越大。而实践证明，保障软件可靠性最有效、最经济、最重要的手段是在软件设计阶段采取措施进行可靠性控制，为此提出了软件可靠性设计的概念。</p><p>软件可靠性设计就是在常规的软件设计中，应用各种方法和技术，使软件设计在兼顾用户功能和性能需求的同时，全面满足软件的可靠性要求。软件可靠性设计应和软件的常规设计紧密结合，贯穿于软件设计过程的始终。</p><p>请围绕“软件可靠性设计技术的应用”论题，依次从以下三个方面进行论述。</p><p>1．概要叙述你参与管理和开发的软件项目以及你在其中所承担的主要工作。</p><p>2．结合项目实际，论述你在项目开发过程中，进行软件可靠性设计时遵循的基本原则；论述你在该项目中所采用的具体可靠性设计技术。</p><p>3．阐述你在具体的可靠性设计工作中，为了分析影响软件可靠性的主要因素，所采用的可靠性分析方法。<span style=\"font-size: 16px;\"></span></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 208632,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>请看解析</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176869.3793223
  },
  {
    "section_id": "9401",
    "section_name": "软件可靠性基础知识（第二版） - 软件可靠性设计",
    "question_id": 352344,
    "question_title": "<p>【问题1】（9分）</p><p>请用200字以内文字说明系统可靠性的定义及包含的4个子特性，并简要指出提高系统可靠性一般采用哪些技术?</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>系统可靠性定义：系统在规定的时间内及规定的环境条件下，完成规定功能的能力，就是系统无故障运行的概率。</p><p>根据国家标准《软件工程产品质量 第1部分：质量模型》（GB/T 16260.1—2006）的规定，系统可靠性包括：成熟性、容错性、易恢复性和可靠性的依从性4个子特性。</p><p>提高系统可靠性一般采用以下4类技术：</p><p>（1）冗余技术；</p><p>（2）软件容错技术；</p><p>（3）双机容错技术；</p><p>（4）集群技术。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 352344,
      "question_title": "<p>【问题1】（9分）</p><p>请用200字以内文字说明系统可靠性的定义及包含的4个子特性，并简要指出提高系统可靠性一般采用哪些技术?</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 352343,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三</p><p>阅读以下关于嵌入式系统可靠性设计方面的描述，回答下列问题。</p><p>【说明】</p><p>某宇航公司长期从事宇航装备的研制工作，嵌入式系统的可靠性分析与设计已成为该公司产品研制中的核心工作，随着宇航装备的综合化技术发展，嵌入式软件规模发生了巨大变化，代码规模已从原来的几十万扩展到上百万，从而带来了由于软件失效而引起系统可靠性降低的隐患。公司领导非常重视软件可靠性工作，决定抽调王工程师等5人组建可靠性研究团队，专门研究提高本公司宇航装备的系统可靠性和软件可靠性问题，并要求在三个月内，给出本公司在系统和软件设计方面如何考虑可靠性设计的方法和规范。可靠性研究团队很快拿出了系统及硬件的可靠性提高方案，但对于软件可靠性问题始终没有研究出一种普遍认同的方法。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>系统可靠性定义：系统在规定的时间内及规定的环境条件下，完成规定功能的能力，就是系统无故障运行的概率。</p><p>根据国家标准《软件工程产品质量 第1部分：质量模型》（GB/T 16260.1—2006）的规定，系统可靠性包括：成熟性、容错性、易恢复性和可靠性的依从性4个子特性。</p><p>提高系统可靠性一般采用以下4类技术：</p><p>（1）冗余技术；</p><p>（2）软件容错技术；</p><p>（3）双机容错技术；</p><p>（4）集群技术。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176869.3793223
  },
  {
    "section_id": "9401",
    "section_name": "软件可靠性基础知识（第二版） - 软件可靠性设计",
    "question_id": 352345,
    "question_title": "<p>【问题2】（8分）</p><p>王工带领的可靠性研究团队之所以没能快速取得软件可靠性问题的技术突破，其核心原因是他们没有搞懂高可靠性软件应具备的特点。软件可靠性一般致力于系统性地减少和消除对软件程序性能有不利影响的系统故障。除非被修改，否则软件系统不会随着时间的推移而发生退化。请根据你对软件可靠性的理解，给出下表所列出的硬件可靠性特征与其对应的软件可靠性特征之间的差异或相似之处，将答案写在答题纸上。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663933468582370.png\" title=\"1663933468582370.png\" alt=\"image.png\"/></p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）从硬件角度分析，由于硬件一旦生产完成，其可靠性指标将会随着使用时间延长而逐步老化，从而带来可靠性降低，即呈现失效率服从浴缸曲线；而软件不存在随时间延长而老化的现象，因此，在不考虑软件演化的情况下，失效率在统计上是非增的。</p><p>（2）由于硬件是由多种电子器件组成，即使不使用，材料劣化也会导致失效；而软件就不同了，软件一旦调试完成，固化到设备中，在不考虑存储介质的老化因素的前提下，即使不使用该软件，软件也永远不会发生失效。</p><p>（3）由于硬件存在可更换性，其硬件通过维修，可恢复原始状态；而对于软件而言，一旦需要维护，必然是存在需求更改、程序存在bug等现象，其维护必然会创建新的软件代码。</p><p>（4）一般而言，硬件失效存在一个发展过程，在发生故障之前必然会有报警现象出现，而软件失效之前很少会有警告。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 352345,
      "question_title": "<p>【问题2】（8分）</p><p>王工带领的可靠性研究团队之所以没能快速取得软件可靠性问题的技术突破，其核心原因是他们没有搞懂高可靠性软件应具备的特点。软件可靠性一般致力于系统性地减少和消除对软件程序性能有不利影响的系统故障。除非被修改，否则软件系统不会随着时间的推移而发生退化。请根据你对软件可靠性的理解，给出下表所列出的硬件可靠性特征与其对应的软件可靠性特征之间的差异或相似之处，将答案写在答题纸上。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663933468582370.png\" title=\"1663933468582370.png\" alt=\"image.png\"/></p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 352343,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三</p><p>阅读以下关于嵌入式系统可靠性设计方面的描述，回答下列问题。</p><p>【说明】</p><p>某宇航公司长期从事宇航装备的研制工作，嵌入式系统的可靠性分析与设计已成为该公司产品研制中的核心工作，随着宇航装备的综合化技术发展，嵌入式软件规模发生了巨大变化，代码规模已从原来的几十万扩展到上百万，从而带来了由于软件失效而引起系统可靠性降低的隐患。公司领导非常重视软件可靠性工作，决定抽调王工程师等5人组建可靠性研究团队，专门研究提高本公司宇航装备的系统可靠性和软件可靠性问题，并要求在三个月内，给出本公司在系统和软件设计方面如何考虑可靠性设计的方法和规范。可靠性研究团队很快拿出了系统及硬件的可靠性提高方案，但对于软件可靠性问题始终没有研究出一种普遍认同的方法。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）从硬件角度分析，由于硬件一旦生产完成，其可靠性指标将会随着使用时间延长而逐步老化，从而带来可靠性降低，即呈现失效率服从浴缸曲线；而软件不存在随时间延长而老化的现象，因此，在不考虑软件演化的情况下，失效率在统计上是非增的。</p><p>（2）由于硬件是由多种电子器件组成，即使不使用，材料劣化也会导致失效；而软件就不同了，软件一旦调试完成，固化到设备中，在不考虑存储介质的老化因素的前提下，即使不使用该软件，软件也永远不会发生失效。</p><p>（3）由于硬件存在可更换性，其硬件通过维修，可恢复原始状态；而对于软件而言，一旦需要维护，必然是存在需求更改、程序存在bug等现象，其维护必然会创建新的软件代码。</p><p>（4）一般而言，硬件失效存在一个发展过程，在发生故障之前必然会有报警现象出现，而软件失效之前很少会有警告。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176869.3793223
  },
  {
    "section_id": "9401",
    "section_name": "软件可靠性基础知识（第二版） - 软件可靠性设计",
    "question_id": 352346,
    "question_title": "<p>【问题3】（8分）</p><p>王工带领的可靠性研究团队在分析了大量相关资料基础上，提出软件的质量和可靠性必须在开发过程构建到软件中，也就是说，为了提高软件的可靠性，必须在需求分析、设计阶段开展软件可靠性筹划和设计。研究团队针对本公司承担的飞行控制系统制定出了一套飞控软件的可靠性设计要求。飞行控制系统是一种双余度同构型系统，输入采用了独立的两路数据通道，在系统内完成输入数据的交叉对比、表决、制导率计算，输出数据的交叉对比、表决、输出等功能，系统的监控模块实现对系统失效或失步的检测与定位。其软件的可靠性设计包括恢复块方法和N版本程序设计方法。请根据恢复块方法工作原理完成下图，在(1)～(4)中填入恰当的内容。并比较恢复块方法与N版本程序设计方法，将比较结果(5)～(8)填入下表中。&nbsp;</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663933485526839.png\" title=\"1663933485526839.png\" alt=\"image.png\"/><br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663933501719618.png\" title=\"1663933501719618.png\" alt=\"image.png\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>1．恢复块方法：</p><p>（1）主块</p><p>（2）验证测试</p><p>（3）输出正确结果</p><p>（4）异常处理</p><p>2．恢复块方法与N版本程序设计的比较</p><p>（5）表决</p><p>（6）反向恢复</p><p>（7）差</p><p>（8）好</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 352346,
      "question_title": "<p>【问题3】（8分）</p><p>王工带领的可靠性研究团队在分析了大量相关资料基础上，提出软件的质量和可靠性必须在开发过程构建到软件中，也就是说，为了提高软件的可靠性，必须在需求分析、设计阶段开展软件可靠性筹划和设计。研究团队针对本公司承担的飞行控制系统制定出了一套飞控软件的可靠性设计要求。飞行控制系统是一种双余度同构型系统，输入采用了独立的两路数据通道，在系统内完成输入数据的交叉对比、表决、制导率计算，输出数据的交叉对比、表决、输出等功能，系统的监控模块实现对系统失效或失步的检测与定位。其软件的可靠性设计包括恢复块方法和N版本程序设计方法。请根据恢复块方法工作原理完成下图，在(1)～(4)中填入恰当的内容。并比较恢复块方法与N版本程序设计方法，将比较结果(5)～(8)填入下表中。&nbsp;</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663933485526839.png\" title=\"1663933485526839.png\" alt=\"image.png\"/><br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663933501719618.png\" title=\"1663933501719618.png\" alt=\"image.png\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 352343,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三</p><p>阅读以下关于嵌入式系统可靠性设计方面的描述，回答下列问题。</p><p>【说明】</p><p>某宇航公司长期从事宇航装备的研制工作，嵌入式系统的可靠性分析与设计已成为该公司产品研制中的核心工作，随着宇航装备的综合化技术发展，嵌入式软件规模发生了巨大变化，代码规模已从原来的几十万扩展到上百万，从而带来了由于软件失效而引起系统可靠性降低的隐患。公司领导非常重视软件可靠性工作，决定抽调王工程师等5人组建可靠性研究团队，专门研究提高本公司宇航装备的系统可靠性和软件可靠性问题，并要求在三个月内，给出本公司在系统和软件设计方面如何考虑可靠性设计的方法和规范。可靠性研究团队很快拿出了系统及硬件的可靠性提高方案，但对于软件可靠性问题始终没有研究出一种普遍认同的方法。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>1．恢复块方法：</p><p>（1）主块</p><p>（2）验证测试</p><p>（3）输出正确结果</p><p>（4）异常处理</p><p>2．恢复块方法与N版本程序设计的比较</p><p>（5）表决</p><p>（6）反向恢复</p><p>（7）差</p><p>（8）好</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176869.3793223
  },
  {
    "section_id": "9405",
    "section_name": "软件架构的演化和维护（第二版） - 面向对象软件架构演化过程",
    "question_id": 303762,
    "question_title": "<p>试题四 &nbsp;论负载均衡技术在Web系统中的应用</p><p>负载均衡技术是提升Web系统性能的重要方法。利用负载均衡技术， 可将负载(工作任务) 进行平衡、分摊到多个操作单元上执行， 从而协同完成工作任务， 达到提升Web系统性能的目的。</p><p>&nbsp;</p><p>请围绕“负载均衡技术在Web系统中的应用”论题， 依次从以下三个方面进行论述。</p><p>1.概要叙述你参与管理和开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.详细阐述常见的三种负载均衡算法，说明算法的基本原理。</p><p>3.详细说明你所参与的软件开发项目中， 如何基于负载均衡算法实现Web应用系统的负载均衡。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>1．简要叙述所参与管理和开发的Web系统项目，并明确指出在其中承担的主要任务和开展的主要工作。</p><p>2．分析并描述负载均衡在Web应用项目高并发、高性能、高可用三高架构中的意义和作用</p><p>3. 选择三种常见的通用负载均衡算法，详细阐述负载均衡中的算法和每种算法的基本原理</p><p>1) 轮询算法</p><p>2) 随机算法</p><p>3) 比率算法</p><p>4) 优先级算法</p><p>5) 最少连接数算法</p><p>6) 最快响应时间算法</p><p>4．结合实际项目，详细阐述实际参与项目中采用了哪个或哪几个负载均衡算法实现，说明如何在项目中实践应用的负载均衡，并阐述负载均衡技术在项目中的应用效果。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 303762,
      "question_title": "<p>试题四 &nbsp;论负载均衡技术在Web系统中的应用</p><p>负载均衡技术是提升Web系统性能的重要方法。利用负载均衡技术， 可将负载(工作任务) 进行平衡、分摊到多个操作单元上执行， 从而协同完成工作任务， 达到提升Web系统性能的目的。</p><p>&nbsp;</p><p>请围绕“负载均衡技术在Web系统中的应用”论题， 依次从以下三个方面进行论述。</p><p>1.概要叙述你参与管理和开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.详细阐述常见的三种负载均衡算法，说明算法的基本原理。</p><p>3.详细说明你所参与的软件开发项目中， 如何基于负载均衡算法实现Web应用系统的负载均衡。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 303762,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>1．简要叙述所参与管理和开发的Web系统项目，并明确指出在其中承担的主要任务和开展的主要工作。</p><p>2．分析并描述负载均衡在Web应用项目高并发、高性能、高可用三高架构中的意义和作用</p><p>3. 选择三种常见的通用负载均衡算法，详细阐述负载均衡中的算法和每种算法的基本原理</p><p>1) 轮询算法</p><p>2) 随机算法</p><p>3) 比率算法</p><p>4) 优先级算法</p><p>5) 最少连接数算法</p><p>6) 最快响应时间算法</p><p>4．结合实际项目，详细阐述实际参与项目中采用了哪个或哪几个负载均衡算法实现，说明如何在项目中实践应用的负载均衡，并阐述负载均衡技术在项目中的应用效果。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176870.622379
  },
  {
    "section_id": "9409",
    "section_name": "软件架构的演化和维护（第二版） - 大型网站系统架构演化实例",
    "question_id": 63707,
    "question_title": "<p>阅读以下关于分布式数据库缓存设计的叙述，在答题纸，上回答问题1至问题3.</p><p>[说明]某企业是为城市高端用户提供高品质蔬菜生鲜服务的初创企业，创业初期为快速开展业务，该企业采用轻量型的开发架构(脚本语言+关系型数据库)研制了一套业务系统。业务开展后受到用户普遍欢迎，用户数和业务数量迅速增长，原有的数据库服务器已不能满足高度并发的业务要求。为此，该企业成立了专门的研发团队来解决该问题。张工建议重新开发整个系统，采用新的服务器和数据架构，解决当前问题的同时为日后的扩展提供支持。但是，李工认为张工的方案开发周期过长，投入过大，当前应该在改动尽量小的前提下解决该问题。李工认为访问量很大的只是部分数据，建议采用缓存工具MemCache来减轻数据库服务器的压力，这样开发量小，开发周期短，比较适合初创公司，同时将来也可以通过集群进行扩展。然而，刘工又认为李工的方案中存在数据可靠性和一致性问题，在宕机时容易丢失交易数据，建议采用Redis来解决问题。 在经过充分讨论，该公司最终决定采用刘工的方案。</p><p><br/></p><p>[问题1](9分)</p><p>在李工和刘工的方案中，均采用分布式数据库缓存技术来解决问题。请说明分布式数据库缓存的基本概念。</p><p>表4- 1中对MemCache和Redis两种工具的优缺点进行了比较，请补充完善表4-1中的空(1) ~ (6) 。</p><p>表4-1</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20181127/1543312497669959.jpg\" title=\"1543312497669959.jpg\" alt=\"1.jpg\"/></p><p><br/></p><p>[问题2](8分)</p><p>刘工认为李工的方案存在数据可靠性和一致性的问题，请说明原因。</p><p>为避免数据可靠性和一致性的问题，刘工的方案采用Redis作为数据库缓存，请说明基本的Redis与原有关系数据库的数据同步方案。</p><p>[问题3](8分)</p><p>请给出Redis分布式存储的2种常见方案和Redis集群切片的几种常见方式。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>[问题1]<br/></p><p>分布式数据库缓存指的是在高并发环境下，为了减轻数据库压力和提高系统响应时间，在数据库系统和应用系统之间增加的独立缓存系统。</p><p>（1）Redis不仅仅支持简单的k/v类型的数据，同时还提供list，set，hash等数据结构的存储。</p><p>（2）不支持</p><p>（3）支持</p><p>（4）不支持</p><p>（5）支持</p><p>（6）弱支持，只能保证事务中的每个操作连续执行</p><p><br/></p><p>[问题2]<br/>数据仅存在于内存中,宕机或重启数据将全部失效，这属于数据可靠性问题。<br/>MemCache不支持事务，存在数据一致性问题。<br/></p><p>读数据时，先读Redis中的数据,如果Redis没有，则从原数据库读取，并同步更新Redis数据。写数据时，先写入原数据库中，并同步更新至Redis中。</p><p><br/></p><p>[问题3]</p><p>（1）主从、Cluster<br/>（2）客户端分片、Twemproxy、Redis&nbsp;Cluster、Proxy&nbsp;+&nbsp;Redis&nbsp;Cluster</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 63707,
      "question_title": "<p>阅读以下关于分布式数据库缓存设计的叙述，在答题纸，上回答问题1至问题3.</p><p>[说明]某企业是为城市高端用户提供高品质蔬菜生鲜服务的初创企业，创业初期为快速开展业务，该企业采用轻量型的开发架构(脚本语言+关系型数据库)研制了一套业务系统。业务开展后受到用户普遍欢迎，用户数和业务数量迅速增长，原有的数据库服务器已不能满足高度并发的业务要求。为此，该企业成立了专门的研发团队来解决该问题。张工建议重新开发整个系统，采用新的服务器和数据架构，解决当前问题的同时为日后的扩展提供支持。但是，李工认为张工的方案开发周期过长，投入过大，当前应该在改动尽量小的前提下解决该问题。李工认为访问量很大的只是部分数据，建议采用缓存工具MemCache来减轻数据库服务器的压力，这样开发量小，开发周期短，比较适合初创公司，同时将来也可以通过集群进行扩展。然而，刘工又认为李工的方案中存在数据可靠性和一致性问题，在宕机时容易丢失交易数据，建议采用Redis来解决问题。 在经过充分讨论，该公司最终决定采用刘工的方案。</p><p><br/></p><p>[问题1](9分)</p><p>在李工和刘工的方案中，均采用分布式数据库缓存技术来解决问题。请说明分布式数据库缓存的基本概念。</p><p>表4- 1中对MemCache和Redis两种工具的优缺点进行了比较，请补充完善表4-1中的空(1) ~ (6) 。</p><p>表4-1</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s1.51ctocdn.cn//images/20181127/1543312497669959.jpg\" title=\"1543312497669959.jpg\" alt=\"1.jpg\"/></p><p><br/></p><p>[问题2](8分)</p><p>刘工认为李工的方案存在数据可靠性和一致性的问题，请说明原因。</p><p>为避免数据可靠性和一致性的问题，刘工的方案采用Redis作为数据库缓存，请说明基本的Redis与原有关系数据库的数据同步方案。</p><p>[问题3](8分)</p><p>请给出Redis分布式存储的2种常见方案和Redis集群切片的几种常见方式。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 63707,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>[问题1]<br/></p><p>分布式数据库缓存指的是在高并发环境下，为了减轻数据库压力和提高系统响应时间，在数据库系统和应用系统之间增加的独立缓存系统。</p><p>（1）Redis不仅仅支持简单的k/v类型的数据，同时还提供list，set，hash等数据结构的存储。</p><p>（2）不支持</p><p>（3）支持</p><p>（4）不支持</p><p>（5）支持</p><p>（6）弱支持，只能保证事务中的每个操作连续执行</p><p><br/></p><p>[问题2]<br/>数据仅存在于内存中,宕机或重启数据将全部失效，这属于数据可靠性问题。<br/>MemCache不支持事务，存在数据一致性问题。<br/></p><p>读数据时，先读Redis中的数据,如果Redis没有，则从原数据库读取，并同步更新Redis数据。写数据时，先写入原数据库中，并同步更新至Redis中。</p><p><br/></p><p>[问题3]</p><p>（1）主从、Cluster<br/>（2）客户端分片、Twemproxy、Redis&nbsp;Cluster、Proxy&nbsp;+&nbsp;Redis&nbsp;Cluster</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176871.8401077
  },
  {
    "section_id": "9410",
    "section_name": "软件架构的演化和维护（第二版） - 软件架构维护",
    "question_id": 310846,
    "question_title": "<p>为了适应软件运行环境的变化而修改软件的活动称为（1）；根据用户在软件使用过程中提出的建设性意见而进行的维护活动称为（2）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "纠错性维护",
      "适应性维护",
      "完善性维护",
      "预防性维护"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 310846,
      "question_title": "<p>为了适应软件运行环境的变化而修改软件的活动称为（1）；根据用户在软件使用过程中提出的建设性意见而进行的维护活动称为（2）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310845,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "纠错性维护",
        "适应性维护",
        "完善性维护",
        "预防性维护"
      ]
    },
    "crawl_time": 1753176873.0172446
  },
  {
    "section_id": "9410",
    "section_name": "软件架构的演化和维护（第二版） - 软件架构维护",
    "question_id": 310847,
    "question_title": "<p>为了适应软件运行环境的变化而修改软件的活动称为（1）；根据用户在软件使用过程中提出的建设性意见而进行的维护活动称为（2）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "适应性维护",
      "纠错性维护",
      "改善性维护",
      "预防性维护"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 310847,
      "question_title": "<p>为了适应软件运行环境的变化而修改软件的活动称为（1）；根据用户在软件使用过程中提出的建设性意见而进行的维护活动称为（2）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310845,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "适应性维护",
        "纠错性维护",
        "改善性维护",
        "预防性维护"
      ]
    },
    "crawl_time": 1753176873.0172446
  },
  {
    "section_id": "9410",
    "section_name": "软件架构的演化和维护（第二版） - 软件架构维护",
    "question_id": 355326,
    "question_title": "<p>试题二 论软件维护方法及其应用</p><p>软件维护是指在软件交付使用后，直至软件被淘汰的整个时间范围内，为了改正错</p><p>误或满足新的需求而修改软件的活动。在软件系统运行过程中，软件需要维护的原因是</p><p>多种多样的，根据维护的原因不同，可以将软件维护分为改正性维护、适应性维护、完</p><p>善性维护和预防性维护。在维护的过程中，也需要对软件的可维护性进行度量。在软件</p><p>外部，一般采用 MTTR 来度量软件的可维护性；在软件内部，可以通过度量软件的复杂</p><p>性来间接度量软件的可维护性。</p><p>据统计，软件维护阶段占整个软件生命周期60%以上的时间。因此，分析影响软件</p><p>维护的因素，度量和提高软件的可维护性，就显得十分重要。</p><p><br/></p><p>请围绕“软件维护方法及其应用”论题，依次从以下三个方面进行论述。</p><p><br/></p><p>1.&nbsp; 概要叙述你参与管理和开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.&nbsp; 详细论述影响软件维护工作的因素有哪些。</p><p>3.&nbsp; 结合你具体参与管理和开发的实际项目，说明在具体维护过程中，如何度量软件的可维护性，说明具体的软件维护工作类型。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>影响软件的可维护性有以下7个因素：</p><p>1、可理解性</p><p>一个可维护的软件必然是可理解的。</p><p>软件的可理解性是指通过阅读源代码和相关文档，了解软件的功能和如何运行的容易程度。</p><p>软件的可理解性可以使用“90-10测试”的方法来衡量，即如果一个有经验的程序员阅读一份源代码清单10分钟，可以写出该程序的90%，则认为这个程序具有可理解性。</p><p><br/></p><p>2、可测试性</p><p>一个可维护的软件必然是可测试的。</p><p>软件的可测试性是指验证软件程序正确的难易程度。</p><p>可测试性好的软件，通常意味着软件设计简单，复杂性低。因为软件的复杂性越大，测试的难度也就越大。</p><p><br/></p><p>3、可修改性</p><p>一个可维护的软件必然是可修改的。</p><p>软件的可修改性是指修改软件的难易程度。</p><p>软件的可修改性可以通过进行几个简单的修改练习来评价。假设软件的平均复杂性是C，要修改的模块的复杂性是A，那么修改的难度可由下面公式计算：D=A/C</p><p><br/></p><p>4、可靠性</p><p>一个软件的可靠性越高，需要维护的概率就会越低。</p><p>软件的可靠性是指软件在满足用户需求的前提下，在给定的时间段内正确运行的概率。</p><p>软件可靠性的度量有以下两种方法：</p><p>根据软件的错误统计进行可靠性预测。如度量软件的平均失效间隔时间（MTTF）。</p><p>根据软件的复杂性进行可靠性预测。</p><p><br/></p><p>5、可移植性</p><p>软件运行环境的变化是软件维护的一种常见情形，可移植性好的软件会降低维护的概率。</p><p>软件的可移植性是指将软件从一个环境移植到新的的环境下正确运行的难易程度。</p><p>一个可移植的软件应具有良好的结构，使用独立于机器的高级语言编写。</p><p><br/></p><p>6、可使用性</p><p>软件易于使用通常意味着软件设计简单，易于理解。</p><p>软件的可使用性是指用户使用软件的难易程度。</p><p>软件的可使用性可以通过测试用户首次使用软件掌握常用功能的时间来衡量。</p><p><br/></p><p>7、效率</p><p>效率是指软件既能很好地完成用户期望的功能、性能，又不浪费机器资源的程度。</p><p>软件设计不能一味地追求效率，盲目地追求效率会使得软件的其它质量特性受到影响，比如降低软件的可维护性。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 355326,
      "question_title": "<p>试题二 论软件维护方法及其应用</p><p>软件维护是指在软件交付使用后，直至软件被淘汰的整个时间范围内，为了改正错</p><p>误或满足新的需求而修改软件的活动。在软件系统运行过程中，软件需要维护的原因是</p><p>多种多样的，根据维护的原因不同，可以将软件维护分为改正性维护、适应性维护、完</p><p>善性维护和预防性维护。在维护的过程中，也需要对软件的可维护性进行度量。在软件</p><p>外部，一般采用 MTTR 来度量软件的可维护性；在软件内部，可以通过度量软件的复杂</p><p>性来间接度量软件的可维护性。</p><p>据统计，软件维护阶段占整个软件生命周期60%以上的时间。因此，分析影响软件</p><p>维护的因素，度量和提高软件的可维护性，就显得十分重要。</p><p><br/></p><p>请围绕“软件维护方法及其应用”论题，依次从以下三个方面进行论述。</p><p><br/></p><p>1.&nbsp; 概要叙述你参与管理和开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.&nbsp; 详细论述影响软件维护工作的因素有哪些。</p><p>3.&nbsp; 结合你具体参与管理和开发的实际项目，说明在具体维护过程中，如何度量软件的可维护性，说明具体的软件维护工作类型。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 355326,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>影响软件的可维护性有以下7个因素：</p><p>1、可理解性</p><p>一个可维护的软件必然是可理解的。</p><p>软件的可理解性是指通过阅读源代码和相关文档，了解软件的功能和如何运行的容易程度。</p><p>软件的可理解性可以使用“90-10测试”的方法来衡量，即如果一个有经验的程序员阅读一份源代码清单10分钟，可以写出该程序的90%，则认为这个程序具有可理解性。</p><p><br/></p><p>2、可测试性</p><p>一个可维护的软件必然是可测试的。</p><p>软件的可测试性是指验证软件程序正确的难易程度。</p><p>可测试性好的软件，通常意味着软件设计简单，复杂性低。因为软件的复杂性越大，测试的难度也就越大。</p><p><br/></p><p>3、可修改性</p><p>一个可维护的软件必然是可修改的。</p><p>软件的可修改性是指修改软件的难易程度。</p><p>软件的可修改性可以通过进行几个简单的修改练习来评价。假设软件的平均复杂性是C，要修改的模块的复杂性是A，那么修改的难度可由下面公式计算：D=A/C</p><p><br/></p><p>4、可靠性</p><p>一个软件的可靠性越高，需要维护的概率就会越低。</p><p>软件的可靠性是指软件在满足用户需求的前提下，在给定的时间段内正确运行的概率。</p><p>软件可靠性的度量有以下两种方法：</p><p>根据软件的错误统计进行可靠性预测。如度量软件的平均失效间隔时间（MTTF）。</p><p>根据软件的复杂性进行可靠性预测。</p><p><br/></p><p>5、可移植性</p><p>软件运行环境的变化是软件维护的一种常见情形，可移植性好的软件会降低维护的概率。</p><p>软件的可移植性是指将软件从一个环境移植到新的的环境下正确运行的难易程度。</p><p>一个可移植的软件应具有良好的结构，使用独立于机器的高级语言编写。</p><p><br/></p><p>6、可使用性</p><p>软件易于使用通常意味着软件设计简单，易于理解。</p><p>软件的可使用性是指用户使用软件的难易程度。</p><p>软件的可使用性可以通过测试用户首次使用软件掌握常用功能的时间来衡量。</p><p><br/></p><p>7、效率</p><p>效率是指软件既能很好地完成用户期望的功能、性能，又不浪费机器资源的程度。</p><p>软件设计不能一味地追求效率，盲目地追求效率会使得软件的其它质量特性受到影响，比如降低软件的可维护性。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176873.0172446
  },
  {
    "section_id": "9413",
    "section_name": "未来信息综合技术（第二版） - 人工智能技术概述",
    "question_id": 523253,
    "question_title": "大模型生成代码的核心架构是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "Transformer",
      "Knowledge Map",
      "Rule Base System",
      "Data Flow"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 523253,
      "question_title": "大模型生成代码的核心架构是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523253,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "Transformer",
        "Knowledge Map",
        "Rule Base System",
        "Data Flow"
      ]
    },
    "crawl_time": 1753176874.2031133
  },
  {
    "section_id": "9413",
    "section_name": "未来信息综合技术（第二版） - 人工智能技术概述",
    "question_id": 523280,
    "question_title": "工业大模型中基础设施层和应用层中间的三层是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "基座层、数据层、模型层",
      "基座层、模型层、交互层",
      "数据层、模型层、交互层",
      "座层、业务层、交互层"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 523280,
      "question_title": "工业大模型中基础设施层和应用层中间的三层是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523280,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "基座层、数据层、模型层",
        "基座层、模型层、交互层",
        "数据层、模型层、交互层",
        "座层、业务层、交互层"
      ]
    },
    "crawl_time": 1753176874.2031133
  },
  {
    "section_id": "9413",
    "section_name": "未来信息综合技术（第二版） - 人工智能技术概述",
    "question_id": 523295,
    "question_title": "机器学习中，没有标识的数据应使用的算法是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "聚类算法",
      "分类算法",
      "回归算法",
      "强化学习"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 523295,
      "question_title": "机器学习中，没有标识的数据应使用的算法是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523295,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "聚类算法",
        "分类算法",
        "回归算法",
        "强化学习"
      ]
    },
    "crawl_time": 1753176874.2031133
  },
  {
    "section_id": "9413",
    "section_name": "未来信息综合技术（第二版） - 人工智能技术概述",
    "question_id": 373739,
    "question_title": "<p>【问题3】（8分）</p><p>在本系统中采用了TensorFlow机器学习框架进行模型训练和优化，以提升推荐准确度和用户满意度。请根据机器学习的分类填写下表中的空格。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696271398550730.png\" title=\"1696271398550730.png\" alt=\"image.png\" width=\"515\" height=\"309\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "【参考答案】<p>（1）通过对已有标记数据进行学习，训练模型能够从未标记数据中进行预测和分类。</p><p>（2）无监督学习</p><p>（3）半监督学习</p><p>（4）通过让模型与环境进行交互并从中学习，以实现最优策略的目标。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 373739,
      "question_title": "<p>【问题3】（8分）</p><p>在本系统中采用了TensorFlow机器学习框架进行模型训练和优化，以提升推荐准确度和用户满意度。请根据机器学习的分类填写下表中的空格。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696271398550730.png\" title=\"1696271398550730.png\" alt=\"image.png\" width=\"515\" height=\"309\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 373736,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于数据库设计的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某电子商务网站为了做市场预测和商品精准推荐，决定对用户访问记录进行分析。该电子商务网站拥有海量的用户访问数据，包括用户浏览的商品详情页、搜索关键词、加入购物车、下单和支付、退货等行为。数据分析团队希望通过分析这些数据来了解用户的行为模式、购买意向和喜好，以便为市场预测和商品推荐提供支持。数据分析团队需要快速地处理这些数据，并在其中发现有价值的信息，以支持业务决策和实时推荐。</p><p>关于张工建议使用传统Hadoop框架进行分析和计算，李工则建议使用Lambda架构进行。经过沟通讨论，数据分析团队最后接受了李工的意见。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "【参考答案】<p>（1）通过对已有标记数据进行学习，训练模型能够从未标记数据中进行预测和分类。</p><p>（2）无监督学习</p><p>（3）半监督学习</p><p>（4）通过让模型与环境进行交互并从中学习，以实现最优策略的目标。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176874.2031133
  },
  {
    "section_id": "9415",
    "section_name": "未来信息综合技术（第二版） - 边缘计算概述",
    "question_id": 371544,
    "question_title": "云原生架构原则包括：服务化原则、弹性原则、可观测原则、 （64） 等。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "可修改原则",
      "有限信任原则",
      "韧性原则",
      "自动化部署原则"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 371544,
      "question_title": "云原生架构原则包括：服务化原则、弹性原则、可观测原则、 （64） 等。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371544,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "可修改原则",
        "有限信任原则",
        "韧性原则",
        "自动化部署原则"
      ]
    },
    "crawl_time": 1753176875.437113
  },
  {
    "section_id": "9416",
    "section_name": "未来信息综合技术（第二版） - 数字孪生体技术概述",
    "question_id": 177860,
    "question_title": "2019年10月24日，中共中央政治局就区块链技术发展现状和趋势进行第十八次集体学习。中共中央总书记习近平在主持学习时强调，区块链技术的集成应用在新的技术革新和产业变革中起着重要作用。我们要把区块链作为核心技术自主创新的重要突破口，明确主攻方向，加大投入力度，着力攻克一批关键核心技术，加快推动区块链技术和产业创新发展。以下（ ）不是区块链的特征",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 中心化 ",
      " 开放性 ",
      " 自治性 ",
      " 匿名性 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 177860,
      "question_title": "2019年10月24日，中共中央政治局就区块链技术发展现状和趋势进行第十八次集体学习。中共中央总书记习近平在主持学习时强调，区块链技术的集成应用在新的技术革新和产业变革中起着重要作用。我们要把区块链作为核心技术自主创新的重要突破口，明确主攻方向，加大投入力度，着力攻克一批关键核心技术，加快推动区块链技术和产业创新发展。以下（ ）不是区块链的特征",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 177860,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 中心化 ",
        " 开放性 ",
        " 自治性 ",
        " 匿名性 "
      ]
    },
    "crawl_time": 1753176876.5837667
  },
  {
    "section_id": "9416",
    "section_name": "未来信息综合技术（第二版） - 数字孪生体技术概述",
    "question_id": 371908,
    "question_title": "在Linux系统中，DNS的配置文件是（14） ，它包含了主机的域名搜索顺序和DNS服务器的地址。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "／etc／hostname",
      "／dev／host.conf",
      "／etc／resolv.conf",
      "／dev／name.conf"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 371908,
      "question_title": "在Linux系统中，DNS的配置文件是（14） ，它包含了主机的域名搜索顺序和DNS服务器的地址。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371908,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "／etc／hostname",
        "／dev／host.conf",
        "／etc／resolv.conf",
        "／dev／name.conf"
      ]
    },
    "crawl_time": 1753176876.5837667
  },
  {
    "section_id": "9417",
    "section_name": "未来信息综合技术（第二版） - 云计算和大数据技术概述",
    "question_id": 523272,
    "question_title": "数据治理的应用场景不包括（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "风险控制",
      "存储备份",
      "预测分析",
      "用户画像"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 523272,
      "question_title": "数据治理的应用场景不包括（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523272,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "风险控制",
        "存储备份",
        "预测分析",
        "用户画像"
      ]
    },
    "crawl_time": 1753176877.7989824
  },
  {
    "section_id": "9417",
    "section_name": "未来信息综合技术（第二版） - 云计算和大数据技术概述",
    "question_id": 523281,
    "question_title": "边缘计算的优点不包括（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "降低延迟",
      "提高安全性",
      "提升带宽",
      "降低功耗"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 523281,
      "question_title": "边缘计算的优点不包括（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523281,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "降低延迟",
        "提高安全性",
        "提升带宽",
        "降低功耗"
      ]
    },
    "crawl_time": 1753176877.7989824
  },
  {
    "section_id": "9419",
    "section_name": "信息系统架构设计理论与实践（第二版） - 信息系统架构基本概念及发展",
    "question_id": 208511,
    "question_title": "软件架构风格是描述某一特定应用领域中系统组织方式的惯用模式。架构风格定义了一类架构所共有的特征，主要包括架构定义、架构词汇表和架构（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 描述 ",
      " 组织&nbsp; ",
      " 约束 ",
      " 接口 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 208511,
      "question_title": "软件架构风格是描述某一特定应用领域中系统组织方式的惯用模式。架构风格定义了一类架构所共有的特征，主要包括架构定义、架构词汇表和架构（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208511,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 描述 ",
        " 组织&nbsp; ",
        " 约束 ",
        " 接口 "
      ]
    },
    "crawl_time": 1753176878.991019
  },
  {
    "section_id": "9420",
    "section_name": "信息系统架构设计理论与实践（第二版） - 信息系统架构",
    "question_id": 54250,
    "question_title": "<p>系统应用架构设计中，网络架构数据流图的主要作用是将处理器和设备分配到网络中。（ &nbsp;）不属于网络架构数据流图的内容。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 服务器、客户端及其物理位置 ",
      " 处理器说明信息 ",
      " 单位时间的数据流大小 ",
      " 传输协议 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 54250,
      "question_title": "<p>系统应用架构设计中，网络架构数据流图的主要作用是将处理器和设备分配到网络中。（ &nbsp;）不属于网络架构数据流图的内容。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54250,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 服务器、客户端及其物理位置 ",
        " 处理器说明信息 ",
        " 单位时间的数据流大小 ",
        " 传输协议 "
      ]
    },
    "crawl_time": 1753176880.2719936
  },
  {
    "section_id": "9420",
    "section_name": "信息系统架构设计理论与实践（第二版） - 信息系统架构",
    "question_id": 523263,
    "question_title": "WebService的核心技术是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "计算池模型",
      "五层模型",
      "开放式Web",
      "网格计算"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 523263,
      "question_title": "WebService的核心技术是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523263,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "计算池模型",
        "五层模型",
        "开放式Web",
        "网格计算"
      ]
    },
    "crawl_time": 1753176880.2719936
  },
  {
    "section_id": "9420",
    "section_name": "信息系统架构设计理论与实践（第二版） - 信息系统架构",
    "question_id": 281387,
    "question_title": "<p>[问题1]（6分）</p><p>&nbsp;&nbsp; &nbsp;Java企业级应用框架一般被划分为3个层次，请用150字以内的文字说明都有哪3个层次?功能分别是什么?</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "【问题一】<br/><span style=\"font-size: 16px;\">（1）表现层。对应视图(View)。用于为从客户端发来的请求服务的对象及其行为，用于展现数据以及负责View组件实现模式、组件在View显示粒度、页面跳转，以及事件触发等功能。</span><p>（2）业务逻辑组件层。对应控制器(Controller)。用于支持由表现层发起的(某些情况下也可能由持久层直接发起)业务数据的逻辑处理。</p><p>（3）持久层。实现持久化存储，对应模型(Model)。用于支持外部资源通信。例如，与数据库交互数据等。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 281387,
      "question_title": "<p>[问题1]（6分）</p><p>&nbsp;&nbsp; &nbsp;Java企业级应用框架一般被划分为3个层次，请用150字以内的文字说明都有哪3个层次?功能分别是什么?</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 281386,
      "score_rule": "",
      "material_text": "<p>试题五（25分）</p><p>阅读以下关于Java企业级应用系统开发架构的叙述，根据要求回答问题。</p><p>[说明]</p><p>&nbsp;&nbsp; &nbsp;某软件公司承担了某中小型企业应用软件开发任务，进度要求紧迫。为了按时完成任务，选择合适的企业应用系统开发架构非常重要。项目组在进行方案论证时，项目组成员提出了两种开发思路。</p><p>&nbsp;&nbsp; 刘工建议采用J2EE 5.0和EJB 3.0进行开发。理由是J2EE定义了标准的应用开发体系结构和部署环境，EJB是J2EE的基础和核心。J2EE 5.0主要目标是简化开发，相比EJB 2.1，EJB 3.0具有很多改进和提高。</p><p>&nbsp;&nbsp; 杜工建议采用Struts、Spring和Hibenate轻量级开源框架相结合的方式。理由是随着Java开源项目阵营的发展壮大，一些基于POJOs(Plan Old Java Objects)的开源框架被广泛地引入到Java企业应用开发中来，与重量级的EJB框架相比，这些轻量级的框架有很多优点。</p><p>&nbsp;&nbsp; &nbsp;项目组仔细比较分析了两种方案的特点、优点和不足之处。认为杜工和刘工的建议都合理，但是从结合当前项目实际情况出发，最后决定采用杜工的建议。<span style=\"font-size: 16px;\"></span></p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "【问题一】<br/><span style=\"font-size: 16px;\">（1）表现层。对应视图(View)。用于为从客户端发来的请求服务的对象及其行为，用于展现数据以及负责View组件实现模式、组件在View显示粒度、页面跳转，以及事件触发等功能。</span><p>（2）业务逻辑组件层。对应控制器(Controller)。用于支持由表现层发起的(某些情况下也可能由持久层直接发起)业务数据的逻辑处理。</p><p>（3）持久层。实现持久化存储，对应模型(Model)。用于支持外部资源通信。例如，与数据库交互数据等。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176880.2719936
  },
  {
    "section_id": "9420",
    "section_name": "信息系统架构设计理论与实践（第二版） - 信息系统架构",
    "question_id": 283656,
    "question_title": "【问题1】（8分）结合你的系统架构经验，请用400字以内的文字简要讨论C/S和B/S两种架构风格各自的优点和缺点。",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>C/S架构风格的优点：①客户机应用程序与服务器程序分离，二者的开发既可以分开进行，也可以同时进行；②技术成熟，允许网络分布操作，交互性强，具有安全的存取模式；③网络压力小，响应速度快，有利于处理大量数据；④模型思想简单，易于人们理解和接受等</p><p>&nbsp;&nbsp; &nbsp;C/S架构风格的缺点：①客户机与服务器的通信依赖于网络，服务器的负荷过重：②无法实现快速部署和安装，维护工作量大，升级困难；③开发成本较高，客户端程序设计复杂，灵活性差；④用户界面风格不一，软件移植和数据集成困难；⑤数据库的安全性因客户机程序直接访问而降低等</p><p>&nbsp;&nbsp; &nbsp;B/S架构风格的优点：①易于部署、维护和升级；②具有良好的开放性和可扩充性，可以应用在广域网上，方便了信息的全球传输、查询和发布；③可跨平台操作，无须开发客户端软件；④通过JDBC等数据库连接接口，提高了动态交互性、服务器的通用性与可移植性等。</p><p>&nbsp;&nbsp; &nbsp;B/S架构风格的缺点：①数据的动态交互性不强，不利于在线事务处理(OLTP)应用；②数据查询等响应速度较慢；③系统的安全性较难以控制等。（包括但不限于以上答案）</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 283656,
      "question_title": "【问题1】（8分）结合你的系统架构经验，请用400字以内的文字简要讨论C/S和B/S两种架构风格各自的优点和缺点。",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 283655,
      "score_rule": "",
      "material_text": "<p>试题一（24分）<br/></p><p>阅读以下关于软件体系结构方面的叙述，根据要求回答下面问题。</p><p>&nbsp;[说明]</p><p>&nbsp;&nbsp; &nbsp;某大中型企业在全国各城市共有15个左右的分支机构，这些机构已经建设了相关的关系型数据库管理系统，每天负责独立地处理本区域内的业务并实时存储业务数据。PH软件公司承接了该大中型企业信息管理系统的升级改造开发任务。该软件公司的领域专家对需求进行深入分析后，得到的部分系统需求如下。</p><p>&nbsp;&nbsp; &nbsp;1、开发一个网络财务程序，使各地员工能在Internet上通过VPN技术进行财务单据报销和处理。</p><p>&nbsp;&nbsp; &nbsp;2、为了加强管理，实现对下属分支机构业务数据的异地存储备份，保证数据的安全及恢复，同时对全国业务数据进行挖掘分析，拟在该企业总部建设数据中心。</p><p>&nbsp;&nbsp; &nbsp;3、PH公司在设计该财务程序的体系结构时，开发项目组产生了以下分歧：</p><p>&nbsp;&nbsp;&nbsp;架构师许工认为应该采用客户机/服务器(C/S)架构风格，各分支机构财务部要安装一个软件客户端，通过这个客户端连接到总公司财务部主机。如果员工在外地出差，需要报销账务的，也需要安装这个客户端才能进行。</p><p>&nbsp;&nbsp; &nbsp;架构师郭工认为应该采用浏览器/服务器(B/S)架构风格，各分支机构及出差员工直接通过Windows操作系统自带的IE浏览器就可以连接到总公司的财务部主机。</p><p>在架构评估会议上，专家对这两种方案进行综合评价，最终采用了C/S和B/S相结合的混合架构风格。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>C/S架构风格的优点：①客户机应用程序与服务器程序分离，二者的开发既可以分开进行，也可以同时进行；②技术成熟，允许网络分布操作，交互性强，具有安全的存取模式；③网络压力小，响应速度快，有利于处理大量数据；④模型思想简单，易于人们理解和接受等</p><p>&nbsp;&nbsp; &nbsp;C/S架构风格的缺点：①客户机与服务器的通信依赖于网络，服务器的负荷过重：②无法实现快速部署和安装，维护工作量大，升级困难；③开发成本较高，客户端程序设计复杂，灵活性差；④用户界面风格不一，软件移植和数据集成困难；⑤数据库的安全性因客户机程序直接访问而降低等</p><p>&nbsp;&nbsp; &nbsp;B/S架构风格的优点：①易于部署、维护和升级；②具有良好的开放性和可扩充性，可以应用在广域网上，方便了信息的全球传输、查询和发布；③可跨平台操作，无须开发客户端软件；④通过JDBC等数据库连接接口，提高了动态交互性、服务器的通用性与可移植性等。</p><p>&nbsp;&nbsp; &nbsp;B/S架构风格的缺点：①数据的动态交互性不强，不利于在线事务处理(OLTP)应用；②数据查询等响应速度较慢；③系统的安全性较难以控制等。（包括但不限于以上答案）</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176880.2719936
  },
  {
    "section_id": "9420",
    "section_name": "信息系统架构设计理论与实践（第二版） - 信息系统架构",
    "question_id": 283657,
    "question_title": "【问题2】（7分）结合你的系统架构经验，请用600字A内的文字简要说明该工程项目采用C/S和B/S相结合的混合架构风格的设计要点及其优点。",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>(包含但不限于以下内容)。</p><p>&nbsp;&nbsp; &nbsp;①在该企业总部局域网上部署财务Web服务器及其相关的数据库服务器，两种服务器之间采用C/S架构：总部局域网上提供C/S和B/S两种并存的架构风格，根据不同的应用需求和客户需求进行灵活的选择。</p><p>&nbsp;&nbsp; &nbsp;②若项目资金充裕，则在各分支机构局域网中也采用类似于企业总部的部署风格；若项目资金不足，则在各分支机构财务部门局域网中采C/S架构，部署应用服务器及相关的数据库服务器，然后将集中处理的后期财务数据通过VPN技术上传至总部局域网的相应服务器中。</p><p>&nbsp;&nbsp; &nbsp;③在外出差的员工和各分支机构的普通员工通过VPN技术访问企业总部局域网上的Web服务器，查看相关的信息。</p><p>&nbsp;&nbsp; &nbsp;采用C/S和B/S混合架构的优点如下(包含但不限于以下内容)：</p><p>&nbsp;&nbsp; &nbsp;①充分发挥了B/S与C/S体系结构的优势，弥补了二者的不足。</p><p>&nbsp;&nbsp; &nbsp;②客户请求和信息发布采B/S架构，保持了瘦客户端的优点，客户机只利用浏览器即可完成所有的应用需求。</p><p>&nbsp;&nbsp; &nbsp;③数据库的请求和响应操作采C/S架构，通过在Web应用程序和数据库之间建立ODBC/JDBC连接来完成数据库的连接和请求响应，能完成大量数据的批量录入请求。</p><p>&nbsp;&nbsp; &nbsp;④系统的部署、维护及数据更新方便，不存在完全采用C/S结构带来的客户端维护工作量大等缺点。</p><p>&nbsp;&nbsp; &nbsp;⑤将服务器端划分为Web服务器和Web应用程序两部分。Web应用程序采用组件技术实现三层体系结构中的商业逻辑部分，达到封装源代码、保护知识产权的目的。</p><p>&nbsp;&nbsp; &nbsp;⑥对原基于C/S架构的应用，只需开发用于发布的Web界面，就能升级到这种混合架构系统中，从而最大限度地保护了原有投资。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 283657,
      "question_title": "【问题2】（7分）结合你的系统架构经验，请用600字A内的文字简要说明该工程项目采用C/S和B/S相结合的混合架构风格的设计要点及其优点。",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 283655,
      "score_rule": "",
      "material_text": "<p>试题一（24分）<br/></p><p>阅读以下关于软件体系结构方面的叙述，根据要求回答下面问题。</p><p>&nbsp;[说明]</p><p>&nbsp;&nbsp; &nbsp;某大中型企业在全国各城市共有15个左右的分支机构，这些机构已经建设了相关的关系型数据库管理系统，每天负责独立地处理本区域内的业务并实时存储业务数据。PH软件公司承接了该大中型企业信息管理系统的升级改造开发任务。该软件公司的领域专家对需求进行深入分析后，得到的部分系统需求如下。</p><p>&nbsp;&nbsp; &nbsp;1、开发一个网络财务程序，使各地员工能在Internet上通过VPN技术进行财务单据报销和处理。</p><p>&nbsp;&nbsp; &nbsp;2、为了加强管理，实现对下属分支机构业务数据的异地存储备份，保证数据的安全及恢复，同时对全国业务数据进行挖掘分析，拟在该企业总部建设数据中心。</p><p>&nbsp;&nbsp; &nbsp;3、PH公司在设计该财务程序的体系结构时，开发项目组产生了以下分歧：</p><p>&nbsp;&nbsp;&nbsp;架构师许工认为应该采用客户机/服务器(C/S)架构风格，各分支机构财务部要安装一个软件客户端，通过这个客户端连接到总公司财务部主机。如果员工在外地出差，需要报销账务的，也需要安装这个客户端才能进行。</p><p>&nbsp;&nbsp; &nbsp;架构师郭工认为应该采用浏览器/服务器(B/S)架构风格，各分支机构及出差员工直接通过Windows操作系统自带的IE浏览器就可以连接到总公司的财务部主机。</p><p>在架构评估会议上，专家对这两种方案进行综合评价，最终采用了C/S和B/S相结合的混合架构风格。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>(包含但不限于以下内容)。</p><p>&nbsp;&nbsp; &nbsp;①在该企业总部局域网上部署财务Web服务器及其相关的数据库服务器，两种服务器之间采用C/S架构：总部局域网上提供C/S和B/S两种并存的架构风格，根据不同的应用需求和客户需求进行灵活的选择。</p><p>&nbsp;&nbsp; &nbsp;②若项目资金充裕，则在各分支机构局域网中也采用类似于企业总部的部署风格；若项目资金不足，则在各分支机构财务部门局域网中采C/S架构，部署应用服务器及相关的数据库服务器，然后将集中处理的后期财务数据通过VPN技术上传至总部局域网的相应服务器中。</p><p>&nbsp;&nbsp; &nbsp;③在外出差的员工和各分支机构的普通员工通过VPN技术访问企业总部局域网上的Web服务器，查看相关的信息。</p><p>&nbsp;&nbsp; &nbsp;采用C/S和B/S混合架构的优点如下(包含但不限于以下内容)：</p><p>&nbsp;&nbsp; &nbsp;①充分发挥了B/S与C/S体系结构的优势，弥补了二者的不足。</p><p>&nbsp;&nbsp; &nbsp;②客户请求和信息发布采B/S架构，保持了瘦客户端的优点，客户机只利用浏览器即可完成所有的应用需求。</p><p>&nbsp;&nbsp; &nbsp;③数据库的请求和响应操作采C/S架构，通过在Web应用程序和数据库之间建立ODBC/JDBC连接来完成数据库的连接和请求响应，能完成大量数据的批量录入请求。</p><p>&nbsp;&nbsp; &nbsp;④系统的部署、维护及数据更新方便，不存在完全采用C/S结构带来的客户端维护工作量大等缺点。</p><p>&nbsp;&nbsp; &nbsp;⑤将服务器端划分为Web服务器和Web应用程序两部分。Web应用程序采用组件技术实现三层体系结构中的商业逻辑部分，达到封装源代码、保护知识产权的目的。</p><p>&nbsp;&nbsp; &nbsp;⑥对原基于C/S架构的应用，只需开发用于发布的Web界面，就能升级到这种混合架构系统中，从而最大限度地保护了原有投资。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176880.2719936
  },
  {
    "section_id": "9421",
    "section_name": "信息系统架构设计理论与实践（第二版） - 信息系统架构设计方法",
    "question_id": 208492,
    "question_title": "数据挖掘是从数据库的大量数据中揭示出隐含的、先前未知的并有潜在价值的信息的非平凡过程，主要任务有（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 聚类分析、联机分析、信息检索等 ",
      " 信息检索、聚类分析、分类分析等 ",
      " 聚类分析、分类分析、关联规则挖掘等 ",
      " 分类分析、联机分析、关联规则挖掘等 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 208492,
      "question_title": "数据挖掘是从数据库的大量数据中揭示出隐含的、先前未知的并有潜在价值的信息的非平凡过程，主要任务有（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208492,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 聚类分析、联机分析、信息检索等 ",
        " 信息检索、聚类分析、分类分析等 ",
        " 聚类分析、分类分析、关联规则挖掘等 ",
        " 分类分析、联机分析、关联规则挖掘等 "
      ]
    },
    "crawl_time": 1753176881.7678354
  },
  {
    "section_id": "9421",
    "section_name": "信息系统架构设计理论与实践（第二版） - 信息系统架构设计方法",
    "question_id": 208496,
    "question_title": "遗留系统的演化可以采用淘汰、继承、改造和集成四种策略。若企业中的遗留系统技术含量较高，业务价值较低，在局部领域中工作良好，形成了一个个信息孤岛时，适合于采用（ ）演化策略。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 淘汰 ",
      " 继承 ",
      " 改造 ",
      " 集成 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 208496,
      "question_title": "遗留系统的演化可以采用淘汰、继承、改造和集成四种策略。若企业中的遗留系统技术含量较高，业务价值较低，在局部领域中工作良好，形成了一个个信息孤岛时，适合于采用（ ）演化策略。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208496,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 淘汰 ",
        " 继承 ",
        " 改造 ",
        " 集成 "
      ]
    },
    "crawl_time": 1753176881.7678354
  },
  {
    "section_id": "9424",
    "section_name": "层次式架构设计理论与实践（第二版） - 层次式体系结构概述",
    "question_id": 23659,
    "question_title": "<p>下图是某架构师在J2EE平台上设计的一个信息系统集成方案架构图，图中的（1）、（2）和（3）分别表示 （ ） 。<br/></p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/201704/3641b3714fc6922b9706317745d92766c4befd.png\"/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 应用服务器、EJB容器和EJB&nbsp;&nbsp;&nbsp;&nbsp; ",
      " EJB服务器、EJB容器和EJB ",
      " 应用服务器、EJB服务器和EJB容器 ",
      " EJB服务器、EJB和EJB容器 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 23659,
      "question_title": "<p>下图是某架构师在J2EE平台上设计的一个信息系统集成方案架构图，图中的（1）、（2）和（3）分别表示 （ ） 。<br/></p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/201704/3641b3714fc6922b9706317745d92766c4befd.png\"/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 23659,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 应用服务器、EJB容器和EJB&nbsp;&nbsp;&nbsp;&nbsp; ",
        " EJB服务器、EJB容器和EJB ",
        " 应用服务器、EJB服务器和EJB容器 ",
        " EJB服务器、EJB和EJB容器 "
      ]
    },
    "crawl_time": 1753176883.1673331
  },
  {
    "section_id": "9424",
    "section_name": "层次式架构设计理论与实践（第二版） - 层次式体系结构概述",
    "question_id": 286359,
    "question_title": "<p>问题二：</p><p>该系统Web检测服务层拟采用SSm框架进行系统研发SSm工作流程图如图所示，请从下面给出的（a）~（k）中进行选择，补充完善图5-1中（1）~（7）处空白的内容：</p><p>（a）Connection pool（b）Struts2 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（c）Persistent Layer</p><p>（d）Mybatis &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（e）HTTP &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（f）MVC</p><p>（g）Kafka &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（h）View Layer &nbsp;（i）Jsp</p><p>（j）Conrtoller Layer &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（k）Spring</p><p>5-1：SSm框架工作流程图：</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201108/1604816611770021.jpg\" title=\"1604816611770021.jpg\" alt=\"1.jpg\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>问题二：（1）a（2）c（3）d（4）k（5）j（6）h（7）i</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 286359,
      "question_title": "<p>问题二：</p><p>该系统Web检测服务层拟采用SSm框架进行系统研发SSm工作流程图如图所示，请从下面给出的（a）~（k）中进行选择，补充完善图5-1中（1）~（7）处空白的内容：</p><p>（a）Connection pool（b）Struts2 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（c）Persistent Layer</p><p>（d）Mybatis &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（e）HTTP &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（f）MVC</p><p>（g）Kafka &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（h）View Layer &nbsp;（i）Jsp</p><p>（j）Conrtoller Layer &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（k）Spring</p><p>5-1：SSm框架工作流程图：</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201108/1604816611770021.jpg\" title=\"1604816611770021.jpg\" alt=\"1.jpg\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 286357,
      "score_rule": "",
      "material_text": "<p>试题五</p><p>关于Web系统架构设计的叙述，1-3题</p><p>说明：开发基于Web的基业设备检测系统，以实现对多种工业数据的分类采集，运行状态检测以及相关信息的管理该系统应具备以下功能：</p><p>现场设备状态采集功能，根据数据类型对设备检测指标状态信号进行分类采集，设备采集数据传输功能：9-11月可靠的传输技术，实现将设备数据从制造现场传输到系统后台</p><p>设备检测显示功能：对设备的运行状态工作以及报警状态进行检测并提供相应的图形化界面</p><p>设备信息管理功能：支持设备运行历史状态，报警记录参数信息的查询</p><p>同时，该系统还需满足以下非功能性需求.</p><p>（a）系统应支持大于100个工业设备的进行检测</p><p>（b）设备数据以制造现场传输到系统后台 传输时间小于1S</p><p>（c）系统应在7*24小时工作</p><p>（d）可抵御见XSS攻击</p><p>（e）系统在故障情况下，应在0.5小时内恢复</p><p>（f）支持数据审计</p><p>面对系统需求，公司召开项目计论会议，制定系统设计方案最终决定使用三层拓补结构，即现场设备数据采集层、Web检测服务层和前端Web显示层</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>问题二：（1）a（2）c（3）d（4）k（5）j（6）h（7）i</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176883.1673331
  },
  {
    "section_id": "9425",
    "section_name": "层次式架构设计理论与实践（第二版） - 表现层框架设计",
    "question_id": 371543,
    "question_title": "边缘计算的落地形态不包括 （63） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "云边缘",
      "边缘云",
      "安全网关",
      "云化网关"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 371543,
      "question_title": "边缘计算的落地形态不包括 （63） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371543,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "云边缘",
        "边缘云",
        "安全网关",
        "云化网关"
      ]
    },
    "crawl_time": 1753176884.4767668
  },
  {
    "section_id": "9425",
    "section_name": "层次式架构设计理论与实践（第二版） - 表现层框架设计",
    "question_id": 208628,
    "question_title": "<p>阅读以下有关表现层设计方面的说明，回答问题。</p><p>【说明】</p><p>某商业银行欲开发一套个人银行系统，为用户提供常见的金融服务，包括转账、查询、存款变更和个人信息管理等功能。该软件除了业务需求外，还有一些特殊的表现层需求：</p><p>A．根据用户级别的不同，界面和可用功能是不同的；</p><p>B.支持Web、Windows、手机App等多种不同类型的界面；</p><p>C.考虑到将来功能的扩展，需要系统支持界面的定制以及动态生成等功能，以降低系统维护和新功能发布的成本。</p><p>经过对需求的讨论，该银行初步决定采用MVC模式设计该个人银行系统的表现层，采用XML作为GUI的描述语言，并应用XML，的界面管理技术来实现灵活的界面配置、界面动态生成和界面定。</p><p>【问题1】</p><p>MVC模式强制性地将一个应用处理流程按照模型、视图、控制的方式进行分离，三者的协作关系如图所示。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577703475944817.jpg\" title=\"1577703475944817.jpg\" alt=\"1.jpg\"/></p><p>请填写图中的(1)～(3)，并简要说明在该个人银行系统中采用MVC模式对界面设计的作用。<br/></p><p>【问题2】</p><p>请从设计模式的角度，简要说明设计方案采用XML作为GUI描述语言的机制。</p><p>【问题3】</p><p>基于XML的界面管理技术可实现灵活的界面配置、界面动态生成和界面定制，其思路是用XML生成配置文件及界面所需的元数据，按不同需求生成界面元素及软件界面，其技术框图如图所示。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577703549362738.jpg\" title=\"1577703549362738.jpg\" alt=\"1.jpg\"/><br/>请将恰当的内容填入图中的(1)～(3)，并简要解释说明其含义。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题1】答案：</p><p>(1)选择视图；(2)业务处理；(3)状态查询</p><p>MVC模式对该个人银行系统的作用：</p><p>(1)允许多种界面的扩展，视图的变更与增加，与模型无关；</p><p>(2)易于维护，控制器和视图随着模型的扩展而扩展，只要保持公共接口，控制器和视图的旧版本可以继续使用；</p><p>(3)可支持功能强大的用户界面。</p>【问题2】答案：从设计模式的角度来说，整个XML表现层解析的机制是一种策略模式。在调用显示GUI时，不是直接调用特定的表现技术的API，而是装载GUI对应的XML配置文件，然后根据特定的表现技术的解析器解析XML，得到GUI视图实例对象。这样，对于GUI开发人员来说，GUI视图只需要维护一套XML文件即可。<br/><p>【问题3】答案：</p><p>(1)界面定制；(2)界面动态生成；(3)界面配置</p><p>界面定制：对用户界面的动态修改过程，在软件运行过程中，用户可按照需求和使用习惯，对界面元素的属性进行修改。软件运行结束后，界面定制的结果被保存。</p><p>界面动态生成：系统通过DOM API读取XML配置文件的表示层信息，通过数据存取类读取数据库中的数据层信息，运行时由界面元素动态生成界面。界面配置和定制模块在软件运行前后修改配置文件、更改界面内容。</p><p>界面配置：对用户界面的静态定义，通过读取配置文件的初始值对界面配置。由界面配置对软件功能进行裁剪、重组和扩充，以实现特殊需求。<span style=\"font-size: 16px;\"></span></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 208628,
      "question_title": "<p>阅读以下有关表现层设计方面的说明，回答问题。</p><p>【说明】</p><p>某商业银行欲开发一套个人银行系统，为用户提供常见的金融服务，包括转账、查询、存款变更和个人信息管理等功能。该软件除了业务需求外，还有一些特殊的表现层需求：</p><p>A．根据用户级别的不同，界面和可用功能是不同的；</p><p>B.支持Web、Windows、手机App等多种不同类型的界面；</p><p>C.考虑到将来功能的扩展，需要系统支持界面的定制以及动态生成等功能，以降低系统维护和新功能发布的成本。</p><p>经过对需求的讨论，该银行初步决定采用MVC模式设计该个人银行系统的表现层，采用XML作为GUI的描述语言，并应用XML，的界面管理技术来实现灵活的界面配置、界面动态生成和界面定。</p><p>【问题1】</p><p>MVC模式强制性地将一个应用处理流程按照模型、视图、控制的方式进行分离，三者的协作关系如图所示。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577703475944817.jpg\" title=\"1577703475944817.jpg\" alt=\"1.jpg\"/></p><p>请填写图中的(1)～(3)，并简要说明在该个人银行系统中采用MVC模式对界面设计的作用。<br/></p><p>【问题2】</p><p>请从设计模式的角度，简要说明设计方案采用XML作为GUI描述语言的机制。</p><p>【问题3】</p><p>基于XML的界面管理技术可实现灵活的界面配置、界面动态生成和界面定制，其思路是用XML生成配置文件及界面所需的元数据，按不同需求生成界面元素及软件界面，其技术框图如图所示。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577703549362738.jpg\" title=\"1577703549362738.jpg\" alt=\"1.jpg\"/><br/>请将恰当的内容填入图中的(1)～(3)，并简要解释说明其含义。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 208628,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题1】答案：</p><p>(1)选择视图；(2)业务处理；(3)状态查询</p><p>MVC模式对该个人银行系统的作用：</p><p>(1)允许多种界面的扩展，视图的变更与增加，与模型无关；</p><p>(2)易于维护，控制器和视图随着模型的扩展而扩展，只要保持公共接口，控制器和视图的旧版本可以继续使用；</p><p>(3)可支持功能强大的用户界面。</p>【问题2】答案：从设计模式的角度来说，整个XML表现层解析的机制是一种策略模式。在调用显示GUI时，不是直接调用特定的表现技术的API，而是装载GUI对应的XML配置文件，然后根据特定的表现技术的解析器解析XML，得到GUI视图实例对象。这样，对于GUI开发人员来说，GUI视图只需要维护一套XML文件即可。<br/><p>【问题3】答案：</p><p>(1)界面定制；(2)界面动态生成；(3)界面配置</p><p>界面定制：对用户界面的动态修改过程，在软件运行过程中，用户可按照需求和使用习惯，对界面元素的属性进行修改。软件运行结束后，界面定制的结果被保存。</p><p>界面动态生成：系统通过DOM API读取XML配置文件的表示层信息，通过数据存取类读取数据库中的数据层信息，运行时由界面元素动态生成界面。界面配置和定制模块在软件运行前后修改配置文件、更改界面内容。</p><p>界面配置：对用户界面的静态定义，通过读取配置文件的初始值对界面配置。由界面配置对软件功能进行裁剪、重组和扩充，以实现特殊需求。<span style=\"font-size: 16px;\"></span></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176884.4767668
  },
  {
    "section_id": "9425",
    "section_name": "层次式架构设计理论与实践（第二版） - 表现层框架设计",
    "question_id": 371583,
    "question_title": "<p>【问题2】（10分）</p><p>网络教学平台的表现层采用了MVC架构，请用 300 字以内的文字说明MVC架构存在的安全脆弱性。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>MVC架构的脆弱性主要表现在：</p><p>(1)MVC架构的复杂性带来脆弱性。MVC架构增加了系统结构和实现的复杂性。比如说一个简单的界面，如果严格遵循MVC方式，使得模型、视图与控制器分离，会增加结构的复杂性，并可能产生过多的更新操作，降低运行效率。</p><p>(2)视图与控制器间紧密连接的脆弱性。视图与控制器是相互分离但却是联系紧密的部件，没有控制器的存在，视图应用是很有限的。反之亦然，这样就妨碍了它们的独立重用。</p><p>(3)视图对模型数据的低效率访问的脆弱性。依据模型操作接口的不同，视图可能需要多次调用才能获得足够的显示数据。对未变化数据的不必要的频繁访问也将损害操作性能。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 371583,
      "question_title": "<p>【问题2】（10分）</p><p>网络教学平台的表现层采用了MVC架构，请用 300 字以内的文字说明MVC架构存在的安全脆弱性。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 371581,
      "score_rule": "",
      "material_text": "<p>试题五（25分）</p><p>阅读以下关于Web系统架构设计的叙述，在答题纸上回答问题 1~3。</p><p>【说明】</p><p>某公司自主研发的网络教学平台因业务扩展，导致系统访问量不断增大，现有系统访问速度缓慢，有时甚至出现系统故障瘫痪等现象。面对这一情况，公司召开项目组讨论会议，寻求该商务平台的改进方案。讨论会上，王工提出可以利用镜像站点、CDN 内容分发等方式解决并发访问量带来的问题。而李工认为，仅仅依靠上述外网加速技术不能完全解决系统现有问题，如果访问量持续增加，系统仍存在崩溃的可能。李工提出应同时结合 Web 内网加速技术优化系统改进方案，如综合应用负载均衡、缓存服务器、Web应用服务器、分布式文件系统、分布式数据库等。经过讨论，公司最终决定采用李工的思路，完成改进系统的设计方案。</p><p style=\"text-indent:32px\"><br/></p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>MVC架构的脆弱性主要表现在：</p><p>(1)MVC架构的复杂性带来脆弱性。MVC架构增加了系统结构和实现的复杂性。比如说一个简单的界面，如果严格遵循MVC方式，使得模型、视图与控制器分离，会增加结构的复杂性，并可能产生过多的更新操作，降低运行效率。</p><p>(2)视图与控制器间紧密连接的脆弱性。视图与控制器是相互分离但却是联系紧密的部件，没有控制器的存在，视图应用是很有限的。反之亦然，这样就妨碍了它们的独立重用。</p><p>(3)视图对模型数据的低效率访问的脆弱性。依据模型操作接口的不同，视图可能需要多次调用才能获得足够的显示数据。对未变化数据的不必要的频繁访问也将损害操作性能。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176884.4767668
  },
  {
    "section_id": "9427",
    "section_name": "层次式架构设计理论与实践（第二版） - 数据访问层设计",
    "question_id": 54309,
    "question_title": "<p>持久层的主要功能是为（ ）提供透明的数据访问、持久化、加载等能力。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 视图 ",
      " 业务逻辑 ",
      " 控制层 ",
      " 表现层 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 54309,
      "question_title": "<p>持久层的主要功能是为（ ）提供透明的数据访问、持久化、加载等能力。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54309,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 视图 ",
        " 业务逻辑 ",
        " 控制层 ",
        " 表现层 "
      ]
    },
    "crawl_time": 1753176885.6458092
  },
  {
    "section_id": "9427",
    "section_name": "层次式架构设计理论与实践（第二版） - 数据访问层设计",
    "question_id": 312926,
    "question_title": "在一个典型的电子商务应用中，三层架构(即表现层、商业逻辑层和数据访问层)常常是架构师的首选。常见的电子商务应用——网上书城的主要功能是提供在线的各种图书信息的查询和浏览，并且能够订购相关图书。用户可能频繁地进行书目查询操作，网站需要返回众多符合条件的书目并且分页显示；网站管理员需要批量对相关书目信息进行修改，并且将更新信息记录到数据库。针对前一个应用要求，架构师在数据访问层设计时，最可能考虑采用______；针对后一个应用要求，架构师最可能考虑采用______。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "在线访问模式和DAO模式相结合",
      "在线访问模式和离线数据模式相结合",
      "DAO模式和DTO模式相结合",
      "DTO模式和O/R映射模式相结合"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 312926,
      "question_title": "在一个典型的电子商务应用中，三层架构(即表现层、商业逻辑层和数据访问层)常常是架构师的首选。常见的电子商务应用——网上书城的主要功能是提供在线的各种图书信息的查询和浏览，并且能够订购相关图书。用户可能频繁地进行书目查询操作，网站需要返回众多符合条件的书目并且分页显示；网站管理员需要批量对相关书目信息进行修改，并且将更新信息记录到数据库。针对前一个应用要求，架构师在数据访问层设计时，最可能考虑采用______；针对后一个应用要求，架构师最可能考虑采用______。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 312925,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "在线访问模式和DAO模式相结合",
        "在线访问模式和离线数据模式相结合",
        "DAO模式和DTO模式相结合",
        "DTO模式和O/R映射模式相结合"
      ]
    },
    "crawl_time": 1753176885.6458092
  },
  {
    "section_id": "9427",
    "section_name": "层次式架构设计理论与实践（第二版） - 数据访问层设计",
    "question_id": 312927,
    "question_title": "在一个典型的电子商务应用中，三层架构(即表现层、商业逻辑层和数据访问层)常常是架构师的首选。常见的电子商务应用——网上书城的主要功能是提供在线的各种图书信息的查询和浏览，并且能够订购相关图书。用户可能频繁地进行书目查询操作，网站需要返回众多符合条件的书目并且分页显示；网站管理员需要批量对相关书目信息进行修改，并且将更新信息记录到数据库。针对前一个应用要求，架构师在数据访问层设计时，最可能考虑采用______；针对后一个应用要求，架构师最可能考虑采用______。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "在线访问模式",
      "DAO模式",
      "离线数据模式",
      "O/R映射模式"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 312927,
      "question_title": "在一个典型的电子商务应用中，三层架构(即表现层、商业逻辑层和数据访问层)常常是架构师的首选。常见的电子商务应用——网上书城的主要功能是提供在线的各种图书信息的查询和浏览，并且能够订购相关图书。用户可能频繁地进行书目查询操作，网站需要返回众多符合条件的书目并且分页显示；网站管理员需要批量对相关书目信息进行修改，并且将更新信息记录到数据库。针对前一个应用要求，架构师在数据访问层设计时，最可能考虑采用______；针对后一个应用要求，架构师最可能考虑采用______。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 312925,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "在线访问模式",
        "DAO模式",
        "离线数据模式",
        "O/R映射模式"
      ]
    },
    "crawl_time": 1753176885.6458092
  },
  {
    "section_id": "9427",
    "section_name": "层次式架构设计理论与实践（第二版） - 数据访问层设计",
    "question_id": 352352,
    "question_title": "<p>【问题1】（8分）</p><p>Hibernate与iBatis均提供ORM技术，请用300以内文字说明什么是ORM技术，以及有什么优点？</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>ORM的全称是：Object Relational Mapping（对象关系映射）。简单的说，ORM是通过使用描述对象和数据之间映射的元数据，将程序中的对象自动持久化到关系数据库中。</p><p>ORM的优点：</p><p>（1）提高开发效率，降低开发成本；</p><p>（2）使开发更加对象化；</p><p>（3）可移植；</p><p>（4）可以很方便地引入数据缓存之类的附加功能。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 352352,
      "question_title": "<p>【问题1】（8分）</p><p>Hibernate与iBatis均提供ORM技术，请用300以内文字说明什么是ORM技术，以及有什么优点？</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 352351,
      "score_rule": "",
      "material_text": "<p style=\"margin-top:16px;text-indent:29px\">试题五</p><p>阅读以下关于Web系统架构的设计的叙述，回答下列问题。</p><p>【说明】</p><p>某信息技术公司计划开发一套在线投票系统，用于为市场调研、信息调查和销售反馈等业务提供服务。该系统计划通过大量宣传和奖品鼓励的方式快速积累用户，当用户规模扩大到一定程度时，开始联系相关企业提供信息服务，并按照信息服务种类和用户投票数量收取费用。</p><p>为了降低开发成本和提高开发效率，项目组经过讨论后决定采用轻量级Java EE开发框架设计系统应用架构。在应用架构设计中，除了满足系统主要功能需求，还需要考虑的因素包括：</p><p>1.项目开发采用MySQL，数据库存储数据，但将来可能移植到其他数据库平台；</p><p>2.系统开发过程中尽可能降低或者消除SQL语句开发的工作量；</p><p>3.投票系统中数据之间的关系复杂，需要支持数据对象的聚合和继承等关系。</p><p>项目组基于MVC模式设计出了投票系统的架构，包括表示层、业务逻辑层、数据持久层和数据层。在具体讨论数据持久层采用哪种技术方案时，老王建议采用成熟的Hibernate框架，小李则认为iBatis更加灵活，更适合作为投票系统数据持久层开发技术。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>ORM的全称是：Object Relational Mapping（对象关系映射）。简单的说，ORM是通过使用描述对象和数据之间映射的元数据，将程序中的对象自动持久化到关系数据库中。</p><p>ORM的优点：</p><p>（1）提高开发效率，降低开发成本；</p><p>（2）使开发更加对象化；</p><p>（3）可移植；</p><p>（4）可以很方便地引入数据缓存之类的附加功能。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176885.6458092
  },
  {
    "section_id": "9432",
    "section_name": "云原生架构设计理论与实践身（第二版） - 云原生架构内涵",
    "question_id": 371545,
    "question_title": "Nathan Marz认为大数据系统应该具有 （65） 等属性。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "最大查询能力",
      "纵向延展性",
      "数据多维挖掘",
      "最少维护能力"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 371545,
      "question_title": "Nathan Marz认为大数据系统应该具有 （65） 等属性。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371545,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "最大查询能力",
        "纵向延展性",
        "数据多维挖掘",
        "最少维护能力"
      ]
    },
    "crawl_time": 1753176886.7774909
  },
  {
    "section_id": "9438",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA的参考架构",
    "question_id": 159220,
    "question_title": "服务组件体系结构（Service Component Architecture，SCA）是基于面向服务体系结构（Service Oriented Architecture，SOA）的思想描述服务之间组合和协作的规范。以下关于SCA的叙述，不正确的是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " SCA定义了语言中立的服务组合方式，能够进行跨语言的服务调用 ",
      " SCA加强组件的接口与传输协议的关联，提高组件的内聚性 ",
      " SCA实现服务组件和其传输协议的绑定，这种绑定是可扩展的 ",
      " SCA主要是为了满足软件集成的需要而创建的架构 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 159220,
      "question_title": "服务组件体系结构（Service Component Architecture，SCA）是基于面向服务体系结构（Service Oriented Architecture，SOA）的思想描述服务之间组合和协作的规范。以下关于SCA的叙述，不正确的是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159220,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " SCA定义了语言中立的服务组合方式，能够进行跨语言的服务调用 ",
        " SCA加强组件的接口与传输协议的关联，提高组件的内聚性 ",
        " SCA实现服务组件和其传输协议的绑定，这种绑定是可扩展的 ",
        " SCA主要是为了满足软件集成的需要而创建的架构 "
      ]
    },
    "crawl_time": 1753176887.916688
  },
  {
    "section_id": "9438",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA的参考架构",
    "question_id": 190832,
    "question_title": "<p>（ ）是由中间件技术实现并支持SOA的一组基础架构，它提供了一种基础设施，其优势在于（请作答此空）</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 支持了服务请求者与服务提供者之间的直接链接 ",
      " 支持了服务请求者与服务提供者之间的紧密耦合 ",
      " 消除了服务请求者与服务提供者之间的直接链接 ",
      " 消除了服务请求者与服务提供者之间的关系 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 190832,
      "question_title": "<p>（ ）是由中间件技术实现并支持SOA的一组基础架构，它提供了一种基础设施，其优势在于（请作答此空）</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 190832,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 支持了服务请求者与服务提供者之间的直接链接 ",
        " 支持了服务请求者与服务提供者之间的紧密耦合 ",
        " 消除了服务请求者与服务提供者之间的直接链接 ",
        " 消除了服务请求者与服务提供者之间的关系 "
      ]
    },
    "crawl_time": 1753176887.916688
  },
  {
    "section_id": "9438",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA的参考架构",
    "question_id": 190833,
    "question_title": "<p>ABSDM(Architecture-BasedSoftwareDesignModel)把整个基于体系结构软件过程划分为体系结构需求，体系结构设计，体系结构文档化、（请作答此空）和体系结构等6个子过程，其中（ ）过程的主要输出结果是体系结构规格说明和测试体系结构需求的质量设计说明书。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 体系结构复审 ",
      " 体系结构测试 ",
      " 体系结构变更 ",
      " 体系结构管理 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 190833,
      "question_title": "<p>ABSDM(Architecture-BasedSoftwareDesignModel)把整个基于体系结构软件过程划分为体系结构需求，体系结构设计，体系结构文档化、（请作答此空）和体系结构等6个子过程，其中（ ）过程的主要输出结果是体系结构规格说明和测试体系结构需求的质量设计说明书。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 190833,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 体系结构复审 ",
        " 体系结构测试 ",
        " 体系结构变更 ",
        " 体系结构管理 "
      ]
    },
    "crawl_time": 1753176887.916688
  },
  {
    "section_id": "9439",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA主要协议和规范",
    "question_id": 49937,
    "question_title": "<p>面向服务系统构建过程中，（请作答此空 ）用于实现Web服务的远程调用，（ ）用来将分散的、功能单一的Web服务组织成一个复杂的有机应用。</p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " UDDI（Universal Description，Discovery and Integration） ",
      " WSDL（Web Service Description Language) ",
      " SOAP（Simple Object Access Protocol） ",
      " BPEL（Business Process Execution Language） "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 49937,
      "question_title": "<p>面向服务系统构建过程中，（请作答此空 ）用于实现Web服务的远程调用，（ ）用来将分散的、功能单一的Web服务组织成一个复杂的有机应用。</p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49937,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " UDDI（Universal Description，Discovery and Integration） ",
        " WSDL（Web Service Description Language) ",
        " SOAP（Simple Object Access Protocol） ",
        " BPEL（Business Process Execution Language） "
      ]
    },
    "crawl_time": 1753176889.1702535
  },
  {
    "section_id": "9439",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA主要协议和规范",
    "question_id": 151240,
    "question_title": "与SOA紧密相关的技术主要有UDDI、WSDL、SOAP和REST等，而这些技术都是以XML为基础而发展起来的。（请作答此空）提供了一种服务发布、查找和定位的方法，是服务的信息注册规范，以便被需要该服务的用户发现和使用它。（ ）是对服务进行描述的语言，它有一套基于XML的语法定义，包含服务实现定义和服务接口定义。（ ）定义了服务请求者和服务提供者之间的消息传输规范。通过它，应用程序可以在网络中进行数据交换和远程过程调用（Remote Procedure Call，RPC）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " UDDI ",
      " Rest ",
      " WSDL ",
      " SOAP "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 151240,
      "question_title": "与SOA紧密相关的技术主要有UDDI、WSDL、SOAP和REST等，而这些技术都是以XML为基础而发展起来的。（请作答此空）提供了一种服务发布、查找和定位的方法，是服务的信息注册规范，以便被需要该服务的用户发现和使用它。（ ）是对服务进行描述的语言，它有一套基于XML的语法定义，包含服务实现定义和服务接口定义。（ ）定义了服务请求者和服务提供者之间的消息传输规范。通过它，应用程序可以在网络中进行数据交换和远程过程调用（Remote Procedure Call，RPC）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 151240,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " UDDI ",
        " Rest ",
        " WSDL ",
        " SOAP "
      ]
    },
    "crawl_time": 1753176889.1702535
  },
  {
    "section_id": "9439",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA主要协议和规范",
    "question_id": 281356,
    "question_title": "<p>与SOA紧密相关的技术主要有UDDI、WSDL、SOAP和REST等，而这些技术都是以XML为基础而发展起来的。（&nbsp; ）提供了一种服务发布、查找和定位的方法，是服务的信息注册规范，以便被需要该服务的用户发现和使用它。（ &nbsp;）是对服务进行描述的语言，它有一套基于XML的语法定义，包含服务实现定义和服务接口定义。（ &nbsp;）定义了服务请求者和服务提供者之间的消息传输规范。通过它，应用程序可以在网络中进行数据交换和远程过程调用（Remote Procedure Call，RPC）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "UDDI",
      "Rest",
      "WSDL",
      "SOAP"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 281356,
      "question_title": "<p>与SOA紧密相关的技术主要有UDDI、WSDL、SOAP和REST等，而这些技术都是以XML为基础而发展起来的。（&nbsp; ）提供了一种服务发布、查找和定位的方法，是服务的信息注册规范，以便被需要该服务的用户发现和使用它。（ &nbsp;）是对服务进行描述的语言，它有一套基于XML的语法定义，包含服务实现定义和服务接口定义。（ &nbsp;）定义了服务请求者和服务提供者之间的消息传输规范。通过它，应用程序可以在网络中进行数据交换和远程过程调用（Remote Procedure Call，RPC）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281355,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "UDDI",
        "Rest",
        "WSDL",
        "SOAP"
      ]
    },
    "crawl_time": 1753176889.1702535
  },
  {
    "section_id": "9439",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA主要协议和规范",
    "question_id": 281357,
    "question_title": "<p>与SOA紧密相关的技术主要有UDDI、WSDL、SOAP和REST等，而这些技术都是以XML为基础而发展起来的。（&nbsp; ）提供了一种服务发布、查找和定位的方法，是服务的信息注册规范，以便被需要该服务的用户发现和使用它。（ &nbsp;）是对服务进行描述的语言，它有一套基于XML的语法定义，包含服务实现定义和服务接口定义。（ &nbsp;）定义了服务请求者和服务提供者之间的消息传输规范。通过它，应用程序可以在网络中进行数据交换和远程过程调用（Remote Procedure Call，RPC）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "UDDI",
      "Rest",
      "WSDL",
      "SOAP"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 281357,
      "question_title": "<p>与SOA紧密相关的技术主要有UDDI、WSDL、SOAP和REST等，而这些技术都是以XML为基础而发展起来的。（&nbsp; ）提供了一种服务发布、查找和定位的方法，是服务的信息注册规范，以便被需要该服务的用户发现和使用它。（ &nbsp;）是对服务进行描述的语言，它有一套基于XML的语法定义，包含服务实现定义和服务接口定义。（ &nbsp;）定义了服务请求者和服务提供者之间的消息传输规范。通过它，应用程序可以在网络中进行数据交换和远程过程调用（Remote Procedure Call，RPC）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281355,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "UDDI",
        "Rest",
        "WSDL",
        "SOAP"
      ]
    },
    "crawl_time": 1753176889.1702535
  },
  {
    "section_id": "9439",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA主要协议和规范",
    "question_id": 281358,
    "question_title": "<p>与SOA紧密相关的技术主要有UDDI、WSDL、SOAP和REST等，而这些技术都是以XML为基础而发展起来的。（&nbsp; ）提供了一种服务发布、查找和定位的方法，是服务的信息注册规范，以便被需要该服务的用户发现和使用它。（ &nbsp;）是对服务进行描述的语言，它有一套基于XML的语法定义，包含服务实现定义和服务接口定义。（ &nbsp;）定义了服务请求者和服务提供者之间的消息传输规范。通过它，应用程序可以在网络中进行数据交换和远程过程调用（Remote Procedure Call，RPC）。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "UDDI",
      "Rest",
      "WSDL",
      "SOAP"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 281358,
      "question_title": "<p>与SOA紧密相关的技术主要有UDDI、WSDL、SOAP和REST等，而这些技术都是以XML为基础而发展起来的。（&nbsp; ）提供了一种服务发布、查找和定位的方法，是服务的信息注册规范，以便被需要该服务的用户发现和使用它。（ &nbsp;）是对服务进行描述的语言，它有一套基于XML的语法定义，包含服务实现定义和服务接口定义。（ &nbsp;）定义了服务请求者和服务提供者之间的消息传输规范。通过它，应用程序可以在网络中进行数据交换和远程过程调用（Remote Procedure Call，RPC）。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281355,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "UDDI",
        "Rest",
        "WSDL",
        "SOAP"
      ]
    },
    "crawl_time": 1753176889.1702535
  },
  {
    "section_id": "9439",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA主要协议和规范",
    "question_id": 507306,
    "question_title": "<p>关于SOAP（Simple Object Access Protocol，简单对象访问协议），描述错误的是（ ）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 提供什么服务，如何使用，谁可以使用 ",
      " 信封和XML编码定义在不相同的命名空间 ",
      " SOAP封装,定义了一个描述消息中的内容是什么，是谁发送的，谁应当接收并处理它以及如何处理它们的框架 ",
      " SOAP RPC表示是远程过程调用和应答的协定 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 507306,
      "question_title": "<p>关于SOAP（Simple Object Access Protocol，简单对象访问协议），描述错误的是（ ）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507306,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 提供什么服务，如何使用，谁可以使用 ",
        " 信封和XML编码定义在不相同的命名空间 ",
        " SOAP封装,定义了一个描述消息中的内容是什么，是谁发送的，谁应当接收并处理它以及如何处理它们的框架 ",
        " SOAP RPC表示是远程过程调用和应答的协定 "
      ]
    },
    "crawl_time": 1753176889.1702535
  },
  {
    "section_id": "9439",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA主要协议和规范",
    "question_id": 523268,
    "question_title": "SOA中服务请求者与提供者的通信传输规范是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "UUID",
      "SOAP",
      "WSDL&nbsp;",
      "XML"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 523268,
      "question_title": "SOA中服务请求者与提供者的通信传输规范是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523268,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "UUID",
        "SOAP",
        "WSDL&nbsp;",
        "XML"
      ]
    },
    "crawl_time": 1753176889.1702535
  },
  {
    "section_id": "9439",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA主要协议和规范",
    "question_id": 523269,
    "question_title": "REST中部分更新使用的HTTP方法是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "POST",
      "PUT",
      "PATCH&nbsp;",
      "PART"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 523269,
      "question_title": "REST中部分更新使用的HTTP方法是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523269,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "POST",
        "PUT",
        "PATCH&nbsp;",
        "PART"
      ]
    },
    "crawl_time": 1753176889.1702535
  },
  {
    "section_id": "9441",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA的作用",
    "question_id": 281210,
    "question_title": "<p>逆向工程导出的信息分为4个抽象层次。使用用户指导下的搜索与变换(User-Directed Search and Transformation)方法可导出______信息。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 实现级和功能级 ",
      " 实现级和结构级 ",
      " 功能级和领域级 ",
      " 结构级和领域级 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 281210,
      "question_title": "<p>逆向工程导出的信息分为4个抽象层次。使用用户指导下的搜索与变换(User-Directed Search and Transformation)方法可导出______信息。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281210,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 实现级和功能级 ",
        " 实现级和结构级 ",
        " 功能级和领域级 ",
        " 结构级和领域级 "
      ]
    },
    "crawl_time": 1753176890.3200893
  },
  {
    "section_id": "9443",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA的设计模式",
    "question_id": 49939,
    "question_title": "<p>基于JavaEE平台的基础功能服务构建应用系统时，（ &nbsp;）可用来集成遗产系统。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " JDBC、JCA和Java IDL ",
      " JDBC、JCA和JMS ",
      " JDBC、JMS和Java IDL ",
      " JCA、JMS和Java IDL "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 49939,
      "question_title": "<p>基于JavaEE平台的基础功能服务构建应用系统时，（ &nbsp;）可用来集成遗产系统。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49939,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " JDBC、JCA和Java IDL ",
        " JDBC、JCA和JMS ",
        " JDBC、JMS和Java IDL ",
        " JCA、JMS和Java IDL "
      ]
    },
    "crawl_time": 1753176891.5380208
  },
  {
    "section_id": "9443",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA的设计模式",
    "question_id": 354868,
    "question_title": "<p>【51CTO学堂-学员回忆版】以下有关构件特征的的描述，说法不正确的是（35）</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 构件是独立的部署单元 ",
      " 构件可作为第三方的组装单元 ",
      " 构件没有外部的可见状态 ",
      " 构件作为部署单元是可拆分的 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 354868,
      "question_title": "<p>【51CTO学堂-学员回忆版】以下有关构件特征的的描述，说法不正确的是（35）</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354868,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 构件是独立的部署单元 ",
        " 构件可作为第三方的组装单元 ",
        " 构件没有外部的可见状态 ",
        " 构件作为部署单元是可拆分的 "
      ]
    },
    "crawl_time": 1753176891.5380208
  },
  {
    "section_id": "9443",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA的设计模式",
    "question_id": 355206,
    "question_title": "<p>【51CTO学堂-学员回忆版】Micro-service is a software development technology, which advocates dividing a single application into a group of small services, which coordinates and cooperates with each other to provide ultimate value for users.The micro-service (71) has many important benefits.First, it solves the problem of business complexity. It decomposes the original huge single application into a group of services. Although the total amount of functions remains the same, the application has been decomposed into manageable services.The development speed of a single service is much faster, and it is easier to understand and (72). Second, this architecture allows each service to be (73 )&nbsp; independently by a team. Developers are free to choose any appropriate technology. Third, the micro-service architecture mode enables each service to be (74 ) independently. Developers never need to coordinate the deployment of local changes to their services. These types of changes can be deployed immediately after testing. Finally, the micro-service architecture enables each service to (75 ) independently.&nbsp;</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "architecture",
      "software",
      "application",
      "technology"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 355206,
      "question_title": "<p>【51CTO学堂-学员回忆版】Micro-service is a software development technology, which advocates dividing a single application into a group of small services, which coordinates and cooperates with each other to provide ultimate value for users.The micro-service (71) has many important benefits.First, it solves the problem of business complexity. It decomposes the original huge single application into a group of services. Although the total amount of functions remains the same, the application has been decomposed into manageable services.The development speed of a single service is much faster, and it is easier to understand and (72). Second, this architecture allows each service to be (73 )&nbsp; independently by a team. Developers are free to choose any appropriate technology. Third, the micro-service architecture mode enables each service to be (74 ) independently. Developers never need to coordinate the deployment of local changes to their services. These types of changes can be deployed immediately after testing. Finally, the micro-service architecture enables each service to (75 ) independently.&nbsp;</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 355205,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "architecture",
        "software",
        "application",
        "technology"
      ]
    },
    "crawl_time": 1753176891.5380208
  },
  {
    "section_id": "9443",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA的设计模式",
    "question_id": 494082,
    "question_title": "<p>Micro-service is a software development technology, which advocates dividing a single application into a group of small services, which coordinates and cooperates with each other to provide ultimate value for users.The micro-service&nbsp;（1） has many important benefits.First,it solves the problem of business complexity. It decomposes the original huge single application into a group of services. Although the total amount of functions remains the same, the application has been decomposed into manageable services.The development speed of a single service is much faster, and it is easier to understand and&nbsp;（2）. Second, this architecture allows each service to be （3 ） &nbsp;independently by a team. Developers are free to choose any appropriate technology. Third, the micro-service architecture mode enables each service to be&nbsp;（4 ） independently. Developers never need to coordinate the deployment of local changes to their services. These types of changes can be deployed immediately after testing. Finally, the micro-service architecture enables each service to （5 ） independently.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " utilized ",
      " developed ",
      " tested ",
      " deployed "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 494082,
      "question_title": "<p>Micro-service is a software development technology, which advocates dividing a single application into a group of small services, which coordinates and cooperates with each other to provide ultimate value for users.The micro-service&nbsp;（1） has many important benefits.First,it solves the problem of business complexity. It decomposes the original huge single application into a group of services. Although the total amount of functions remains the same, the application has been decomposed into manageable services.The development speed of a single service is much faster, and it is easier to understand and&nbsp;（2）. Second, this architecture allows each service to be （3 ） &nbsp;independently by a team. Developers are free to choose any appropriate technology. Third, the micro-service architecture mode enables each service to be&nbsp;（4 ） independently. Developers never need to coordinate the deployment of local changes to their services. These types of changes can be deployed immediately after testing. Finally, the micro-service architecture enables each service to （5 ） independently.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 356269,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " utilized ",
        " developed ",
        " tested ",
        " deployed "
      ]
    },
    "crawl_time": 1753176891.5380208
  },
  {
    "section_id": "9443",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA的设计模式",
    "question_id": 494083,
    "question_title": "<p>Micro-service is a software development technology, which advocates dividing a single application into a group of small services, which coordinates and cooperates with each other to provide ultimate value for users.The micro-service&nbsp;（1） has many important benefits.First,it solves the problem of business complexity. It decomposes the original huge single application into a group of services. Although the total amount of functions remains the same, the application has been decomposed into manageable services.The development speed of a single service is much faster, and it is easier to understand and&nbsp;（2）. Second, this architecture allows each service to be （3 ） &nbsp;independently by a team. Developers are free to choose any appropriate technology. Third, the micro-service architecture mode enables each service to be&nbsp;（4 ） independently. Developers never need to coordinate the deployment of local changes to their services. These types of changes can be deployed immediately after testing. Finally, the micro-service architecture enables each service to （5 ） independently.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " analyze ",
      " use ",
      " design ",
      " expand "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 494083,
      "question_title": "<p>Micro-service is a software development technology, which advocates dividing a single application into a group of small services, which coordinates and cooperates with each other to provide ultimate value for users.The micro-service&nbsp;（1） has many important benefits.First,it solves the problem of business complexity. It decomposes the original huge single application into a group of services. Although the total amount of functions remains the same, the application has been decomposed into manageable services.The development speed of a single service is much faster, and it is easier to understand and&nbsp;（2）. Second, this architecture allows each service to be （3 ） &nbsp;independently by a team. Developers are free to choose any appropriate technology. Third, the micro-service architecture mode enables each service to be&nbsp;（4 ） independently. Developers never need to coordinate the deployment of local changes to their services. These types of changes can be deployed immediately after testing. Finally, the micro-service architecture enables each service to （5 ） independently.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 356269,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " analyze ",
        " use ",
        " design ",
        " expand "
      ]
    },
    "crawl_time": 1753176891.5380208
  },
  {
    "section_id": "9443",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA的设计模式",
    "question_id": 523240,
    "question_title": "微服务断路器的三种状态是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "激活、关闭、休眠",
      "打开、关闭、半开",
      "打开、关闭、熔断",
      "激活、打开、熔断"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 523240,
      "question_title": "微服务断路器的三种状态是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523240,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "激活、关闭、休眠",
        "打开、关闭、半开",
        "打开、关闭、熔断",
        "激活、打开、熔断"
      ]
    },
    "crawl_time": 1753176891.5380208
  },
  {
    "section_id": "9443",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA的设计模式",
    "question_id": 523299,
    "question_title": "SOA中（）进一步解耦了服务请求者和服务提供者。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "WebService",
      "ESB（企业服务总线）",
      "服务注册表",
      "RMI"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 523299,
      "question_title": "SOA中（）进一步解耦了服务请求者和服务提供者。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523299,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "WebService",
        "ESB（企业服务总线）",
        "服务注册表",
        "RMI"
      ]
    },
    "crawl_time": 1753176891.5380208
  },
  {
    "section_id": "9443",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA的设计模式",
    "question_id": 177939,
    "question_title": "<p>阅读以下关于 Web 应用设计开发的描述，在答题纸上回答问题 1 至问题 3。</p><p>某公司拟开发一个网络约车调度服务平台，实现基于互联网的出租车预约与管理。公司的系统分析师王工首先进行了需求分析，得到的系统需求列举如下：</p><p>系统的参与者包括乘客、出租车司机和平台管理员三类；</p><p>系统能够实现对乘客和出租车司机的信息注册与身份认证等功能，并对乘客的信用信息进行管理，对出租车司机的违章情况进行审核；</p><p>系统需要与后端的银行支付系统对接，完成支付信息审核、支付信息更新与在线支付等功能；</p><p>针对乘客发起的每一笔订单，系统需要实现订单发起、提交、跟踪、撤销、支付、完成等业务过程的处理：</p><p>系统需要以短信、微信和电子邮件多种方式分别为系统中的用户进行事件提醒。</p><p>【问题1】（9分）</p><p>请说明微服务架构的优点和缺点。</p><p>【问题2】（8分）</p><p>识别并设计微服务是系统开发过程中的一个重要步骤，请对题干需求进行分析，对微服务的种类和包含的业务功能进行归类，完成表1-1中的（1）～（4）。</p><p>表1-1 &nbsp;微服务名称及所包含业务功能</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191030/1572415003339811.jpg\" title=\"1572415003339811.jpg\" alt=\"2.jpg\"/><p>【问题3】（8分）答对4条即可</p><p>应用网关是实现微服务的主要技术之一，请简述应用网关的作用。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "见解析<br/>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 177939,
      "question_title": "<p>阅读以下关于 Web 应用设计开发的描述，在答题纸上回答问题 1 至问题 3。</p><p>某公司拟开发一个网络约车调度服务平台，实现基于互联网的出租车预约与管理。公司的系统分析师王工首先进行了需求分析，得到的系统需求列举如下：</p><p>系统的参与者包括乘客、出租车司机和平台管理员三类；</p><p>系统能够实现对乘客和出租车司机的信息注册与身份认证等功能，并对乘客的信用信息进行管理，对出租车司机的违章情况进行审核；</p><p>系统需要与后端的银行支付系统对接，完成支付信息审核、支付信息更新与在线支付等功能；</p><p>针对乘客发起的每一笔订单，系统需要实现订单发起、提交、跟踪、撤销、支付、完成等业务过程的处理：</p><p>系统需要以短信、微信和电子邮件多种方式分别为系统中的用户进行事件提醒。</p><p>【问题1】（9分）</p><p>请说明微服务架构的优点和缺点。</p><p>【问题2】（8分）</p><p>识别并设计微服务是系统开发过程中的一个重要步骤，请对题干需求进行分析，对微服务的种类和包含的业务功能进行归类，完成表1-1中的（1）～（4）。</p><p>表1-1 &nbsp;微服务名称及所包含业务功能</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191030/1572415003339811.jpg\" title=\"1572415003339811.jpg\" alt=\"2.jpg\"/><p>【问题3】（8分）答对4条即可</p><p>应用网关是实现微服务的主要技术之一，请简述应用网关的作用。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 177939,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "见解析<br/>"
      ],
      "option": null
    },
    "crawl_time": 1753176891.5380208
  },
  {
    "section_id": "9443",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA的设计模式",
    "question_id": 284749,
    "question_title": "<p>【问题1】（9分）</p><p>请说明微服务架构的优点和缺点。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>微服务优点：</p><p>（1）每个微服务都很小，这样能聚焦一个指定的业务功能或业务需求。</p><p>（2）微服务能够被小团队单独开发，这个小团队是2到5人的开发人员组成。</p><p>（3）微服务是松耦合的，是有功能意义的服务，无论是在开发阶段或部署阶段都是独立的。</p><p>（4）微服务能使用不同的语言开发。</p><p>（5）去中心化。每个微服务都有自己的存储能力，可以有自己的数据库。也可以有统一数据库。</p><p>&nbsp;微服务缺点：</p><p>（1）很难在不采用分布式事务的情况下跨服务实现功能</p><p>（2）测试工作更加困难</p><p>（3）跨服务实现要求功能要求团队之间的紧密协作</p><p>（4）部署复杂</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 284749,
      "question_title": "<p>【问题1】（9分）</p><p>请说明微服务架构的优点和缺点。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 284748,
      "score_rule": "",
      "material_text": "<p>试题五（25分）</p><p>● 阅读以下关于 Web 应用设计开发的描述，在答题纸上回答问题 1 至问题 3。</p><p>某公司拟开发一个网络约车调度服务平台，实现基于互联网的出租车预约与管理。公司的系统分析师王工首先进行了需求分析，得到的系统需求列举如下：</p><p>系统的参与者包括乘客、出租车司机和平台管理员三类；</p><p>系统能够实现对乘客和出租车司机的信息注册与身份认证等功能，并对乘客的信用信息进行管理，对出租车司机的违章情况进行审核；</p><p>系统需要与后端的银行支付系统对接，完成支付信息审核、支付信息更新与在线支付等功能；</p><p>针对乘客发起的每一笔订单，系统需要实现订单发起、提交、跟踪、撤销、支付、完成等业务过程的处理：</p><p>系统需要以短信、微信和电子邮件多种方式分别为系统中的用户进行事件提醒。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>微服务优点：</p><p>（1）每个微服务都很小，这样能聚焦一个指定的业务功能或业务需求。</p><p>（2）微服务能够被小团队单独开发，这个小团队是2到5人的开发人员组成。</p><p>（3）微服务是松耦合的，是有功能意义的服务，无论是在开发阶段或部署阶段都是独立的。</p><p>（4）微服务能使用不同的语言开发。</p><p>（5）去中心化。每个微服务都有自己的存储能力，可以有自己的数据库。也可以有统一数据库。</p><p>&nbsp;微服务缺点：</p><p>（1）很难在不采用分布式事务的情况下跨服务实现功能</p><p>（2）测试工作更加困难</p><p>（3）跨服务实现要求功能要求团队之间的紧密协作</p><p>（4）部署复杂</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176891.5380208
  },
  {
    "section_id": "9443",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA的设计模式",
    "question_id": 284750,
    "question_title": "<p>【问题2】（8分）</p><p>识别并设计微服务是系统开发过程中的一个重要步骤，请对题干需求进行分析，对微服务的种类和包含的业务功能进行归类，完成表1-1中的（1）～（4）。</p><p>表1-1 &nbsp;微服务名称及所包含业务功能</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602646360981161.jpg\" title=\"1602646360981161.jpg\" alt=\"1.jpg\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "（1）支付信息审核（2）支付信息更新（3）在线支付（4）订单管理"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 284750,
      "question_title": "<p>【问题2】（8分）</p><p>识别并设计微服务是系统开发过程中的一个重要步骤，请对题干需求进行分析，对微服务的种类和包含的业务功能进行归类，完成表1-1中的（1）～（4）。</p><p>表1-1 &nbsp;微服务名称及所包含业务功能</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602646360981161.jpg\" title=\"1602646360981161.jpg\" alt=\"1.jpg\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 284748,
      "score_rule": "",
      "material_text": "<p>试题五（25分）</p><p>● 阅读以下关于 Web 应用设计开发的描述，在答题纸上回答问题 1 至问题 3。</p><p>某公司拟开发一个网络约车调度服务平台，实现基于互联网的出租车预约与管理。公司的系统分析师王工首先进行了需求分析，得到的系统需求列举如下：</p><p>系统的参与者包括乘客、出租车司机和平台管理员三类；</p><p>系统能够实现对乘客和出租车司机的信息注册与身份认证等功能，并对乘客的信用信息进行管理，对出租车司机的违章情况进行审核；</p><p>系统需要与后端的银行支付系统对接，完成支付信息审核、支付信息更新与在线支付等功能；</p><p>针对乘客发起的每一笔订单，系统需要实现订单发起、提交、跟踪、撤销、支付、完成等业务过程的处理：</p><p>系统需要以短信、微信和电子邮件多种方式分别为系统中的用户进行事件提醒。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "（1）支付信息审核（2）支付信息更新（3）在线支付（4）订单管理"
      ],
      "option": null
    },
    "crawl_time": 1753176891.5380208
  },
  {
    "section_id": "9443",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA的设计模式",
    "question_id": 309545,
    "question_title": "<p>【问题 2】 （5分）</p><p>什么是微服务？微服务有哪些特点和优缺点？</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【参考答案】</p><p>微服务顾名思义就是非常小的服务，是一种架构模式，提倡某一单一应用程序划分成一组小的服务，服务之间相互协调、相互配合，为用户提供最终价值。每个服务运行在其独立的进程中，服务与服务之间采用轻量级的通信机制实现相互沟通，（通常是基于HTTP协议的RESTFful API）。每个服务都围绕着具体业务进行构件，并且能够被独立的部署到生产环境中，另外尽可能避免同一的、集中式的服务管理机制，对具体的一个服务而言，应根据业务上下文，选择合适的语言、工具对其进行构建。</p><p>微服务的特点是：小细专轻松独。小是相对于服务的粒度而言；细：粒度细微；专：专注于一件事；轻：轻量级的通信机制。松：松耦合的。独：独立性强、独立部署</p><p>微服务的优势</p><p>（1）技术异构性</p><p>（2）有弹性</p><p>（3）容易扩展</p><p>（4）简化部署方案（可自动部署）</p><p>（5）与组织结构相匹配</p><p>（6）服务之间可组合性</p><p>（7）对可替代的优化</p><p>微服务的挑战</p><p>（1）分布式系统的复杂度</p><p>（2）运维成本高</p><p>（3）部署自动化</p><p>（4）DevOps与组织结构</p><p>（5）服务间的相互依赖测试</p><p>（6）服务间依赖管理</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 309545,
      "question_title": "<p>【问题 2】 （5分）</p><p>什么是微服务？微服务有哪些特点和优缺点？</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 309543,
      "score_rule": "",
      "material_text": "<p>试题五（共25分）</p><p>请详细阅读有关Web架构设计方面的叙述，在答题纸上回答问题1至问题3。</p><p><br/></p><p>【说明】</p><p><br/></p><p>阅读以下关于 Web 应用设计开发的描述，在答题纸上回答问题 1 至问题 3。</p><p>【说明】</p><p>某电商公司拟开发一个可以支持亿级流量的系统。公司架构师张工认为应该采用B/S技术实现系统开发。王工认为采用当前主流的微服务架构可以更好的支持高并发的场景应用。公司经过讨论分析最终采用了王工的建议。</p><p><br/></p><p>其系统的架构如下图所示的设计。</p><br/><img src=\"https://s2.51cto.com/images/20210913/1631463542133167.jpg\" title=\"1631463542133167.jpg\" alt=\"1.jpg\"/>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【参考答案】</p><p>微服务顾名思义就是非常小的服务，是一种架构模式，提倡某一单一应用程序划分成一组小的服务，服务之间相互协调、相互配合，为用户提供最终价值。每个服务运行在其独立的进程中，服务与服务之间采用轻量级的通信机制实现相互沟通，（通常是基于HTTP协议的RESTFful API）。每个服务都围绕着具体业务进行构件，并且能够被独立的部署到生产环境中，另外尽可能避免同一的、集中式的服务管理机制，对具体的一个服务而言，应根据业务上下文，选择合适的语言、工具对其进行构建。</p><p>微服务的特点是：小细专轻松独。小是相对于服务的粒度而言；细：粒度细微；专：专注于一件事；轻：轻量级的通信机制。松：松耦合的。独：独立性强、独立部署</p><p>微服务的优势</p><p>（1）技术异构性</p><p>（2）有弹性</p><p>（3）容易扩展</p><p>（4）简化部署方案（可自动部署）</p><p>（5）与组织结构相匹配</p><p>（6）服务之间可组合性</p><p>（7）对可替代的优化</p><p>微服务的挑战</p><p>（1）分布式系统的复杂度</p><p>（2）运维成本高</p><p>（3）部署自动化</p><p>（4）DevOps与组织结构</p><p>（5）服务间的相互依赖测试</p><p>（6）服务间依赖管理</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176891.5380208
  },
  {
    "section_id": "9443",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA的设计模式",
    "question_id": 310932,
    "question_title": "<p>问题一（8分）：请简要叙述微服务架构的涵义和关键原则。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>微服务架构（Microservice Architecture）是在面向服务的架构（SOA）基础上扩展而来的一种架构，旨在通过将大型应用程序拆分为一组小的、松耦合的服务来提高系统的可伸缩性、灵活性和可维护性。这些服务围绕具体的业务领域构建，可以独立地进行开发、部署和管理。</p><p>微服务架构的关键原则：</p><p>1. 单一职责原则</p><p>2. 松耦合</p><p>3. 自治性</p><p>4. 可伸缩性</p><p>5. 容错性<br/>6.,独立部署<br/>7.,服务注册与发现<br/>8.,接口明确</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 310932,
      "question_title": "<p>问题一（8分）：请简要叙述微服务架构的涵义和关键原则。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 310931,
      "score_rule": "",
      "material_text": "<p>试题四</p><p>某互联网金融集团依托微服务技术研发互联网金融交易信息系统，全面整合原分布于各省地方分公司的区域系统，实现统一的用户账户管理、转账汇款、理财投资、贷款管理、网上交易、网上支付、财务共享、财务统计分析等业务功能。</p><p>在讨论过程中，王工建议采用面向服务的体系结构（SOA），可以通过ESB充分整个各地现有业务，并可支持Web、智能手机等多种前端应用形式接入相同的后端服务；而张工提出采用分布式微服务体系结构，整合业务的同时，可以利用云服务提高体系结构的性能、可用性和可扩展性，又可以提高整体的可变性和可维护性，且有利于适应当下和未来技术的高速发展和快速变更。</p><p>经过综合分析和讨论，集团领导最终决定同时采纳两位架构师的建议，结合使用，制定基于分布式微服务的前后端分离体系结构。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>微服务架构（Microservice Architecture）是在面向服务的架构（SOA）基础上扩展而来的一种架构，旨在通过将大型应用程序拆分为一组小的、松耦合的服务来提高系统的可伸缩性、灵活性和可维护性。这些服务围绕具体的业务领域构建，可以独立地进行开发、部署和管理。</p><p>微服务架构的关键原则：</p><p>1. 单一职责原则</p><p>2. 松耦合</p><p>3. 自治性</p><p>4. 可伸缩性</p><p>5. 容错性<br/>6.,独立部署<br/>7.,服务注册与发现<br/>8.,接口明确</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176891.5380208
  },
  {
    "section_id": "9443",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA的设计模式",
    "question_id": 310933,
    "question_title": "<p>问题二（8分）：根据该信息系统整合的实际需求，项目组完成了微服务风格的金融交易信息系统体系结构设计方案，该体系结构设计图如图5-1所示。</p><p>请从（a）~（n）中选择合适的内容填入图5-1的（1）~（8）中，补充完善体系结构设计图。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210924/1632415128439300.jpg\" title=\"1632415128439300.jpg\" alt=\"1.jpg\"/></p><p>（a）页面缓存\t（b）网关层\t\t\t（c）数据层\t\t（d）主数据库</p><p>（e）Web服务器\t（f）反向代理服务器\t（g）事务中心\t（h）服务层</p><p>（i）数据访问组件\t（j）CDN\t\t（k）展示层\t\t（l）数据中台</p><p>（m）从数据库\t（n）分布式数据缓存</p><p><br/></p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）j\t（2）e\t（3）n\t（4）I\t（5）d\t（6）m\t（7）h\t（8）c</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 310933,
      "question_title": "<p>问题二（8分）：根据该信息系统整合的实际需求，项目组完成了微服务风格的金融交易信息系统体系结构设计方案，该体系结构设计图如图5-1所示。</p><p>请从（a）~（n）中选择合适的内容填入图5-1的（1）~（8）中，补充完善体系结构设计图。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210924/1632415128439300.jpg\" title=\"1632415128439300.jpg\" alt=\"1.jpg\"/></p><p>（a）页面缓存\t（b）网关层\t\t\t（c）数据层\t\t（d）主数据库</p><p>（e）Web服务器\t（f）反向代理服务器\t（g）事务中心\t（h）服务层</p><p>（i）数据访问组件\t（j）CDN\t\t（k）展示层\t\t（l）数据中台</p><p>（m）从数据库\t（n）分布式数据缓存</p><p><br/></p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 310931,
      "score_rule": "",
      "material_text": "<p>试题四</p><p>某互联网金融集团依托微服务技术研发互联网金融交易信息系统，全面整合原分布于各省地方分公司的区域系统，实现统一的用户账户管理、转账汇款、理财投资、贷款管理、网上交易、网上支付、财务共享、财务统计分析等业务功能。</p><p>在讨论过程中，王工建议采用面向服务的体系结构（SOA），可以通过ESB充分整个各地现有业务，并可支持Web、智能手机等多种前端应用形式接入相同的后端服务；而张工提出采用分布式微服务体系结构，整合业务的同时，可以利用云服务提高体系结构的性能、可用性和可扩展性，又可以提高整体的可变性和可维护性，且有利于适应当下和未来技术的高速发展和快速变更。</p><p>经过综合分析和讨论，集团领导最终决定同时采纳两位架构师的建议，结合使用，制定基于分布式微服务的前后端分离体系结构。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）j\t（2）e\t（3）n\t（4）I\t（5）d\t（6）m\t（7）h\t（8）c</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176891.5380208
  },
  {
    "section_id": "9443",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA的设计模式",
    "question_id": 310934,
    "question_title": "问题三（9分）：项目组在进行需求调研时，发现用户界面部分的变动可能会比较频繁，因此需要降低系统界面与业务逻辑之间的耦合度。MVVM模式是由MVC模式派生出的一种设计模式，请从组件耦合度、组件分工及对开发工程化支持等三方面说明MVVM模式与MVC模式的主要区别。",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      ",<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210924/1632415161399032.jpg\" title=\"1632415161399032.jpg\" alt=\"1.jpg\"/>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 310934,
      "question_title": "问题三（9分）：项目组在进行需求调研时，发现用户界面部分的变动可能会比较频繁，因此需要降低系统界面与业务逻辑之间的耦合度。MVVM模式是由MVC模式派生出的一种设计模式，请从组件耦合度、组件分工及对开发工程化支持等三方面说明MVVM模式与MVC模式的主要区别。",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 310931,
      "score_rule": "",
      "material_text": "<p>试题四</p><p>某互联网金融集团依托微服务技术研发互联网金融交易信息系统，全面整合原分布于各省地方分公司的区域系统，实现统一的用户账户管理、转账汇款、理财投资、贷款管理、网上交易、网上支付、财务共享、财务统计分析等业务功能。</p><p>在讨论过程中，王工建议采用面向服务的体系结构（SOA），可以通过ESB充分整个各地现有业务，并可支持Web、智能手机等多种前端应用形式接入相同的后端服务；而张工提出采用分布式微服务体系结构，整合业务的同时，可以利用云服务提高体系结构的性能、可用性和可扩展性，又可以提高整体的可变性和可维护性，且有利于适应当下和未来技术的高速发展和快速变更。</p><p>经过综合分析和讨论，集团领导最终决定同时采纳两位架构师的建议，结合使用，制定基于分布式微服务的前后端分离体系结构。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        ",<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210924/1632415161399032.jpg\" title=\"1632415161399032.jpg\" alt=\"1.jpg\"/>"
      ],
      "option": null
    },
    "crawl_time": 1753176891.5380208
  },
  {
    "section_id": "9443",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA的设计模式",
    "question_id": 313012,
    "question_title": "<p>【问题1】（6分）</p><p>下表列出了SOA与微服务在服务粒度、服务通信、服务交付、应用场景的不同，请将表格补充完整。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211014/1634143306337653.jpg\" title=\"1634143306337653.jpg\" alt=\"1.jpg\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "&nbsp;<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211014/1634143314342140.jpg\" title=\"1634143314342140.jpg\" alt=\"1.jpg\"/>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 313012,
      "question_title": "<p>【问题1】（6分）</p><p>下表列出了SOA与微服务在服务粒度、服务通信、服务交付、应用场景的不同，请将表格补充完整。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211014/1634143306337653.jpg\" title=\"1634143306337653.jpg\" alt=\"1.jpg\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 313011,
      "score_rule": "",
      "material_text": "<p>试题五（20分）&nbsp;（选做题，二选一）</p><p>近年来，随着互联网行业的迅猛发展，公司或组织业务的不断扩张，需求的快速变化以及用户量的不断增加，传统的单块（Monolithic）软件架构面临着越来越多的挑战，已逐渐无法适应互联网时代对软件的要求。在这一背景下，微服务架构模式(Microservice?Architecture?Pattern)逐渐流行，它强调将单一业务功能开发成微服务的形式，每个微服务运行在一个进程中；采用HTTP等通用协议和轻量级API实现微服务之间的协作与通信。这些微服务可以使用不同的开发语言以及不同数据存储技术，能够通过自动化部署工具独立发布，并保持最低限制的集中式管理。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "&nbsp;<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211014/1634143314342140.jpg\" title=\"1634143314342140.jpg\" alt=\"1.jpg\"/>"
      ],
      "option": null
    },
    "crawl_time": 1753176891.5380208
  },
  {
    "section_id": "9443",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA的设计模式",
    "question_id": 313014,
    "question_title": "<p>【问题3】（8分）</p><p>简述微服务的优点以及缺点。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>微服务优点：</p><p>（1）每个微服务都很小，这样能聚焦一个指定的业务功能或业务需求。&nbsp;</p><p>（2）微服务能够被小团队单独开发，这个小团队是2到5人的开发人员组成。&nbsp;</p><p>（3）微服务是松耦合的，是有功能意义的服务，无论是在开发阶段或部署阶段都是独立的。&nbsp;</p><p>（4）微服务能使用不同的语言开发。&nbsp;</p><p>（5）去中心化。每个微服务都有自己的存储能力，可以有自己的数据库。也可以有统一数据库。&nbsp;</p><p>微服务缺点：</p><p>（1）很难在不采用分布式事务的情况下跨服务实现功能</p><p>（2）测试工作更加困难</p><p>（3）跨服务实现要求功能要求团队之间的紧密协作</p><p>（4）部署复杂</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 313014,
      "question_title": "<p>【问题3】（8分）</p><p>简述微服务的优点以及缺点。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 313011,
      "score_rule": "",
      "material_text": "<p>试题五（20分）&nbsp;（选做题，二选一）</p><p>近年来，随着互联网行业的迅猛发展，公司或组织业务的不断扩张，需求的快速变化以及用户量的不断增加，传统的单块（Monolithic）软件架构面临着越来越多的挑战，已逐渐无法适应互联网时代对软件的要求。在这一背景下，微服务架构模式(Microservice?Architecture?Pattern)逐渐流行，它强调将单一业务功能开发成微服务的形式，每个微服务运行在一个进程中；采用HTTP等通用协议和轻量级API实现微服务之间的协作与通信。这些微服务可以使用不同的开发语言以及不同数据存储技术，能够通过自动化部署工具独立发布，并保持最低限制的集中式管理。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>微服务优点：</p><p>（1）每个微服务都很小，这样能聚焦一个指定的业务功能或业务需求。&nbsp;</p><p>（2）微服务能够被小团队单独开发，这个小团队是2到5人的开发人员组成。&nbsp;</p><p>（3）微服务是松耦合的，是有功能意义的服务，无论是在开发阶段或部署阶段都是独立的。&nbsp;</p><p>（4）微服务能使用不同的语言开发。&nbsp;</p><p>（5）去中心化。每个微服务都有自己的存储能力，可以有自己的数据库。也可以有统一数据库。&nbsp;</p><p>微服务缺点：</p><p>（1）很难在不采用分布式事务的情况下跨服务实现功能</p><p>（2）测试工作更加困难</p><p>（3）跨服务实现要求功能要求团队之间的紧密协作</p><p>（4）部署复杂</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176891.5380208
  },
  {
    "section_id": "9443",
    "section_name": "面向服务架构设计理论与实践（第二版） - SOA的设计模式",
    "question_id": 314789,
    "question_title": "<p>试题四 论微服务架构及其应用</p><p><br/>微服务架构（Microservices Architecture)是一种架构风格，它将一个复杂的应用拆分成多个独立自治的服务，服务与服务间通过松耦合的形式交互，在微服务架构中，服务是细粒度的，协议是轻量级的。这些服务通常按业务能力组织，有自身的技术堆栈。</p><p><br/>请围绕“微服务架构及其应用”论题，依次从以下三个方面进行论述。</p><p><br/>1.&nbsp;概要叙述你参与管理和开发的、采用微服务架构的软件项目以及你在其中所承担的主要工作。</p><p>2.请简要描述微服务架构的优点。</p><p>3.具体阐述你参与管理和开发的项目是如何基于微服务架构进行件设计实现的。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>无</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 314789,
      "question_title": "<p>试题四 论微服务架构及其应用</p><p><br/>微服务架构（Microservices Architecture)是一种架构风格，它将一个复杂的应用拆分成多个独立自治的服务，服务与服务间通过松耦合的形式交互，在微服务架构中，服务是细粒度的，协议是轻量级的。这些服务通常按业务能力组织，有自身的技术堆栈。</p><p><br/>请围绕“微服务架构及其应用”论题，依次从以下三个方面进行论述。</p><p><br/>1.&nbsp;概要叙述你参与管理和开发的、采用微服务架构的软件项目以及你在其中所承担的主要工作。</p><p>2.请简要描述微服务架构的优点。</p><p>3.具体阐述你参与管理和开发的项目是如何基于微服务架构进行件设计实现的。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 314789,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>无</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176891.5380208
  },
  {
    "section_id": "9447",
    "section_name": "嵌入式系统架构设计理论与实践（第二版） - 嵌入式系统概述",
    "question_id": 523244,
    "question_title": "嵌入式操作系统通常分为实时和非实时两类，（）不属于非实时嵌入式操作系统。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "VxWorks",
      "iOS",
      "Android",
      "WinCE"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 523244,
      "question_title": "嵌入式操作系统通常分为实时和非实时两类，（）不属于非实时嵌入式操作系统。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523244,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "VxWorks",
        "iOS",
        "Android",
        "WinCE"
      ]
    },
    "crawl_time": 1753176892.7599094
  },
  {
    "section_id": "9447",
    "section_name": "嵌入式系统架构设计理论与实践（第二版） - 嵌入式系统概述",
    "question_id": 523246,
    "question_title": "芯片工作温度范围-45℃～85℃，属于（）级别。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "军用级",
      "民用级",
      "工业级",
      "通用级"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 523246,
      "question_title": "芯片工作温度范围-45℃～85℃，属于（）级别。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523246,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "军用级",
        "民用级",
        "工业级",
        "通用级"
      ]
    },
    "crawl_time": 1753176892.7599094
  },
  {
    "section_id": "9447",
    "section_name": "嵌入式系统架构设计理论与实践（第二版） - 嵌入式系统概述",
    "question_id": 356282,
    "question_title": "<p>【问题2】(8分)</p><p>张工针对分布式综合化电子系统的架构特征，给出了初步设计方案，指出每个节点的故障监测与诊断器主要负责监控系统中所有的故障信息，并将故障信息进行综合分析判断，使用故障诊断器分析出故障原因，给出解决方案和措施。系统可以给模块的每个处理机器核配置核状态监控器、给每个分区配置分区状态监控器、给每个模块配置模块状态监控器、给系统配置系统状态监控器，如图3-1所示。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221122/1669110196365238.png\" title=\"1669110196365238.png\" alt=\"image.png\"/><br/><p>图3-1系统故障检测和诊断原理</p><p>请根据下面给出的分布式综合化电子系统可使产生的故障(a)-(h)，判断这些故障分别属于哪类监控器检测的范围，完善表3-1的(1)一(8)的空白。</p><p>(a)应用程序除零</p><p>(b)看门狗故障</p><p>(c)任务超时</p><p>(d)网络诊断故障</p><p>(e)BIT检测故障</p><p>(f)分区堆栈溢出</p><p>(g)操作系统异常</p><p>(h)模块掉电</p><p>表3-1故障分类</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221122/1669110219212996.png\" title=\"1669110219212996.png\" alt=\"image.png\"/><br/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>(1)a (2)b (3)f (4)c (5)e (6)h (7)d (8)g</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 356282,
      "question_title": "<p>【问题2】(8分)</p><p>张工针对分布式综合化电子系统的架构特征，给出了初步设计方案，指出每个节点的故障监测与诊断器主要负责监控系统中所有的故障信息，并将故障信息进行综合分析判断，使用故障诊断器分析出故障原因，给出解决方案和措施。系统可以给模块的每个处理机器核配置核状态监控器、给每个分区配置分区状态监控器、给每个模块配置模块状态监控器、给系统配置系统状态监控器，如图3-1所示。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221122/1669110196365238.png\" title=\"1669110196365238.png\" alt=\"image.png\"/><br/><p>图3-1系统故障检测和诊断原理</p><p>请根据下面给出的分布式综合化电子系统可使产生的故障(a)-(h)，判断这些故障分别属于哪类监控器检测的范围，完善表3-1的(1)一(8)的空白。</p><p>(a)应用程序除零</p><p>(b)看门狗故障</p><p>(c)任务超时</p><p>(d)网络诊断故障</p><p>(e)BIT检测故障</p><p>(f)分区堆栈溢出</p><p>(g)操作系统异常</p><p>(h)模块掉电</p><p>表3-1故障分类</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20221122/1669110219212996.png\" title=\"1669110219212996.png\" alt=\"image.png\"/><br/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 356280,
      "score_rule": "",
      "material_text": "<p>试题三（25分）：</p><p>阅读以下关于嵌入式系统故障检测和诊断的相关描述，在答题纸上回答问题1至问题3</p><p>【说明】</p><p>系统的故障检测和诊断是宇航系统提高装备可靠性的主要技术之一，随着装备信息化的发展，分布式架构下的资源配置越来越多、资源布局也越来越分散，这对系统的故障检测和诊断方法提出了新的要求，为了适应宇航装备的分布式综合化电子系统的发展，解决由于系统资源部署的分散性，造成系统状态的综合和监控困难的问题，公司领导安排张工进行研究。张工经过分析、调研提出了针对分布式综合化电子系统架构的故障检测和诊断的方案。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>(1)a (2)b (3)f (4)c (5)e (6)h (7)d (8)g</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176892.7599094
  },
  {
    "section_id": "9447",
    "section_name": "嵌入式系统架构设计理论与实践（第二版） - 嵌入式系统概述",
    "question_id": 373733,
    "question_title": "<p>【问题1】（5分）</p><p>王工拟采用的 ROS 具有分布式进程框架，以点对点设计以及服务和节点管理器方式， 使得执行程序可以各自独立地设计，松散地、实时地组合起来。这些进程可以按照功能包和功能包集的方式分组，因而可以容易地分享和发布。请用 400 字以内文字说明 ROS 与嵌入式实时操作系统的共同点，以及在实时性和任务通信方式两个方面的差异。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>共同点如下：</p><p>（1）系统专用型强</p><p>（2）系统资源有限</p><p>（3）系统都采用嵌入式微型处理器</p><p>（4）软硬件依赖性强</p><p>差异：</p><p>实时性：ROS弱于嵌入式实时操作系统</p><p>通信方式：ROS通信方式丰富，嵌入式实时操作系统通信方式单一。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 373733,
      "question_title": "<p>【问题1】（5分）</p><p>王工拟采用的 ROS 具有分布式进程框架，以点对点设计以及服务和节点管理器方式， 使得执行程序可以各自独立地设计，松散地、实时地组合起来。这些进程可以按照功能包和功能包集的方式分组，因而可以容易地分享和发布。请用 400 字以内文字说明 ROS 与嵌入式实时操作系统的共同点，以及在实时性和任务通信方式两个方面的差异。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 373732,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三（25分）</p><p>阅读以下关于机器人操作系统架构的描述，回答问题 1 至问题 3</p><p>【说明】</p><p>随着人工智能技术的发展，工业机器人已成为当前工业界的热点研究对象。某宇航设备公司为了扩大业务范围，决策层研究决定准备开展工业机器人研制新业务。公司将论证工作交给了软件架构师王工，王工经过分析和调研，从机器人市场现状、领域需求、 组成及关键技术和风险分析等方面开展了综合论证。论证报告指出:首先，为了保障本公司机器人研制的持续性，应根据领域需求选择一种适应的设计架构:其次，为了规避风险，公司的研制工作不能从零开始，应该采用国际开源社区所提供机器人操作系统 (Robot Operating System ，ROS)作为机器人开发的基本平台。</p><p>在讨论会上，架构师李工提出不同意见，他认为公司针对宇航领域已开发了某款嵌入式实时操作系统，且被多种宇航装备使用，可靠性较高。因此应该采用现有架构体系作为机器人的开发平台。会上王工说明了机器人操作系统与该款操作系统的差别，要沿用需要进行改造，技入较大。经过激烈讨论，公司领导同意了王工采用 ROS 的意见。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>共同点如下：</p><p>（1）系统专用型强</p><p>（2）系统资源有限</p><p>（3）系统都采用嵌入式微型处理器</p><p>（4）软硬件依赖性强</p><p>差异：</p><p>实时性：ROS弱于嵌入式实时操作系统</p><p>通信方式：ROS通信方式丰富，嵌入式实时操作系统通信方式单一。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176892.7599094
  },
  {
    "section_id": "9448",
    "section_name": "嵌入式系统架构设计理论与实践（第二版） - 嵌入式系统软件架构原理与特征",
    "question_id": 208478,
    "question_title": "在嵌入式系统设计中，用来进行CPU调试的常用接口是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " PCI接口 ",
      " USB接口 ",
      " 网络接口 ",
      " JTAG接口 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 208478,
      "question_title": "在嵌入式系统设计中，用来进行CPU调试的常用接口是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208478,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " PCI接口 ",
        " USB接口 ",
        " 网络接口 ",
        " JTAG接口 "
      ]
    },
    "crawl_time": 1753176894.0637047
  },
  {
    "section_id": "9448",
    "section_name": "嵌入式系统架构设计理论与实践（第二版） - 嵌入式系统软件架构原理与特征",
    "question_id": 208479,
    "question_title": "<p>看门狗(Watch Dog)是嵌入式系统中一种常用的保证系统可靠性的技术，（ ）会产生看门狗中断。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 软件喂狗 ",
      " 处理器温度过高 ",
      " 外部中断 ",
      " 看门狗定时器超时 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 208479,
      "question_title": "<p>看门狗(Watch Dog)是嵌入式系统中一种常用的保证系统可靠性的技术，（ ）会产生看门狗中断。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208479,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 软件喂狗 ",
        " 处理器温度过高 ",
        " 外部中断 ",
        " 看门狗定时器超时 "
      ]
    },
    "crawl_time": 1753176894.0637047
  },
  {
    "section_id": "9448",
    "section_name": "嵌入式系统架构设计理论与实践（第二版） - 嵌入式系统软件架构原理与特征",
    "question_id": 523289,
    "question_title": "在典型强实时调度算法中，（）算法是根据任务的紧急程度确定任务的优先级。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "Earliest Deadline First",
      "First In First Out Scheduling",
      "Least Laxity First",
      "Rate Monotonic Scheduling"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 523289,
      "question_title": "在典型强实时调度算法中，（）算法是根据任务的紧急程度确定任务的优先级。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523289,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "Earliest Deadline First",
        "First In First Out Scheduling",
        "Least Laxity First",
        "Rate Monotonic Scheduling"
      ]
    },
    "crawl_time": 1753176894.0637047
  },
  {
    "section_id": "9448",
    "section_name": "嵌入式系统架构设计理论与实践（第二版） - 嵌入式系统软件架构原理与特征",
    "question_id": 54357,
    "question_title": "<p>阅读以下关于嵌入式软件体系架构的叙述，在答题纸上回答问题1至问题3。<br/>某公司承担了一项宇航嵌入式设备的研制任务。本项目除对硬件设备环境有很高的要求外，还要求支持以下功能：<br/>（1）设备由多个处理机模块组成，需要时外场可快速更换（即LRM结构）；<br/>（2）应用软件应与硬件无关，便于软硬件的升级；<br/>（3）由于宇航嵌入式设备中要支持不同功能，系统应支持完成不同功能任务间的数据隔离；<br/>（4）宇航设备可靠性要求高，系统要有故障处理能力。<br/>公司在接到此项任务后，进行了反复论证，提出三层栈（TLS）软件总体架构，如图3-1所示，并将软件设计工作交给了李工，要求其在三周内完成软件总体设计工作，给出总体设计方案。<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181012/1539335134863618.jpg\" title=\"1539335134863618.jpg\" alt=\"2.jpg\"/><br/>【问题1】（8分）<br/>用150字以内的文字，说明公司制定的TLS软件架构的层次特点，并针对上述功能需求（1）~（4），说明架构中各层内涵。<br/>【问题2】（10分）<br/>在TLS软件架构的基础上，关于选择哪种类型的嵌入式操作系统问题，李工与总工程师发生了严重分歧。李工认为，宇航系统是实时系统，操作系统的处理时间越快越好，隔离意味着以时间作代价，没有必要，建议选择类似于VxWorks5.5的操作系统；总工程师认为，应用软件间隔离是宇航系统安全性要求，宇航系统在选择操作系统时必须考虑这一点，建议选择类似于Linux的操作系统。<br/>请说明两种操作系统的主要差异，完成表3-1中的空白部分，并针对本任务要求，用200字以内的文字说明你选择操作系统的类型和理由。<br/>表3-1 两种操作系统的主要差异<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181012/1539335119371041.jpg\" title=\"1539335119371041.jpg\" alt=\"1.jpg\"/><br/>【问题3】（7分）<br/>故障处理是宇航系统软件设计中极为重要的组成部分。故障处理主要包括故障监视、故障定位、故障隔离和系统容错（重组）。用150字以内的文字说明嵌入式系统中故障主要分哪几类？并分别给出两种常用的故障滤波算法和容错算法。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题1】<br/>TLS结构框架的主要特点：<br/>（1）应用软件仅与操作系统服务相关，不直接操作硬件。<br/>（2）操作系统通过模块支持原软件访问硬件，可与具体硬件无关。<br/>（3）模块支持层将硬件抽象成标准操作。<br/>（4）通过三层栈的划分可实现硬件的快速更改与升级，应用软件的升级不会引起硬件的变更。<br/>TLS结构框架的各层内涵是：<br/>（1）应用层主要完成宇航设备的具体工作，由多个功能任务组成，各功能任务间的隔离由操作系统层实现。<br/>（2）操作系统层实现应用软件与硬件的隔离，为应用软件提供更加丰富的计算机资源服务。操作系统为应用软件提供标准的API接口（如POSIX），确保了应用软件的可升级性。<br/>（3）模块支持层为操作系统管理硬件资源提供统一管理方法，用一种抽象的标准接口实现软件与硬件的无关性，达到硬件的升级要求，便于硬件的外场快速更换。<br/>【问题2】<br/>两种操作系统的差异见下表。<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181012/1539335233145029.jpg\" title=\"1539335233145029.jpg\" alt=\"1.jpg\"/><br/>选择类似于Linux的嵌入式操作系统。理由如下：<br/>（1）Linux操作系统是一种安全性较强的操作系统。内核工作在系统态，应用软件工作在用户态，可以有效防止应用软件对操作系统的破坏。<br/>（2）Linux操作系统调度的最小单位是线程，线程归属于进程，进程具有自己独立的资源。进程通过存储器管理部件（MMU）实现多功能应用间隔离。<br/>（3）嵌入式Linux操作系统支持硬件抽象，可有效实现TLS结构，并将硬件抽象与操作系统分离，可方便实现硬件的外场快速更换。<br/>【问题3】<br/>（1）嵌入式系统中故障主要分为：<br/>① 硬件故障：如CPU、存储器和定时器等；<br/>② 应用软件故障：如数值越界、异常和超时等；<br/>③ 操作系统故障：如越权访问、死锁和资源枯竭等。<br/>（2）滤波算法：<br/>① 门限算法<br/>② 递减算法<br/>③ 递增算法<br/>④ 周期滤波算法<br/>（3）容错算法：<br/>① N+1备份<br/>② 冷备<br/>③ 温备<br/>④ 热备<br/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 54357,
      "question_title": "<p>阅读以下关于嵌入式软件体系架构的叙述，在答题纸上回答问题1至问题3。<br/>某公司承担了一项宇航嵌入式设备的研制任务。本项目除对硬件设备环境有很高的要求外，还要求支持以下功能：<br/>（1）设备由多个处理机模块组成，需要时外场可快速更换（即LRM结构）；<br/>（2）应用软件应与硬件无关，便于软硬件的升级；<br/>（3）由于宇航嵌入式设备中要支持不同功能，系统应支持完成不同功能任务间的数据隔离；<br/>（4）宇航设备可靠性要求高，系统要有故障处理能力。<br/>公司在接到此项任务后，进行了反复论证，提出三层栈（TLS）软件总体架构，如图3-1所示，并将软件设计工作交给了李工，要求其在三周内完成软件总体设计工作，给出总体设计方案。<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181012/1539335134863618.jpg\" title=\"1539335134863618.jpg\" alt=\"2.jpg\"/><br/>【问题1】（8分）<br/>用150字以内的文字，说明公司制定的TLS软件架构的层次特点，并针对上述功能需求（1）~（4），说明架构中各层内涵。<br/>【问题2】（10分）<br/>在TLS软件架构的基础上，关于选择哪种类型的嵌入式操作系统问题，李工与总工程师发生了严重分歧。李工认为，宇航系统是实时系统，操作系统的处理时间越快越好，隔离意味着以时间作代价，没有必要，建议选择类似于VxWorks5.5的操作系统；总工程师认为，应用软件间隔离是宇航系统安全性要求，宇航系统在选择操作系统时必须考虑这一点，建议选择类似于Linux的操作系统。<br/>请说明两种操作系统的主要差异，完成表3-1中的空白部分，并针对本任务要求，用200字以内的文字说明你选择操作系统的类型和理由。<br/>表3-1 两种操作系统的主要差异<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181012/1539335119371041.jpg\" title=\"1539335119371041.jpg\" alt=\"1.jpg\"/><br/>【问题3】（7分）<br/>故障处理是宇航系统软件设计中极为重要的组成部分。故障处理主要包括故障监视、故障定位、故障隔离和系统容错（重组）。用150字以内的文字说明嵌入式系统中故障主要分哪几类？并分别给出两种常用的故障滤波算法和容错算法。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 54357,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题1】<br/>TLS结构框架的主要特点：<br/>（1）应用软件仅与操作系统服务相关，不直接操作硬件。<br/>（2）操作系统通过模块支持原软件访问硬件，可与具体硬件无关。<br/>（3）模块支持层将硬件抽象成标准操作。<br/>（4）通过三层栈的划分可实现硬件的快速更改与升级，应用软件的升级不会引起硬件的变更。<br/>TLS结构框架的各层内涵是：<br/>（1）应用层主要完成宇航设备的具体工作，由多个功能任务组成，各功能任务间的隔离由操作系统层实现。<br/>（2）操作系统层实现应用软件与硬件的隔离，为应用软件提供更加丰富的计算机资源服务。操作系统为应用软件提供标准的API接口（如POSIX），确保了应用软件的可升级性。<br/>（3）模块支持层为操作系统管理硬件资源提供统一管理方法，用一种抽象的标准接口实现软件与硬件的无关性，达到硬件的升级要求，便于硬件的外场快速更换。<br/>【问题2】<br/>两种操作系统的差异见下表。<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181012/1539335233145029.jpg\" title=\"1539335233145029.jpg\" alt=\"1.jpg\"/><br/>选择类似于Linux的嵌入式操作系统。理由如下：<br/>（1）Linux操作系统是一种安全性较强的操作系统。内核工作在系统态，应用软件工作在用户态，可以有效防止应用软件对操作系统的破坏。<br/>（2）Linux操作系统调度的最小单位是线程，线程归属于进程，进程具有自己独立的资源。进程通过存储器管理部件（MMU）实现多功能应用间隔离。<br/>（3）嵌入式Linux操作系统支持硬件抽象，可有效实现TLS结构，并将硬件抽象与操作系统分离，可方便实现硬件的外场快速更换。<br/>【问题3】<br/>（1）嵌入式系统中故障主要分为：<br/>① 硬件故障：如CPU、存储器和定时器等；<br/>② 应用软件故障：如数值越界、异常和超时等；<br/>③ 操作系统故障：如越权访问、死锁和资源枯竭等。<br/>（2）滤波算法：<br/>① 门限算法<br/>② 递减算法<br/>③ 递增算法<br/>④ 周期滤波算法<br/>（3）容错算法：<br/>① N+1备份<br/>② 冷备<br/>③ 温备<br/>④ 热备<br/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176894.0637047
  },
  {
    "section_id": "9448",
    "section_name": "嵌入式系统架构设计理论与实践（第二版） - 嵌入式系统软件架构原理与特征",
    "question_id": 281380,
    "question_title": "<p>[问题1]</p><p>用150字以内的文字，说明公司制定的TLS软件架构的层次特点，并针对上述功能需求(1)～(4)，说明架构中各层内涵。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "【问题一】<p>TLS结构框架的主要特点：</p><p>(1),应用软件仅与操作系统服务相关，不直接操作硬件。</p><p>(2),操作系统通过模块支持原软件访问硬件，可与具体硬件无关。</p><p>(3),模块支持层将硬件抽象成标准操作。</p><p>(4),通过三层栈的划分可实现硬件的快速更改与升级，应用软件的升级不会引起硬件的变更。</p><p>TLS结构框架的各层内涵是：</p><p>(1),应用层主要完成宇航设备的具体工作，由多个功能任务组成，各功能任务间的隔离由操作系统层实现。</p><p>(2),操作系统层实现应用软件与硬件的隔离，为应用软件提供更加丰富的计算机资源服务。操作系统为应用软件提供标准的API接口(如POSIX)，确保了应用软件的可升级性。</p><p>(3),模块支持层为操作系统管理硬件资源提供统一管理方法，用一种抽象的标准接口实现软件与硬件的无关性，达到硬件的升级要求，便于硬件的外场快速更换。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 281380,
      "question_title": "<p>[问题1]</p><p>用150字以内的文字，说明公司制定的TLS软件架构的层次特点，并针对上述功能需求(1)～(4)，说明架构中各层内涵。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 281379,
      "score_rule": "",
      "material_text": "<p>试题三（25分）&nbsp;&nbsp;</p><p>某公司承担了一项宇航嵌入式设备的研制任务。本项目除对硬件设备环境有很高的要求外，还要求支持以下功能：</p><p>(1) 设备由多个处理机模块组成，需要时外场可快速更换(即LRM结构)；</p><p>(2) 应用软件应与硬件无关，便于软硬件的升级；</p><p>(3) 由于宇航嵌入式设备中要支持不同功能，系统应支持完成不同功能任务间的数据隔离；</p><p>(4) 宇航设备可靠性要求高，系统要有故障处理能力。</p><p>公司在接到此项任务后，进行了反复论证，提出三层栈(TLS)软件总体架构，如下图所示，并将软件设计工作交给了李工，要求他在三周内完成软件总体设计工作，给出总体设计方案。<br/><img src=\"https://s2.51cto.com/images/20210419/1618801516472025.png\" title=\"1618801516472025.png\" alt=\"TLS.png\"/></p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "【问题一】<p>TLS结构框架的主要特点：</p><p>(1),应用软件仅与操作系统服务相关，不直接操作硬件。</p><p>(2),操作系统通过模块支持原软件访问硬件，可与具体硬件无关。</p><p>(3),模块支持层将硬件抽象成标准操作。</p><p>(4),通过三层栈的划分可实现硬件的快速更改与升级，应用软件的升级不会引起硬件的变更。</p><p>TLS结构框架的各层内涵是：</p><p>(1),应用层主要完成宇航设备的具体工作，由多个功能任务组成，各功能任务间的隔离由操作系统层实现。</p><p>(2),操作系统层实现应用软件与硬件的隔离，为应用软件提供更加丰富的计算机资源服务。操作系统为应用软件提供标准的API接口(如POSIX)，确保了应用软件的可升级性。</p><p>(3),模块支持层为操作系统管理硬件资源提供统一管理方法，用一种抽象的标准接口实现软件与硬件的无关性，达到硬件的升级要求，便于硬件的外场快速更换。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176894.0637047
  },
  {
    "section_id": "9448",
    "section_name": "嵌入式系统架构设计理论与实践（第二版） - 嵌入式系统软件架构原理与特征",
    "question_id": 281381,
    "question_title": "<p>[问题2]</p><p>在TLS软件架构的基础上，关于选择哪种类型的嵌入式操作系统问题，李工与总工程师发生了严重分歧。李工认为，宇航系统是实时系统，操作系统的处理时间越快越好，隔离意味着以时间作代价，没有必要，建议选择类似于VxWorks5.5的操作系统；总工程师认为，应用软件间隔离是宇航系统安全性要求，宇航系统在选择操作系统时必须考虑这一点，建议选择类似于Linux的操作系统。</p><p>请说明两种操作系统的主要差异，完成下表中的空白部分，并针对本任务要求，用200字以内的文字说明你选择操作系统的类型和理由。</p><p>两种操作系统的主要差异</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://static1.51ctocdn.cn/edu/exam/ueditor1.4.3/themes/default/images/spacer.gif\"/></p><table><tbody><tr class=\"firstRow\"><td width=\"152.33333333333334\" valign=\"top\" style=\"word-break: break-all;\"><p>两种操作系统的主要差异比较类型</p></td><td width=\"168.33333333333334\" valign=\"top\" style=\"word-break: break-all;\"><p>VxWork5.5</p></td><td width=\"120.33333333333333\" valign=\"top\" style=\"word-break: break-all;\"><p>Linux</p></td></tr><tr><td width=\"153\" valign=\"top\" style=\"word-break: break-all;\"><p>工作方式</p></td><td width=\"168.33333333333334\" valign=\"top\" style=\"word-break: break-all;\"><p>操作系统与应用程序处于同一存储空间</p></td><td width=\"120.33333333333333\" valign=\"top\" style=\"word-break: break-all;\"><p>①</p></td></tr><tr><td width=\"153\" valign=\"top\" style=\"word-break: break-all;\"><p>多任务支持</p></td><td width=\"168.33333333333334\" valign=\"top\" style=\"word-break: break-all;\"><p>多支持任务(线程)操作</p></td><td width=\"120.33333333333333\" valign=\"top\" style=\"word-break: break-all;\"><p>②</p></td></tr><tr><td width=\"153\" valign=\"top\" style=\"word-break: break-all;\"><p>实时性</p></td><td width=\"168.33333333333334\" valign=\"top\" style=\"word-break: break-all;\"><p>③</p></td><td width=\"120.33333333333333\" valign=\"top\" style=\"word-break: break-all;\"><p>实时系统</p></td></tr><tr><td width=\"153\" valign=\"top\" style=\"word-break: break-all;\"><p>安全性</p></td><td width=\"168.33333333333334\" valign=\"top\" style=\"word-break: break-all;\"><p>④</p></td><td width=\"120.33333333333333\" valign=\"top\" style=\"word-break: break-all;\"><p>⑤</p></td></tr><tr><td width=\"153\" valign=\"top\" style=\"word-break: break-all;\"><p>标准API</p></td><td width=\"168.33333333333334\" valign=\"top\" style=\"word-break: break-all;\"><p>支持</p></td><td width=\"120.33333333333333\" valign=\"top\" style=\"word-break: break-all;\">支持</td></tr></tbody></table><p><br/></p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "【问题二】<br/>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 281381,
      "question_title": "<p>[问题2]</p><p>在TLS软件架构的基础上，关于选择哪种类型的嵌入式操作系统问题，李工与总工程师发生了严重分歧。李工认为，宇航系统是实时系统，操作系统的处理时间越快越好，隔离意味着以时间作代价，没有必要，建议选择类似于VxWorks5.5的操作系统；总工程师认为，应用软件间隔离是宇航系统安全性要求，宇航系统在选择操作系统时必须考虑这一点，建议选择类似于Linux的操作系统。</p><p>请说明两种操作系统的主要差异，完成下表中的空白部分，并针对本任务要求，用200字以内的文字说明你选择操作系统的类型和理由。</p><p>两种操作系统的主要差异</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://static1.51ctocdn.cn/edu/exam/ueditor1.4.3/themes/default/images/spacer.gif\"/></p><table><tbody><tr class=\"firstRow\"><td width=\"152.33333333333334\" valign=\"top\" style=\"word-break: break-all;\"><p>两种操作系统的主要差异比较类型</p></td><td width=\"168.33333333333334\" valign=\"top\" style=\"word-break: break-all;\"><p>VxWork5.5</p></td><td width=\"120.33333333333333\" valign=\"top\" style=\"word-break: break-all;\"><p>Linux</p></td></tr><tr><td width=\"153\" valign=\"top\" style=\"word-break: break-all;\"><p>工作方式</p></td><td width=\"168.33333333333334\" valign=\"top\" style=\"word-break: break-all;\"><p>操作系统与应用程序处于同一存储空间</p></td><td width=\"120.33333333333333\" valign=\"top\" style=\"word-break: break-all;\"><p>①</p></td></tr><tr><td width=\"153\" valign=\"top\" style=\"word-break: break-all;\"><p>多任务支持</p></td><td width=\"168.33333333333334\" valign=\"top\" style=\"word-break: break-all;\"><p>多支持任务(线程)操作</p></td><td width=\"120.33333333333333\" valign=\"top\" style=\"word-break: break-all;\"><p>②</p></td></tr><tr><td width=\"153\" valign=\"top\" style=\"word-break: break-all;\"><p>实时性</p></td><td width=\"168.33333333333334\" valign=\"top\" style=\"word-break: break-all;\"><p>③</p></td><td width=\"120.33333333333333\" valign=\"top\" style=\"word-break: break-all;\"><p>实时系统</p></td></tr><tr><td width=\"153\" valign=\"top\" style=\"word-break: break-all;\"><p>安全性</p></td><td width=\"168.33333333333334\" valign=\"top\" style=\"word-break: break-all;\"><p>④</p></td><td width=\"120.33333333333333\" valign=\"top\" style=\"word-break: break-all;\"><p>⑤</p></td></tr><tr><td width=\"153\" valign=\"top\" style=\"word-break: break-all;\"><p>标准API</p></td><td width=\"168.33333333333334\" valign=\"top\" style=\"word-break: break-all;\"><p>支持</p></td><td width=\"120.33333333333333\" valign=\"top\" style=\"word-break: break-all;\">支持</td></tr></tbody></table><p><br/></p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 281379,
      "score_rule": "",
      "material_text": "<p>试题三（25分）&nbsp;&nbsp;</p><p>某公司承担了一项宇航嵌入式设备的研制任务。本项目除对硬件设备环境有很高的要求外，还要求支持以下功能：</p><p>(1) 设备由多个处理机模块组成，需要时外场可快速更换(即LRM结构)；</p><p>(2) 应用软件应与硬件无关，便于软硬件的升级；</p><p>(3) 由于宇航嵌入式设备中要支持不同功能，系统应支持完成不同功能任务间的数据隔离；</p><p>(4) 宇航设备可靠性要求高，系统要有故障处理能力。</p><p>公司在接到此项任务后，进行了反复论证，提出三层栈(TLS)软件总体架构，如下图所示，并将软件设计工作交给了李工，要求他在三周内完成软件总体设计工作，给出总体设计方案。<br/><img src=\"https://s2.51cto.com/images/20210419/1618801516472025.png\" title=\"1618801516472025.png\" alt=\"TLS.png\"/></p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "【问题二】<br/>"
      ],
      "option": null
    },
    "crawl_time": 1753176894.0637047
  },
  {
    "section_id": "9448",
    "section_name": "嵌入式系统架构设计理论与实践（第二版） - 嵌入式系统软件架构原理与特征",
    "question_id": 373734,
    "question_title": "<p>【问题2】（10分）</p><p>ROS 为应用程序问通信提供了主题(Topic) 、服务 (Service)和动作 (Action) 三种消息通信方式，每种通信方式都有其特点。请将以下给出的三类通信的主要特点填入表 3-1 中(1)-(5) 的空白处，将答案写在答题纸上。</p><p>(a) 适合用于传输传感器信息〈数据流)</p><p>(b) 能够知道是否调用成功</p><p>(c) 一对多模式</p><p>(d) 有握手信号</p><p>(e) 服务执行完会有反馈</p><p>(f) 可以监控长时间执行的进程</p><p>(g) 较复杂</p><p>(h) 可能让系统过载(数据太多)</p><p>(i) 服务执行完之前，程序会等待</p><p>(j) 建立通信较慢</p><p>(k) 可能丢失数据</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696271171951390.png\" title=\"1696271171951390.png\" alt=\"image.png\" width=\"510\" height=\"461\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【参考答案】</p><p>（1）（2）（c）（k）</p><p>（2）（4）（f）（i）</p><p>（5）（j）</p><p><br/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 373734,
      "question_title": "<p>【问题2】（10分）</p><p>ROS 为应用程序问通信提供了主题(Topic) 、服务 (Service)和动作 (Action) 三种消息通信方式，每种通信方式都有其特点。请将以下给出的三类通信的主要特点填入表 3-1 中(1)-(5) 的空白处，将答案写在答题纸上。</p><p>(a) 适合用于传输传感器信息〈数据流)</p><p>(b) 能够知道是否调用成功</p><p>(c) 一对多模式</p><p>(d) 有握手信号</p><p>(e) 服务执行完会有反馈</p><p>(f) 可以监控长时间执行的进程</p><p>(g) 较复杂</p><p>(h) 可能让系统过载(数据太多)</p><p>(i) 服务执行完之前，程序会等待</p><p>(j) 建立通信较慢</p><p>(k) 可能丢失数据</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696271171951390.png\" title=\"1696271171951390.png\" alt=\"image.png\" width=\"510\" height=\"461\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 373732,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三（25分）</p><p>阅读以下关于机器人操作系统架构的描述，回答问题 1 至问题 3</p><p>【说明】</p><p>随着人工智能技术的发展，工业机器人已成为当前工业界的热点研究对象。某宇航设备公司为了扩大业务范围，决策层研究决定准备开展工业机器人研制新业务。公司将论证工作交给了软件架构师王工，王工经过分析和调研，从机器人市场现状、领域需求、 组成及关键技术和风险分析等方面开展了综合论证。论证报告指出:首先，为了保障本公司机器人研制的持续性，应根据领域需求选择一种适应的设计架构:其次，为了规避风险，公司的研制工作不能从零开始，应该采用国际开源社区所提供机器人操作系统 (Robot Operating System ，ROS)作为机器人开发的基本平台。</p><p>在讨论会上，架构师李工提出不同意见，他认为公司针对宇航领域已开发了某款嵌入式实时操作系统，且被多种宇航装备使用，可靠性较高。因此应该采用现有架构体系作为机器人的开发平台。会上王工说明了机器人操作系统与该款操作系统的差别，要沿用需要进行改造，技入较大。经过激烈讨论，公司领导同意了王工采用 ROS 的意见。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【参考答案】</p><p>（1）（2）（c）（k）</p><p>（2）（4）（f）（i）</p><p>（5）（j）</p><p><br/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176894.0637047
  },
  {
    "section_id": "9449",
    "section_name": "嵌入式系统架构设计理论与实践（第二版） - 嵌入式系统软件架构设计方法",
    "question_id": 63601,
    "question_title": "<p>嵌入式系统设计一般要考虑低功耗， 软件设计也要考虑低功耗设计，软件低功耗设计一般采用（　）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 结构优化、编译优化和代码优化 ",
      " 软硬件协同设计、开发过程优化和环境设计优化 ",
      " 轻量级操作系统、算法优化和仿真实验 ",
      " 编译优化技术、软硬件协同设计和算法优化 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 63601,
      "question_title": "<p>嵌入式系统设计一般要考虑低功耗， 软件设计也要考虑低功耗设计，软件低功耗设计一般采用（　）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63601,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 结构优化、编译优化和代码优化 ",
        " 软硬件协同设计、开发过程优化和环境设计优化 ",
        " 轻量级操作系统、算法优化和仿真实验 ",
        " 编译优化技术、软硬件协同设计和算法优化 "
      ]
    },
    "crawl_time": 1753176895.3033304
  },
  {
    "section_id": "9450",
    "section_name": "嵌入式系统架构设计理论与实践（第二版） - 嵌入式系统软件架构案例分析",
    "question_id": 354806,
    "question_title": "<p>【51CTO学堂-学员回忆版】以下关于鸿蒙操作系统的叙述中，不正确的是(9).</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 鸿蒙操作系统整体架构采用分层的层次化设计，从下向上依次为：内核层、系统服务层、框架层和应用层 ",
      " 鸿蒙操作系统内核层采用宏内核设计，拥有更强的安全特性和低时延特点 ",
      " 鸿蒙操作系统架构采用了分布式设计理念，实现了分布式软总线、分布式设系统的虚拟化、分布式数据管理和分布式任务调度等四种分布式能力 ",
      " 架构的系统安全性主要体现在搭载 HarmonyOS 的分布式终端上，可以保证“正确的人，通过正确的设备，正确地使用数据” "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 354806,
      "question_title": "<p>【51CTO学堂-学员回忆版】以下关于鸿蒙操作系统的叙述中，不正确的是(9).</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354806,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 鸿蒙操作系统整体架构采用分层的层次化设计，从下向上依次为：内核层、系统服务层、框架层和应用层 ",
        " 鸿蒙操作系统内核层采用宏内核设计，拥有更强的安全特性和低时延特点 ",
        " 鸿蒙操作系统架构采用了分布式设计理念，实现了分布式软总线、分布式设系统的虚拟化、分布式数据管理和分布式任务调度等四种分布式能力 ",
        " 架构的系统安全性主要体现在搭载 HarmonyOS 的分布式终端上，可以保证“正确的人，通过正确的设备，正确地使用数据” "
      ]
    },
    "crawl_time": 1753176896.5669284
  },
  {
    "section_id": "9450",
    "section_name": "嵌入式系统架构设计理论与实践（第二版） - 嵌入式系统软件架构案例分析",
    "question_id": 354807,
    "question_title": "<p>【51CTO学堂-学员回忆版】GPU 目前已广泛应用于各行各业，GPU中集成了同时运行在 GHz的频率上的成干上万个core.可以通处理的你数。最新的OPU峰值性能可高达(10)以上。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 100 TFlops ",
      " 50 TFlops ",
      " 10 TFlops ",
      " 1 TFlops "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 354807,
      "question_title": "<p>【51CTO学堂-学员回忆版】GPU 目前已广泛应用于各行各业，GPU中集成了同时运行在 GHz的频率上的成干上万个core.可以通处理的你数。最新的OPU峰值性能可高达(10)以上。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 354807,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 100 TFlops ",
        " 50 TFlops ",
        " 10 TFlops ",
        " 1 TFlops "
      ]
    },
    "crawl_time": 1753176896.5669284
  },
  {
    "section_id": "9450",
    "section_name": "嵌入式系统架构设计理论与实践（第二版） - 嵌入式系统软件架构案例分析",
    "question_id": 356281,
    "question_title": "<p>【问题1】(8分)</p><p>张工提出：宇航装备的软件架构可采用四层的层次化体系结构，即模块支持层、操作系统层、分布式中间件层和功能应用层。为了有效、方便地实现分布式系统的故障检测和诊断能力，方案建议将系统的故障检测和诊断能力构建在分布式中间件内，通过使用心跳或者超时探测技术来实现故障检测器。请用300字以内的文字分别说明心跳检测和超时探测技术的基本原理及特点。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>心跳检测技术是节点每隔一个固定周期就向其他节点发送心跳信息，表示自己存活。如果其他节点在几个周期之后仍然没有收到来自此节点的心跳，就认定节点已失效，接管其资源和服务。其优点是可以快速反应，缺点是容易产生误判。为了减少误判，通常会采用多种介质冗余传输心跳信息，如串口、网络、共享磁盘等。</p><p>超时探测技术是节点主动向被探测节点发出PING信号，被探测节点则在收到PING信号后回复一个ECHO信号，表示自己的健康状态良好，还可以附加一些状态信息。如果在预定的时间之后仍然收不到ECHO信号，则判定被探测节点失效。优点是可以获得更详细的探测结果，缺点是判断的周期较长。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 356281,
      "question_title": "<p>【问题1】(8分)</p><p>张工提出：宇航装备的软件架构可采用四层的层次化体系结构，即模块支持层、操作系统层、分布式中间件层和功能应用层。为了有效、方便地实现分布式系统的故障检测和诊断能力，方案建议将系统的故障检测和诊断能力构建在分布式中间件内，通过使用心跳或者超时探测技术来实现故障检测器。请用300字以内的文字分别说明心跳检测和超时探测技术的基本原理及特点。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 356280,
      "score_rule": "",
      "material_text": "<p>试题三（25分）：</p><p>阅读以下关于嵌入式系统故障检测和诊断的相关描述，在答题纸上回答问题1至问题3</p><p>【说明】</p><p>系统的故障检测和诊断是宇航系统提高装备可靠性的主要技术之一，随着装备信息化的发展，分布式架构下的资源配置越来越多、资源布局也越来越分散，这对系统的故障检测和诊断方法提出了新的要求，为了适应宇航装备的分布式综合化电子系统的发展，解决由于系统资源部署的分散性，造成系统状态的综合和监控困难的问题，公司领导安排张工进行研究。张工经过分析、调研提出了针对分布式综合化电子系统架构的故障检测和诊断的方案。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>心跳检测技术是节点每隔一个固定周期就向其他节点发送心跳信息，表示自己存活。如果其他节点在几个周期之后仍然没有收到来自此节点的心跳，就认定节点已失效，接管其资源和服务。其优点是可以快速反应，缺点是容易产生误判。为了减少误判，通常会采用多种介质冗余传输心跳信息，如串口、网络、共享磁盘等。</p><p>超时探测技术是节点主动向被探测节点发出PING信号，被探测节点则在收到PING信号后回复一个ECHO信号，表示自己的健康状态良好，还可以附加一些状态信息。如果在预定的时间之后仍然收不到ECHO信号，则判定被探测节点失效。优点是可以获得更详细的探测结果，缺点是判断的周期较长。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176896.5669284
  },
  {
    "section_id": "9453",
    "section_name": "通信系统架构设计理论与实践（第二版） - 通信系统网络架构",
    "question_id": 54288,
    "question_title": "<p>某公司欲构建一个网络化的开放式数据存储系统，要求采用专用网络连接并管理存储设备和存储管理子系统。针对这种应用，采用（ &nbsp;）存储方式最为合适。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 内置式存储 ",
      " DAS ",
      " SAN ",
      " NAS "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 54288,
      "question_title": "<p>某公司欲构建一个网络化的开放式数据存储系统，要求采用专用网络连接并管理存储设备和存储管理子系统。针对这种应用，采用（ &nbsp;）存储方式最为合适。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54288,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 内置式存储 ",
        " DAS ",
        " SAN ",
        " NAS "
      ]
    },
    "crawl_time": 1753176897.9187071
  },
  {
    "section_id": "9453",
    "section_name": "通信系统架构设计理论与实践（第二版） - 通信系统网络架构",
    "question_id": 190849,
    "question_title": "<p>著作权中__的保护不受期限限制</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 发表权 ",
      " 发行权 ",
      " 展览权 ",
      " 署名权 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 190849,
      "question_title": "<p>著作权中__的保护不受期限限制</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 190849,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 发表权 ",
        " 发行权 ",
        " 展览权 ",
        " 署名权 "
      ]
    },
    "crawl_time": 1753176897.9187071
  },
  {
    "section_id": "9453",
    "section_name": "通信系统架构设计理论与实践（第二版） - 通信系统网络架构",
    "question_id": 281343,
    "question_title": "<p>用户界面设计的“黄金规则”不包含______。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 为用户提供更多的信息和功能 ",
      " 减少用户的记忆负担 ",
      " 保持界面一致性 ",
      " 置用户于控制之下 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 281343,
      "question_title": "<p>用户界面设计的“黄金规则”不包含______。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281343,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 为用户提供更多的信息和功能 ",
        " 减少用户的记忆负担 ",
        " 保持界面一致性 ",
        " 置用户于控制之下 "
      ]
    },
    "crawl_time": 1753176897.9187071
  },
  {
    "section_id": "9455",
    "section_name": "通信系统架构设计理论与实践（第二版） - 网络构建和设计方法",
    "question_id": 43735,
    "question_title": "<p><br/></p><p><br/></p><h3>试题四&nbsp;&nbsp;论网络安全体系设计</h3><p>&nbsp;&nbsp; &nbsp;随着社会信息化的普及，计算机网络已经在各行各业得到了广泛的应用。目前，绝大多数业务处理几乎完全依赖计算机和网络执行，各种重要数据如政府文件、工资档案、财务账目和人事档案等均依赖计算机和网络进行存储与传输。另一方面，针对计算机和网络的攻击活动日益猖獗，网络安全已经成为当前社会的主要安全问题之一。</p><p>&nbsp;&nbsp; &nbsp;在上述背景下，国家标准《信息处理系统工程开放系统互联基本参考模型——第二部分：安全体系结构》(GB/T 9387.2-1995)定义了基于OSI参考模型7层协议之上的信息安全体系，其核心内容是：为了保证异构计算机进程与进程之间远距离交换信息的安全，定义了认证服务、访问控制服务、数据机密性服务、数据完整性服务和抗抵赖性服务等5大类安全服务，以及提供这些服务的8类安全机制及相应的OSI安全管理，并根据具体系统适当配置于OSI模型的7层协议之中。</p><p>&nbsp;&nbsp; &nbsp;请围绕“网络安全体系设计”论题，依次从以下三个方面进行论述。</p><p>&nbsp;&nbsp; &nbsp;1．概要叙述你参与管理和开发的软件项目以及你在其中承担的主要工作，并详细阐述该软件系统在网络安全方面的要求。</p><p>&nbsp;&nbsp; &nbsp;2．请对GB/T 9387.2-1995中定义的5大类安全服务进行描述，阐述每类安全服务的定义和主要实现手段。</p><p>&nbsp;&nbsp; &nbsp;3．请结合项目实际，具体阐述你在项目中实现了上述5大类安全服务中的哪些服务，具体运用了哪些实现手段。<span style=\"mso-spacerun:&#39;yes&#39;;font-family:Courier;mso-fareast-font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>见解析</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43735,
      "question_title": "<p><br/></p><p><br/></p><h3>试题四&nbsp;&nbsp;论网络安全体系设计</h3><p>&nbsp;&nbsp; &nbsp;随着社会信息化的普及，计算机网络已经在各行各业得到了广泛的应用。目前，绝大多数业务处理几乎完全依赖计算机和网络执行，各种重要数据如政府文件、工资档案、财务账目和人事档案等均依赖计算机和网络进行存储与传输。另一方面，针对计算机和网络的攻击活动日益猖獗，网络安全已经成为当前社会的主要安全问题之一。</p><p>&nbsp;&nbsp; &nbsp;在上述背景下，国家标准《信息处理系统工程开放系统互联基本参考模型——第二部分：安全体系结构》(GB/T 9387.2-1995)定义了基于OSI参考模型7层协议之上的信息安全体系，其核心内容是：为了保证异构计算机进程与进程之间远距离交换信息的安全，定义了认证服务、访问控制服务、数据机密性服务、数据完整性服务和抗抵赖性服务等5大类安全服务，以及提供这些服务的8类安全机制及相应的OSI安全管理，并根据具体系统适当配置于OSI模型的7层协议之中。</p><p>&nbsp;&nbsp; &nbsp;请围绕“网络安全体系设计”论题，依次从以下三个方面进行论述。</p><p>&nbsp;&nbsp; &nbsp;1．概要叙述你参与管理和开发的软件项目以及你在其中承担的主要工作，并详细阐述该软件系统在网络安全方面的要求。</p><p>&nbsp;&nbsp; &nbsp;2．请对GB/T 9387.2-1995中定义的5大类安全服务进行描述，阐述每类安全服务的定义和主要实现手段。</p><p>&nbsp;&nbsp; &nbsp;3．请结合项目实际，具体阐述你在项目中实现了上述5大类安全服务中的哪些服务，具体运用了哪些实现手段。<span style=\"mso-spacerun:&#39;yes&#39;;font-family:Courier;mso-fareast-font-family:宋体;font-size:10.5000pt;mso-font-kerning:1.0000pt;\"></span></p><p><br/></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 43735,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>见解析</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176899.099296
  },
  {
    "section_id": "9455",
    "section_name": "通信系统架构设计理论与实践（第二版） - 网络构建和设计方法",
    "question_id": 283658,
    "question_title": "【问题3】（9分）为保证各分支机构可靠、高效地向数据中心汇总业务数据，避免单点故障，对该企业总部数据中心架构设计时，应该采用哪些相关的技术?",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>包含但不限于以下内容：</p><p>①采用双链路连接Internet的备份方式。</p><p>&nbsp;&nbsp; &nbsp;②对数据中心的数据库服务器采用双机冗余热备方式(或多机集群Cluster和数据库并行处理技术等)。</p><p>&nbsp;&nbsp; &nbsp;③对存储设备采用RAID10级别(或全冗余的SAN结构，或全冗余的存储结构)等。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 283658,
      "question_title": "【问题3】（9分）为保证各分支机构可靠、高效地向数据中心汇总业务数据，避免单点故障，对该企业总部数据中心架构设计时，应该采用哪些相关的技术?",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 283655,
      "score_rule": "",
      "material_text": "<p>试题一（24分）<br/></p><p>阅读以下关于软件体系结构方面的叙述，根据要求回答下面问题。</p><p>&nbsp;[说明]</p><p>&nbsp;&nbsp; &nbsp;某大中型企业在全国各城市共有15个左右的分支机构，这些机构已经建设了相关的关系型数据库管理系统，每天负责独立地处理本区域内的业务并实时存储业务数据。PH软件公司承接了该大中型企业信息管理系统的升级改造开发任务。该软件公司的领域专家对需求进行深入分析后，得到的部分系统需求如下。</p><p>&nbsp;&nbsp; &nbsp;1、开发一个网络财务程序，使各地员工能在Internet上通过VPN技术进行财务单据报销和处理。</p><p>&nbsp;&nbsp; &nbsp;2、为了加强管理，实现对下属分支机构业务数据的异地存储备份，保证数据的安全及恢复，同时对全国业务数据进行挖掘分析，拟在该企业总部建设数据中心。</p><p>&nbsp;&nbsp; &nbsp;3、PH公司在设计该财务程序的体系结构时，开发项目组产生了以下分歧：</p><p>&nbsp;&nbsp;&nbsp;架构师许工认为应该采用客户机/服务器(C/S)架构风格，各分支机构财务部要安装一个软件客户端，通过这个客户端连接到总公司财务部主机。如果员工在外地出差，需要报销账务的，也需要安装这个客户端才能进行。</p><p>&nbsp;&nbsp; &nbsp;架构师郭工认为应该采用浏览器/服务器(B/S)架构风格，各分支机构及出差员工直接通过Windows操作系统自带的IE浏览器就可以连接到总公司的财务部主机。</p><p>在架构评估会议上，专家对这两种方案进行综合评价，最终采用了C/S和B/S相结合的混合架构风格。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>包含但不限于以下内容：</p><p>①采用双链路连接Internet的备份方式。</p><p>&nbsp;&nbsp; &nbsp;②对数据中心的数据库服务器采用双机冗余热备方式(或多机集群Cluster和数据库并行处理技术等)。</p><p>&nbsp;&nbsp; &nbsp;③对存储设备采用RAID10级别(或全冗余的SAN结构，或全冗余的存储结构)等。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176899.099296
  },
  {
    "section_id": "9460",
    "section_name": "安全架构设计理论与实践（第二版） - 系统安全体系架构规划框架",
    "question_id": 355053,
    "question_title": "【51CTO学堂-学员回忆版】完整的信息安全系统至少包含三类措施，即技术方面的安全措施、管理方面的安全措施和相应的(20)。其中，信息安全的技术措施主要有:信息加密、数字签名、身份鉴别、访问控制、网络控制技术、反病毒技术、(21)。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "用户需求",
      "政策法律",
      "市场需求",
      "领域需求"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 355053,
      "question_title": "【51CTO学堂-学员回忆版】完整的信息安全系统至少包含三类措施，即技术方面的安全措施、管理方面的安全措施和相应的(20)。其中，信息安全的技术措施主要有:信息加密、数字签名、身份鉴别、访问控制、网络控制技术、反病毒技术、(21)。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 355052,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "用户需求",
        "政策法律",
        "市场需求",
        "领域需求"
      ]
    },
    "crawl_time": 1753176900.3598082
  },
  {
    "section_id": "9460",
    "section_name": "安全架构设计理论与实践（第二版） - 系统安全体系架构规划框架",
    "question_id": 355054,
    "question_title": "【51CTO学堂-学员回忆版】完整的信息安全系统至少包含三类措施，即技术方面的安全措施、管理方面的安全措施和相应的(20)。其中，信息安全的技术措施主要有:信息加密、数字签名、身份鉴别、访问控制、网络控制技术、反病毒技术、(21)。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "数据备份和数据测试",
      "数据迁移和数据备份",
      "数据备份和灾难恢复",
      " 数据迁移和数据测试 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 355054,
      "question_title": "【51CTO学堂-学员回忆版】完整的信息安全系统至少包含三类措施，即技术方面的安全措施、管理方面的安全措施和相应的(20)。其中，信息安全的技术措施主要有:信息加密、数字签名、身份鉴别、访问控制、网络控制技术、反病毒技术、(21)。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 355052,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "数据备份和数据测试",
        "数据迁移和数据备份",
        "数据备份和灾难恢复",
        " 数据迁移和数据测试 "
      ]
    },
    "crawl_time": 1753176900.3598082
  },
  {
    "section_id": "9462",
    "section_name": "安全架构设计理论与实践（第二版） - 网络安全体系架构设计",
    "question_id": 523264,
    "question_title": "开放系统互联安全体系的五类安全服务包括（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "鉴别、访问控制、机密性、完整性、抗抵赖性",
      "认证、鉴权、机密性、完整性、可用性",
      "身份验证、授权、加密、签名、审计",
      "鉴别、授权、保密、完整、防否认"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 523264,
      "question_title": "开放系统互联安全体系的五类安全服务包括（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523264,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "鉴别、访问控制、机密性、完整性、抗抵赖性",
        "认证、鉴权、机密性、完整性、可用性",
        "身份验证、授权、加密、签名、审计",
        "鉴别、授权、保密、完整、防否认"
      ]
    },
    "crawl_time": 1753176901.530979
  },
  {
    "section_id": "9464",
    "section_name": "安全架构设计理论与实践（第二版） - 系统架构的脆弱性分析",
    "question_id": 523301,
    "question_title": "关于架构脆弱性，描述错误的是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "分层架构需要穿过多层通信，可能导致性能问题",
      "黑板风格可能没得到解，也没有合适的知识来源继续执行",
      "管道过滤器无法并发",
      "事件驱动中触发事件顺序不可控"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 523301,
      "question_title": "关于架构脆弱性，描述错误的是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523301,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "分层架构需要穿过多层通信，可能导致性能问题",
        "黑板风格可能没得到解，也没有合适的知识来源继续执行",
        "管道过滤器无法并发",
        "事件驱动中触发事件顺序不可控"
      ]
    },
    "crawl_time": 1753176902.7499454
  },
  {
    "section_id": "9468",
    "section_name": "大数据架构设计理论与实践（第二版） - 大数据处理系统架构分析",
    "question_id": 507324,
    "question_title": "基于内容的推荐是信息过滤技术的延续与发展，不属于该方法优点的是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "能推荐新的或不是非常流行的项目，没有新项目问题",
      "能为具有特殊兴趣爱好的用户进行推荐",
      "不需要其它用户的数据，与他人的行为无关",
      "能够为新用户产生推荐"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 507324,
      "question_title": "基于内容的推荐是信息过滤技术的延续与发展，不属于该方法优点的是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507324,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "能推荐新的或不是非常流行的项目，没有新项目问题",
        "能为具有特殊兴趣爱好的用户进行推荐",
        "不需要其它用户的数据，与他人的行为无关",
        "能够为新用户产生推荐"
      ]
    },
    "crawl_time": 1753176903.9438608
  },
  {
    "section_id": "9469",
    "section_name": "大数据架构设计理论与实践（第二版） - Lambda架构",
    "question_id": 373737,
    "question_title": "<p>【问题1】（9分）</p><p>请用300字以内的文字分析Lambda架构的优缺点，说明为什么要采用Lambda架构。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【参考答案】</p><p>1.Lambda架构的优点</p><p>(1)容错性好。Lambda架构为大数据系统提供了更友好的容错能力，一旦发生错误，我们可以修复算法或从头开始重新计算视图。</p><p>(2)查询灵活度高。批处理层允许针对任何数据进行临时查询。</p><p>(3)易伸缩。所有的批处理层、加速层和服务层都很容易扩展。因为它们都是完全分布式的系统，我们可以通过增加新机器来轻松地扩大规模。</p><p>(4)易扩展。添加视图是容易的，只是给主数据集添加几个新的函数。</p><p>2.Lambda架构的缺点</p><p>(1)全场景覆盖带来的编码开销。</p><p>(2)针对具体场景重新离线训练一遍益处不大。</p><p>(3)重新部署和迁移成本很高。</p><p>作为对比，Hadoop主要工作在离线批处理模式下，实时数据处理能力不足；Lambda架构则能同时处理离线和实时数据，因而在本系统中更适合采用。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 373737,
      "question_title": "<p>【问题1】（9分）</p><p>请用300字以内的文字分析Lambda架构的优缺点，说明为什么要采用Lambda架构。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 373736,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于数据库设计的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某电子商务网站为了做市场预测和商品精准推荐，决定对用户访问记录进行分析。该电子商务网站拥有海量的用户访问数据，包括用户浏览的商品详情页、搜索关键词、加入购物车、下单和支付、退货等行为。数据分析团队希望通过分析这些数据来了解用户的行为模式、购买意向和喜好，以便为市场预测和商品推荐提供支持。数据分析团队需要快速地处理这些数据，并在其中发现有价值的信息，以支持业务决策和实时推荐。</p><p>关于张工建议使用传统Hadoop框架进行分析和计算，李工则建议使用Lambda架构进行。经过沟通讨论，数据分析团队最后接受了李工的意见。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【参考答案】</p><p>1.Lambda架构的优点</p><p>(1)容错性好。Lambda架构为大数据系统提供了更友好的容错能力，一旦发生错误，我们可以修复算法或从头开始重新计算视图。</p><p>(2)查询灵活度高。批处理层允许针对任何数据进行临时查询。</p><p>(3)易伸缩。所有的批处理层、加速层和服务层都很容易扩展。因为它们都是完全分布式的系统，我们可以通过增加新机器来轻松地扩大规模。</p><p>(4)易扩展。添加视图是容易的，只是给主数据集添加几个新的函数。</p><p>2.Lambda架构的缺点</p><p>(1)全场景覆盖带来的编码开销。</p><p>(2)针对具体场景重新离线训练一遍益处不大。</p><p>(3)重新部署和迁移成本很高。</p><p>作为对比，Hadoop主要工作在离线批处理模式下，实时数据处理能力不足；Lambda架构则能同时处理离线和实时数据，因而在本系统中更适合采用。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176905.210347
  },
  {
    "section_id": "9469",
    "section_name": "大数据架构设计理论与实践（第二版） - Lambda架构",
    "question_id": 493642,
    "question_title": "<p>论文一：大数据lamda架构</p><p>1简要说明你参与开发的软件项目，以及你所承担的主要工作</p><p>2 lamada体系架构将数据流分为批处理层(Batch Layer)、加速层(Speed Layer)、服务层（Serving Layer）。简要叙述这三个层次的用途和特点</p><p>3 详细阐述你参与开发的软件项目是如何基于lamada体系架构进行大数据处理的<br/><br/></p><p>论文二 模型驱动架构设计方法及其应用</p><p>1简要说明你参与分析和开发的软件项目，以及你所承担的主要工作</p><p>2 简要阐述采用模型驱动架构思想进行软件开发的全过程和特点</p><p>3详细阐述你参与开发的软件项目是基于模型驱动架构进行分析、设计和开发的。<br/><br/></p><p>论文三 单元测试方法及其运用</p><p>1 概要叙述你参与管理和开发的软件项目，以及你所承担的主要工作</p><p>2 结合你参与管理和开发的软件项目，简要叙述单元测试中静态测试和动态测试方法的基本内容</p><p>3 结合你参与管理和开发的软件项目，具体阐述在单元测试过程中，如何确定白盒测试的覆盖标准，以及如何组织实施回归测试</p><p><br/>论文四 云上自动化运维及其应用</p><p>1简要说明你参与开发的软件项目，以及你所承担的主要工作</p><p>2概要叙述云上自动化运维(如CloudOps)的主要衡量指标</p><p>3详细描述你参与开发的项目如何实现云上自动化运维。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "无"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 493642,
      "question_title": "<p>论文一：大数据lamda架构</p><p>1简要说明你参与开发的软件项目，以及你所承担的主要工作</p><p>2 lamada体系架构将数据流分为批处理层(Batch Layer)、加速层(Speed Layer)、服务层（Serving Layer）。简要叙述这三个层次的用途和特点</p><p>3 详细阐述你参与开发的软件项目是如何基于lamada体系架构进行大数据处理的<br/><br/></p><p>论文二 模型驱动架构设计方法及其应用</p><p>1简要说明你参与分析和开发的软件项目，以及你所承担的主要工作</p><p>2 简要阐述采用模型驱动架构思想进行软件开发的全过程和特点</p><p>3详细阐述你参与开发的软件项目是基于模型驱动架构进行分析、设计和开发的。<br/><br/></p><p>论文三 单元测试方法及其运用</p><p>1 概要叙述你参与管理和开发的软件项目，以及你所承担的主要工作</p><p>2 结合你参与管理和开发的软件项目，简要叙述单元测试中静态测试和动态测试方法的基本内容</p><p>3 结合你参与管理和开发的软件项目，具体阐述在单元测试过程中，如何确定白盒测试的覆盖标准，以及如何组织实施回归测试</p><p><br/>论文四 云上自动化运维及其应用</p><p>1简要说明你参与开发的软件项目，以及你所承担的主要工作</p><p>2概要叙述云上自动化运维(如CloudOps)的主要衡量指标</p><p>3详细描述你参与开发的项目如何实现云上自动化运维。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 493642,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "无"
      ],
      "option": null
    },
    "crawl_time": 1753176905.210347
  },
  {
    "section_id": "9472",
    "section_name": "大数据架构设计理论与实践（第二版） - 大数据架构设计案例分析",
    "question_id": 309544,
    "question_title": "<p>【问题1】（12分）</p><p>分析该系统架构，从下列选项中选择对应的选项填入（1）-（6）中。</p><p>A．LVS &nbsp;B.HTTP/HTTPS &nbsp;C.DUBBO &nbsp;D.Quartz &nbsp;E.MongDB &nbsp; F. ES Client</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【参考答案】</p><p>（1）A ；（2）B；（3）C ；（4）D；（5）F；（6）E。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 309544,
      "question_title": "<p>【问题1】（12分）</p><p>分析该系统架构，从下列选项中选择对应的选项填入（1）-（6）中。</p><p>A．LVS &nbsp;B.HTTP/HTTPS &nbsp;C.DUBBO &nbsp;D.Quartz &nbsp;E.MongDB &nbsp; F. ES Client</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 309543,
      "score_rule": "",
      "material_text": "<p>试题五（共25分）</p><p>请详细阅读有关Web架构设计方面的叙述，在答题纸上回答问题1至问题3。</p><p><br/></p><p>【说明】</p><p><br/></p><p>阅读以下关于 Web 应用设计开发的描述，在答题纸上回答问题 1 至问题 3。</p><p>【说明】</p><p>某电商公司拟开发一个可以支持亿级流量的系统。公司架构师张工认为应该采用B/S技术实现系统开发。王工认为采用当前主流的微服务架构可以更好的支持高并发的场景应用。公司经过讨论分析最终采用了王工的建议。</p><p><br/></p><p>其系统的架构如下图所示的设计。</p><br/><img src=\"https://s2.51cto.com/images/20210913/1631463542133167.jpg\" title=\"1631463542133167.jpg\" alt=\"1.jpg\"/>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【参考答案】</p><p>（1）A ；（2）B；（3）C ；（4）D；（5）F；（6）E。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176906.353109
  },
  {
    "section_id": "9472",
    "section_name": "大数据架构设计理论与实践（第二版） - 大数据架构设计案例分析",
    "question_id": 371582,
    "question_title": "<p>【问题1】（10分）</p><p>针对李工提出的改进方案，从 a～j 中分别选出各技术的相关描述和对应常见支持软件填入表 5-1 中的（1）～（10）处。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230916/1694871328203993.png\" title=\"1694871328203993.png\" alt=\"image.png\" width=\"616\" height=\"228\"/><br/><p>a）保存静态文件，减少网络交换量，加速响应请求</p><p>b）可采用软件级和硬件级负载均衡实现分流和后台减压</p><p>c）文件存储系统，快速查找文件</p><p>d）FastDFS</p><p>e）HAProxy</p><p>f）JBoss</p><p>g）Hadoop Distributed File System（HDFS）</p><p>h）Apache Tomact</p><p>i）Squid</p><p>j）MongoDB</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）（b） （2）（e） （3）（a） （4）（i） （5）（c）</p><p>（6）（d） （7）（g） （8）（f） （9）（h） （10）（j）</p><p>（6）和（7）、 （8）和（9）的答案可互换。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 371582,
      "question_title": "<p>【问题1】（10分）</p><p>针对李工提出的改进方案，从 a～j 中分别选出各技术的相关描述和对应常见支持软件填入表 5-1 中的（1）～（10）处。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230916/1694871328203993.png\" title=\"1694871328203993.png\" alt=\"image.png\" width=\"616\" height=\"228\"/><br/><p>a）保存静态文件，减少网络交换量，加速响应请求</p><p>b）可采用软件级和硬件级负载均衡实现分流和后台减压</p><p>c）文件存储系统，快速查找文件</p><p>d）FastDFS</p><p>e）HAProxy</p><p>f）JBoss</p><p>g）Hadoop Distributed File System（HDFS）</p><p>h）Apache Tomact</p><p>i）Squid</p><p>j）MongoDB</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 371581,
      "score_rule": "",
      "material_text": "<p>试题五（25分）</p><p>阅读以下关于Web系统架构设计的叙述，在答题纸上回答问题 1~3。</p><p>【说明】</p><p>某公司自主研发的网络教学平台因业务扩展，导致系统访问量不断增大，现有系统访问速度缓慢，有时甚至出现系统故障瘫痪等现象。面对这一情况，公司召开项目组讨论会议，寻求该商务平台的改进方案。讨论会上，王工提出可以利用镜像站点、CDN 内容分发等方式解决并发访问量带来的问题。而李工认为，仅仅依靠上述外网加速技术不能完全解决系统现有问题，如果访问量持续增加，系统仍存在崩溃的可能。李工提出应同时结合 Web 内网加速技术优化系统改进方案，如综合应用负载均衡、缓存服务器、Web应用服务器、分布式文件系统、分布式数据库等。经过讨论，公司最终决定采用李工的思路，完成改进系统的设计方案。</p><p style=\"text-indent:32px\"><br/></p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）（b） （2）（e） （3）（a） （4）（i） （5）（c）</p><p>（6）（d） （7）（g） （8）（f） （9）（h） （10）（j）</p><p>（6）和（7）、 （8）和（9）的答案可互换。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176906.3541179
  },
  {
    "section_id": "9476",
    "section_name": "系统架构设计师论文写作要点（第二版） - 论文写作方法",
    "question_id": 488647,
    "question_title": "<p>&nbsp;论文提交注意事项：<br/><br/>1、在进行论文写作（电子版本）练习时，<span style=\"text-decoration: underline;\">建议先在word上完成并保存好，然后将其复制粘贴至以下作答框</span>；<br/><br/>2、提交论文内容时，论文篇数控制在一篇（不要一次性提交多篇）。<span style=\"text-decoration: underline;\">若提交多篇仅批阅第一篇</span>；<br/><br/>3、介于学员较多，且论文篇幅较长，讲师仔细审阅一篇论文需要十几分钟，建议在正式提交之前，请先进行自检自查，例如论文思路、结构等内容是否合理，自检通过后再进行论文提交，所以尽量准备好再提交，再耐心等候讲师批改完毕；<br/><br/>4、考虑到经常出现在一天内需要讲师进行批阅的论文高达几十篇，因此论文提交后，可能无法第一时间得到回复，讲师会尽量在48小时内进行批阅（节假日回复时间可能会顺延），敬请谅解；<br/><br/>5、请复制粘贴在答案空白处，<span style=\"text-decoration: underline;\">不要以附件形式提交，不要以附件形式提交，不要以附件形式提交</span>；<br/><br/><br/>论文提交模板（直接在以下答题框作答，不要上传附件！！！提交附件不予批改！！！）：<br/><br/>论文题目（居中&nbsp;）<br/><br/>正文<br/><br/>首行缩进两字符，区分段落<br/><br/>字数：2500字左右<br/><br/><br/>试题一：<br/>信息安全是指保护信息系统、信息资源和信息用户的安全，防止信息被窃取、篡改、破坏或丢失的一系列措施和技术。信息安全的重要性在当今数字化时代变得越来越突出，随着信息技术的快速发展，信息安全问题日益严重，已经成为社会发展和经济发展的重要因素。当前，信息安全的现状已经呈现出安全威胁日益复杂，安全防护手段相对薄弱，安全意识需要加强，信息安全标准亟待完善，网络空间安全治理需要加强几个方面的特点。信息安全面临着严峻的挑战，需要采取综合的措施来保障信息系统的安全，加强安全防护技术研究和开发，提高用户安全意识，完善信息安全标准体系，加强网络空间安全治理，维护信息安全和网络空间的和平与稳定。<br/></p><p><br/></p><p>请围绕“信息系统安全体系设计”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你参与管理和开发的软件项目以及你在其中承担的主要工作。</p><p>2.请阐述信息安全体系架构的分析和设计包含哪些方面。</p><p>3.请结合项目实际，具体阐述你在项目中设计实践，具体运用了哪些实现手段。<br/><br/><br/>试题二：论分布式设计与实现<br/><br/></p><p>分布式是指将一个系统或任务分解成多个子部分，并在多个计算机或服务器之间进行协同工作的方式。每个子部分都可以在不同的计算机节点上运行，彼此之间通过网络进行通信和协调。分布式技术在当今互联网应用中起着重要作用，例如大规模搜索引擎、社交网络和电子商务平台等。常见的分布式系统包括分布式数据库、分布式存储系统、分布式计算系统等。这些系统通过将数据、计算和功能分散到多个节点上，可以提供更高的性能、可伸缩性和容错性。分布式系统的设计和实现需要解决一系列挑战，例如节点之间的通信和同步、数据一致性的维护、负载均衡、故障恢复等。为了解决这些挑战，通常会使用一些分布式算法和协议，如一致性哈希、Paxos、Raft等。</p><p>请围绕“论分布式设计与实现”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你参与管理和开发的软件项目以及你在其中承担的主要工作。</p><p>2.请阐述你参与的项目使用了哪些分布式技术，它们的特点是什么？</p><p>3.请结合项目实际，具体阐述你在项目中分布式技术的实践，以及在实施过程中遇到的问题及解决方案。</p><p><br/></p>",
    "question_type": 15,
    "answer_type": 15,
    "option": null,
    "answer": [
      "<p>请认真查看页面最上方的评语，右侧的段落批注！<br/>范文在学习网站-资料-班内共享</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 488647,
      "question_title": "<p>&nbsp;论文提交注意事项：<br/><br/>1、在进行论文写作（电子版本）练习时，<span style=\"text-decoration: underline;\">建议先在word上完成并保存好，然后将其复制粘贴至以下作答框</span>；<br/><br/>2、提交论文内容时，论文篇数控制在一篇（不要一次性提交多篇）。<span style=\"text-decoration: underline;\">若提交多篇仅批阅第一篇</span>；<br/><br/>3、介于学员较多，且论文篇幅较长，讲师仔细审阅一篇论文需要十几分钟，建议在正式提交之前，请先进行自检自查，例如论文思路、结构等内容是否合理，自检通过后再进行论文提交，所以尽量准备好再提交，再耐心等候讲师批改完毕；<br/><br/>4、考虑到经常出现在一天内需要讲师进行批阅的论文高达几十篇，因此论文提交后，可能无法第一时间得到回复，讲师会尽量在48小时内进行批阅（节假日回复时间可能会顺延），敬请谅解；<br/><br/>5、请复制粘贴在答案空白处，<span style=\"text-decoration: underline;\">不要以附件形式提交，不要以附件形式提交，不要以附件形式提交</span>；<br/><br/><br/>论文提交模板（直接在以下答题框作答，不要上传附件！！！提交附件不予批改！！！）：<br/><br/>论文题目（居中&nbsp;）<br/><br/>正文<br/><br/>首行缩进两字符，区分段落<br/><br/>字数：2500字左右<br/><br/><br/>试题一：<br/>信息安全是指保护信息系统、信息资源和信息用户的安全，防止信息被窃取、篡改、破坏或丢失的一系列措施和技术。信息安全的重要性在当今数字化时代变得越来越突出，随着信息技术的快速发展，信息安全问题日益严重，已经成为社会发展和经济发展的重要因素。当前，信息安全的现状已经呈现出安全威胁日益复杂，安全防护手段相对薄弱，安全意识需要加强，信息安全标准亟待完善，网络空间安全治理需要加强几个方面的特点。信息安全面临着严峻的挑战，需要采取综合的措施来保障信息系统的安全，加强安全防护技术研究和开发，提高用户安全意识，完善信息安全标准体系，加强网络空间安全治理，维护信息安全和网络空间的和平与稳定。<br/></p><p><br/></p><p>请围绕“信息系统安全体系设计”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你参与管理和开发的软件项目以及你在其中承担的主要工作。</p><p>2.请阐述信息安全体系架构的分析和设计包含哪些方面。</p><p>3.请结合项目实际，具体阐述你在项目中设计实践，具体运用了哪些实现手段。<br/><br/><br/>试题二：论分布式设计与实现<br/><br/></p><p>分布式是指将一个系统或任务分解成多个子部分，并在多个计算机或服务器之间进行协同工作的方式。每个子部分都可以在不同的计算机节点上运行，彼此之间通过网络进行通信和协调。分布式技术在当今互联网应用中起着重要作用，例如大规模搜索引擎、社交网络和电子商务平台等。常见的分布式系统包括分布式数据库、分布式存储系统、分布式计算系统等。这些系统通过将数据、计算和功能分散到多个节点上，可以提供更高的性能、可伸缩性和容错性。分布式系统的设计和实现需要解决一系列挑战，例如节点之间的通信和同步、数据一致性的维护、负载均衡、故障恢复等。为了解决这些挑战，通常会使用一些分布式算法和协议，如一致性哈希、Paxos、Raft等。</p><p>请围绕“论分布式设计与实现”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你参与管理和开发的软件项目以及你在其中承担的主要工作。</p><p>2.请阐述你参与的项目使用了哪些分布式技术，它们的特点是什么？</p><p>3.请结合项目实际，具体阐述你在项目中分布式技术的实践，以及在实施过程中遇到的问题及解决方案。</p><p><br/></p>",
      "question_type": 15,
      "answer_type": 15,
      "show_type_name": "论文题",
      "new_parent_id": 488647,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>请认真查看页面最上方的评语，右侧的段落批注！<br/>范文在学习网站-资料-班内共享</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176907.5483472
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 43799,
    "question_title": "<p><br/></p><p><br/></p><p>用户提出需求并提供经费，委托软件公司开发软件。双方商定的协议(委托开发合同)中未涉及软件著作权归属，其软件著作权应由(64)享有。</p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 用户 ",
      " 用户、软件公司共同&nbsp;&nbsp;&nbsp; ",
      " 软件公司&nbsp;&nbsp;&nbsp; ",
      " 经裁决所确认的一方 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43799,
      "question_title": "<p><br/></p><p><br/></p><p>用户提出需求并提供经费，委托软件公司开发软件。双方商定的协议(委托开发合同)中未涉及软件著作权归属，其软件著作权应由(64)享有。</p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43799,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 用户 ",
        " 用户、软件公司共同&nbsp;&nbsp;&nbsp; ",
        " 软件公司&nbsp;&nbsp;&nbsp; ",
        " 经裁决所确认的一方 "
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 43800,
    "question_title": "<p><br/></p><p><br/></p><p>某摄影家创作一件摄影作品出版后，将原件出售给了某软件设计师。软件设计师不慎将原件毁坏，则该件摄影作品的著作权(65)享有。</p><p><br/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 仍然由摄影家&nbsp; ",
      " 由摄影家和软件设计师共同 ",
      " 由软件设计师&nbsp; ",
      " 由摄影家或软件设计师申请的一方 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 43800,
      "question_title": "<p><br/></p><p><br/></p><p>某摄影家创作一件摄影作品出版后，将原件出售给了某软件设计师。软件设计师不慎将原件毁坏，则该件摄影作品的著作权(65)享有。</p><p><br/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43800,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 仍然由摄影家&nbsp; ",
        " 由摄影家和软件设计师共同 ",
        " 由软件设计师&nbsp; ",
        " 由摄影家或软件设计师申请的一方 "
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 46977,
    "question_title": "<p>某人持有盗版软件，但不知道该软件是盗版的，该软件的提供者不能证明其提供的复制品有合法来源。此情况下，则该软件的（）应承担法律责任。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 持有者 ",
      " 持有者和提供者均 ",
      " 提供者 ",
      " 持有者和提供者均不 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 46977,
      "question_title": "<p>某人持有盗版软件，但不知道该软件是盗版的，该软件的提供者不能证明其提供的复制品有合法来源。此情况下，则该软件的（）应承担法律责任。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 46977,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 持有者 ",
        " 持有者和提供者均 ",
        " 提供者 ",
        " 持有者和提供者均不 "
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 49964,
    "question_title": "<p>软件著作权保护的对象不包括（ &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 源程序 ",
      " 目标程序 ",
      " 用户手册 ",
      " 处理过程 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 49964,
      "question_title": "<p>软件著作权保护的对象不包括（ &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 49964,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 源程序 ",
        " 目标程序 ",
        " 用户手册 ",
        " 处理过程 "
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 54252,
    "question_title": "<p>软件合法复制品（光盘）所有人不享有（ &nbsp;）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 软件著作权 ",
      " 必要的修改权 ",
      " 软件装机权 ",
      " 软件备份权 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 54252,
      "question_title": "<p>软件合法复制品（光盘）所有人不享有（ &nbsp;）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54252,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 软件著作权 ",
        " 必要的修改权 ",
        " 软件装机权 ",
        " 软件备份权 "
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 54255,
    "question_title": "<p>对计算机软件的法律保护不涉及（ &nbsp; ）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 知识产权法 ",
      " 著作权法 ",
      " 刑法 ",
      " 合同法 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 54255,
      "question_title": "<p>对计算机软件的法律保护不涉及（ &nbsp; ）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54255,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 知识产权法 ",
        " 著作权法 ",
        " 刑法 ",
        " 合同法 "
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 63688,
    "question_title": "<p>谭某是CZB物流公司的业务系统管理员。任职期间，谭某根据公司的业务要求开发了“报关业务系统”，并由公司使用。以下说法正确的是（　）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 报关业务系统V1.0的著作权属于谭某 ",
      " 报关业务系统V1.0的著作权属于CZB物流公司 ",
      " 报关业务系统V1.0的著作权属于谭某和CZB物流公司 ",
      " 报关业务系统V1.0的著作权不属于谭某和CZB物流公司 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 63688,
      "question_title": "<p>谭某是CZB物流公司的业务系统管理员。任职期间，谭某根据公司的业务要求开发了“报关业务系统”，并由公司使用。以下说法正确的是（　）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63688,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 报关业务系统V1.0的著作权属于谭某 ",
        " 报关业务系统V1.0的著作权属于CZB物流公司 ",
        " 报关业务系统V1.0的著作权属于谭某和CZB物流公司 ",
        " 报关业务系统V1.0的著作权不属于谭某和CZB物流公司 "
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 151247,
    "question_title": "<p>甲公司从市场上购买乙公司生产的部件,作为甲公司计算机产品的部件。丙公司已经取得该软件的发明权,并许可乙公司生产销售该软件。下列说法中正确的是（ ）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 甲公司的行为构成对丙公司权利的侵犯 ",
      " 甲公司的行为不构成对丙公司权利的侵犯 ",
      " 甲公司的行为不侵犯丙公司的权利,乙公司侵犯了丙公司的权利 ",
      " 甲公司的行为与乙公司的行为共同构成对丙公司权利的侵犯 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 151247,
      "question_title": "<p>甲公司从市场上购买乙公司生产的部件,作为甲公司计算机产品的部件。丙公司已经取得该软件的发明权,并许可乙公司生产销售该软件。下列说法中正确的是（ ）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 151247,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 甲公司的行为构成对丙公司权利的侵犯 ",
        " 甲公司的行为不构成对丙公司权利的侵犯 ",
        " 甲公司的行为不侵犯丙公司的权利,乙公司侵犯了丙公司的权利 ",
        " 甲公司的行为与乙公司的行为共同构成对丙公司权利的侵犯 "
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 159199,
    "question_title": "某公司的用户购买了一台预先安装了操作系统的PC，后经查实，该PC上的操作系统是盗版，而对此情况该用户并不知情，则（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 该用户承担部分侵权责任 ",
      " 应由其所在单位承担侵权责任 ",
      " 应由该PC的提供者承担侵权责任 ",
      " 该用户承担全部侵权责任 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 159199,
      "question_title": "某公司的用户购买了一台预先安装了操作系统的PC，后经查实，该PC上的操作系统是盗版，而对此情况该用户并不知情，则（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 159199,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 该用户承担部分侵权责任 ",
        " 应由其所在单位承担侵权责任 ",
        " 应由该PC的提供者承担侵权责任 ",
        " 该用户承担全部侵权责任 "
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 369370,
    "question_title": "M公司将其开发的某软件产品注册了商标并申请了专利，N公司利用该专利开发了同类的软件产品，由此可知，N公司侵犯了M公司的 （69） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "专利权",
      "商标权",
      "著作权",
      "商业秘密权"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 369370,
      "question_title": "M公司将其开发的某软件产品注册了商标并申请了专利，N公司利用该专利开发了同类的软件产品，由此可知，N公司侵犯了M公司的 （69） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 369370,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "专利权",
        "商标权",
        "著作权",
        "商业秘密权"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 499124,
    "question_title": "下列不属于著作权法中规定的合理使用情形的是 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "为个人学习、研究或者欣赏，使用他人已经发表的作品",
      "为介绍、评论某一作品，在作品中适当引用他人已经发表的作品",
      "未经许可，将他人作品用于商业广告",
      "为学校课堂教学，少量复制已经发表的作品供教学使用"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 499124,
      "question_title": "下列不属于著作权法中规定的合理使用情形的是 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 499124,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "为个人学习、研究或者欣赏，使用他人已经发表的作品",
        "为介绍、评论某一作品，在作品中适当引用他人已经发表的作品",
        "未经许可，将他人作品用于商业广告",
        "为学校课堂教学，少量复制已经发表的作品供教学使用"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 499125,
    "question_title": "下列属于著作权法中规定的人身权的是 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "复制权",
      "出租权",
      "发行权",
      "署名权"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 499125,
      "question_title": "下列属于著作权法中规定的人身权的是 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 499125,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "复制权",
        "出租权",
        "发行权",
        "署名权"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 499126,
    "question_title": "以下不属于《计算机软件保护条例》中定义的“软件”的是 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "美术作品",
      "计算机程序",
      "程序设计说明书",
      "用户手册"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 499126,
      "question_title": "以下不属于《计算机软件保护条例》中定义的“软件”的是 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 499126,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "美术作品",
        "计算机程序",
        "程序设计说明书",
        "用户手册"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 502546,
    "question_title": "下列关于职务作品的著作权归属描述不正确的是 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "主要是利用法人或组织的物质技术条件创作的职务作品，著作权由法人或组织享有",
      "报社、期刊社工作人员创作的职务作品，著作权由作者享有",
      "法律、行政法规规定或合同约定著作权由法人或组织享有的职务作品，著作权归法人或组织",
      "职务作品的署名权由作者享有"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 502546,
      "question_title": "下列关于职务作品的著作权归属描述不正确的是 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 502546,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "主要是利用法人或组织的物质技术条件创作的职务作品，著作权由法人或组织享有",
        "报社、期刊社工作人员创作的职务作品，著作权由作者享有",
        "法律、行政法规规定或合同约定著作权由法人或组织享有的职务作品，著作权归法人或组织",
        "职务作品的署名权由作者享有"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 502547,
    "question_title": "根据《计算机软件保护条例》，关于软件著作权的保护期以下说法正确的是 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "自然人的软件著作权保护期为50年",
      "法人或其他组织的软件著作权保护期为软件首次发表后70年",
      "自然人的软件著作权保护期为终生及其死亡后50年",
      "法人或其他组织的软件著作权保护期为软件开发完成后100年"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 502547,
      "question_title": "根据《计算机软件保护条例》，关于软件著作权的保护期以下说法正确的是 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 502547,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "自然人的软件著作权保护期为50年",
        "法人或其他组织的软件著作权保护期为软件首次发表后70年",
        "自然人的软件著作权保护期为终生及其死亡后50年",
        "法人或其他组织的软件著作权保护期为软件开发完成后100年"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 502548,
    "question_title": "根据《中华人民共和国专利法》，以下不属于发明创造的是 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "发明",
      "实用新型",
      "外观设计",
      "书法作品"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 502548,
      "question_title": "根据《中华人民共和国专利法》，以下不属于发明创造的是 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 502548,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "发明",
        "实用新型",
        "外观设计",
        "书法作品"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 503085,
    "question_title": "下列（ ）不属于专利法范畴",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "发明",
      "实用新型",
      "外观设计",
      "商标法"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 503085,
      "question_title": "下列（ ）不属于专利法范畴",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 503085,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "发明",
        "实用新型",
        "外观设计",
        "商标法"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 503086,
    "question_title": "在发明或者实用新型专利申请文件中，用于说明专利保护范围的是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "请求书",
      "说明书",
      "权利要求书",
      "申请书"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 18,
      "belong_page": 1,
      "question_id": 503086,
      "question_title": "在发明或者实用新型专利申请文件中，用于说明专利保护范围的是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 503086,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "请求书",
        "说明书",
        "权利要求书",
        "申请书"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 503598,
    "question_title": "下列哪项关于知识产权的说法不正确的是 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "知识产权具有地域性，只在授予权利的国家或地区受法律保护",
      "知识产权的对象通常是具体的、有形的物体",
      "知识产权的专有性意味着除权利人同意外，他人不得擅自使用",
      "知识产权的保护期通常是有限的"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 19,
      "belong_page": 1,
      "question_id": 503598,
      "question_title": "下列哪项关于知识产权的说法不正确的是 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 503598,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "知识产权具有地域性，只在授予权利的国家或地区受法律保护",
        "知识产权的对象通常是具体的、有形的物体",
        "知识产权的专有性意味着除权利人同意外，他人不得擅自使用",
        "知识产权的保护期通常是有限的"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 503599,
    "question_title": "根据《中华人民共和国著作权法》，以下不属于著作权的保护范围的是 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "文学作品",
      "计算机软件",
      "美术作品",
      "单纯事实消息"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 20,
      "belong_page": 1,
      "question_id": 503599,
      "question_title": "根据《中华人民共和国著作权法》，以下不属于著作权的保护范围的是 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 503599,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "文学作品",
        "计算机软件",
        "美术作品",
        "单纯事实消息"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 503600,
    "question_title": "根据《中华人民共和国商标法》，以下属于侵犯注册商标专用权的行为的是 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "未经商标注册人许可，在同一种商品上使用与其注册商标相同的商标的",
      "未经商标注册人许可，使用有注册商标的商品",
      "未经商标注册人同意，将有注册商标的商品赠与他人",
      "未经商标注册人同意，展览其注册商标"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 21,
      "belong_page": 1,
      "question_id": 503600,
      "question_title": "根据《中华人民共和国商标法》，以下属于侵犯注册商标专用权的行为的是 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 503600,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "未经商标注册人许可，在同一种商品上使用与其注册商标相同的商标的",
        "未经商标注册人许可，使用有注册商标的商品",
        "未经商标注册人同意，将有注册商标的商品赠与他人",
        "未经商标注册人同意，展览其注册商标"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 507270,
    "question_title": "<p>一项外观设计专利里面相似设计最多有（ ）个。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 10 ",
      " 6 ",
      " 8 ",
      " 5 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 22,
      "belong_page": 1,
      "question_id": 507270,
      "question_title": "<p>一项外观设计专利里面相似设计最多有（ ）个。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507270,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 10 ",
        " 6 ",
        " 8 ",
        " 5 "
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 507323,
    "question_title": "执行本单位的任务所完成的职务发明创造，包括退休、调离原单位后或者劳动、人事关系终止后（ ）内作出的，与其在原单位承担的本职工作或者原单位分配的任务有关的发明创造。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "1年",
      "6个月",
      "18个月",
      "3个月"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 23,
      "belong_page": 1,
      "question_id": 507323,
      "question_title": "执行本单位的任务所完成的职务发明创造，包括退休、调离原单位后或者劳动、人事关系终止后（ ）内作出的，与其在原单位承担的本职工作或者原单位分配的任务有关的发明创造。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507323,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "1年",
        "6个月",
        "18个月",
        "3个月"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 507338,
    "question_title": "基于对软件工作原理和结构进行研究学习，需要对软件进行安装、部署、运行，（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "不需要告知著作人，不需要向其付费",
      "需要告知著作人，不需要向其付费",
      "需要告知著作人，同意后向其付费",
      "需要告知著作人，经作者同意后可以不需要付费"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 24,
      "belong_page": 1,
      "question_id": 507338,
      "question_title": "基于对软件工作原理和结构进行研究学习，需要对软件进行安装、部署、运行，（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507338,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "不需要告知著作人，不需要向其付费",
        "需要告知著作人，不需要向其付费",
        "需要告知著作人，同意后向其付费",
        "需要告知著作人，经作者同意后可以不需要付费"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 510551,
    "question_title": "下列关于职务作品的著作权归属描述不正确的是 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "主要是利用法人或组织的物质技术条件创作的职务作品，著作权由法人或组织享有",
      "报社、期刊社工作人员创作的职务作品，著作权由作者享有",
      "法律、行政法规规定或合同约定著作权由法人或组织享有的职务作品，著作权归法人或组织",
      "职务作品的署名权由作者享有"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 25,
      "belong_page": 1,
      "question_id": 510551,
      "question_title": "下列关于职务作品的著作权归属描述不正确的是 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 510551,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "主要是利用法人或组织的物质技术条件创作的职务作品，著作权由法人或组织享有",
        "报社、期刊社工作人员创作的职务作品，著作权由作者享有",
        "法律、行政法规规定或合同约定著作权由法人或组织享有的职务作品，著作权归法人或组织",
        "职务作品的署名权由作者享有"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 510552,
    "question_title": "根据《计算机软件保护条例》，关于软件著作权的保护期以下说法正确的是 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "自然人的软件著作权保护期为50年",
      "法人或其他组织的软件著作权保护期为软件首次发表后70年",
      "自然人的软件著作权保护期为终生及其死亡后50年",
      "法人或其他组织的软件著作权保护期为软件开发完成后100年"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 26,
      "belong_page": 1,
      "question_id": 510552,
      "question_title": "根据《计算机软件保护条例》，关于软件著作权的保护期以下说法正确的是 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 510552,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "自然人的软件著作权保护期为50年",
        "法人或其他组织的软件著作权保护期为软件首次发表后70年",
        "自然人的软件著作权保护期为终生及其死亡后50年",
        "法人或其他组织的软件著作权保护期为软件开发完成后100年"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 510553,
    "question_title": "根据《中华人民共和国专利法》，以下不属于发明创造的是 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "发明",
      "实用新型",
      "外观设计",
      "书法作品"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 27,
      "belong_page": 1,
      "question_id": 510553,
      "question_title": "根据《中华人民共和国专利法》，以下不属于发明创造的是 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 510553,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "发明",
        "实用新型",
        "外观设计",
        "书法作品"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 510660,
    "question_title": "下列不属于软件著作权人的权利的是 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "发表权",
      "修改权",
      "转让权",
      "优先使用权"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 28,
      "belong_page": 1,
      "question_id": 510660,
      "question_title": "下列不属于软件著作权人的权利的是 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 510660,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "发表权",
        "修改权",
        "转让权",
        "优先使用权"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 510661,
    "question_title": "下列不属于《著作权法》规定的作品类型的是 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "文字作品",
      "口述作品",
      "实用艺术作品",
      "科学发现"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 29,
      "belong_page": 1,
      "question_id": 510661,
      "question_title": "下列不属于《著作权法》规定的作品类型的是 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 510661,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "文字作品",
        "口述作品",
        "实用艺术作品",
        "科学发现"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 510662,
    "question_title": "以下不属于不属于专利权的特征的是 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "无限续展性",
      "时间性",
      "地域性",
      "独占性"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 30,
      "belong_page": 1,
      "question_id": 510662,
      "question_title": "以下不属于不属于专利权的特征的是 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 510662,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "无限续展性",
        "时间性",
        "地域性",
        "独占性"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 512962,
    "question_title": "下列不属于软件著作权的侵权行为的是 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "未经许可，将他人软件复制并出售",
      "未经许可，将他人软件用于商业展示",
      "未经许可，对他人软件进行反向工程",
      "为了学习和研究目的，复制他人软件"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 31,
      "belong_page": 1,
      "question_id": 512962,
      "question_title": "下列不属于软件著作权的侵权行为的是 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 512962,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "未经许可，将他人软件复制并出售",
        "未经许可，将他人软件用于商业展示",
        "未经许可，对他人软件进行反向工程",
        "为了学习和研究目的，复制他人软件"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 512963,
    "question_title": "下列不属于软件著作权的保护对象的是 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "计算机程序",
      "程序设计思想",
      "程序设计说明书",
      "用户手册"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 32,
      "belong_page": 1,
      "question_id": 512963,
      "question_title": "下列不属于软件著作权的保护对象的是 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 512963,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "计算机程序",
        "程序设计思想",
        "程序设计说明书",
        "用户手册"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 512964,
    "question_title": "<p>以下不属于商标权的取得方式的是 （ ） 。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 注册取得 ",
      " 自动取得 ",
      " 继承取得 ",
      " 转让取得 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 33,
      "belong_page": 1,
      "question_id": 512964,
      "question_title": "<p>以下不属于商标权的取得方式的是 （ ） 。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 512964,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 注册取得 ",
        " 自动取得 ",
        " 继承取得 ",
        " 转让取得 "
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 513348,
    "question_title": "下列不属于著作权法中规定的合理使用情形的是 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "为个人学习、研究或者欣赏，使用他人已经发表的作品",
      "为介绍、评论某一作品，在作品中适当引用他人已经发表的作品",
      "未经许可，将他人作品用于商业广告",
      "为学校课堂教学，少量复制已经发表的作品供教学使用"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 34,
      "belong_page": 1,
      "question_id": 513348,
      "question_title": "下列不属于著作权法中规定的合理使用情形的是 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 513348,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "为个人学习、研究或者欣赏，使用他人已经发表的作品",
        "为介绍、评论某一作品，在作品中适当引用他人已经发表的作品",
        "未经许可，将他人作品用于商业广告",
        "为学校课堂教学，少量复制已经发表的作品供教学使用"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 513349,
    "question_title": "下列属于著作权法中规定的人身权的是 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "复制权",
      "出租权",
      "发行权",
      "署名权"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 35,
      "belong_page": 1,
      "question_id": 513349,
      "question_title": "下列属于著作权法中规定的人身权的是 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 513349,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "复制权",
        "出租权",
        "发行权",
        "署名权"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 513350,
    "question_title": "以下不属于《计算机软件保护条例》中定义的“软件”的是 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "美术作品",
      "计算机程序",
      "程序设计说明书",
      "用户手册"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 36,
      "belong_page": 1,
      "question_id": 513350,
      "question_title": "以下不属于《计算机软件保护条例》中定义的“软件”的是 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 513350,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "美术作品",
        "计算机程序",
        "程序设计说明书",
        "用户手册"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 523236,
    "question_title": "国家机密中，除特殊情况外，机密级保密期一般不超过（）年。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "10",
      "20",
      "30",
      "40"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 37,
      "belong_page": 1,
      "question_id": 523236,
      "question_title": "国家机密中，除特殊情况外，机密级保密期一般不超过（）年。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523236,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "10",
        "20",
        "30",
        "40"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 523277,
    "question_title": "软件著作权中决定公开权利的是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "发表权",
      "专利权&nbsp;",
      "发行权",
      "传播权"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 38,
      "belong_page": 1,
      "question_id": 523277,
      "question_title": "软件著作权中决定公开权利的是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523277,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "发表权",
        "专利权&nbsp;",
        "发行权",
        "传播权"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1047",
    "section_name": "补充知识 - 知识产权",
    "question_id": 523278,
    "question_title": "<p>申请软件著作权需要提供的鉴别材料是（）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "程序和文档",
      "程序和合同",
      "程序和数据",
      "文档和数据"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 39,
      "belong_page": 1,
      "question_id": 523278,
      "question_title": "<p>申请软件著作权需要提供的鉴别材料是（）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523278,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "程序和文档",
        "程序和合同",
        "程序和数据",
        "文档和数据"
      ]
    },
    "crawl_time": 1753176908.75263
  },
  {
    "section_id": "1046",
    "section_name": "补充知识 - 应用数学",
    "question_id": 43805,
    "question_title": "<p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/201807/99655fd93ff686925b21052a8c3521aa69bf79.png\"/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " A ",
      " B ",
      " C ",
      " D "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 43805,
      "question_title": "<p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/201807/99655fd93ff686925b21052a8c3521aa69bf79.png\"/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 43805,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " A ",
        " B ",
        " C ",
        " D "
      ]
    },
    "crawl_time": 1753176910.0051775
  },
  {
    "section_id": "1046",
    "section_name": "补充知识 - 应用数学",
    "question_id": 54328,
    "question_title": "<p>某厂需要购买生产设备生产某种产品，可以选择购买四种生产能力不同的设备，市场对该产品的需求状况有三种（需求量较大、需求量中等、需求量较小）。厂方估计四种设备在各种需求状况下的收益由下表给出，根据收益期望值最大的原则，应该购买（ ）。<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181012/1539333274352404.jpg\" title=\"1539333274352404.jpg\" alt=\"1.jpg\"/></p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 设备1 ",
      " 设备2 ",
      " 设备3 ",
      " 设备4 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 54328,
      "question_title": "<p>某厂需要购买生产设备生产某种产品，可以选择购买四种生产能力不同的设备，市场对该产品的需求状况有三种（需求量较大、需求量中等、需求量较小）。厂方估计四种设备在各种需求状况下的收益由下表给出，根据收益期望值最大的原则，应该购买（ ）。<br/><img style=\"max-width:100%;height:auto\"  src=\"http://s2.51cto.com/images/20181012/1539333274352404.jpg\" title=\"1539333274352404.jpg\" alt=\"1.jpg\"/></p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 54328,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 设备1 ",
        " 设备2 ",
        " 设备3 ",
        " 设备4 "
      ]
    },
    "crawl_time": 1753176910.0051775
  },
  {
    "section_id": "1046",
    "section_name": "补充知识 - 应用数学",
    "question_id": 63690,
    "question_title": "<p>在如下线性约束条件下：2x+3y&lt;=30；x+2y&gt;=10；x&gt;=y；x&gt;=5；y&gt;=0，目标函数2x+3y的极小值为（　）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 16.5 ",
      " 17.5 ",
      " 20 ",
      " 25 "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 63690,
      "question_title": "<p>在如下线性约束条件下：2x+3y&lt;=30；x+2y&gt;=10；x&gt;=y；x&gt;=5；y&gt;=0，目标函数2x+3y的极小值为（　）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 63690,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " 16.5 ",
        " 17.5 ",
        " 20 ",
        " 25 "
      ]
    },
    "crawl_time": 1753176910.0051775
  },
  {
    "section_id": "1046",
    "section_name": "补充知识 - 应用数学",
    "question_id": 208538,
    "question_title": "<p>1路和2路公交车都将在10分钟内均匀随机地到达同一车站，则它们相隔4分钟内到达该站的概率为（ ）。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 0.36 ",
      " 0.48 ",
      " 0.64 ",
      " 0.76 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 208538,
      "question_title": "<p>1路和2路公交车都将在10分钟内均匀随机地到达同一车站，则它们相隔4分钟内到达该站的概率为（ ）。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208538,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 0.36 ",
        " 0.48 ",
        " 0.64 ",
        " 0.76 "
      ]
    },
    "crawl_time": 1753176910.0051775
  },
  {
    "section_id": "1046",
    "section_name": "补充知识 - 应用数学",
    "question_id": 284725,
    "question_title": "<p>某工厂生产甲、乙两种产品，生产1公斤甲产品需要煤9公斤、电4度、油3公斤，生产1公斤乙产品需要煤4公斤、电5度、油10公斤。该工厂现有煤360公斤、电200度、油300公斤。已知甲产品每公斤利润为7万元，乙产品每公斤利润为12万元，为了获取最大利润应该生产甲产品 （1） 公斤，乙产品 （2） 公斤。</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "20",
      "21",
      "22",
      "23"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 284725,
      "question_title": "<p>某工厂生产甲、乙两种产品，生产1公斤甲产品需要煤9公斤、电4度、油3公斤，生产1公斤乙产品需要煤4公斤、电5度、油10公斤。该工厂现有煤360公斤、电200度、油300公斤。已知甲产品每公斤利润为7万元，乙产品每公斤利润为12万元，为了获取最大利润应该生产甲产品 （1） 公斤，乙产品 （2） 公斤。</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 284724,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "20",
        "21",
        "22",
        "23"
      ]
    },
    "crawl_time": 1753176910.0051775
  },
  {
    "section_id": "1046",
    "section_name": "补充知识 - 应用数学",
    "question_id": 371999,
    "question_title": "为近似计算XYZ三维空间内由三个圆柱，，相交部分V的体积，以下四种方案中，（69）最容易理解，最容易编程实现。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "在z＝0平面中的圆上，近似计算二重积分",
      "画出V的形状，将其分解成多个简单形状，分别计算体积后，再求和",
      "将V看作多个区域的交集，利用有关并集、差集的体积计算交集体积",
      "V位于某正立方体M内，利用M内均匀分布的随机点落在V中的比例进行计算"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 371999,
      "question_title": "为近似计算XYZ三维空间内由三个圆柱，，相交部分V的体积，以下四种方案中，（69）最容易理解，最容易编程实现。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371999,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "在z＝0平面中的圆上，近似计算二重积分",
        "画出V的形状，将其分解成多个简单形状，分别计算体积后，再求和",
        "将V看作多个区域的交集，利用有关并集、差集的体积计算交集体积",
        "V位于某正立方体M内，利用M内均匀分布的随机点落在V中的比例进行计算"
      ]
    },
    "crawl_time": 1753176910.0051775
  },
  {
    "section_id": "1046",
    "section_name": "补充知识 - 应用数学",
    "question_id": 373716,
    "question_title": "<p>某厂拥有三种资源A、B、C，生产甲、乙两种产品。生产每吨产品需要消耗的资源、可以获得的利润见下表。目前，该厂拥有资源A、资源B和资源C分別为12吨、7吨和12吨。根据上述说明，适当安排甲、乙两种产品的生产量，就能获得最大总利润（1）。如果生产计划只受资源A和C的约束，资源B很容易从市场上以每吨0.5百万元购得，则该厂宜再购买（2）资源B，以获得最大的总利润。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696270281564302.png\" title=\"1696270281564302.png\" alt=\"image.png\" width=\"454\" height=\"118\"/>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "16百万元",
      "18百万元",
      "24百万元",
      "26百万元"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 373716,
      "question_title": "<p>某厂拥有三种资源A、B、C，生产甲、乙两种产品。生产每吨产品需要消耗的资源、可以获得的利润见下表。目前，该厂拥有资源A、资源B和资源C分別为12吨、7吨和12吨。根据上述说明，适当安排甲、乙两种产品的生产量，就能获得最大总利润（1）。如果生产计划只受资源A和C的约束，资源B很容易从市场上以每吨0.5百万元购得，则该厂宜再购买（2）资源B，以获得最大的总利润。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696270281564302.png\" title=\"1696270281564302.png\" alt=\"image.png\" width=\"454\" height=\"118\"/>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373715,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "16百万元",
        "18百万元",
        "24百万元",
        "26百万元"
      ]
    },
    "crawl_time": 1753176910.0051775
  },
  {
    "section_id": "1046",
    "section_name": "补充知识 - 应用数学",
    "question_id": 376815,
    "question_title": "<p>设三个煤场A．B．C分别能供应煤11、14、10万吨，三个工厂X、Y、Z分别需要煤10、12、13万吨，从各煤场到各工厂运煤的单价（百元吨）见下表方框内的数字，只要选择最优的运输方案，总的运输成本就能降到 （1） 百万元，此时工厂X应该从煤场C供应 （2） 万吨。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240316/1710572237997455.png\" title=\"1710572237997455.png\" alt=\"image.png\" width=\"526\" height=\"144\"/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "84",
      "90",
      "124",
      "130"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 376815,
      "question_title": "<p>设三个煤场A．B．C分别能供应煤11、14、10万吨，三个工厂X、Y、Z分别需要煤10、12、13万吨，从各煤场到各工厂运煤的单价（百元吨）见下表方框内的数字，只要选择最优的运输方案，总的运输成本就能降到 （1） 百万元，此时工厂X应该从煤场C供应 （2） 万吨。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240316/1710572237997455.png\" title=\"1710572237997455.png\" alt=\"image.png\" width=\"526\" height=\"144\"/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 376814,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "84",
        "90",
        "124",
        "130"
      ]
    },
    "crawl_time": 1753176910.0051775
  },
  {
    "section_id": "1046",
    "section_name": "补充知识 - 应用数学",
    "question_id": 376816,
    "question_title": "<p>设三个煤场A．B．C分别能供应煤11、14、10万吨，三个工厂X、Y、Z分别需要煤10、12、13万吨，从各煤场到各工厂运煤的单价（百元吨）见下表方框内的数字，只要选择最优的运输方案，总的运输成本就能降到 （1） 百万元，此时工厂X应该从煤场C供应 （2） 万吨。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240316/1710572237997455.png\" title=\"1710572237997455.png\" alt=\"image.png\" width=\"526\" height=\"144\"/></p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "8",
      "9",
      "10",
      "11"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 376816,
      "question_title": "<p>设三个煤场A．B．C分别能供应煤11、14、10万吨，三个工厂X、Y、Z分别需要煤10、12、13万吨，从各煤场到各工厂运煤的单价（百元吨）见下表方框内的数字，只要选择最优的运输方案，总的运输成本就能降到 （1） 百万元，此时工厂X应该从煤场C供应 （2） 万吨。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240316/1710572237997455.png\" title=\"1710572237997455.png\" alt=\"image.png\" width=\"526\" height=\"144\"/></p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 376814,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "8",
        "9",
        "10",
        "11"
      ]
    },
    "crawl_time": 1753176910.0051775
  },
  {
    "section_id": "1046",
    "section_name": "补充知识 - 应用数学",
    "question_id": 503048,
    "question_title": "如果X和Y都是某线性规划问题的最优解，则当（ ）时，λX+μY一定也是其最优解。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "λ+μ=1",
      "λ,μ&gt;=0，λ+μ=1",
      "λ,μ&gt;=0",
      "λ,μ&gt;=0，λ+μ=2"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 503048,
      "question_title": "如果X和Y都是某线性规划问题的最优解，则当（ ）时，λX+μY一定也是其最优解。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 503048,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "λ+μ=1",
        "λ,μ&gt;=0，λ+μ=1",
        "λ,μ&gt;=0",
        "λ,μ&gt;=0，λ+μ=2"
      ]
    },
    "crawl_time": 1753176910.0051775
  },
  {
    "section_id": "1046",
    "section_name": "补充知识 - 应用数学",
    "question_id": 503628,
    "question_title": "<p>一家服装厂生产两种款式的衬衫：基础款和高级款。基础款每件需要布料1米，人工成本10元，售价为30元；高级款每件需要布料2米，人工成本15元，售价为50元。现有布料1000米，人工成本预算为8500元。不考虑布料成本，为了最大化利润，服装厂应生产的基础款衬衫数量为&nbsp;（ ） 件。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "200",
      "300",
      "400",
      "500"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 503628,
      "question_title": "<p>一家服装厂生产两种款式的衬衫：基础款和高级款。基础款每件需要布料1米，人工成本10元，售价为30元；高级款每件需要布料2米，人工成本15元，售价为50元。现有布料1000米，人工成本预算为8500元。不考虑布料成本，为了最大化利润，服装厂应生产的基础款衬衫数量为&nbsp;（ ） 件。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 503628,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "200",
        "300",
        "400",
        "500"
      ]
    },
    "crawl_time": 1753176910.0051775
  },
  {
    "section_id": "1046",
    "section_name": "补充知识 - 应用数学",
    "question_id": 507271,
    "question_title": "<p>0到1000的数字里，只有一个5的数字有（ ）个。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 242 ",
      " 225 ",
      " 243 ",
      " 224 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 507271,
      "question_title": "<p>0到1000的数字里，只有一个5的数字有（ ）个。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507271,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 242 ",
        " 225 ",
        " 243 ",
        " 224 "
      ]
    },
    "crawl_time": 1753176910.0051775
  },
  {
    "section_id": "1046",
    "section_name": "补充知识 - 应用数学",
    "question_id": 507307,
    "question_title": "<p>32.有100个人，其中45个人会打篮球，53个人会打乒乓球，55个人会踢足球，其中有28个人同时会打篮球和乒乓球，有35个人同时会乒乓球和足球，有32个人同时会篮球和足球，有20个人三种球都会，请问有多少人一种球都不会？</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 21 ",
      " 20 ",
      " 22 ",
      " 23 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 507307,
      "question_title": "<p>32.有100个人，其中45个人会打篮球，53个人会打乒乓球，55个人会踢足球，其中有28个人同时会打篮球和乒乓球，有35个人同时会乒乓球和足球，有32个人同时会篮球和足球，有20个人三种球都会，请问有多少人一种球都不会？</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507307,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 21 ",
        " 20 ",
        " 22 ",
        " 23 "
      ]
    },
    "crawl_time": 1753176910.0051775
  },
  {
    "section_id": "1046",
    "section_name": "补充知识 - 应用数学",
    "question_id": 507339,
    "question_title": "任务P1 依次执行40ms计算，60ms I/O任务，40ms 计算，任务P2 依次执行100ms计算，40ms I/O任务，40ms ，任务P2晚启动20ms，经过优化后，系统执行时间是（ ）ms。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "240",
      "230",
      "220",
      "200"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 507339,
      "question_title": "任务P1 依次执行40ms计算，60ms I/O任务，40ms 计算，任务P2 依次执行100ms计算，40ms I/O任务，40ms ，任务P2晚启动20ms，经过优化后，系统执行时间是（ ）ms。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 507339,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "240",
        "230",
        "220",
        "200"
      ]
    },
    "crawl_time": 1753176910.0051775
  },
  {
    "section_id": "1046",
    "section_name": "补充知识 - 应用数学",
    "question_id": 510554,
    "question_title": "一家服装厂生产两种款式的衬衫：基础款和高级款。基础款每件需要布料1米，人工成本10元，售价为30元；高级款每件需要布料2米，人工成本15元，售价为50元。现有布料1000米，人工成本预算为8500元。不考虑布料成本，为了最大化利润，服装厂应生产的基础款衬衫数量为 （ ） 件。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "200",
      "300",
      " 400 ",
      "500"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 510554,
      "question_title": "一家服装厂生产两种款式的衬衫：基础款和高级款。基础款每件需要布料1米，人工成本10元，售价为30元；高级款每件需要布料2米，人工成本15元，售价为50元。现有布料1000米，人工成本预算为8500元。不考虑布料成本，为了最大化利润，服装厂应生产的基础款衬衫数量为 （ ） 件。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 510554,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "200",
        "300",
        " 400 ",
        "500"
      ]
    },
    "crawl_time": 1753176910.0051775
  },
  {
    "section_id": "1046",
    "section_name": "补充知识 - 应用数学",
    "question_id": 510663,
    "question_title": "某公司面临两种决策方案：方案A的预期收益为50万元，成功概率为90%；方案B的预期收益为70万元，成功概率为60%；方案C的预期收益为60万元，但成功概率仅为30%。若公司采用期望值准则，会选择 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "方案A",
      "方案B",
      "方案C",
      "随机选择"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 510663,
      "question_title": "某公司面临两种决策方案：方案A的预期收益为50万元，成功概率为90%；方案B的预期收益为70万元，成功概率为60%；方案C的预期收益为60万元，但成功概率仅为30%。若公司采用期望值准则，会选择 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 510663,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "方案A",
        "方案B",
        "方案C",
        "随机选择"
      ]
    },
    "crawl_time": 1753176910.0051775
  },
  {
    "section_id": "1046",
    "section_name": "补充知识 - 应用数学",
    "question_id": 512965,
    "question_title": "<p>在线性规划问题中，自变量为X和Y，约束条件为X+2Y≤8，3X+Y≤9，X，Y≥0，则目标函数Z=4X+6Y的最大值为 （ ） 。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 16 ",
      " 20 ",
      " 24 ",
      " 26 "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 512965,
      "question_title": "<p>在线性规划问题中，自变量为X和Y，约束条件为X+2Y≤8，3X+Y≤9，X，Y≥0，则目标函数Z=4X+6Y的最大值为 （ ） 。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 512965,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " 16 ",
        " 20 ",
        " 24 ",
        " 26 "
      ]
    },
    "crawl_time": 1753176910.0051775
  },
  {
    "section_id": "1046",
    "section_name": "补充知识 - 应用数学",
    "question_id": 523273,
    "question_title": "某公司有100人，其中会Java语言的有45人，会C语言的有53人，会Python语言的有55人，既会Java语言也会C语言的有28人，既会C语言也会Python语言的有32人，既会Python语言也会Java语言的有35人，三种语言都会的有20，那么三种语言都不会的有（）人。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "20人",
      "22人",
      "25人",
      "30人"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 18,
      "belong_page": 1,
      "question_id": 523273,
      "question_title": "某公司有100人，其中会Java语言的有45人，会C语言的有53人，会Python语言的有55人，既会Java语言也会C语言的有28人，既会C语言也会Python语言的有32人，既会Python语言也会Java语言的有35人，三种语言都会的有20，那么三种语言都不会的有（）人。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523273,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "20人",
        "22人",
        "25人",
        "30人"
      ]
    },
    "crawl_time": 1753176910.0051775
  },
  {
    "section_id": "1046",
    "section_name": "补充知识 - 应用数学",
    "question_id": 523274,
    "question_title": "约束条件：x-1≥0，x-y≤0，x+y-4≤0，则y/x的最大值是（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "1",
      "2",
      "3",
      "4"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 19,
      "belong_page": 1,
      "question_id": 523274,
      "question_title": "约束条件：x-1≥0，x-y≤0，x+y-4≤0，则y/x的最大值是（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523274,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "1",
        "2",
        "3",
        "4"
      ]
    },
    "crawl_time": 1753176910.0051775
  },
  {
    "section_id": "1046",
    "section_name": "补充知识 - 应用数学",
    "question_id": 523294,
    "question_title": "5个对象，每个对象有2种属性取值，所有组合共有（）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "10种",
      "25种",
      "32种",
      "64种"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 20,
      "belong_page": 1,
      "question_id": 523294,
      "question_title": "5个对象，每个对象有2种属性取值，所有组合共有（）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 523294,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "10种",
        "25种",
        "32种",
        "64种"
      ]
    },
    "crawl_time": 1753176910.0051775
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 208539,
    "question_title": "A system&#39;s architecture is a representation of a system in which there is a mapping of （请作答此空） onto hardware and software components, a mapping of the （ ） onto the hardware architecture, and a concern for the human interaction with these components. That is, system architecture is concerned with a total system, including hardware, software, and humans. Software architectural structures can be divided into three major categories, depending on the broad nature of the elements they show. 1)（ ） embody decisions as a set of code or data units that have to be constructed or procured. 2)（ ） embody decisions as to how the system is to be structured as set of elements that have runtime behavior and interactions. 3)（ ）embody decisions as to how the system will relate to nonsoflware structures in its environment (such as CPUs, file systems, networks, development teams, etc.).",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " attributes ",
      " constraint ",
      " functionality ",
      " requirements "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 208539,
      "question_title": "A system&#39;s architecture is a representation of a system in which there is a mapping of （请作答此空） onto hardware and software components, a mapping of the （ ） onto the hardware architecture, and a concern for the human interaction with these components. That is, system architecture is concerned with a total system, including hardware, software, and humans. Software architectural structures can be divided into three major categories, depending on the broad nature of the elements they show. 1)（ ） embody decisions as a set of code or data units that have to be constructed or procured. 2)（ ） embody decisions as to how the system is to be structured as set of elements that have runtime behavior and interactions. 3)（ ）embody decisions as to how the system will relate to nonsoflware structures in its environment (such as CPUs, file systems, networks, development teams, etc.).",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 208539,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " attributes ",
        " constraint ",
        " functionality ",
        " requirements "
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 281196,
    "question_title": "<p>Many of the activities performed during the preliminary investigation are still being conducted in （ ）, but in much greater depth than before. During this phase, the analyst must become fully aware of the （ ） and must develop enough knowledge about the （ ） and the existing systems to enable an effective solution to be proposed and implemented. Besides the （ ） for process and data of current system, the deliverable from this phase also includes the （ ） for the proposed system.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "hardware and software specification",
      "system performance specification",
      "formal requirements definition",
      "general problem statement"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 281196,
      "question_title": "<p>Many of the activities performed during the preliminary investigation are still being conducted in （ ）, but in much greater depth than before. During this phase, the analyst must become fully aware of the （ ） and must develop enough knowledge about the （ ） and the existing systems to enable an effective solution to be proposed and implemented. Besides the （ ） for process and data of current system, the deliverable from this phase also includes the （ ） for the proposed system.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 281191,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "hardware and software specification",
        "system performance specification",
        "formal requirements definition",
        "general problem statement"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 310914,
    "question_title": "Complex software systems are typically composed of subsystems and/or （1）, some of which may themselves be complete software systems. These components must seamlessly integrate into the larger system. Architectural design addresses this challenge by determining what the components are and how they integrate and communicate with each other. The following are some considerations (factors) that influence system architecture decisions: performance, availability, security, and （2）. These requirements typically do not synchronize with each other, so （3） will be necessary. Two issues of paramount importance in architectural design are resource sharing and system control. There are four approaches to resource sharing: the Repository Model, the Client-Server Model, the Abstract Machine Model, and the （4）; and two approaches that you should be familiar with - （5） and event-based control",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "components",
      "modules",
      "classes",
      "documents"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 310914,
      "question_title": "Complex software systems are typically composed of subsystems and/or （1）, some of which may themselves be complete software systems. These components must seamlessly integrate into the larger system. Architectural design addresses this challenge by determining what the components are and how they integrate and communicate with each other. The following are some considerations (factors) that influence system architecture decisions: performance, availability, security, and （2）. These requirements typically do not synchronize with each other, so （3） will be necessary. Two issues of paramount importance in architectural design are resource sharing and system control. There are four approaches to resource sharing: the Repository Model, the Client-Server Model, the Abstract Machine Model, and the （4）; and two approaches that you should be familiar with - （5） and event-based control",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310913,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "components",
        "modules",
        "classes",
        "documents"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 310915,
    "question_title": "Complex software systems are typically composed of subsystems and/or （1）, some of which may themselves be complete software systems. These components must seamlessly integrate into the larger system. Architectural design addresses this challenge by determining what the components are and how they integrate and communicate with each other. The following are some considerations (factors) that influence system architecture decisions: performance, availability, security, and （2）. These requirements typically do not synchronize with each other, so （3） will be necessary. Two issues of paramount importance in architectural design are resource sharing and system control. There are four approaches to resource sharing: the Repository Model, the Client-Server Model, the Abstract Machine Model, and the （4）; and two approaches that you should be familiar with - （5） and event-based control",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "testability",
      "modularity",
      "maintainablity",
      "reliability"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 310915,
      "question_title": "Complex software systems are typically composed of subsystems and/or （1）, some of which may themselves be complete software systems. These components must seamlessly integrate into the larger system. Architectural design addresses this challenge by determining what the components are and how they integrate and communicate with each other. The following are some considerations (factors) that influence system architecture decisions: performance, availability, security, and （2）. These requirements typically do not synchronize with each other, so （3） will be necessary. Two issues of paramount importance in architectural design are resource sharing and system control. There are four approaches to resource sharing: the Repository Model, the Client-Server Model, the Abstract Machine Model, and the （4）; and two approaches that you should be familiar with - （5） and event-based control",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310913,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "testability",
        "modularity",
        "maintainablity",
        "reliability"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 310916,
    "question_title": "Complex software systems are typically composed of subsystems and/or （1）, some of which may themselves be complete software systems. These components must seamlessly integrate into the larger system. Architectural design addresses this challenge by determining what the components are and how they integrate and communicate with each other. The following are some considerations (factors) that influence system architecture decisions: performance, availability, security, and （2）. These requirements typically do not synchronize with each other, so （3） will be necessary. Two issues of paramount importance in architectural design are resource sharing and system control. There are four approaches to resource sharing: the Repository Model, the Client-Server Model, the Abstract Machine Model, and the （4）; and two approaches that you should be familiar with - （5） and event-based control",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "selections",
      "transactions",
      "elections",
      "trade-offs"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 310916,
      "question_title": "Complex software systems are typically composed of subsystems and/or （1）, some of which may themselves be complete software systems. These components must seamlessly integrate into the larger system. Architectural design addresses this challenge by determining what the components are and how they integrate and communicate with each other. The following are some considerations (factors) that influence system architecture decisions: performance, availability, security, and （2）. These requirements typically do not synchronize with each other, so （3） will be necessary. Two issues of paramount importance in architectural design are resource sharing and system control. There are four approaches to resource sharing: the Repository Model, the Client-Server Model, the Abstract Machine Model, and the （4）; and two approaches that you should be familiar with - （5） and event-based control",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310913,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "selections",
        "transactions",
        "elections",
        "trade-offs"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 310917,
    "question_title": "Complex software systems are typically composed of subsystems and/or （1）, some of which may themselves be complete software systems. These components must seamlessly integrate into the larger system. Architectural design addresses this challenge by determining what the components are and how they integrate and communicate with each other. The following are some considerations (factors) that influence system architecture decisions: performance, availability, security, and （2）. These requirements typically do not synchronize with each other, so （3） will be necessary. Two issues of paramount importance in architectural design are resource sharing and system control. There are four approaches to resource sharing: the Repository Model, the Client-Server Model, the Abstract Machine Model, and the （4）; and two approaches that you should be familiar with - （5） and event-based control",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "Database Model",
      "Layered Model",
      "Distributed Computing Model",
      "Component Model"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 310917,
      "question_title": "Complex software systems are typically composed of subsystems and/or （1）, some of which may themselves be complete software systems. These components must seamlessly integrate into the larger system. Architectural design addresses this challenge by determining what the components are and how they integrate and communicate with each other. The following are some considerations (factors) that influence system architecture decisions: performance, availability, security, and （2）. These requirements typically do not synchronize with each other, so （3） will be necessary. Two issues of paramount importance in architectural design are resource sharing and system control. There are four approaches to resource sharing: the Repository Model, the Client-Server Model, the Abstract Machine Model, and the （4）; and two approaches that you should be familiar with - （5） and event-based control",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310913,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "Database Model",
        "Layered Model",
        "Distributed Computing Model",
        "Component Model"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 310918,
    "question_title": "Complex software systems are typically composed of subsystems and/or （1）, some of which may themselves be complete software systems. These components must seamlessly integrate into the larger system. Architectural design addresses this challenge by determining what the components are and how they integrate and communicate with each other. The following are some considerations (factors) that influence system architecture decisions: performance, availability, security, and （2）. These requirements typically do not synchronize with each other, so （3） will be necessary. Two issues of paramount importance in architectural design are resource sharing and system control. There are four approaches to resource sharing: the Repository Model, the Client-Server Model, the Abstract Machine Model, and the （4）; and two approaches that you should be familiar with - （5） and event-based control",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "centeralized control",
      "state control",
      "electrical control",
      "distributed control"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 310918,
      "question_title": "Complex software systems are typically composed of subsystems and/or （1）, some of which may themselves be complete software systems. These components must seamlessly integrate into the larger system. Architectural design addresses this challenge by determining what the components are and how they integrate and communicate with each other. The following are some considerations (factors) that influence system architecture decisions: performance, availability, security, and （2）. These requirements typically do not synchronize with each other, so （3） will be necessary. Two issues of paramount importance in architectural design are resource sharing and system control. There are four approaches to resource sharing: the Repository Model, the Client-Server Model, the Abstract Machine Model, and the （4）; and two approaches that you should be familiar with - （5） and event-based control",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 310913,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "centeralized control",
        "state control",
        "electrical control",
        "distributed control"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 312990,
    "question_title": "System analysis is traditionally done top-down using structured analysis based on（ ）. Object-oriented analysis focuses on creation of models. The three types of theanalysis model are（ ）. There are two substages of object-oriented analysis.（ ）focuses on real-world things whose semantics the application captures. The object constructedin the requirement analysis shows the（ ）of the real-world system and organizes it intoworkable pieces.（ ）addresses the computer aspects of the application that are visible tousers. The objects are those which can be expected to vary from time to time quite rapidly.",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "functional decomposition",
      "object abstraction",
      "data inheritance",
      "information generalization"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 312990,
      "question_title": "System analysis is traditionally done top-down using structured analysis based on（ ）. Object-oriented analysis focuses on creation of models. The three types of theanalysis model are（ ）. There are two substages of object-oriented analysis.（ ）focuses on real-world things whose semantics the application captures. The object constructedin the requirement analysis shows the（ ）of the real-world system and organizes it intoworkable pieces.（ ）addresses the computer aspects of the application that are visible tousers. The objects are those which can be expected to vary from time to time quite rapidly.",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 312989,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "functional decomposition",
        "object abstraction",
        "data inheritance",
        "information generalization"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 312991,
    "question_title": "System analysis is traditionally done top-down using structured analysis based on（ ）. Object-oriented analysis focuses on creation of models. The three types of theanalysis model are（ ）. There are two substages of object-oriented analysis.（ ）focuses on real-world things whose semantics the application captures. The object constructedin the requirement analysis shows the（ ）of the real-world system and organizes it intoworkable pieces.（ ）addresses the computer aspects of the application that are visible tousers. The objects are those which can be expected to vary from time to time quite rapidly.",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "function model，class model and state model",
      "class model，interaction model and state model",
      "class model，interaction model and sequence model",
      "function model，interaction model and state model"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 312991,
      "question_title": "System analysis is traditionally done top-down using structured analysis based on（ ）. Object-oriented analysis focuses on creation of models. The three types of theanalysis model are（ ）. There are two substages of object-oriented analysis.（ ）focuses on real-world things whose semantics the application captures. The object constructedin the requirement analysis shows the（ ）of the real-world system and organizes it intoworkable pieces.（ ）addresses the computer aspects of the application that are visible tousers. The objects are those which can be expected to vary from time to time quite rapidly.",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 312989,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "function model，class model and state model",
        "class model，interaction model and state model",
        "class model，interaction model and sequence model",
        "function model，interaction model and state model"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 312992,
    "question_title": "System analysis is traditionally done top-down using structured analysis based on（ ）. Object-oriented analysis focuses on creation of models. The three types of theanalysis model are（ ）. There are two substages of object-oriented analysis.（ ）focuses on real-world things whose semantics the application captures. The object constructedin the requirement analysis shows the（ ）of the real-world system and organizes it intoworkable pieces.（ ）addresses the computer aspects of the application that are visible tousers. The objects are those which can be expected to vary from time to time quite rapidly.",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      " Static analysis ",
      " Semantic analysis ",
      " Scope analysis ",
      " Domain analysis "
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 312992,
      "question_title": "System analysis is traditionally done top-down using structured analysis based on（ ）. Object-oriented analysis focuses on creation of models. The three types of theanalysis model are（ ）. There are two substages of object-oriented analysis.（ ）focuses on real-world things whose semantics the application captures. The object constructedin the requirement analysis shows the（ ）of the real-world system and organizes it intoworkable pieces.（ ）addresses the computer aspects of the application that are visible tousers. The objects are those which can be expected to vary from time to time quite rapidly.",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 312989,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        " Static analysis ",
        " Semantic analysis ",
        " Scope analysis ",
        " Domain analysis "
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 312993,
    "question_title": "System analysis is traditionally done top-down using structured analysis based on（ ）. Object-oriented analysis focuses on creation of models. The three types of theanalysis model are（ ）. There are two substages of object-oriented analysis.（ ）focuses on real-world things whose semantics the application captures. The object constructedin the requirement analysis shows the（ ）of the real-world system and organizes it intoworkable pieces.（ ）addresses the computer aspects of the application that are visible tousers. The objects are those which can be expected to vary from time to time quite rapidly.",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "static structure",
      "system components",
      "data flows",
      "program procedures"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 312993,
      "question_title": "System analysis is traditionally done top-down using structured analysis based on（ ）. Object-oriented analysis focuses on creation of models. The three types of theanalysis model are（ ）. There are two substages of object-oriented analysis.（ ）focuses on real-world things whose semantics the application captures. The object constructedin the requirement analysis shows the（ ）of the real-world system and organizes it intoworkable pieces.（ ）addresses the computer aspects of the application that are visible tousers. The objects are those which can be expected to vary from time to time quite rapidly.",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 312989,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "static structure",
        "system components",
        "data flows",
        "program procedures"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 312994,
    "question_title": "System analysis is traditionally done top-down using structured analysis based on（ ）. Object-oriented analysis focuses on creation of models. The three types of theanalysis model are（ ）. There are two substages of object-oriented analysis.（ ）focuses on real-world things whose semantics the application captures. The object constructedin the requirement analysis shows the（ ）of the real-world system and organizes it intoworkable pieces.（ ）addresses the computer aspects of the application that are visible tousers. The objects are those which can be expected to vary from time to time quite rapidly.",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "Program analysis",
      "Function requirement",
      "Application analysis",
      "Physical model"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 312994,
      "question_title": "System analysis is traditionally done top-down using structured analysis based on（ ）. Object-oriented analysis focuses on creation of models. The three types of theanalysis model are（ ）. There are two substages of object-oriented analysis.（ ）focuses on real-world things whose semantics the application captures. The object constructedin the requirement analysis shows the（ ）of the real-world system and organizes it intoworkable pieces.（ ）addresses the computer aspects of the application that are visible tousers. The objects are those which can be expected to vary from time to time quite rapidly.",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 312989,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "Program analysis",
        "Function requirement",
        "Application analysis",
        "Physical model"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 369373,
    "question_title": "<p>The redundancy tactics, at first glance, appear to be similar to the various sparing/redundancy tactics presented in the discussion of availability. Clearly, these tactics overlap, but since the goals of safety and availability are different, the use of backup components differs. In the realm of safety, redundancy enables the system to continue operation in the case where a total shutdown or further&nbsp; （1）&nbsp; would be undesirable.</p><p>&nbsp;（2）&nbsp; is the simplest redundancy tactic, as it just involves having clones of a component. Having multiple copies of&nbsp; （3）&nbsp; components can be effective in protecting against random failures of hardware, but it cannot protect against design or implementation errors in hardware or software since there is no form of diversity embedded in this tactic.</p><p>Functional redundancy, by contrast, is intended to address the issue of&nbsp; （4）&nbsp; failures (where replicas exhibit the same fault at the same time because they share the same implementation) in hardware or software components, by implementing design diversity. This tactic attempts to deal with the systematic nature of design faults by adding diversity to redundancy. The outputs of functionally redundant components should be the same given the same input. The functional redundancy tactic is still vulnerable to specification errors, however, and of course, functional replicas will be more&nbsp; （5）&nbsp; to develop and verify.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "degradation",
      "performance",
      "upgrade",
      "operation"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 369373,
      "question_title": "<p>The redundancy tactics, at first glance, appear to be similar to the various sparing/redundancy tactics presented in the discussion of availability. Clearly, these tactics overlap, but since the goals of safety and availability are different, the use of backup components differs. In the realm of safety, redundancy enables the system to continue operation in the case where a total shutdown or further&nbsp; （1）&nbsp; would be undesirable.</p><p>&nbsp;（2）&nbsp; is the simplest redundancy tactic, as it just involves having clones of a component. Having multiple copies of&nbsp; （3）&nbsp; components can be effective in protecting against random failures of hardware, but it cannot protect against design or implementation errors in hardware or software since there is no form of diversity embedded in this tactic.</p><p>Functional redundancy, by contrast, is intended to address the issue of&nbsp; （4）&nbsp; failures (where replicas exhibit the same fault at the same time because they share the same implementation) in hardware or software components, by implementing design diversity. This tactic attempts to deal with the systematic nature of design faults by adding diversity to redundancy. The outputs of functionally redundant components should be the same given the same input. The functional redundancy tactic is still vulnerable to specification errors, however, and of course, functional replicas will be more&nbsp; （5）&nbsp; to develop and verify.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 369372,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "degradation",
        "performance",
        "upgrade",
        "operation"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 369374,
    "question_title": "<p>The redundancy tactics, at first glance, appear to be similar to the various sparing/redundancy tactics presented in the discussion of availability. Clearly, these tactics overlap, but since the goals of safety and availability are different, the use of backup components differs. In the realm of safety, redundancy enables the system to continue operation in the case where a total shutdown or further&nbsp; （1）&nbsp; would be undesirable.</p><p>&nbsp;（2）&nbsp; is the simplest redundancy tactic, as it just involves having clones of a component. Having multiple copies of&nbsp; （3）&nbsp; components can be effective in protecting against random failures of hardware, but it cannot protect against design or implementation errors in hardware or software since there is no form of diversity embedded in this tactic.</p><p>Functional redundancy, by contrast, is intended to address the issue of&nbsp; （4）&nbsp; failures (where replicas exhibit the same fault at the same time because they share the same implementation) in hardware or software components, by implementing design diversity. This tactic attempts to deal with the systematic nature of design faults by adding diversity to redundancy. The outputs of functionally redundant components should be the same given the same input. The functional redundancy tactic is still vulnerable to specification errors, however, and of course, functional replicas will be more&nbsp; （5）&nbsp; to develop and verify.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "Balance",
      "Cluster",
      "Replication",
      "Distribution"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 369374,
      "question_title": "<p>The redundancy tactics, at first glance, appear to be similar to the various sparing/redundancy tactics presented in the discussion of availability. Clearly, these tactics overlap, but since the goals of safety and availability are different, the use of backup components differs. In the realm of safety, redundancy enables the system to continue operation in the case where a total shutdown or further&nbsp; （1）&nbsp; would be undesirable.</p><p>&nbsp;（2）&nbsp; is the simplest redundancy tactic, as it just involves having clones of a component. Having multiple copies of&nbsp; （3）&nbsp; components can be effective in protecting against random failures of hardware, but it cannot protect against design or implementation errors in hardware or software since there is no form of diversity embedded in this tactic.</p><p>Functional redundancy, by contrast, is intended to address the issue of&nbsp; （4）&nbsp; failures (where replicas exhibit the same fault at the same time because they share the same implementation) in hardware or software components, by implementing design diversity. This tactic attempts to deal with the systematic nature of design faults by adding diversity to redundancy. The outputs of functionally redundant components should be the same given the same input. The functional redundancy tactic is still vulnerable to specification errors, however, and of course, functional replicas will be more&nbsp; （5）&nbsp; to develop and verify.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 369372,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "Balance",
        "Cluster",
        "Replication",
        "Distribution"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 369375,
    "question_title": "<p>The redundancy tactics, at first glance, appear to be similar to the various sparing/redundancy tactics presented in the discussion of availability. Clearly, these tactics overlap, but since the goals of safety and availability are different, the use of backup components differs. In the realm of safety, redundancy enables the system to continue operation in the case where a total shutdown or further&nbsp; （1）&nbsp; would be undesirable.</p><p>&nbsp;（2）&nbsp; is the simplest redundancy tactic, as it just involves having clones of a component. Having multiple copies of&nbsp; （3）&nbsp; components can be effective in protecting against random failures of hardware, but it cannot protect against design or implementation errors in hardware or software since there is no form of diversity embedded in this tactic.</p><p>Functional redundancy, by contrast, is intended to address the issue of&nbsp; （4）&nbsp; failures (where replicas exhibit the same fault at the same time because they share the same implementation) in hardware or software components, by implementing design diversity. This tactic attempts to deal with the systematic nature of design faults by adding diversity to redundancy. The outputs of functionally redundant components should be the same given the same input. The functional redundancy tactic is still vulnerable to specification errors, however, and of course, functional replicas will be more&nbsp; （5）&nbsp; to develop and verify.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "different",
      "identical",
      "various",
      "incompatible"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 369375,
      "question_title": "<p>The redundancy tactics, at first glance, appear to be similar to the various sparing/redundancy tactics presented in the discussion of availability. Clearly, these tactics overlap, but since the goals of safety and availability are different, the use of backup components differs. In the realm of safety, redundancy enables the system to continue operation in the case where a total shutdown or further&nbsp; （1）&nbsp; would be undesirable.</p><p>&nbsp;（2）&nbsp; is the simplest redundancy tactic, as it just involves having clones of a component. Having multiple copies of&nbsp; （3）&nbsp; components can be effective in protecting against random failures of hardware, but it cannot protect against design or implementation errors in hardware or software since there is no form of diversity embedded in this tactic.</p><p>Functional redundancy, by contrast, is intended to address the issue of&nbsp; （4）&nbsp; failures (where replicas exhibit the same fault at the same time because they share the same implementation) in hardware or software components, by implementing design diversity. This tactic attempts to deal with the systematic nature of design faults by adding diversity to redundancy. The outputs of functionally redundant components should be the same given the same input. The functional redundancy tactic is still vulnerable to specification errors, however, and of course, functional replicas will be more&nbsp; （5）&nbsp; to develop and verify.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 369372,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "different",
        "identical",
        "various",
        "incompatible"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 369376,
    "question_title": "<p>The redundancy tactics, at first glance, appear to be similar to the various sparing/redundancy tactics presented in the discussion of availability. Clearly, these tactics overlap, but since the goals of safety and availability are different, the use of backup components differs. In the realm of safety, redundancy enables the system to continue operation in the case where a total shutdown or further&nbsp; （1）&nbsp; would be undesirable.</p><p>&nbsp;（2）&nbsp; is the simplest redundancy tactic, as it just involves having clones of a component. Having multiple copies of&nbsp; （3）&nbsp; components can be effective in protecting against random failures of hardware, but it cannot protect against design or implementation errors in hardware or software since there is no form of diversity embedded in this tactic.</p><p>Functional redundancy, by contrast, is intended to address the issue of&nbsp; （4）&nbsp; failures (where replicas exhibit the same fault at the same time because they share the same implementation) in hardware or software components, by implementing design diversity. This tactic attempts to deal with the systematic nature of design faults by adding diversity to redundancy. The outputs of functionally redundant components should be the same given the same input. The functional redundancy tactic is still vulnerable to specification errors, however, and of course, functional replicas will be more&nbsp; （5）&nbsp; to develop and verify.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "same",
      "different",
      "common-mode",
      " unshared "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 369376,
      "question_title": "<p>The redundancy tactics, at first glance, appear to be similar to the various sparing/redundancy tactics presented in the discussion of availability. Clearly, these tactics overlap, but since the goals of safety and availability are different, the use of backup components differs. In the realm of safety, redundancy enables the system to continue operation in the case where a total shutdown or further&nbsp; （1）&nbsp; would be undesirable.</p><p>&nbsp;（2）&nbsp; is the simplest redundancy tactic, as it just involves having clones of a component. Having multiple copies of&nbsp; （3）&nbsp; components can be effective in protecting against random failures of hardware, but it cannot protect against design or implementation errors in hardware or software since there is no form of diversity embedded in this tactic.</p><p>Functional redundancy, by contrast, is intended to address the issue of&nbsp; （4）&nbsp; failures (where replicas exhibit the same fault at the same time because they share the same implementation) in hardware or software components, by implementing design diversity. This tactic attempts to deal with the systematic nature of design faults by adding diversity to redundancy. The outputs of functionally redundant components should be the same given the same input. The functional redundancy tactic is still vulnerable to specification errors, however, and of course, functional replicas will be more&nbsp; （5）&nbsp; to develop and verify.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 369372,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "same",
        "different",
        "common-mode",
        " unshared "
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 369377,
    "question_title": "<p>The redundancy tactics, at first glance, appear to be similar to the various sparing/redundancy tactics presented in the discussion of availability. Clearly, these tactics overlap, but since the goals of safety and availability are different, the use of backup components differs. In the realm of safety, redundancy enables the system to continue operation in the case where a total shutdown or further&nbsp; （1）&nbsp; would be undesirable.</p><p>&nbsp;（2）&nbsp; is the simplest redundancy tactic, as it just involves having clones of a component. Having multiple copies of&nbsp; （3）&nbsp; components can be effective in protecting against random failures of hardware, but it cannot protect against design or implementation errors in hardware or software since there is no form of diversity embedded in this tactic.</p><p>Functional redundancy, by contrast, is intended to address the issue of&nbsp; （4）&nbsp; failures (where replicas exhibit the same fault at the same time because they share the same implementation) in hardware or software components, by implementing design diversity. This tactic attempts to deal with the systematic nature of design faults by adding diversity to redundancy. The outputs of functionally redundant components should be the same given the same input. The functional redundancy tactic is still vulnerable to specification errors, however, and of course, functional replicas will be more&nbsp; （5）&nbsp; to develop and verify.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "cheap",
      "easy",
      "relaxed",
      "expensive"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 369377,
      "question_title": "<p>The redundancy tactics, at first glance, appear to be similar to the various sparing/redundancy tactics presented in the discussion of availability. Clearly, these tactics overlap, but since the goals of safety and availability are different, the use of backup components differs. In the realm of safety, redundancy enables the system to continue operation in the case where a total shutdown or further&nbsp; （1）&nbsp; would be undesirable.</p><p>&nbsp;（2）&nbsp; is the simplest redundancy tactic, as it just involves having clones of a component. Having multiple copies of&nbsp; （3）&nbsp; components can be effective in protecting against random failures of hardware, but it cannot protect against design or implementation errors in hardware or software since there is no form of diversity embedded in this tactic.</p><p>Functional redundancy, by contrast, is intended to address the issue of&nbsp; （4）&nbsp; failures (where replicas exhibit the same fault at the same time because they share the same implementation) in hardware or software components, by implementing design diversity. This tactic attempts to deal with the systematic nature of design faults by adding diversity to redundancy. The outputs of functionally redundant components should be the same given the same input. The functional redundancy tactic is still vulnerable to specification errors, however, and of course, functional replicas will be more&nbsp; （5）&nbsp; to develop and verify.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 369372,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "cheap",
        "easy",
        "relaxed",
        "expensive"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 376818,
    "question_title": "<p>The data dictionary is a specialized application of the kinds of dictionaries used as references in everyday life. The data dictionary is a reference work of data about data (that is,&nbsp; &nbsp;（1） ), one that is compiled by systems analysts to guide them through analysis and design. As a document, the data dictionary collects and coordinates specific data terms, and it confirms what each term means to different people in the organization. The&nbsp; （2）&nbsp; covered before are an excellent starting point for collecting data dictionary entries.</p><p>One important reason for maintaining a data dictionary is to keep clean data. This means that data must be&nbsp; （3） . If you store data about a man’s sex as “M” in one record, “Male” in a second record, and as the number “1” in a third record, the data are not clean. Keeping a data dictionary will help in this regard.</p><p>Automated data dictionaries (part of the&nbsp; （4）&nbsp; mentioned earlier) are valuable for their capacity to cross-reference data items, thereby allowing necessary program changes to all programs sharing a common element. This feature supplants changing programs on a haphazard basis, or it prevents waiting until the program won’t run because a change has not been implemented across all programs sharing the updated item. Clearly, automated data dictionaries become important for large systems that produce several thousand data elements requiring&nbsp; （5）&nbsp; and cross-referencing.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "metadata",
      "big data",
      "data lake",
      "data warehouse"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 18,
      "belong_page": 1,
      "question_id": 376818,
      "question_title": "<p>The data dictionary is a specialized application of the kinds of dictionaries used as references in everyday life. The data dictionary is a reference work of data about data (that is,&nbsp; &nbsp;（1） ), one that is compiled by systems analysts to guide them through analysis and design. As a document, the data dictionary collects and coordinates specific data terms, and it confirms what each term means to different people in the organization. The&nbsp; （2）&nbsp; covered before are an excellent starting point for collecting data dictionary entries.</p><p>One important reason for maintaining a data dictionary is to keep clean data. This means that data must be&nbsp; （3） . If you store data about a man’s sex as “M” in one record, “Male” in a second record, and as the number “1” in a third record, the data are not clean. Keeping a data dictionary will help in this regard.</p><p>Automated data dictionaries (part of the&nbsp; （4）&nbsp; mentioned earlier) are valuable for their capacity to cross-reference data items, thereby allowing necessary program changes to all programs sharing a common element. This feature supplants changing programs on a haphazard basis, or it prevents waiting until the program won’t run because a change has not been implemented across all programs sharing the updated item. Clearly, automated data dictionaries become important for large systems that produce several thousand data elements requiring&nbsp; （5）&nbsp; and cross-referencing.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 376817,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "metadata",
        "big data",
        "data lake",
        "data warehouse"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 376819,
    "question_title": "<p>The data dictionary is a specialized application of the kinds of dictionaries used as references in everyday life. The data dictionary is a reference work of data about data (that is,&nbsp; &nbsp;（1） ), one that is compiled by systems analysts to guide them through analysis and design. As a document, the data dictionary collects and coordinates specific data terms, and it confirms what each term means to different people in the organization. The&nbsp; （2）&nbsp; covered before are an excellent starting point for collecting data dictionary entries.</p><p>One important reason for maintaining a data dictionary is to keep clean data. This means that data must be&nbsp; （3） . If you store data about a man’s sex as “M” in one record, “Male” in a second record, and as the number “1” in a third record, the data are not clean. Keeping a data dictionary will help in this regard.</p><p>Automated data dictionaries (part of the&nbsp; （4）&nbsp; mentioned earlier) are valuable for their capacity to cross-reference data items, thereby allowing necessary program changes to all programs sharing a common element. This feature supplants changing programs on a haphazard basis, or it prevents waiting until the program won’t run because a change has not been implemented across all programs sharing the updated item. Clearly, automated data dictionaries become important for large systems that produce several thousand data elements requiring&nbsp; （5）&nbsp; and cross-referencing.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "DFD",
      "ERD",
      "STD",
      "DD"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 19,
      "belong_page": 1,
      "question_id": 376819,
      "question_title": "<p>The data dictionary is a specialized application of the kinds of dictionaries used as references in everyday life. The data dictionary is a reference work of data about data (that is,&nbsp; &nbsp;（1） ), one that is compiled by systems analysts to guide them through analysis and design. As a document, the data dictionary collects and coordinates specific data terms, and it confirms what each term means to different people in the organization. The&nbsp; （2）&nbsp; covered before are an excellent starting point for collecting data dictionary entries.</p><p>One important reason for maintaining a data dictionary is to keep clean data. This means that data must be&nbsp; （3） . If you store data about a man’s sex as “M” in one record, “Male” in a second record, and as the number “1” in a third record, the data are not clean. Keeping a data dictionary will help in this regard.</p><p>Automated data dictionaries (part of the&nbsp; （4）&nbsp; mentioned earlier) are valuable for their capacity to cross-reference data items, thereby allowing necessary program changes to all programs sharing a common element. This feature supplants changing programs on a haphazard basis, or it prevents waiting until the program won’t run because a change has not been implemented across all programs sharing the updated item. Clearly, automated data dictionaries become important for large systems that produce several thousand data elements requiring&nbsp; （5）&nbsp; and cross-referencing.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 376817,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "DFD",
        "ERD",
        "STD",
        "DD"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 376820,
    "question_title": "<p>The data dictionary is a specialized application of the kinds of dictionaries used as references in everyday life. The data dictionary is a reference work of data about data (that is,&nbsp; &nbsp;（1） ), one that is compiled by systems analysts to guide them through analysis and design. As a document, the data dictionary collects and coordinates specific data terms, and it confirms what each term means to different people in the organization. The&nbsp; （2）&nbsp; covered before are an excellent starting point for collecting data dictionary entries.</p><p>One important reason for maintaining a data dictionary is to keep clean data. This means that data must be&nbsp; （3） . If you store data about a man’s sex as “M” in one record, “Male” in a second record, and as the number “1” in a third record, the data are not clean. Keeping a data dictionary will help in this regard.</p><p>Automated data dictionaries (part of the&nbsp; （4）&nbsp; mentioned earlier) are valuable for their capacity to cross-reference data items, thereby allowing necessary program changes to all programs sharing a common element. This feature supplants changing programs on a haphazard basis, or it prevents waiting until the program won’t run because a change has not been implemented across all programs sharing the updated item. Clearly, automated data dictionaries become important for large systems that produce several thousand data elements requiring&nbsp; （5）&nbsp; and cross-referencing.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "atomic",
      "consistent",
      "isolated",
      "durable"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 20,
      "belong_page": 1,
      "question_id": 376820,
      "question_title": "<p>The data dictionary is a specialized application of the kinds of dictionaries used as references in everyday life. The data dictionary is a reference work of data about data (that is,&nbsp; &nbsp;（1） ), one that is compiled by systems analysts to guide them through analysis and design. As a document, the data dictionary collects and coordinates specific data terms, and it confirms what each term means to different people in the organization. The&nbsp; （2）&nbsp; covered before are an excellent starting point for collecting data dictionary entries.</p><p>One important reason for maintaining a data dictionary is to keep clean data. This means that data must be&nbsp; （3） . If you store data about a man’s sex as “M” in one record, “Male” in a second record, and as the number “1” in a third record, the data are not clean. Keeping a data dictionary will help in this regard.</p><p>Automated data dictionaries (part of the&nbsp; （4）&nbsp; mentioned earlier) are valuable for their capacity to cross-reference data items, thereby allowing necessary program changes to all programs sharing a common element. This feature supplants changing programs on a haphazard basis, or it prevents waiting until the program won’t run because a change has not been implemented across all programs sharing the updated item. Clearly, automated data dictionaries become important for large systems that produce several thousand data elements requiring&nbsp; （5）&nbsp; and cross-referencing.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 376817,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "atomic",
        "consistent",
        "isolated",
        "durable"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 376821,
    "question_title": "<p>The data dictionary is a specialized application of the kinds of dictionaries used as references in everyday life. The data dictionary is a reference work of data about data (that is,&nbsp; &nbsp;（1） ), one that is compiled by systems analysts to guide them through analysis and design. As a document, the data dictionary collects and coordinates specific data terms, and it confirms what each term means to different people in the organization. The&nbsp; （2）&nbsp; covered before are an excellent starting point for collecting data dictionary entries.</p><p>One important reason for maintaining a data dictionary is to keep clean data. This means that data must be&nbsp; （3） . If you store data about a man’s sex as “M” in one record, “Male” in a second record, and as the number “1” in a third record, the data are not clean. Keeping a data dictionary will help in this regard.</p><p>Automated data dictionaries (part of the&nbsp; （4）&nbsp; mentioned earlier) are valuable for their capacity to cross-reference data items, thereby allowing necessary program changes to all programs sharing a common element. This feature supplants changing programs on a haphazard basis, or it prevents waiting until the program won’t run because a change has not been implemented across all programs sharing the updated item. Clearly, automated data dictionaries become important for large systems that produce several thousand data elements requiring&nbsp; （5）&nbsp; and cross-referencing.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "UML views",
      "test tools",
      "CASE tools",
      "AI libraries"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 21,
      "belong_page": 1,
      "question_id": 376821,
      "question_title": "<p>The data dictionary is a specialized application of the kinds of dictionaries used as references in everyday life. The data dictionary is a reference work of data about data (that is,&nbsp; &nbsp;（1） ), one that is compiled by systems analysts to guide them through analysis and design. As a document, the data dictionary collects and coordinates specific data terms, and it confirms what each term means to different people in the organization. The&nbsp; （2）&nbsp; covered before are an excellent starting point for collecting data dictionary entries.</p><p>One important reason for maintaining a data dictionary is to keep clean data. This means that data must be&nbsp; （3） . If you store data about a man’s sex as “M” in one record, “Male” in a second record, and as the number “1” in a third record, the data are not clean. Keeping a data dictionary will help in this regard.</p><p>Automated data dictionaries (part of the&nbsp; （4）&nbsp; mentioned earlier) are valuable for their capacity to cross-reference data items, thereby allowing necessary program changes to all programs sharing a common element. This feature supplants changing programs on a haphazard basis, or it prevents waiting until the program won’t run because a change has not been implemented across all programs sharing the updated item. Clearly, automated data dictionaries become important for large systems that produce several thousand data elements requiring&nbsp; （5）&nbsp; and cross-referencing.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 376817,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "UML views",
        "test tools",
        "CASE tools",
        "AI libraries"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 376822,
    "question_title": "<p>The data dictionary is a specialized application of the kinds of dictionaries used as references in everyday life. The data dictionary is a reference work of data about data (that is,&nbsp; &nbsp;（1） ), one that is compiled by systems analysts to guide them through analysis and design. As a document, the data dictionary collects and coordinates specific data terms, and it confirms what each term means to different people in the organization. The&nbsp; （2）&nbsp; covered before are an excellent starting point for collecting data dictionary entries.</p><p>One important reason for maintaining a data dictionary is to keep clean data. This means that data must be&nbsp; （3） . If you store data about a man’s sex as “M” in one record, “Male” in a second record, and as the number “1” in a third record, the data are not clean. Keeping a data dictionary will help in this regard.</p><p>Automated data dictionaries (part of the&nbsp; （4）&nbsp; mentioned earlier) are valuable for their capacity to cross-reference data items, thereby allowing necessary program changes to all programs sharing a common element. This feature supplants changing programs on a haphazard basis, or it prevents waiting until the program won’t run because a change has not been implemented across all programs sharing the updated item. Clearly, automated data dictionaries become important for large systems that produce several thousand data elements requiring&nbsp; （5）&nbsp; and cross-referencing.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "programming",
      "producing",
      "collecting",
      "cataloging"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 22,
      "belong_page": 1,
      "question_id": 376822,
      "question_title": "<p>The data dictionary is a specialized application of the kinds of dictionaries used as references in everyday life. The data dictionary is a reference work of data about data (that is,&nbsp; &nbsp;（1） ), one that is compiled by systems analysts to guide them through analysis and design. As a document, the data dictionary collects and coordinates specific data terms, and it confirms what each term means to different people in the organization. The&nbsp; （2）&nbsp; covered before are an excellent starting point for collecting data dictionary entries.</p><p>One important reason for maintaining a data dictionary is to keep clean data. This means that data must be&nbsp; （3） . If you store data about a man’s sex as “M” in one record, “Male” in a second record, and as the number “1” in a third record, the data are not clean. Keeping a data dictionary will help in this regard.</p><p>Automated data dictionaries (part of the&nbsp; （4）&nbsp; mentioned earlier) are valuable for their capacity to cross-reference data items, thereby allowing necessary program changes to all programs sharing a common element. This feature supplants changing programs on a haphazard basis, or it prevents waiting until the program won’t run because a change has not been implemented across all programs sharing the updated item. Clearly, automated data dictionaries become important for large systems that produce several thousand data elements requiring&nbsp; （5）&nbsp; and cross-referencing.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 376817,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "programming",
        "producing",
        "collecting",
        "cataloging"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 491772,
    "question_title": "<p>The primary use case consists of a standard flow of&nbsp; （1）&nbsp; in the system that describes a standard system behavior. The primary use case represents the normal, expected, and successful completion of the use case.</p><p>When diagramming a use case, start by asking the users to list everything the system should do for them. This can be done using interviews, in a&nbsp; （2）&nbsp; session, or through other facilitated team sessions. The analyst may also use agile stories sessions to develop use cases. Write down who is involved with each use case, and the responsibilities or services the use case must provide to&nbsp; （3）&nbsp; or other systems. In the initial phases, this may be a partial list that is expanded in the later analysis phases. Use the following guidelines:</p><p>1.Review the business specifications and identify the actors involved.</p><p>2.Identify the high-level events and develop the primary use cases that describe those events and how the actors initiate them. Carefully examine the&nbsp; （4）&nbsp; played by the actors to identify all the possible primary use cases initiated by each actor. Use cases with little or no user interaction do not have to be shown.</p><p>3.Review each primary use case to determine the possible&nbsp; （5）&nbsp; of flow through the use case. From this analysis, establish the alternative paths. Because the flow of events is usually different in each case, look for activities that could succeed or fail. Also look for any branches in the use case logic in which different outcomes are possible.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "behavior",
      "events",
      "processes",
      "graphs"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 23,
      "belong_page": 1,
      "question_id": 491772,
      "question_title": "<p>The primary use case consists of a standard flow of&nbsp; （1）&nbsp; in the system that describes a standard system behavior. The primary use case represents the normal, expected, and successful completion of the use case.</p><p>When diagramming a use case, start by asking the users to list everything the system should do for them. This can be done using interviews, in a&nbsp; （2）&nbsp; session, or through other facilitated team sessions. The analyst may also use agile stories sessions to develop use cases. Write down who is involved with each use case, and the responsibilities or services the use case must provide to&nbsp; （3）&nbsp; or other systems. In the initial phases, this may be a partial list that is expanded in the later analysis phases. Use the following guidelines:</p><p>1.Review the business specifications and identify the actors involved.</p><p>2.Identify the high-level events and develop the primary use cases that describe those events and how the actors initiate them. Carefully examine the&nbsp; （4）&nbsp; played by the actors to identify all the possible primary use cases initiated by each actor. Use cases with little or no user interaction do not have to be shown.</p><p>3.Review each primary use case to determine the possible&nbsp; （5）&nbsp; of flow through the use case. From this analysis, establish the alternative paths. Because the flow of events is usually different in each case, look for activities that could succeed or fail. Also look for any branches in the use case logic in which different outcomes are possible.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 491771,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "behavior",
        "events",
        "processes",
        "graphs"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 491773,
    "question_title": "<p>The primary use case consists of a standard flow of&nbsp; （1）&nbsp; in the system that describes a standard system behavior. The primary use case represents the normal, expected, and successful completion of the use case.</p><p>When diagramming a use case, start by asking the users to list everything the system should do for them. This can be done using interviews, in a&nbsp; （2）&nbsp; session, or through other facilitated team sessions. The analyst may also use agile stories sessions to develop use cases. Write down who is involved with each use case, and the responsibilities or services the use case must provide to&nbsp; （3）&nbsp; or other systems. In the initial phases, this may be a partial list that is expanded in the later analysis phases. Use the following guidelines:</p><p>1.Review the business specifications and identify the actors involved.</p><p>2.Identify the high-level events and develop the primary use cases that describe those events and how the actors initiate them. Carefully examine the&nbsp; （4）&nbsp; played by the actors to identify all the possible primary use cases initiated by each actor. Use cases with little or no user interaction do not have to be shown.</p><p>3.Review each primary use case to determine the possible&nbsp; （5）&nbsp; of flow through the use case. From this analysis, establish the alternative paths. Because the flow of events is usually different in each case, look for activities that could succeed or fail. Also look for any branches in the use case logic in which different outcomes are possible.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "joint application design",
      "storyboard",
      "questionnaire investigation",
      "sampling"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 24,
      "belong_page": 1,
      "question_id": 491773,
      "question_title": "<p>The primary use case consists of a standard flow of&nbsp; （1）&nbsp; in the system that describes a standard system behavior. The primary use case represents the normal, expected, and successful completion of the use case.</p><p>When diagramming a use case, start by asking the users to list everything the system should do for them. This can be done using interviews, in a&nbsp; （2）&nbsp; session, or through other facilitated team sessions. The analyst may also use agile stories sessions to develop use cases. Write down who is involved with each use case, and the responsibilities or services the use case must provide to&nbsp; （3）&nbsp; or other systems. In the initial phases, this may be a partial list that is expanded in the later analysis phases. Use the following guidelines:</p><p>1.Review the business specifications and identify the actors involved.</p><p>2.Identify the high-level events and develop the primary use cases that describe those events and how the actors initiate them. Carefully examine the&nbsp; （4）&nbsp; played by the actors to identify all the possible primary use cases initiated by each actor. Use cases with little or no user interaction do not have to be shown.</p><p>3.Review each primary use case to determine the possible&nbsp; （5）&nbsp; of flow through the use case. From this analysis, establish the alternative paths. Because the flow of events is usually different in each case, look for activities that could succeed or fail. Also look for any branches in the use case logic in which different outcomes are possible.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 491771,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "joint application design",
        "storyboard",
        "questionnaire investigation",
        "sampling"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 491774,
    "question_title": "<p>The primary use case consists of a standard flow of&nbsp; （1）&nbsp; in the system that describes a standard system behavior. The primary use case represents the normal, expected, and successful completion of the use case.</p><p>When diagramming a use case, start by asking the users to list everything the system should do for them. This can be done using interviews, in a&nbsp; （2）&nbsp; session, or through other facilitated team sessions. The analyst may also use agile stories sessions to develop use cases. Write down who is involved with each use case, and the responsibilities or services the use case must provide to&nbsp; （3）&nbsp; or other systems. In the initial phases, this may be a partial list that is expanded in the later analysis phases. Use the following guidelines:</p><p>1.Review the business specifications and identify the actors involved.</p><p>2.Identify the high-level events and develop the primary use cases that describe those events and how the actors initiate them. Carefully examine the&nbsp; （4）&nbsp; played by the actors to identify all the possible primary use cases initiated by each actor. Use cases with little or no user interaction do not have to be shown.</p><p>3.Review each primary use case to determine the possible&nbsp; （5）&nbsp; of flow through the use case. From this analysis, establish the alternative paths. Because the flow of events is usually different in each case, look for activities that could succeed or fail. Also look for any branches in the use case logic in which different outcomes are possible.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "administrators",
      "analyst",
      "users",
      "actors"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 25,
      "belong_page": 1,
      "question_id": 491774,
      "question_title": "<p>The primary use case consists of a standard flow of&nbsp; （1）&nbsp; in the system that describes a standard system behavior. The primary use case represents the normal, expected, and successful completion of the use case.</p><p>When diagramming a use case, start by asking the users to list everything the system should do for them. This can be done using interviews, in a&nbsp; （2）&nbsp; session, or through other facilitated team sessions. The analyst may also use agile stories sessions to develop use cases. Write down who is involved with each use case, and the responsibilities or services the use case must provide to&nbsp; （3）&nbsp; or other systems. In the initial phases, this may be a partial list that is expanded in the later analysis phases. Use the following guidelines:</p><p>1.Review the business specifications and identify the actors involved.</p><p>2.Identify the high-level events and develop the primary use cases that describe those events and how the actors initiate them. Carefully examine the&nbsp; （4）&nbsp; played by the actors to identify all the possible primary use cases initiated by each actor. Use cases with little or no user interaction do not have to be shown.</p><p>3.Review each primary use case to determine the possible&nbsp; （5）&nbsp; of flow through the use case. From this analysis, establish the alternative paths. Because the flow of events is usually different in each case, look for activities that could succeed or fail. Also look for any branches in the use case logic in which different outcomes are possible.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 491771,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "administrators",
        "analyst",
        "users",
        "actors"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 491775,
    "question_title": "<p>The primary use case consists of a standard flow of&nbsp; （1）&nbsp; in the system that describes a standard system behavior. The primary use case represents the normal, expected, and successful completion of the use case.</p><p>When diagramming a use case, start by asking the users to list everything the system should do for them. This can be done using interviews, in a&nbsp; （2）&nbsp; session, or through other facilitated team sessions. The analyst may also use agile stories sessions to develop use cases. Write down who is involved with each use case, and the responsibilities or services the use case must provide to&nbsp; （3）&nbsp; or other systems. In the initial phases, this may be a partial list that is expanded in the later analysis phases. Use the following guidelines:</p><p>1.Review the business specifications and identify the actors involved.</p><p>2.Identify the high-level events and develop the primary use cases that describe those events and how the actors initiate them. Carefully examine the&nbsp; （4）&nbsp; played by the actors to identify all the possible primary use cases initiated by each actor. Use cases with little or no user interaction do not have to be shown.</p><p>3.Review each primary use case to determine the possible&nbsp; （5）&nbsp; of flow through the use case. From this analysis, establish the alternative paths. Because the flow of events is usually different in each case, look for activities that could succeed or fail. Also look for any branches in the use case logic in which different outcomes are possible.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "games",
      "roles",
      "matches",
      "cards"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 26,
      "belong_page": 1,
      "question_id": 491775,
      "question_title": "<p>The primary use case consists of a standard flow of&nbsp; （1）&nbsp; in the system that describes a standard system behavior. The primary use case represents the normal, expected, and successful completion of the use case.</p><p>When diagramming a use case, start by asking the users to list everything the system should do for them. This can be done using interviews, in a&nbsp; （2）&nbsp; session, or through other facilitated team sessions. The analyst may also use agile stories sessions to develop use cases. Write down who is involved with each use case, and the responsibilities or services the use case must provide to&nbsp; （3）&nbsp; or other systems. In the initial phases, this may be a partial list that is expanded in the later analysis phases. Use the following guidelines:</p><p>1.Review the business specifications and identify the actors involved.</p><p>2.Identify the high-level events and develop the primary use cases that describe those events and how the actors initiate them. Carefully examine the&nbsp; （4）&nbsp; played by the actors to identify all the possible primary use cases initiated by each actor. Use cases with little or no user interaction do not have to be shown.</p><p>3.Review each primary use case to determine the possible&nbsp; （5）&nbsp; of flow through the use case. From this analysis, establish the alternative paths. Because the flow of events is usually different in each case, look for activities that could succeed or fail. Also look for any branches in the use case logic in which different outcomes are possible.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 491771,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "games",
        "roles",
        "matches",
        "cards"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 491776,
    "question_title": "<p>The primary use case consists of a standard flow of&nbsp; （1）&nbsp; in the system that describes a standard system behavior. The primary use case represents the normal, expected, and successful completion of the use case.</p><p>When diagramming a use case, start by asking the users to list everything the system should do for them. This can be done using interviews, in a&nbsp; （2）&nbsp; session, or through other facilitated team sessions. The analyst may also use agile stories sessions to develop use cases. Write down who is involved with each use case, and the responsibilities or services the use case must provide to&nbsp; （3）&nbsp; or other systems. In the initial phases, this may be a partial list that is expanded in the later analysis phases. Use the following guidelines:</p><p>1.Review the business specifications and identify the actors involved.</p><p>2.Identify the high-level events and develop the primary use cases that describe those events and how the actors initiate them. Carefully examine the&nbsp; （4）&nbsp; played by the actors to identify all the possible primary use cases initiated by each actor. Use cases with little or no user interaction do not have to be shown.</p><p>3.Review each primary use case to determine the possible&nbsp; （5）&nbsp; of flow through the use case. From this analysis, establish the alternative paths. Because the flow of events is usually different in each case, look for activities that could succeed or fail. Also look for any branches in the use case logic in which different outcomes are possible.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "scenes",
      "replacement",
      "variations",
      "implementation"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 27,
      "belong_page": 1,
      "question_id": 491776,
      "question_title": "<p>The primary use case consists of a standard flow of&nbsp; （1）&nbsp; in the system that describes a standard system behavior. The primary use case represents the normal, expected, and successful completion of the use case.</p><p>When diagramming a use case, start by asking the users to list everything the system should do for them. This can be done using interviews, in a&nbsp; （2）&nbsp; session, or through other facilitated team sessions. The analyst may also use agile stories sessions to develop use cases. Write down who is involved with each use case, and the responsibilities or services the use case must provide to&nbsp; （3）&nbsp; or other systems. In the initial phases, this may be a partial list that is expanded in the later analysis phases. Use the following guidelines:</p><p>1.Review the business specifications and identify the actors involved.</p><p>2.Identify the high-level events and develop the primary use cases that describe those events and how the actors initiate them. Carefully examine the&nbsp; （4）&nbsp; played by the actors to identify all the possible primary use cases initiated by each actor. Use cases with little or no user interaction do not have to be shown.</p><p>3.Review each primary use case to determine the possible&nbsp; （5）&nbsp; of flow through the use case. From this analysis, establish the alternative paths. Because the flow of events is usually different in each case, look for activities that could succeed or fail. Also look for any branches in the use case logic in which different outcomes are possible.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 491771,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "scenes",
        "replacement",
        "variations",
        "implementation"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 499129,
    "question_title": "<p>A simple but essential architectural style used in high-quality architecture involves the separation of the&nbsp; （1）&nbsp; building blocks, according to the tenets of Quasar (Quality-Driven Software Architecture). Business building blocks are those that&nbsp; （2）&nbsp; source code for the application domain, such as business rules, calculations, validations, and so on. Technical building blocks solve purely&nbsp; （3）&nbsp; problems, such as database connections, user interfaces, and so on. The basic principle of this architectural style is that each building block contained in an architecture may only be responsible for either of these two aspects. This separation is postulated by Quasar because the domain and technical aspects of software systems usually have very different change cycles. If this separation can be maintained, the result will be a&nbsp; （4）&nbsp; system.</p><p>This Quasar-based idea became manageable with the introduction of “blood types” for software components. I think this model has not really become established because the blood-type analogy for software is pretty&nbsp; （5） . Nevertheless, this style provides some very important hints that should be obvious to every software architect.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "logical and physical",
      "domain and technical",
      "frontend and backend",
      "user-facing and server-side"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 28,
      "belong_page": 1,
      "question_id": 499129,
      "question_title": "<p>A simple but essential architectural style used in high-quality architecture involves the separation of the&nbsp; （1）&nbsp; building blocks, according to the tenets of Quasar (Quality-Driven Software Architecture). Business building blocks are those that&nbsp; （2）&nbsp; source code for the application domain, such as business rules, calculations, validations, and so on. Technical building blocks solve purely&nbsp; （3）&nbsp; problems, such as database connections, user interfaces, and so on. The basic principle of this architectural style is that each building block contained in an architecture may only be responsible for either of these two aspects. This separation is postulated by Quasar because the domain and technical aspects of software systems usually have very different change cycles. If this separation can be maintained, the result will be a&nbsp; （4）&nbsp; system.</p><p>This Quasar-based idea became manageable with the introduction of “blood types” for software components. I think this model has not really become established because the blood-type analogy for software is pretty&nbsp; （5） . Nevertheless, this style provides some very important hints that should be obvious to every software architect.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 499128,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "logical and physical",
        "domain and technical",
        "frontend and backend",
        "user-facing and server-side"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 499130,
    "question_title": "<p>A simple but essential architectural style used in high-quality architecture involves the separation of the&nbsp; （1）&nbsp; building blocks, according to the tenets of Quasar (Quality-Driven Software Architecture). Business building blocks are those that&nbsp; （2）&nbsp; source code for the application domain, such as business rules, calculations, validations, and so on. Technical building blocks solve purely&nbsp; （3）&nbsp; problems, such as database connections, user interfaces, and so on. The basic principle of this architectural style is that each building block contained in an architecture may only be responsible for either of these two aspects. This separation is postulated by Quasar because the domain and technical aspects of software systems usually have very different change cycles. If this separation can be maintained, the result will be a&nbsp; （4）&nbsp; system.</p><p>This Quasar-based idea became manageable with the introduction of “blood types” for software components. I think this model has not really become established because the blood-type analogy for software is pretty&nbsp; （5） . Nevertheless, this style provides some very important hints that should be obvious to every software architect.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "contain",
      "exclude",
      "include",
      "not only"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 29,
      "belong_page": 1,
      "question_id": 499130,
      "question_title": "<p>A simple but essential architectural style used in high-quality architecture involves the separation of the&nbsp; （1）&nbsp; building blocks, according to the tenets of Quasar (Quality-Driven Software Architecture). Business building blocks are those that&nbsp; （2）&nbsp; source code for the application domain, such as business rules, calculations, validations, and so on. Technical building blocks solve purely&nbsp; （3）&nbsp; problems, such as database connections, user interfaces, and so on. The basic principle of this architectural style is that each building block contained in an architecture may only be responsible for either of these two aspects. This separation is postulated by Quasar because the domain and technical aspects of software systems usually have very different change cycles. If this separation can be maintained, the result will be a&nbsp; （4）&nbsp; system.</p><p>This Quasar-based idea became manageable with the introduction of “blood types” for software components. I think this model has not really become established because the blood-type analogy for software is pretty&nbsp; （5） . Nevertheless, this style provides some very important hints that should be obvious to every software architect.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 499128,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "contain",
        "exclude",
        "include",
        "not only"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 499131,
    "question_title": "<p>A simple but essential architectural style used in high-quality architecture involves the separation of the&nbsp; （1）&nbsp; building blocks, according to the tenets of Quasar (Quality-Driven Software Architecture). Business building blocks are those that&nbsp; （2）&nbsp; source code for the application domain, such as business rules, calculations, validations, and so on. Technical building blocks solve purely&nbsp; （3）&nbsp; problems, such as database connections, user interfaces, and so on. The basic principle of this architectural style is that each building block contained in an architecture may only be responsible for either of these two aspects. This separation is postulated by Quasar because the domain and technical aspects of software systems usually have very different change cycles. If this separation can be maintained, the result will be a&nbsp; （4）&nbsp; system.</p><p>This Quasar-based idea became manageable with the introduction of “blood types” for software components. I think this model has not really become established because the blood-type analogy for software is pretty&nbsp; （5） . Nevertheless, this style provides some very important hints that should be obvious to every software architect.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "technical",
      "operational",
      "commercial",
      "productional"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 30,
      "belong_page": 1,
      "question_id": 499131,
      "question_title": "<p>A simple but essential architectural style used in high-quality architecture involves the separation of the&nbsp; （1）&nbsp; building blocks, according to the tenets of Quasar (Quality-Driven Software Architecture). Business building blocks are those that&nbsp; （2）&nbsp; source code for the application domain, such as business rules, calculations, validations, and so on. Technical building blocks solve purely&nbsp; （3）&nbsp; problems, such as database connections, user interfaces, and so on. The basic principle of this architectural style is that each building block contained in an architecture may only be responsible for either of these two aspects. This separation is postulated by Quasar because the domain and technical aspects of software systems usually have very different change cycles. If this separation can be maintained, the result will be a&nbsp; （4）&nbsp; system.</p><p>This Quasar-based idea became manageable with the introduction of “blood types” for software components. I think this model has not really become established because the blood-type analogy for software is pretty&nbsp; （5） . Nevertheless, this style provides some very important hints that should be obvious to every software architect.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 499128,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "technical",
        "operational",
        "commercial",
        "productional"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 499132,
    "question_title": "<p>A simple but essential architectural style used in high-quality architecture involves the separation of the&nbsp; （1）&nbsp; building blocks, according to the tenets of Quasar (Quality-Driven Software Architecture). Business building blocks are those that&nbsp; （2）&nbsp; source code for the application domain, such as business rules, calculations, validations, and so on. Technical building blocks solve purely&nbsp; （3）&nbsp; problems, such as database connections, user interfaces, and so on. The basic principle of this architectural style is that each building block contained in an architecture may only be responsible for either of these two aspects. This separation is postulated by Quasar because the domain and technical aspects of software systems usually have very different change cycles. If this separation can be maintained, the result will be a&nbsp; （4）&nbsp; system.</p><p>This Quasar-based idea became manageable with the introduction of “blood types” for software components. I think this model has not really become established because the blood-type analogy for software is pretty&nbsp; （5） . Nevertheless, this style provides some very important hints that should be obvious to every software architect.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "increased cost",
      "poorly modularized",
      "decreased cost",
      "well modularized"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 31,
      "belong_page": 1,
      "question_id": 499132,
      "question_title": "<p>A simple but essential architectural style used in high-quality architecture involves the separation of the&nbsp; （1）&nbsp; building blocks, according to the tenets of Quasar (Quality-Driven Software Architecture). Business building blocks are those that&nbsp; （2）&nbsp; source code for the application domain, such as business rules, calculations, validations, and so on. Technical building blocks solve purely&nbsp; （3）&nbsp; problems, such as database connections, user interfaces, and so on. The basic principle of this architectural style is that each building block contained in an architecture may only be responsible for either of these two aspects. This separation is postulated by Quasar because the domain and technical aspects of software systems usually have very different change cycles. If this separation can be maintained, the result will be a&nbsp; （4）&nbsp; system.</p><p>This Quasar-based idea became manageable with the introduction of “blood types” for software components. I think this model has not really become established because the blood-type analogy for software is pretty&nbsp; （5） . Nevertheless, this style provides some very important hints that should be obvious to every software architect.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 499128,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "increased cost",
        "poorly modularized",
        "decreased cost",
        "well modularized"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 499133,
    "question_title": "<p>A simple but essential architectural style used in high-quality architecture involves the separation of the&nbsp; （1）&nbsp; building blocks, according to the tenets of Quasar (Quality-Driven Software Architecture). Business building blocks are those that&nbsp; （2）&nbsp; source code for the application domain, such as business rules, calculations, validations, and so on. Technical building blocks solve purely&nbsp; （3）&nbsp; problems, such as database connections, user interfaces, and so on. The basic principle of this architectural style is that each building block contained in an architecture may only be responsible for either of these two aspects. This separation is postulated by Quasar because the domain and technical aspects of software systems usually have very different change cycles. If this separation can be maintained, the result will be a&nbsp; （4）&nbsp; system.</p><p>This Quasar-based idea became manageable with the introduction of “blood types” for software components. I think this model has not really become established because the blood-type analogy for software is pretty&nbsp; （5） . Nevertheless, this style provides some very important hints that should be obvious to every software architect.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "simple",
      "far-fetched",
      "popular",
      "proven"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 32,
      "belong_page": 1,
      "question_id": 499133,
      "question_title": "<p>A simple but essential architectural style used in high-quality architecture involves the separation of the&nbsp; （1）&nbsp; building blocks, according to the tenets of Quasar (Quality-Driven Software Architecture). Business building blocks are those that&nbsp; （2）&nbsp; source code for the application domain, such as business rules, calculations, validations, and so on. Technical building blocks solve purely&nbsp; （3）&nbsp; problems, such as database connections, user interfaces, and so on. The basic principle of this architectural style is that each building block contained in an architecture may only be responsible for either of these two aspects. This separation is postulated by Quasar because the domain and technical aspects of software systems usually have very different change cycles. If this separation can be maintained, the result will be a&nbsp; （4）&nbsp; system.</p><p>This Quasar-based idea became manageable with the introduction of “blood types” for software components. I think this model has not really become established because the blood-type analogy for software is pretty&nbsp; （5） . Nevertheless, this style provides some very important hints that should be obvious to every software architect.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 499128,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "simple",
        "far-fetched",
        "popular",
        "proven"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 500537,
    "question_title": "建模、 （ ） 和基于数据融合的数字线程是数字孪生体的三项核心技术。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "增强现实",
      "仿真",
      "机器学习",
      "区块链"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 33,
      "belong_page": 1,
      "question_id": 500537,
      "question_title": "建模、 （ ） 和基于数据融合的数字线程是数字孪生体的三项核心技术。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 500537,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "增强现实",
        "仿真",
        "机器学习",
        "区块链"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 502551,
    "question_title": "&nbsp;The core purpose of （1） is to ascertain the allocation of application software segments to respective hardware platforms. This necessitates the identification of the key software components under development, followed by their assignment to the diverse hardware elements upon which the system will reside. All software systems can be categorized into four fundamental roles. The initial role pertains to （2） . The majority of information systems necessitate the storage and retrieval of data, be it a miniscule file, akin to a word processor&#39;s memo, or an extensive database housing an organization&#39;s financial records. The subsequent function is the （3） , encompassing the procedures necessary for data access, often executed through Structured Query Language database queries. The third function revolves around the （4） , which encapsulates the logic articulated in DFDs, use cases, and functional specifications. Lastly, the presentation logic oversees the display of information to the user and the reception of user commands. The three fundamental hardware constituents of a system encompass （5） .",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "architecture design",
      "modular design",
      "physical design",
      "distribution design"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 34,
      "belong_page": 1,
      "question_id": 502551,
      "question_title": "&nbsp;The core purpose of （1） is to ascertain the allocation of application software segments to respective hardware platforms. This necessitates the identification of the key software components under development, followed by their assignment to the diverse hardware elements upon which the system will reside. All software systems can be categorized into four fundamental roles. The initial role pertains to （2） . The majority of information systems necessitate the storage and retrieval of data, be it a miniscule file, akin to a word processor&#39;s memo, or an extensive database housing an organization&#39;s financial records. The subsequent function is the （3） , encompassing the procedures necessary for data access, often executed through Structured Query Language database queries. The third function revolves around the （4） , which encapsulates the logic articulated in DFDs, use cases, and functional specifications. Lastly, the presentation logic oversees the display of information to the user and the reception of user commands. The three fundamental hardware constituents of a system encompass （5） .",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 502550,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "architecture design",
        "modular design",
        "physical design",
        "distribution design"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 502552,
    "question_title": "&nbsp;The core purpose of （1） is to ascertain the allocation of application software segments to respective hardware platforms. This necessitates the identification of the key software components under development, followed by their assignment to the diverse hardware elements upon which the system will reside. All software systems can be categorized into four fundamental roles. The initial role pertains to （2） . The majority of information systems necessitate the storage and retrieval of data, be it a miniscule file, akin to a word processor&#39;s memo, or an extensive database housing an organization&#39;s financial records. The subsequent function is the （3） , encompassing the procedures necessary for data access, often executed through Structured Query Language database queries. The third function revolves around the （4） , which encapsulates the logic articulated in DFDs, use cases, and functional specifications. Lastly, the presentation logic oversees the display of information to the user and the reception of user commands. The three fundamental hardware constituents of a system encompass （5） .",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "data access components",
      "database management system",
      "data storage",
      "data entities"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 35,
      "belong_page": 1,
      "question_id": 502552,
      "question_title": "&nbsp;The core purpose of （1） is to ascertain the allocation of application software segments to respective hardware platforms. This necessitates the identification of the key software components under development, followed by their assignment to the diverse hardware elements upon which the system will reside. All software systems can be categorized into four fundamental roles. The initial role pertains to （2） . The majority of information systems necessitate the storage and retrieval of data, be it a miniscule file, akin to a word processor&#39;s memo, or an extensive database housing an organization&#39;s financial records. The subsequent function is the （3） , encompassing the procedures necessary for data access, often executed through Structured Query Language database queries. The third function revolves around the （4） , which encapsulates the logic articulated in DFDs, use cases, and functional specifications. Lastly, the presentation logic oversees the display of information to the user and the reception of user commands. The three fundamental hardware constituents of a system encompass （5） .",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 502550,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "data access components",
        "database management system",
        "data storage",
        "data entities"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 502553,
    "question_title": "&nbsp;The core purpose of （1） is to ascertain the allocation of application software segments to respective hardware platforms. This necessitates the identification of the key software components under development, followed by their assignment to the diverse hardware elements upon which the system will reside. All software systems can be categorized into four fundamental roles. The initial role pertains to （2） . The majority of information systems necessitate the storage and retrieval of data, be it a miniscule file, akin to a word processor&#39;s memo, or an extensive database housing an organization&#39;s financial records. The subsequent function is the （3） , encompassing the procedures necessary for data access, often executed through Structured Query Language database queries. The third function revolves around the （4） , which encapsulates the logic articulated in DFDs, use cases, and functional specifications. Lastly, the presentation logic oversees the display of information to the user and the reception of user commands. The three fundamental hardware constituents of a system encompass （5） .",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "data persistence",
      "data access objects",
      "database connection",
      "data access logic"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 36,
      "belong_page": 1,
      "question_id": 502553,
      "question_title": "&nbsp;The core purpose of （1） is to ascertain the allocation of application software segments to respective hardware platforms. This necessitates the identification of the key software components under development, followed by their assignment to the diverse hardware elements upon which the system will reside. All software systems can be categorized into four fundamental roles. The initial role pertains to （2） . The majority of information systems necessitate the storage and retrieval of data, be it a miniscule file, akin to a word processor&#39;s memo, or an extensive database housing an organization&#39;s financial records. The subsequent function is the （3） , encompassing the procedures necessary for data access, often executed through Structured Query Language database queries. The third function revolves around the （4） , which encapsulates the logic articulated in DFDs, use cases, and functional specifications. Lastly, the presentation logic oversees the display of information to the user and the reception of user commands. The three fundamental hardware constituents of a system encompass （5） .",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 502550,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "data persistence",
        "data access objects",
        "database connection",
        "data access logic"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 502554,
    "question_title": "&nbsp;The core purpose of （1） is to ascertain the allocation of application software segments to respective hardware platforms. This necessitates the identification of the key software components under development, followed by their assignment to the diverse hardware elements upon which the system will reside. All software systems can be categorized into four fundamental roles. The initial role pertains to （2） . The majority of information systems necessitate the storage and retrieval of data, be it a miniscule file, akin to a word processor&#39;s memo, or an extensive database housing an organization&#39;s financial records. The subsequent function is the （3） , encompassing the procedures necessary for data access, often executed through Structured Query Language database queries. The third function revolves around the （4） , which encapsulates the logic articulated in DFDs, use cases, and functional specifications. Lastly, the presentation logic oversees the display of information to the user and the reception of user commands. The three fundamental hardware constituents of a system encompass （5） .",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "system requirements",
      "system architecture",
      "application logic",
      "application program"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 37,
      "belong_page": 1,
      "question_id": 502554,
      "question_title": "&nbsp;The core purpose of （1） is to ascertain the allocation of application software segments to respective hardware platforms. This necessitates the identification of the key software components under development, followed by their assignment to the diverse hardware elements upon which the system will reside. All software systems can be categorized into four fundamental roles. The initial role pertains to （2） . The majority of information systems necessitate the storage and retrieval of data, be it a miniscule file, akin to a word processor&#39;s memo, or an extensive database housing an organization&#39;s financial records. The subsequent function is the （3） , encompassing the procedures necessary for data access, often executed through Structured Query Language database queries. The third function revolves around the （4） , which encapsulates the logic articulated in DFDs, use cases, and functional specifications. Lastly, the presentation logic oversees the display of information to the user and the reception of user commands. The three fundamental hardware constituents of a system encompass （5） .",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 502550,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "system requirements",
        "system architecture",
        "application logic",
        "application program"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 502555,
    "question_title": "&nbsp;The core purpose of （1） is to ascertain the allocation of application software segments to respective hardware platforms. This necessitates the identification of the key software components under development, followed by their assignment to the diverse hardware elements upon which the system will reside. All software systems can be categorized into four fundamental roles. The initial role pertains to （2） . The majority of information systems necessitate the storage and retrieval of data, be it a miniscule file, akin to a word processor&#39;s memo, or an extensive database housing an organization&#39;s financial records. The subsequent function is the （3） , encompassing the procedures necessary for data access, often executed through Structured Query Language database queries. The third function revolves around the （4） , which encapsulates the logic articulated in DFDs, use cases, and functional specifications. Lastly, the presentation logic oversees the display of information to the user and the reception of user commands. The three fundamental hardware constituents of a system encompass （5） .",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "computers, cables and network",
      "clients, servers, and network",
      "CPUs, memories and I/O devices",
      "CPUs, hard disks and I/O devices"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 38,
      "belong_page": 1,
      "question_id": 502555,
      "question_title": "&nbsp;The core purpose of （1） is to ascertain the allocation of application software segments to respective hardware platforms. This necessitates the identification of the key software components under development, followed by their assignment to the diverse hardware elements upon which the system will reside. All software systems can be categorized into four fundamental roles. The initial role pertains to （2） . The majority of information systems necessitate the storage and retrieval of data, be it a miniscule file, akin to a word processor&#39;s memo, or an extensive database housing an organization&#39;s financial records. The subsequent function is the （3） , encompassing the procedures necessary for data access, often executed through Structured Query Language database queries. The third function revolves around the （4） , which encapsulates the logic articulated in DFDs, use cases, and functional specifications. Lastly, the presentation logic oversees the display of information to the user and the reception of user commands. The three fundamental hardware constituents of a system encompass （5） .",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 502550,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "computers, cables and network",
        "clients, servers, and network",
        "CPUs, memories and I/O devices",
        "CPUs, hard disks and I/O devices"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 503602,
    "question_title": "<p>In the context of designing robust and adaptable software systems, one of the key principles is the separation of concerns between the （1） aspects of the system. According to the principles of Domain-Driven Design (DDD), the core domain logic, which includes business rules, processes, and data manipulation, should be separated from the （2） functionalities, such as data persistence, user interface, and external services integration. This separation ensures that the core domain logic remains focused and free from the complexities of infrastructure concerns. By adhering to this principle, developers can achieve a system that is more （3）, allowing for easier maintenance, scalability, and adaptability to changing requirements. However, implementing this separation effectively requires a clear understanding of the domain and technical boundaries, as well as the ability to （4） these boundaries in a way that minimizes coupling and maximizes cohesion. Despite the challenges, this approach has been （5） in many successful software projects.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "logical and physical&nbsp;",
      "domain and infrastructure",
      "frontend and backend",
      "client-side and server-side"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 39,
      "belong_page": 1,
      "question_id": 503602,
      "question_title": "<p>In the context of designing robust and adaptable software systems, one of the key principles is the separation of concerns between the （1） aspects of the system. According to the principles of Domain-Driven Design (DDD), the core domain logic, which includes business rules, processes, and data manipulation, should be separated from the （2） functionalities, such as data persistence, user interface, and external services integration. This separation ensures that the core domain logic remains focused and free from the complexities of infrastructure concerns. By adhering to this principle, developers can achieve a system that is more （3）, allowing for easier maintenance, scalability, and adaptability to changing requirements. However, implementing this separation effectively requires a clear understanding of the domain and technical boundaries, as well as the ability to （4） these boundaries in a way that minimizes coupling and maximizes cohesion. Despite the challenges, this approach has been （5） in many successful software projects.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 503601,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "logical and physical&nbsp;",
        "domain and infrastructure",
        "frontend and backend",
        "client-side and server-side"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 503603,
    "question_title": "<p>In the context of designing robust and adaptable software systems, one of the key principles is the separation of concerns between the （1） aspects of the system. According to the principles of Domain-Driven Design (DDD), the core domain logic, which includes business rules, processes, and data manipulation, should be separated from the （2） functionalities, such as data persistence, user interface, and external services integration. This separation ensures that the core domain logic remains focused and free from the complexities of infrastructure concerns. By adhering to this principle, developers can achieve a system that is more （3）, allowing for easier maintenance, scalability, and adaptability to changing requirements. However, implementing this separation effectively requires a clear understanding of the domain and technical boundaries, as well as the ability to （4） these boundaries in a way that minimizes coupling and maximizes cohesion. Despite the challenges, this approach has been （5） in many successful software projects.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "operational",
      "technical",
      "business",
      "auxiliary"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 40,
      "belong_page": 1,
      "question_id": 503603,
      "question_title": "<p>In the context of designing robust and adaptable software systems, one of the key principles is the separation of concerns between the （1） aspects of the system. According to the principles of Domain-Driven Design (DDD), the core domain logic, which includes business rules, processes, and data manipulation, should be separated from the （2） functionalities, such as data persistence, user interface, and external services integration. This separation ensures that the core domain logic remains focused and free from the complexities of infrastructure concerns. By adhering to this principle, developers can achieve a system that is more （3）, allowing for easier maintenance, scalability, and adaptability to changing requirements. However, implementing this separation effectively requires a clear understanding of the domain and technical boundaries, as well as the ability to （4） these boundaries in a way that minimizes coupling and maximizes cohesion. Despite the challenges, this approach has been （5） in many successful software projects.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 503601,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "operational",
        "technical",
        "business",
        "auxiliary"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 503604,
    "question_title": "<p>In the context of designing robust and adaptable software systems, one of the key principles is the separation of concerns between the （1） aspects of the system. According to the principles of Domain-Driven Design (DDD), the core domain logic, which includes business rules, processes, and data manipulation, should be separated from the （2） functionalities, such as data persistence, user interface, and external services integration. This separation ensures that the core domain logic remains focused and free from the complexities of infrastructure concerns. By adhering to this principle, developers can achieve a system that is more （3）, allowing for easier maintenance, scalability, and adaptability to changing requirements. However, implementing this separation effectively requires a clear understanding of the domain and technical boundaries, as well as the ability to （4） these boundaries in a way that minimizes coupling and maximizes cohesion. Despite the challenges, this approach has been （5） in many successful software projects.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "tightly coupled",
      "loosely coupled",
      "poorly documented",
      "well modularized"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 41,
      "belong_page": 1,
      "question_id": 503604,
      "question_title": "<p>In the context of designing robust and adaptable software systems, one of the key principles is the separation of concerns between the （1） aspects of the system. According to the principles of Domain-Driven Design (DDD), the core domain logic, which includes business rules, processes, and data manipulation, should be separated from the （2） functionalities, such as data persistence, user interface, and external services integration. This separation ensures that the core domain logic remains focused and free from the complexities of infrastructure concerns. By adhering to this principle, developers can achieve a system that is more （3）, allowing for easier maintenance, scalability, and adaptability to changing requirements. However, implementing this separation effectively requires a clear understanding of the domain and technical boundaries, as well as the ability to （4） these boundaries in a way that minimizes coupling and maximizes cohesion. Despite the challenges, this approach has been （5） in many successful software projects.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 503601,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "tightly coupled",
        "loosely coupled",
        "poorly documented",
        "well modularized"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 503605,
    "question_title": "<p>In the context of designing robust and adaptable software systems, one of the key principles is the separation of concerns between the （1） aspects of the system. According to the principles of Domain-Driven Design (DDD), the core domain logic, which includes business rules, processes, and data manipulation, should be separated from the （2） functionalities, such as data persistence, user interface, and external services integration. This separation ensures that the core domain logic remains focused and free from the complexities of infrastructure concerns. By adhering to this principle, developers can achieve a system that is more （3）, allowing for easier maintenance, scalability, and adaptability to changing requirements. However, implementing this separation effectively requires a clear understanding of the domain and technical boundaries, as well as the ability to （4） these boundaries in a way that minimizes coupling and maximizes cohesion. Despite the challenges, this approach has been （5） in many successful software projects.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "define",
      "blur",
      "ignore",
      "merge"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 42,
      "belong_page": 1,
      "question_id": 503605,
      "question_title": "<p>In the context of designing robust and adaptable software systems, one of the key principles is the separation of concerns between the （1） aspects of the system. According to the principles of Domain-Driven Design (DDD), the core domain logic, which includes business rules, processes, and data manipulation, should be separated from the （2） functionalities, such as data persistence, user interface, and external services integration. This separation ensures that the core domain logic remains focused and free from the complexities of infrastructure concerns. By adhering to this principle, developers can achieve a system that is more （3）, allowing for easier maintenance, scalability, and adaptability to changing requirements. However, implementing this separation effectively requires a clear understanding of the domain and technical boundaries, as well as the ability to （4） these boundaries in a way that minimizes coupling and maximizes cohesion. Despite the challenges, this approach has been （5） in many successful software projects.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 503601,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "define",
        "blur",
        "ignore",
        "merge"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 503606,
    "question_title": "<p>In the context of designing robust and adaptable software systems, one of the key principles is the separation of concerns between the （1） aspects of the system. According to the principles of Domain-Driven Design (DDD), the core domain logic, which includes business rules, processes, and data manipulation, should be separated from the （2） functionalities, such as data persistence, user interface, and external services integration. This separation ensures that the core domain logic remains focused and free from the complexities of infrastructure concerns. By adhering to this principle, developers can achieve a system that is more （3）, allowing for easier maintenance, scalability, and adaptability to changing requirements. However, implementing this separation effectively requires a clear understanding of the domain and technical boundaries, as well as the ability to （4） these boundaries in a way that minimizes coupling and maximizes cohesion. Despite the challenges, this approach has been （5） in many successful software projects.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "criticized",
      "proven",
      "debated",
      "questioned"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 43,
      "belong_page": 1,
      "question_id": 503606,
      "question_title": "<p>In the context of designing robust and adaptable software systems, one of the key principles is the separation of concerns between the （1） aspects of the system. According to the principles of Domain-Driven Design (DDD), the core domain logic, which includes business rules, processes, and data manipulation, should be separated from the （2） functionalities, such as data persistence, user interface, and external services integration. This separation ensures that the core domain logic remains focused and free from the complexities of infrastructure concerns. By adhering to this principle, developers can achieve a system that is more （3）, allowing for easier maintenance, scalability, and adaptability to changing requirements. However, implementing this separation effectively requires a clear understanding of the domain and technical boundaries, as well as the ability to （4） these boundaries in a way that minimizes coupling and maximizes cohesion. Despite the challenges, this approach has been （5） in many successful software projects.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 503601,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "criticized",
        "proven",
        "debated",
        "questioned"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 507276,
    "question_title": "<p>Blackboard architecture, also known as the blackboard system, is a problem-solving approach that utilizes a modular and （问题1） framework. It effectively solves complex problems that （问题2） a well-defined algorithm or a pre-determined architecture. Blackboard architecture is inspired by human experts collaborating and solving difficult problems by （问题3） information and contributing their expertise.The architecture is based on how people work together around a （问题4） – each person would sit around the board and a problem would be written on it. When a person can solve the problem, they would go to the board and add the （问题5） solution they know how to do. This process is repeated until a collective solution is found.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "conceptualized",
      "centerlized",
      "decenterlized",
      "controlled"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 44,
      "belong_page": 1,
      "question_id": 507276,
      "question_title": "<p>Blackboard architecture, also known as the blackboard system, is a problem-solving approach that utilizes a modular and （问题1） framework. It effectively solves complex problems that （问题2） a well-defined algorithm or a pre-determined architecture. Blackboard architecture is inspired by human experts collaborating and solving difficult problems by （问题3） information and contributing their expertise.The architecture is based on how people work together around a （问题4） – each person would sit around the board and a problem would be written on it. When a person can solve the problem, they would go to the board and add the （问题5） solution they know how to do. This process is repeated until a collective solution is found.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 507275,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "conceptualized",
        "centerlized",
        "decenterlized",
        "controlled"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 507277,
    "question_title": "<p>Blackboard architecture, also known as the blackboard system, is a problem-solving approach that utilizes a modular and （问题1） framework. It effectively solves complex problems that （问题2） a well-defined algorithm or a pre-determined architecture. Blackboard architecture is inspired by human experts collaborating and solving difficult problems by （问题3） information and contributing their expertise.The architecture is based on how people work together around a （问题4） – each person would sit around the board and a problem would be written on it. When a person can solve the problem, they would go to the board and add the （问题5） solution they know how to do. This process is repeated until a collective solution is found.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "create",
      "improve",
      "lack",
      "use"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 45,
      "belong_page": 1,
      "question_id": 507277,
      "question_title": "<p>Blackboard architecture, also known as the blackboard system, is a problem-solving approach that utilizes a modular and （问题1） framework. It effectively solves complex problems that （问题2） a well-defined algorithm or a pre-determined architecture. Blackboard architecture is inspired by human experts collaborating and solving difficult problems by （问题3） information and contributing their expertise.The architecture is based on how people work together around a （问题4） – each person would sit around the board and a problem would be written on it. When a person can solve the problem, they would go to the board and add the （问题5） solution they know how to do. This process is repeated until a collective solution is found.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 507275,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "create",
        "improve",
        "lack",
        "use"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 507278,
    "question_title": "<p>Blackboard architecture, also known as the blackboard system, is a problem-solving approach that utilizes a modular and （问题1） framework. It effectively solves complex problems that （问题2） a well-defined algorithm or a pre-determined architecture. Blackboard architecture is inspired by human experts collaborating and solving difficult problems by （问题3） information and contributing their expertise.The architecture is based on how people work together around a （问题4） – each person would sit around the board and a problem would be written on it. When a person can solve the problem, they would go to the board and add the （问题5） solution they know how to do. This process is repeated until a collective solution is found.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "&nbsp;sharing information",
      "solving problem",
      "getting information",
      "disscussing problem"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 46,
      "belong_page": 1,
      "question_id": 507278,
      "question_title": "<p>Blackboard architecture, also known as the blackboard system, is a problem-solving approach that utilizes a modular and （问题1） framework. It effectively solves complex problems that （问题2） a well-defined algorithm or a pre-determined architecture. Blackboard architecture is inspired by human experts collaborating and solving difficult problems by （问题3） information and contributing their expertise.The architecture is based on how people work together around a （问题4） – each person would sit around the board and a problem would be written on it. When a person can solve the problem, they would go to the board and add the （问题5） solution they know how to do. This process is repeated until a collective solution is found.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 507275,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "&nbsp;sharing information",
        "solving problem",
        "getting information",
        "disscussing problem"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 507279,
    "question_title": "<p>Blackboard architecture, also known as the blackboard system, is a problem-solving approach that utilizes a modular and （问题1） framework. It effectively solves complex problems that （问题2） a well-defined algorithm or a pre-determined architecture. Blackboard architecture is inspired by human experts collaborating and solving difficult problems by （问题3） information and contributing their expertise.The architecture is based on how people work together around a （问题4） – each person would sit around the board and a problem would be written on it. When a person can solve the problem, they would go to the board and add the （问题5） solution they know how to do. This process is repeated until a collective solution is found.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "expertise",
      "architecture",
      "question",
      "blackboard"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 47,
      "belong_page": 1,
      "question_id": 507279,
      "question_title": "<p>Blackboard architecture, also known as the blackboard system, is a problem-solving approach that utilizes a modular and （问题1） framework. It effectively solves complex problems that （问题2） a well-defined algorithm or a pre-determined architecture. Blackboard architecture is inspired by human experts collaborating and solving difficult problems by （问题3） information and contributing their expertise.The architecture is based on how people work together around a （问题4） – each person would sit around the board and a problem would be written on it. When a person can solve the problem, they would go to the board and add the （问题5） solution they know how to do. This process is repeated until a collective solution is found.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 507275,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "expertise",
        "architecture",
        "question",
        "blackboard"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 507280,
    "question_title": "<p>Blackboard architecture, also known as the blackboard system, is a problem-solving approach that utilizes a modular and （问题1） framework. It effectively solves complex problems that （问题2） a well-defined algorithm or a pre-determined architecture. Blackboard architecture is inspired by human experts collaborating and solving difficult problems by （问题3） information and contributing their expertise.The architecture is based on how people work together around a （问题4） – each person would sit around the board and a problem would be written on it. When a person can solve the problem, they would go to the board and add the （问题5） solution they know how to do. This process is repeated until a collective solution is found.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "possible",
      "partial",
      "difficult",
      "whole"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 48,
      "belong_page": 1,
      "question_id": 507280,
      "question_title": "<p>Blackboard architecture, also known as the blackboard system, is a problem-solving approach that utilizes a modular and （问题1） framework. It effectively solves complex problems that （问题2） a well-defined algorithm or a pre-determined architecture. Blackboard architecture is inspired by human experts collaborating and solving difficult problems by （问题3） information and contributing their expertise.The architecture is based on how people work together around a （问题4） – each person would sit around the board and a problem would be written on it. When a person can solve the problem, they would go to the board and add the （问题5） solution they know how to do. This process is repeated until a collective solution is found.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 507275,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "possible",
        "partial",
        "difficult",
        "whole"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 510556,
    "question_title": "<p>A simple but essential architectural style used in high-quality architecture involves the separation of the&nbsp; （1）&nbsp; building blocks, according to the tenets of Quasar (Quality-Driven Software Architecture). Business building blocks are those that&nbsp; （2）&nbsp; source code for the application domain, such as business rules, calculations, validations, and so on. Technical building blocks solve purely&nbsp; （3）&nbsp; problems, such as database connections, user interfaces, and so on. The basic principle of this architectural style is that each building block contained in an architecture may only be responsible for either of these two aspects. This separation is postulated by Quasar because the domain and technical aspects of software systems usually have very different change cycles. If this separation can be maintained, the result will be a&nbsp; （4）&nbsp; system.</p><p>This Quasar-based idea became manageable with the introduction of “blood types” for software components. I think this model has not really become established because the blood-type analogy for software is pretty&nbsp; （5） . Nevertheless, this style provides some very important hints that should be obvious to every software architect.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "logical and physical",
      "domain and technical",
      "frontend and backend",
      "user-facing and server-side"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 49,
      "belong_page": 1,
      "question_id": 510556,
      "question_title": "<p>A simple but essential architectural style used in high-quality architecture involves the separation of the&nbsp; （1）&nbsp; building blocks, according to the tenets of Quasar (Quality-Driven Software Architecture). Business building blocks are those that&nbsp; （2）&nbsp; source code for the application domain, such as business rules, calculations, validations, and so on. Technical building blocks solve purely&nbsp; （3）&nbsp; problems, such as database connections, user interfaces, and so on. The basic principle of this architectural style is that each building block contained in an architecture may only be responsible for either of these two aspects. This separation is postulated by Quasar because the domain and technical aspects of software systems usually have very different change cycles. If this separation can be maintained, the result will be a&nbsp; （4）&nbsp; system.</p><p>This Quasar-based idea became manageable with the introduction of “blood types” for software components. I think this model has not really become established because the blood-type analogy for software is pretty&nbsp; （5） . Nevertheless, this style provides some very important hints that should be obvious to every software architect.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 510555,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "logical and physical",
        "domain and technical",
        "frontend and backend",
        "user-facing and server-side"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 510557,
    "question_title": "<p>A simple but essential architectural style used in high-quality architecture involves the separation of the&nbsp; （1）&nbsp; building blocks, according to the tenets of Quasar (Quality-Driven Software Architecture). Business building blocks are those that&nbsp; （2）&nbsp; source code for the application domain, such as business rules, calculations, validations, and so on. Technical building blocks solve purely&nbsp; （3）&nbsp; problems, such as database connections, user interfaces, and so on. The basic principle of this architectural style is that each building block contained in an architecture may only be responsible for either of these two aspects. This separation is postulated by Quasar because the domain and technical aspects of software systems usually have very different change cycles. If this separation can be maintained, the result will be a&nbsp; （4）&nbsp; system.</p><p>This Quasar-based idea became manageable with the introduction of “blood types” for software components. I think this model has not really become established because the blood-type analogy for software is pretty&nbsp; （5） . Nevertheless, this style provides some very important hints that should be obvious to every software architect.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "contain",
      "exclude",
      "include",
      "not only"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 50,
      "belong_page": 1,
      "question_id": 510557,
      "question_title": "<p>A simple but essential architectural style used in high-quality architecture involves the separation of the&nbsp; （1）&nbsp; building blocks, according to the tenets of Quasar (Quality-Driven Software Architecture). Business building blocks are those that&nbsp; （2）&nbsp; source code for the application domain, such as business rules, calculations, validations, and so on. Technical building blocks solve purely&nbsp; （3）&nbsp; problems, such as database connections, user interfaces, and so on. The basic principle of this architectural style is that each building block contained in an architecture may only be responsible for either of these two aspects. This separation is postulated by Quasar because the domain and technical aspects of software systems usually have very different change cycles. If this separation can be maintained, the result will be a&nbsp; （4）&nbsp; system.</p><p>This Quasar-based idea became manageable with the introduction of “blood types” for software components. I think this model has not really become established because the blood-type analogy for software is pretty&nbsp; （5） . Nevertheless, this style provides some very important hints that should be obvious to every software architect.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 510555,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "contain",
        "exclude",
        "include",
        "not only"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 510558,
    "question_title": "<p>A simple but essential architectural style used in high-quality architecture involves the separation of the&nbsp; （1）&nbsp; building blocks, according to the tenets of Quasar (Quality-Driven Software Architecture). Business building blocks are those that&nbsp; （2）&nbsp; source code for the application domain, such as business rules, calculations, validations, and so on. Technical building blocks solve purely&nbsp; （3）&nbsp; problems, such as database connections, user interfaces, and so on. The basic principle of this architectural style is that each building block contained in an architecture may only be responsible for either of these two aspects. This separation is postulated by Quasar because the domain and technical aspects of software systems usually have very different change cycles. If this separation can be maintained, the result will be a&nbsp; （4）&nbsp; system.</p><p>This Quasar-based idea became manageable with the introduction of “blood types” for software components. I think this model has not really become established because the blood-type analogy for software is pretty&nbsp; （5） . Nevertheless, this style provides some very important hints that should be obvious to every software architect.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "technical",
      "operational",
      "commercial",
      "productional"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 51,
      "belong_page": 1,
      "question_id": 510558,
      "question_title": "<p>A simple but essential architectural style used in high-quality architecture involves the separation of the&nbsp; （1）&nbsp; building blocks, according to the tenets of Quasar (Quality-Driven Software Architecture). Business building blocks are those that&nbsp; （2）&nbsp; source code for the application domain, such as business rules, calculations, validations, and so on. Technical building blocks solve purely&nbsp; （3）&nbsp; problems, such as database connections, user interfaces, and so on. The basic principle of this architectural style is that each building block contained in an architecture may only be responsible for either of these two aspects. This separation is postulated by Quasar because the domain and technical aspects of software systems usually have very different change cycles. If this separation can be maintained, the result will be a&nbsp; （4）&nbsp; system.</p><p>This Quasar-based idea became manageable with the introduction of “blood types” for software components. I think this model has not really become established because the blood-type analogy for software is pretty&nbsp; （5） . Nevertheless, this style provides some very important hints that should be obvious to every software architect.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 510555,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "technical",
        "operational",
        "commercial",
        "productional"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 510559,
    "question_title": "<p>A simple but essential architectural style used in high-quality architecture involves the separation of the&nbsp; （1）&nbsp; building blocks, according to the tenets of Quasar (Quality-Driven Software Architecture). Business building blocks are those that&nbsp; （2）&nbsp; source code for the application domain, such as business rules, calculations, validations, and so on. Technical building blocks solve purely&nbsp; （3）&nbsp; problems, such as database connections, user interfaces, and so on. The basic principle of this architectural style is that each building block contained in an architecture may only be responsible for either of these two aspects. This separation is postulated by Quasar because the domain and technical aspects of software systems usually have very different change cycles. If this separation can be maintained, the result will be a&nbsp; （4）&nbsp; system.</p><p>This Quasar-based idea became manageable with the introduction of “blood types” for software components. I think this model has not really become established because the blood-type analogy for software is pretty&nbsp; （5） . Nevertheless, this style provides some very important hints that should be obvious to every software architect.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "increased cost",
      "poorly modularized",
      "decreased cost",
      "well modularized"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 52,
      "belong_page": 1,
      "question_id": 510559,
      "question_title": "<p>A simple but essential architectural style used in high-quality architecture involves the separation of the&nbsp; （1）&nbsp; building blocks, according to the tenets of Quasar (Quality-Driven Software Architecture). Business building blocks are those that&nbsp; （2）&nbsp; source code for the application domain, such as business rules, calculations, validations, and so on. Technical building blocks solve purely&nbsp; （3）&nbsp; problems, such as database connections, user interfaces, and so on. The basic principle of this architectural style is that each building block contained in an architecture may only be responsible for either of these two aspects. This separation is postulated by Quasar because the domain and technical aspects of software systems usually have very different change cycles. If this separation can be maintained, the result will be a&nbsp; （4）&nbsp; system.</p><p>This Quasar-based idea became manageable with the introduction of “blood types” for software components. I think this model has not really become established because the blood-type analogy for software is pretty&nbsp; （5） . Nevertheless, this style provides some very important hints that should be obvious to every software architect.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 510555,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "increased cost",
        "poorly modularized",
        "decreased cost",
        "well modularized"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 510560,
    "question_title": "<p>A simple but essential architectural style used in high-quality architecture involves the separation of the&nbsp; （1）&nbsp; building blocks, according to the tenets of Quasar (Quality-Driven Software Architecture). Business building blocks are those that&nbsp; （2）&nbsp; source code for the application domain, such as business rules, calculations, validations, and so on. Technical building blocks solve purely&nbsp; （3）&nbsp; problems, such as database connections, user interfaces, and so on. The basic principle of this architectural style is that each building block contained in an architecture may only be responsible for either of these two aspects. This separation is postulated by Quasar because the domain and technical aspects of software systems usually have very different change cycles. If this separation can be maintained, the result will be a&nbsp; （4）&nbsp; system.</p><p>This Quasar-based idea became manageable with the introduction of “blood types” for software components. I think this model has not really become established because the blood-type analogy for software is pretty&nbsp; （5） . Nevertheless, this style provides some very important hints that should be obvious to every software architect.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "simple",
      "far-fetched",
      "popular",
      "proven"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 53,
      "belong_page": 1,
      "question_id": 510560,
      "question_title": "<p>A simple but essential architectural style used in high-quality architecture involves the separation of the&nbsp; （1）&nbsp; building blocks, according to the tenets of Quasar (Quality-Driven Software Architecture). Business building blocks are those that&nbsp; （2）&nbsp; source code for the application domain, such as business rules, calculations, validations, and so on. Technical building blocks solve purely&nbsp; （3）&nbsp; problems, such as database connections, user interfaces, and so on. The basic principle of this architectural style is that each building block contained in an architecture may only be responsible for either of these two aspects. This separation is postulated by Quasar because the domain and technical aspects of software systems usually have very different change cycles. If this separation can be maintained, the result will be a&nbsp; （4）&nbsp; system.</p><p>This Quasar-based idea became manageable with the introduction of “blood types” for software components. I think this model has not really become established because the blood-type analogy for software is pretty&nbsp; （5） . Nevertheless, this style provides some very important hints that should be obvious to every software architect.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 510555,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "simple",
        "far-fetched",
        "popular",
        "proven"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 510665,
    "question_title": "In modern software development, the Hexagonal Architecture (also known as Ports and Adapters) has gained prominence for its ability to design systems that are both maintainable and adaptable to evolving requirements. At its core, this architecture advocates isolating the （1）—which encapsulates domain rules, business workflows, and state management—from external infrastructure such as databases, web frameworks, or third-party APIs. By defining clear （2） between these two layers, the architecture ensures that changes in technical implementations (e.g., switching from a relational database to a NoSQL solution) do not ripple into the core logic. Instead, external components interact with the system through （3）, which act as standardized interfaces. These interfaces are implemented by adapters that translate external requests into a format compatible with the core logic. This design not only simplifies testing (e.g., by substituting real databases with mock adapters) but also enables seamless （4） across different deployment environments. However, the success of this approach hinges on rigorously adhering to the principle of （5）, ensuring that the core logic remains oblivious to external complexities.",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "Business logic",
      "User interfaces",
      "Data storage",
      "Network protocols"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 54,
      "belong_page": 1,
      "question_id": 510665,
      "question_title": "In modern software development, the Hexagonal Architecture (also known as Ports and Adapters) has gained prominence for its ability to design systems that are both maintainable and adaptable to evolving requirements. At its core, this architecture advocates isolating the （1）—which encapsulates domain rules, business workflows, and state management—from external infrastructure such as databases, web frameworks, or third-party APIs. By defining clear （2） between these two layers, the architecture ensures that changes in technical implementations (e.g., switching from a relational database to a NoSQL solution) do not ripple into the core logic. Instead, external components interact with the system through （3）, which act as standardized interfaces. These interfaces are implemented by adapters that translate external requests into a format compatible with the core logic. This design not only simplifies testing (e.g., by substituting real databases with mock adapters) but also enables seamless （4） across different deployment environments. However, the success of this approach hinges on rigorously adhering to the principle of （5）, ensuring that the core logic remains oblivious to external complexities.",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 510664,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "Business logic",
        "User interfaces",
        "Data storage",
        "Network protocols"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 510666,
    "question_title": "In modern software development, the Hexagonal Architecture (also known as Ports and Adapters) has gained prominence for its ability to design systems that are both maintainable and adaptable to evolving requirements. At its core, this architecture advocates isolating the （1）—which encapsulates domain rules, business workflows, and state management—from external infrastructure such as databases, web frameworks, or third-party APIs. By defining clear （2） between these two layers, the architecture ensures that changes in technical implementations (e.g., switching from a relational database to a NoSQL solution) do not ripple into the core logic. Instead, external components interact with the system through （3）, which act as standardized interfaces. These interfaces are implemented by adapters that translate external requests into a format compatible with the core logic. This design not only simplifies testing (e.g., by substituting real databases with mock adapters) but also enables seamless （4） across different deployment environments. However, the success of this approach hinges on rigorously adhering to the principle of （5）, ensuring that the core logic remains oblivious to external complexities.",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "Boundaries",
      "Modules",
      "Layers",
      "APIs"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 55,
      "belong_page": 1,
      "question_id": 510666,
      "question_title": "In modern software development, the Hexagonal Architecture (also known as Ports and Adapters) has gained prominence for its ability to design systems that are both maintainable and adaptable to evolving requirements. At its core, this architecture advocates isolating the （1）—which encapsulates domain rules, business workflows, and state management—from external infrastructure such as databases, web frameworks, or third-party APIs. By defining clear （2） between these two layers, the architecture ensures that changes in technical implementations (e.g., switching from a relational database to a NoSQL solution) do not ripple into the core logic. Instead, external components interact with the system through （3）, which act as standardized interfaces. These interfaces are implemented by adapters that translate external requests into a format compatible with the core logic. This design not only simplifies testing (e.g., by substituting real databases with mock adapters) but also enables seamless （4） across different deployment environments. However, the success of this approach hinges on rigorously adhering to the principle of （5）, ensuring that the core logic remains oblivious to external complexities.",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 510664,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "Boundaries",
        "Modules",
        "Layers",
        "APIs"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 510667,
    "question_title": "In modern software development, the Hexagonal Architecture (also known as Ports and Adapters) has gained prominence for its ability to design systems that are both maintainable and adaptable to evolving requirements. At its core, this architecture advocates isolating the （1）—which encapsulates domain rules, business workflows, and state management—from external infrastructure such as databases, web frameworks, or third-party APIs. By defining clear （2） between these two layers, the architecture ensures that changes in technical implementations (e.g., switching from a relational database to a NoSQL solution) do not ripple into the core logic. Instead, external components interact with the system through （3）, which act as standardized interfaces. These interfaces are implemented by adapters that translate external requests into a format compatible with the core logic. This design not only simplifies testing (e.g., by substituting real databases with mock adapters) but also enables seamless （4） across different deployment environments. However, the success of this approach hinges on rigorously adhering to the principle of （5）, ensuring that the core logic remains oblivious to external complexities.",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "Modules",
      "Ports",
      "Layers",
      "APIs"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 56,
      "belong_page": 1,
      "question_id": 510667,
      "question_title": "In modern software development, the Hexagonal Architecture (also known as Ports and Adapters) has gained prominence for its ability to design systems that are both maintainable and adaptable to evolving requirements. At its core, this architecture advocates isolating the （1）—which encapsulates domain rules, business workflows, and state management—from external infrastructure such as databases, web frameworks, or third-party APIs. By defining clear （2） between these two layers, the architecture ensures that changes in technical implementations (e.g., switching from a relational database to a NoSQL solution) do not ripple into the core logic. Instead, external components interact with the system through （3）, which act as standardized interfaces. These interfaces are implemented by adapters that translate external requests into a format compatible with the core logic. This design not only simplifies testing (e.g., by substituting real databases with mock adapters) but also enables seamless （4） across different deployment environments. However, the success of this approach hinges on rigorously adhering to the principle of （5）, ensuring that the core logic remains oblivious to external complexities.",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 510664,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "Modules",
        "Ports",
        "Layers",
        "APIs"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 510668,
    "question_title": "In modern software development, the Hexagonal Architecture (also known as Ports and Adapters) has gained prominence for its ability to design systems that are both maintainable and adaptable to evolving requirements. At its core, this architecture advocates isolating the （1）—which encapsulates domain rules, business workflows, and state management—from external infrastructure such as databases, web frameworks, or third-party APIs. By defining clear （2） between these two layers, the architecture ensures that changes in technical implementations (e.g., switching from a relational database to a NoSQL solution) do not ripple into the core logic. Instead, external components interact with the system through （3）, which act as standardized interfaces. These interfaces are implemented by adapters that translate external requests into a format compatible with the core logic. This design not only simplifies testing (e.g., by substituting real databases with mock adapters) but also enables seamless （4） across different deployment environments. However, the success of this approach hinges on rigorously adhering to the principle of （5）, ensuring that the core logic remains oblivious to external complexities.",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "Deployment",
      "Optimization",
      "Compilation",
      "Adaptation"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 57,
      "belong_page": 1,
      "question_id": 510668,
      "question_title": "In modern software development, the Hexagonal Architecture (also known as Ports and Adapters) has gained prominence for its ability to design systems that are both maintainable and adaptable to evolving requirements. At its core, this architecture advocates isolating the （1）—which encapsulates domain rules, business workflows, and state management—from external infrastructure such as databases, web frameworks, or third-party APIs. By defining clear （2） between these two layers, the architecture ensures that changes in technical implementations (e.g., switching from a relational database to a NoSQL solution) do not ripple into the core logic. Instead, external components interact with the system through （3）, which act as standardized interfaces. These interfaces are implemented by adapters that translate external requests into a format compatible with the core logic. This design not only simplifies testing (e.g., by substituting real databases with mock adapters) but also enables seamless （4） across different deployment environments. However, the success of this approach hinges on rigorously adhering to the principle of （5）, ensuring that the core logic remains oblivious to external complexities.",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 510664,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "Deployment",
        "Optimization",
        "Compilation",
        "Adaptation"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 510669,
    "question_title": "In modern software development, the Hexagonal Architecture (also known as Ports and Adapters) has gained prominence for its ability to design systems that are both maintainable and adaptable to evolving requirements. At its core, this architecture advocates isolating the （1）—which encapsulates domain rules, business workflows, and state management—from external infrastructure such as databases, web frameworks, or third-party APIs. By defining clear （2） between these two layers, the architecture ensures that changes in technical implementations (e.g., switching from a relational database to a NoSQL solution) do not ripple into the core logic. Instead, external components interact with the system through （3）, which act as standardized interfaces. These interfaces are implemented by adapters that translate external requests into a format compatible with the core logic. This design not only simplifies testing (e.g., by substituting real databases with mock adapters) but also enables seamless （4） across different deployment environments. However, the success of this approach hinges on rigorously adhering to the principle of （5）, ensuring that the core logic remains oblivious to external complexities.",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "Tight coupling&nbsp;",
      "High cohesion",
      "Loose coupling&nbsp;",
      "Abstraction"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 58,
      "belong_page": 1,
      "question_id": 510669,
      "question_title": "In modern software development, the Hexagonal Architecture (also known as Ports and Adapters) has gained prominence for its ability to design systems that are both maintainable and adaptable to evolving requirements. At its core, this architecture advocates isolating the （1）—which encapsulates domain rules, business workflows, and state management—from external infrastructure such as databases, web frameworks, or third-party APIs. By defining clear （2） between these two layers, the architecture ensures that changes in technical implementations (e.g., switching from a relational database to a NoSQL solution) do not ripple into the core logic. Instead, external components interact with the system through （3）, which act as standardized interfaces. These interfaces are implemented by adapters that translate external requests into a format compatible with the core logic. This design not only simplifies testing (e.g., by substituting real databases with mock adapters) but also enables seamless （4） across different deployment environments. However, the success of this approach hinges on rigorously adhering to the principle of （5）, ensuring that the core logic remains oblivious to external complexities.",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 510664,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "Tight coupling&nbsp;",
        "High cohesion",
        "Loose coupling&nbsp;",
        "Abstraction"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 512967,
    "question_title": "<p>In the realm of designing scalable and maintainable software architectures, a fundamental guideline revolves around the clear delineation of responsibilities between the （1） layers of the system. According to the principles of Microservices Architecture (MSA), the business logic, which encompasses business rules, workflows, and state management, should be decoupled from the （2） concerns, such as communication protocols, data storage mechanisms, and deployment strategies. This decoupling fosters a system that is more （3）, facilitating easier updates, rollbacks, and integration with new technologies. However, achieving this decoupling necessitates a profound comprehension of the service boundaries and the capability to （4） these boundaries in a manner that promotes both flexibility and resilience. Despite the inherent complexities, this approach has been widely （5） in numerous high-performance software systems.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "Presentation and Data",
      "Business and Technical",
      "Application and Middleware",
      "Network and Security"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 59,
      "belong_page": 1,
      "question_id": 512967,
      "question_title": "<p>In the realm of designing scalable and maintainable software architectures, a fundamental guideline revolves around the clear delineation of responsibilities between the （1） layers of the system. According to the principles of Microservices Architecture (MSA), the business logic, which encompasses business rules, workflows, and state management, should be decoupled from the （2） concerns, such as communication protocols, data storage mechanisms, and deployment strategies. This decoupling fosters a system that is more （3）, facilitating easier updates, rollbacks, and integration with new technologies. However, achieving this decoupling necessitates a profound comprehension of the service boundaries and the capability to （4） these boundaries in a manner that promotes both flexibility and resilience. Despite the inherent complexities, this approach has been widely （5） in numerous high-performance software systems.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 512966,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "Presentation and Data",
        "Business and Technical",
        "Application and Middleware",
        "Network and Security"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 512968,
    "question_title": "<p>In the realm of designing scalable and maintainable software architectures, a fundamental guideline revolves around the clear delineation of responsibilities between the （1） layers of the system. According to the principles of Microservices Architecture (MSA), the business logic, which encompasses business rules, workflows, and state management, should be decoupled from the （2） concerns, such as communication protocols, data storage mechanisms, and deployment strategies. This decoupling fosters a system that is more （3）, facilitating easier updates, rollbacks, and integration with new technologies. However, achieving this decoupling necessitates a profound comprehension of the service boundaries and the capability to （4） these boundaries in a manner that promotes both flexibility and resilience. Despite the inherent complexities, this approach has been widely （5） in numerous high-performance software systems.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "Regulatory",
      "Technical",
      "Functional",
      "Managerial"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 60,
      "belong_page": 1,
      "question_id": 512968,
      "question_title": "<p>In the realm of designing scalable and maintainable software architectures, a fundamental guideline revolves around the clear delineation of responsibilities between the （1） layers of the system. According to the principles of Microservices Architecture (MSA), the business logic, which encompasses business rules, workflows, and state management, should be decoupled from the （2） concerns, such as communication protocols, data storage mechanisms, and deployment strategies. This decoupling fosters a system that is more （3）, facilitating easier updates, rollbacks, and integration with new technologies. However, achieving this decoupling necessitates a profound comprehension of the service boundaries and the capability to （4） these boundaries in a manner that promotes both flexibility and resilience. Despite the inherent complexities, this approach has been widely （5） in numerous high-performance software systems.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 512966,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "Regulatory",
        "Technical",
        "Functional",
        "Managerial"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 512969,
    "question_title": "<p>In the realm of designing scalable and maintainable software architectures, a fundamental guideline revolves around the clear delineation of responsibilities between the （1） layers of the system. According to the principles of Microservices Architecture (MSA), the business logic, which encompasses business rules, workflows, and state management, should be decoupled from the （2） concerns, such as communication protocols, data storage mechanisms, and deployment strategies. This decoupling fosters a system that is more （3）, facilitating easier updates, rollbacks, and integration with new technologies. However, achieving this decoupling necessitates a profound comprehension of the service boundaries and the capability to （4） these boundaries in a manner that promotes both flexibility and resilience. Despite the inherent complexities, this approach has been widely （5） in numerous high-performance software systems.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "Brittle andRigid",
      "Flexible and Robust",
      "Monolithic and Interdependent",
      "Fragmented and Disjointed"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 61,
      "belong_page": 1,
      "question_id": 512969,
      "question_title": "<p>In the realm of designing scalable and maintainable software architectures, a fundamental guideline revolves around the clear delineation of responsibilities between the （1） layers of the system. According to the principles of Microservices Architecture (MSA), the business logic, which encompasses business rules, workflows, and state management, should be decoupled from the （2） concerns, such as communication protocols, data storage mechanisms, and deployment strategies. This decoupling fosters a system that is more （3）, facilitating easier updates, rollbacks, and integration with new technologies. However, achieving this decoupling necessitates a profound comprehension of the service boundaries and the capability to （4） these boundaries in a manner that promotes both flexibility and resilience. Despite the inherent complexities, this approach has been widely （5） in numerous high-performance software systems.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 512966,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "Brittle andRigid",
        "Flexible and Robust",
        "Monolithic and Interdependent",
        "Fragmented and Disjointed"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 512970,
    "question_title": "<p>In the realm of designing scalable and maintainable software architectures, a fundamental guideline revolves around the clear delineation of responsibilities between the （1） layers of the system. According to the principles of Microservices Architecture (MSA), the business logic, which encompasses business rules, workflows, and state management, should be decoupled from the （2） concerns, such as communication protocols, data storage mechanisms, and deployment strategies. This decoupling fosters a system that is more （3）, facilitating easier updates, rollbacks, and integration with new technologies. However, achieving this decoupling necessitates a profound comprehension of the service boundaries and the capability to （4） these boundaries in a manner that promotes both flexibility and resilience. Despite the inherent complexities, this approach has been widely （5） in numerous high-performance software systems.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "Establish",
      "Confuse",
      "Disregard",
      "Collapse"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 62,
      "belong_page": 1,
      "question_id": 512970,
      "question_title": "<p>In the realm of designing scalable and maintainable software architectures, a fundamental guideline revolves around the clear delineation of responsibilities between the （1） layers of the system. According to the principles of Microservices Architecture (MSA), the business logic, which encompasses business rules, workflows, and state management, should be decoupled from the （2） concerns, such as communication protocols, data storage mechanisms, and deployment strategies. This decoupling fosters a system that is more （3）, facilitating easier updates, rollbacks, and integration with new technologies. However, achieving this decoupling necessitates a profound comprehension of the service boundaries and the capability to （4） these boundaries in a manner that promotes both flexibility and resilience. Despite the inherent complexities, this approach has been widely （5） in numerous high-performance software systems.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 512966,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "Establish",
        "Confuse",
        "Disregard",
        "Collapse"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 512971,
    "question_title": "<p>In the realm of designing scalable and maintainable software architectures, a fundamental guideline revolves around the clear delineation of responsibilities between the （1） layers of the system. According to the principles of Microservices Architecture (MSA), the business logic, which encompasses business rules, workflows, and state management, should be decoupled from the （2） concerns, such as communication protocols, data storage mechanisms, and deployment strategies. This decoupling fosters a system that is more （3）, facilitating easier updates, rollbacks, and integration with new technologies. However, achieving this decoupling necessitates a profound comprehension of the service boundaries and the capability to （4） these boundaries in a manner that promotes both flexibility and resilience. Despite the inherent complexities, this approach has been widely （5） in numerous high-performance software systems.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "Dismissed",
      "Adopted",
      "Contested",
      "Rejected"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 63,
      "belong_page": 1,
      "question_id": 512971,
      "question_title": "<p>In the realm of designing scalable and maintainable software architectures, a fundamental guideline revolves around the clear delineation of responsibilities between the （1） layers of the system. According to the principles of Microservices Architecture (MSA), the business logic, which encompasses business rules, workflows, and state management, should be decoupled from the （2） concerns, such as communication protocols, data storage mechanisms, and deployment strategies. This decoupling fosters a system that is more （3）, facilitating easier updates, rollbacks, and integration with new technologies. However, achieving this decoupling necessitates a profound comprehension of the service boundaries and the capability to （4） these boundaries in a manner that promotes both flexibility and resilience. Despite the inherent complexities, this approach has been widely （5） in numerous high-performance software systems.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 512966,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "Dismissed",
        "Adopted",
        "Contested",
        "Rejected"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 513353,
    "question_title": "In the context of designing a scalable e-commerce system, the following architectural decisions must be evaluated:<p>To ensure high availability and fault tolerance, the system should adopt the （1） architecture pattern, which replicates data across multiple nodes and allows requests to be routed to functioning instances.</p><p>The （2） design principle mandates that a class or module should have only one reason to change, thereby enhancing maintainability.</p><p>When prioritizing system performance over consistency in a distributed database, the system aligns with the （3） principle of the CAP theorem.</p><p>Containerization technologies like Docker facilitate （4） by packaging an application and its dependencies into a standardized unit.</p><p>The （5） layer in a microservices architecture is responsible for routing requests to the appropriate service and managing load balancing.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "Monolithic",
      "Client-Server",
      "Replication",
      "Event-Driven"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 64,
      "belong_page": 1,
      "question_id": 513353,
      "question_title": "In the context of designing a scalable e-commerce system, the following architectural decisions must be evaluated:<p>To ensure high availability and fault tolerance, the system should adopt the （1） architecture pattern, which replicates data across multiple nodes and allows requests to be routed to functioning instances.</p><p>The （2） design principle mandates that a class or module should have only one reason to change, thereby enhancing maintainability.</p><p>When prioritizing system performance over consistency in a distributed database, the system aligns with the （3） principle of the CAP theorem.</p><p>Containerization technologies like Docker facilitate （4） by packaging an application and its dependencies into a standardized unit.</p><p>The （5） layer in a microservices architecture is responsible for routing requests to the appropriate service and managing load balancing.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 513352,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "Monolithic",
        "Client-Server",
        "Replication",
        "Event-Driven"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 513354,
    "question_title": "In the context of designing a scalable e-commerce system, the following architectural decisions must be evaluated:<p>To ensure high availability and fault tolerance, the system should adopt the （1） architecture pattern, which replicates data across multiple nodes and allows requests to be routed to functioning instances.</p><p>The （2） design principle mandates that a class or module should have only one reason to change, thereby enhancing maintainability.</p><p>When prioritizing system performance over consistency in a distributed database, the system aligns with the （3） principle of the CAP theorem.</p><p>Containerization technologies like Docker facilitate （4） by packaging an application and its dependencies into a standardized unit.</p><p>The （5） layer in a microservices architecture is responsible for routing requests to the appropriate service and managing load balancing.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "Single Responsibility",
      "Open/Closed",
      "Dependency Inversion",
      "Interface Segregation"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 65,
      "belong_page": 1,
      "question_id": 513354,
      "question_title": "In the context of designing a scalable e-commerce system, the following architectural decisions must be evaluated:<p>To ensure high availability and fault tolerance, the system should adopt the （1） architecture pattern, which replicates data across multiple nodes and allows requests to be routed to functioning instances.</p><p>The （2） design principle mandates that a class or module should have only one reason to change, thereby enhancing maintainability.</p><p>When prioritizing system performance over consistency in a distributed database, the system aligns with the （3） principle of the CAP theorem.</p><p>Containerization technologies like Docker facilitate （4） by packaging an application and its dependencies into a standardized unit.</p><p>The （5） layer in a microservices architecture is responsible for routing requests to the appropriate service and managing load balancing.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 513352,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "Single Responsibility",
        "Open/Closed",
        "Dependency Inversion",
        "Interface Segregation"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 513355,
    "question_title": "In the context of designing a scalable e-commerce system, the following architectural decisions must be evaluated:<p>To ensure high availability and fault tolerance, the system should adopt the （1） architecture pattern, which replicates data across multiple nodes and allows requests to be routed to functioning instances.</p><p>The （2） design principle mandates that a class or module should have only one reason to change, thereby enhancing maintainability.</p><p>When prioritizing system performance over consistency in a distributed database, the system aligns with the （3） principle of the CAP theorem.</p><p>Containerization technologies like Docker facilitate （4） by packaging an application and its dependencies into a standardized unit.</p><p>The （5） layer in a microservices architecture is responsible for routing requests to the appropriate service and managing load balancing.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "Consistency",
      "Partition Tolerance",
      "Availability",
      "Atomicity"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 66,
      "belong_page": 1,
      "question_id": 513355,
      "question_title": "In the context of designing a scalable e-commerce system, the following architectural decisions must be evaluated:<p>To ensure high availability and fault tolerance, the system should adopt the （1） architecture pattern, which replicates data across multiple nodes and allows requests to be routed to functioning instances.</p><p>The （2） design principle mandates that a class or module should have only one reason to change, thereby enhancing maintainability.</p><p>When prioritizing system performance over consistency in a distributed database, the system aligns with the （3） principle of the CAP theorem.</p><p>Containerization technologies like Docker facilitate （4） by packaging an application and its dependencies into a standardized unit.</p><p>The （5） layer in a microservices architecture is responsible for routing requests to the appropriate service and managing load balancing.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 513352,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "Consistency",
        "Partition Tolerance",
        "Availability",
        "Atomicity"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 513356,
    "question_title": "In the context of designing a scalable e-commerce system, the following architectural decisions must be evaluated:<p>To ensure high availability and fault tolerance, the system should adopt the （1） architecture pattern, which replicates data across multiple nodes and allows requests to be routed to functioning instances.</p><p>The （2） design principle mandates that a class or module should have only one reason to change, thereby enhancing maintainability.</p><p>When prioritizing system performance over consistency in a distributed database, the system aligns with the （3） principle of the CAP theorem.</p><p>Containerization technologies like Docker facilitate （4） by packaging an application and its dependencies into a standardized unit.</p><p>The （5） layer in a microservices architecture is responsible for routing requests to the appropriate service and managing load balancing.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "Horizontal Scaling",
      "Vertical Scaling",
      "Infrastructure as Code",
      "Service Mesh"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 67,
      "belong_page": 1,
      "question_id": 513356,
      "question_title": "In the context of designing a scalable e-commerce system, the following architectural decisions must be evaluated:<p>To ensure high availability and fault tolerance, the system should adopt the （1） architecture pattern, which replicates data across multiple nodes and allows requests to be routed to functioning instances.</p><p>The （2） design principle mandates that a class or module should have only one reason to change, thereby enhancing maintainability.</p><p>When prioritizing system performance over consistency in a distributed database, the system aligns with the （3） principle of the CAP theorem.</p><p>Containerization technologies like Docker facilitate （4） by packaging an application and its dependencies into a standardized unit.</p><p>The （5） layer in a microservices architecture is responsible for routing requests to the appropriate service and managing load balancing.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 513352,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "Horizontal Scaling",
        "Vertical Scaling",
        "Infrastructure as Code",
        "Service Mesh"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 513357,
    "question_title": "In the context of designing a scalable e-commerce system, the following architectural decisions must be evaluated:<p>To ensure high availability and fault tolerance, the system should adopt the （1） architecture pattern, which replicates data across multiple nodes and allows requests to be routed to functioning instances.</p><p>The （2） design principle mandates that a class or module should have only one reason to change, thereby enhancing maintainability.</p><p>When prioritizing system performance over consistency in a distributed database, the system aligns with the （3） principle of the CAP theorem.</p><p>Containerization technologies like Docker facilitate （4） by packaging an application and its dependencies into a standardized unit.</p><p>The （5） layer in a microservices architecture is responsible for routing requests to the appropriate service and managing load balancing.</p>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "Circuit Breaker",
      "Service Registry",
      "Message Broker",
      "API Gateway"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 68,
      "belong_page": 1,
      "question_id": 513357,
      "question_title": "In the context of designing a scalable e-commerce system, the following architectural decisions must be evaluated:<p>To ensure high availability and fault tolerance, the system should adopt the （1） architecture pattern, which replicates data across multiple nodes and allows requests to be routed to functioning instances.</p><p>The （2） design principle mandates that a class or module should have only one reason to change, thereby enhancing maintainability.</p><p>When prioritizing system performance over consistency in a distributed database, the system aligns with the （3） principle of the CAP theorem.</p><p>Containerization technologies like Docker facilitate （4） by packaging an application and its dependencies into a standardized unit.</p><p>The （5） layer in a microservices architecture is responsible for routing requests to the appropriate service and managing load balancing.</p>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 513352,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "Circuit Breaker",
        "Service Registry",
        "Message Broker",
        "API Gateway"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 523305,
    "question_title": "<p>以下英文段落描述了软件质量属性的相关概念，请根据文段回答问题：</p><p>System quality attributes have been of interest to the software community at least since the 1970s. There are a variety of published taxonomies and definitions, and many of them have their own research and practitioner communities. From an （1） perspective , there are three problems with previous discussions of system quality attributes:</p><p>The&nbsp; definitions&nbsp; provided&nbsp; for&nbsp; an&nbsp; attribute&nbsp; are&nbsp; not&nbsp; operational. It is （2） to&nbsp; say&nbsp; that a system&nbsp; will be modifiable. Every system is modifiable&nbsp; with&nbsp; respect to one set of changes and not modifiable with respect to another. The other attributes are similar.</p><p>A focus of discussion is often on which quality a particular aspect belongs to . Is a system failure an aspect of availability , an aspect of security , or an aspect of usability&nbsp; ?&nbsp; All three&nbsp; attribute communities would claim ownership of a system failure.</p><p>Each attribute community has developed its own&nbsp; （3） . The （4） community has “events” arriving at a system , the security community has “attacks” arriving at a system , the availability community has “failure” of a system , and the usability community has “user input”.&nbsp; All of these may actually refer to the same occurrence , but are described using different terms.</p><p>A solution to the first two of these problems （ nonoperational definitions and overlapping attribute concerns ） is to use quality attribute （5） as a means of characterizing quality attributes . A solution to the third problem is to provide a brief discussion of each attribute-concentrating on its underlying concerns-to illustrate the concepts that are fundamental to that attribute community.</p><ol class=\" list-paddingleft-2\" style=\"list-style-type: decimal;\"><li><p>从文中可知，解决前两个问题的方案使用的质量属性是（）。<br/>2.文中提到（）社区使用“events”这个术语。<br/></p><p>3.文中强调每个属性社区都发展了自己的（）。<br/></p><p>4.文中提到说一个系统是“modifiable”的是（）。<br/></p><p>5.从文中可知，这段话是从（）角度来讨论质量属性的。<br/></p></li></ol>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "scenarios",
      "definitions",
      "taxonomies&nbsp;",
      "communities"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 69,
      "belong_page": 1,
      "question_id": 523305,
      "question_title": "<p>以下英文段落描述了软件质量属性的相关概念，请根据文段回答问题：</p><p>System quality attributes have been of interest to the software community at least since the 1970s. There are a variety of published taxonomies and definitions, and many of them have their own research and practitioner communities. From an （1） perspective , there are three problems with previous discussions of system quality attributes:</p><p>The&nbsp; definitions&nbsp; provided&nbsp; for&nbsp; an&nbsp; attribute&nbsp; are&nbsp; not&nbsp; operational. It is （2） to&nbsp; say&nbsp; that a system&nbsp; will be modifiable. Every system is modifiable&nbsp; with&nbsp; respect to one set of changes and not modifiable with respect to another. The other attributes are similar.</p><p>A focus of discussion is often on which quality a particular aspect belongs to . Is a system failure an aspect of availability , an aspect of security , or an aspect of usability&nbsp; ?&nbsp; All three&nbsp; attribute communities would claim ownership of a system failure.</p><p>Each attribute community has developed its own&nbsp; （3） . The （4） community has “events” arriving at a system , the security community has “attacks” arriving at a system , the availability community has “failure” of a system , and the usability community has “user input”.&nbsp; All of these may actually refer to the same occurrence , but are described using different terms.</p><p>A solution to the first two of these problems （ nonoperational definitions and overlapping attribute concerns ） is to use quality attribute （5） as a means of characterizing quality attributes . A solution to the third problem is to provide a brief discussion of each attribute-concentrating on its underlying concerns-to illustrate the concepts that are fundamental to that attribute community.</p><ol class=\" list-paddingleft-2\" style=\"list-style-type: decimal;\"><li><p>从文中可知，解决前两个问题的方案使用的质量属性是（）。<br/>2.文中提到（）社区使用“events”这个术语。<br/></p><p>3.文中强调每个属性社区都发展了自己的（）。<br/></p><p>4.文中提到说一个系统是“modifiable”的是（）。<br/></p><p>5.从文中可知，这段话是从（）角度来讨论质量属性的。<br/></p></li></ol>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 523304,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "scenarios",
        "definitions",
        "taxonomies&nbsp;",
        "communities"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 523306,
    "question_title": "<p>以下英文段落描述了软件质量属性的相关概念，请根据文段回答问题：</p><p>System quality attributes have been of interest to the software community at least since the 1970s. There are a variety of published taxonomies and definitions, and many of them have their own research and practitioner communities. From an （1） perspective , there are three problems with previous discussions of system quality attributes:</p><p>The&nbsp; definitions&nbsp; provided&nbsp; for&nbsp; an&nbsp; attribute&nbsp; are&nbsp; not&nbsp; operational. It is （2） to&nbsp; say&nbsp; that a system&nbsp; will be modifiable. Every system is modifiable&nbsp; with&nbsp; respect to one set of changes and not modifiable with respect to another. The other attributes are similar.</p><p>A focus of discussion is often on which quality a particular aspect belongs to . Is a system failure an aspect of availability , an aspect of security , or an aspect of usability&nbsp; ?&nbsp; All three&nbsp; attribute communities would claim ownership of a system failure.</p><p>Each attribute community has developed its own&nbsp; （3） . The （4） community has “events” arriving at a system , the security community has “attacks” arriving at a system , the availability community has “failure” of a system , and the usability community has “user input”.&nbsp; All of these may actually refer to the same occurrence , but are described using different terms.</p><p>A solution to the first two of these problems （ nonoperational definitions and overlapping attribute concerns ） is to use quality attribute （5） as a means of characterizing quality attributes . A solution to the third problem is to provide a brief discussion of each attribute-concentrating on its underlying concerns-to illustrate the concepts that are fundamental to that attribute community.</p><ol class=\" list-paddingleft-2\" style=\"list-style-type: decimal;\"><li><p>从文中可知，解决前两个问题的方案使用的质量属性是（）。<br/>2.文中提到（）社区使用“events”这个术语。<br/></p><p>3.文中强调每个属性社区都发展了自己的（）。<br/></p><p>4.文中提到说一个系统是“modifiable”的是（）。<br/></p><p>5.从文中可知，这段话是从（）角度来讨论质量属性的。<br/></p></li></ol>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "performance",
      "security",
      "availability&nbsp;",
      "usability"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 70,
      "belong_page": 1,
      "question_id": 523306,
      "question_title": "<p>以下英文段落描述了软件质量属性的相关概念，请根据文段回答问题：</p><p>System quality attributes have been of interest to the software community at least since the 1970s. There are a variety of published taxonomies and definitions, and many of them have their own research and practitioner communities. From an （1） perspective , there are three problems with previous discussions of system quality attributes:</p><p>The&nbsp; definitions&nbsp; provided&nbsp; for&nbsp; an&nbsp; attribute&nbsp; are&nbsp; not&nbsp; operational. It is （2） to&nbsp; say&nbsp; that a system&nbsp; will be modifiable. Every system is modifiable&nbsp; with&nbsp; respect to one set of changes and not modifiable with respect to another. The other attributes are similar.</p><p>A focus of discussion is often on which quality a particular aspect belongs to . Is a system failure an aspect of availability , an aspect of security , or an aspect of usability&nbsp; ?&nbsp; All three&nbsp; attribute communities would claim ownership of a system failure.</p><p>Each attribute community has developed its own&nbsp; （3） . The （4） community has “events” arriving at a system , the security community has “attacks” arriving at a system , the availability community has “failure” of a system , and the usability community has “user input”.&nbsp; All of these may actually refer to the same occurrence , but are described using different terms.</p><p>A solution to the first two of these problems （ nonoperational definitions and overlapping attribute concerns ） is to use quality attribute （5） as a means of characterizing quality attributes . A solution to the third problem is to provide a brief discussion of each attribute-concentrating on its underlying concerns-to illustrate the concepts that are fundamental to that attribute community.</p><ol class=\" list-paddingleft-2\" style=\"list-style-type: decimal;\"><li><p>从文中可知，解决前两个问题的方案使用的质量属性是（）。<br/>2.文中提到（）社区使用“events”这个术语。<br/></p><p>3.文中强调每个属性社区都发展了自己的（）。<br/></p><p>4.文中提到说一个系统是“modifiable”的是（）。<br/></p><p>5.从文中可知，这段话是从（）角度来讨论质量属性的。<br/></p></li></ol>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 523304,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "performance",
        "security",
        "availability&nbsp;",
        "usability"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 523307,
    "question_title": "<p>以下英文段落描述了软件质量属性的相关概念，请根据文段回答问题：</p><p>System quality attributes have been of interest to the software community at least since the 1970s. There are a variety of published taxonomies and definitions, and many of them have their own research and practitioner communities. From an （1） perspective , there are three problems with previous discussions of system quality attributes:</p><p>The&nbsp; definitions&nbsp; provided&nbsp; for&nbsp; an&nbsp; attribute&nbsp; are&nbsp; not&nbsp; operational. It is （2） to&nbsp; say&nbsp; that a system&nbsp; will be modifiable. Every system is modifiable&nbsp; with&nbsp; respect to one set of changes and not modifiable with respect to another. The other attributes are similar.</p><p>A focus of discussion is often on which quality a particular aspect belongs to . Is a system failure an aspect of availability , an aspect of security , or an aspect of usability&nbsp; ?&nbsp; All three&nbsp; attribute communities would claim ownership of a system failure.</p><p>Each attribute community has developed its own&nbsp; （3） . The （4） community has “events” arriving at a system , the security community has “attacks” arriving at a system , the availability community has “failure” of a system , and the usability community has “user input”.&nbsp; All of these may actually refer to the same occurrence , but are described using different terms.</p><p>A solution to the first two of these problems （ nonoperational definitions and overlapping attribute concerns ） is to use quality attribute （5） as a means of characterizing quality attributes . A solution to the third problem is to provide a brief discussion of each attribute-concentrating on its underlying concerns-to illustrate the concepts that are fundamental to that attribute community.</p><ol class=\" list-paddingleft-2\" style=\"list-style-type: decimal;\"><li><p>从文中可知，解决前两个问题的方案使用的质量属性是（）。<br/>2.文中提到（）社区使用“events”这个术语。<br/></p><p>3.文中强调每个属性社区都发展了自己的（）。<br/></p><p>4.文中提到说一个系统是“modifiable”的是（）。<br/></p><p>5.从文中可知，这段话是从（）角度来讨论质量属性的。<br/></p></li></ol>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "scenarios",
      "vocabulary",
      "solutions",
      "problems"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 71,
      "belong_page": 1,
      "question_id": 523307,
      "question_title": "<p>以下英文段落描述了软件质量属性的相关概念，请根据文段回答问题：</p><p>System quality attributes have been of interest to the software community at least since the 1970s. There are a variety of published taxonomies and definitions, and many of them have their own research and practitioner communities. From an （1） perspective , there are three problems with previous discussions of system quality attributes:</p><p>The&nbsp; definitions&nbsp; provided&nbsp; for&nbsp; an&nbsp; attribute&nbsp; are&nbsp; not&nbsp; operational. It is （2） to&nbsp; say&nbsp; that a system&nbsp; will be modifiable. Every system is modifiable&nbsp; with&nbsp; respect to one set of changes and not modifiable with respect to another. The other attributes are similar.</p><p>A focus of discussion is often on which quality a particular aspect belongs to . Is a system failure an aspect of availability , an aspect of security , or an aspect of usability&nbsp; ?&nbsp; All three&nbsp; attribute communities would claim ownership of a system failure.</p><p>Each attribute community has developed its own&nbsp; （3） . The （4） community has “events” arriving at a system , the security community has “attacks” arriving at a system , the availability community has “failure” of a system , and the usability community has “user input”.&nbsp; All of these may actually refer to the same occurrence , but are described using different terms.</p><p>A solution to the first two of these problems （ nonoperational definitions and overlapping attribute concerns ） is to use quality attribute （5） as a means of characterizing quality attributes . A solution to the third problem is to provide a brief discussion of each attribute-concentrating on its underlying concerns-to illustrate the concepts that are fundamental to that attribute community.</p><ol class=\" list-paddingleft-2\" style=\"list-style-type: decimal;\"><li><p>从文中可知，解决前两个问题的方案使用的质量属性是（）。<br/>2.文中提到（）社区使用“events”这个术语。<br/></p><p>3.文中强调每个属性社区都发展了自己的（）。<br/></p><p>4.文中提到说一个系统是“modifiable”的是（）。<br/></p><p>5.从文中可知，这段话是从（）角度来讨论质量属性的。<br/></p></li></ol>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 523304,
      "score_rule": "",
      "material_text": null,
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "scenarios",
        "vocabulary",
        "solutions",
        "problems"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 523308,
    "question_title": "<p>以下英文段落描述了软件质量属性的相关概念，请根据文段回答问题：</p><p>System quality attributes have been of interest to the software community at least since the 1970s. There are a variety of published taxonomies and definitions, and many of them have their own research and practitioner communities. From an （1） perspective , there are three problems with previous discussions of system quality attributes:</p><p>The&nbsp; definitions&nbsp; provided&nbsp; for&nbsp; an&nbsp; attribute&nbsp; are&nbsp; not&nbsp; operational. It is （2） to&nbsp; say&nbsp; that a system&nbsp; will be modifiable. Every system is modifiable&nbsp; with&nbsp; respect to one set of changes and not modifiable with respect to another. The other attributes are similar.</p><p>A focus of discussion is often on which quality a particular aspect belongs to . Is a system failure an aspect of availability , an aspect of security , or an aspect of usability&nbsp; ?&nbsp; All three&nbsp; attribute communities would claim ownership of a system failure.</p><p>Each attribute community has developed its own&nbsp; （3） . The （4） community has “events” arriving at a system , the security community has “attacks” arriving at a system , the availability community has “failure” of a system , and the usability community has “user input”.&nbsp; All of these may actually refer to the same occurrence , but are described using different terms.</p><p>A solution to the first two of these problems （ nonoperational definitions and overlapping attribute concerns ） is to use quality attribute （5） as a means of characterizing quality attributes . A solution to the third problem is to provide a brief discussion of each attribute-concentrating on its underlying concerns-to illustrate the concepts that are fundamental to that attribute community.</p><ol class=\" list-paddingleft-2\" style=\"list-style-type: decimal;\"><li><p>从文中可知，解决前两个问题的方案使用的质量属性是（）。<br/>2.文中提到（）社区使用“events”这个术语。<br/></p><p>3.文中强调每个属性社区都发展了自己的（）。<br/></p><p>4.文中提到说一个系统是“modifiable”的是（）。<br/></p><p>5.从文中可知，这段话是从（）角度来讨论质量属性的。<br/></p></li></ol>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "&nbsp;meaningful",
      "operational",
      "meaningless&nbsp;",
      "useful"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 72,
      "belong_page": 1,
      "question_id": 523308,
      "question_title": "<p>以下英文段落描述了软件质量属性的相关概念，请根据文段回答问题：</p><p>System quality attributes have been of interest to the software community at least since the 1970s. There are a variety of published taxonomies and definitions, and many of them have their own research and practitioner communities. From an （1） perspective , there are three problems with previous discussions of system quality attributes:</p><p>The&nbsp; definitions&nbsp; provided&nbsp; for&nbsp; an&nbsp; attribute&nbsp; are&nbsp; not&nbsp; operational. It is （2） to&nbsp; say&nbsp; that a system&nbsp; will be modifiable. Every system is modifiable&nbsp; with&nbsp; respect to one set of changes and not modifiable with respect to another. The other attributes are similar.</p><p>A focus of discussion is often on which quality a particular aspect belongs to . Is a system failure an aspect of availability , an aspect of security , or an aspect of usability&nbsp; ?&nbsp; All three&nbsp; attribute communities would claim ownership of a system failure.</p><p>Each attribute community has developed its own&nbsp; （3） . The （4） community has “events” arriving at a system , the security community has “attacks” arriving at a system , the availability community has “failure” of a system , and the usability community has “user input”.&nbsp; All of these may actually refer to the same occurrence , but are described using different terms.</p><p>A solution to the first two of these problems （ nonoperational definitions and overlapping attribute concerns ） is to use quality attribute （5） as a means of characterizing quality attributes . A solution to the third problem is to provide a brief discussion of each attribute-concentrating on its underlying concerns-to illustrate the concepts that are fundamental to that attribute community.</p><ol class=\" list-paddingleft-2\" style=\"list-style-type: decimal;\"><li><p>从文中可知，解决前两个问题的方案使用的质量属性是（）。<br/>2.文中提到（）社区使用“events”这个术语。<br/></p><p>3.文中强调每个属性社区都发展了自己的（）。<br/></p><p>4.文中提到说一个系统是“modifiable”的是（）。<br/></p><p>5.从文中可知，这段话是从（）角度来讨论质量属性的。<br/></p></li></ol>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 523304,
      "score_rule": "",
      "material_text": null,
      "sort_son": "4",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "&nbsp;meaningful",
        "operational",
        "meaningless&nbsp;",
        "useful"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "4497",
    "section_name": "补充知识 - 专业英语",
    "question_id": 523309,
    "question_title": "<p>以下英文段落描述了软件质量属性的相关概念，请根据文段回答问题：</p><p>System quality attributes have been of interest to the software community at least since the 1970s. There are a variety of published taxonomies and definitions, and many of them have their own research and practitioner communities. From an （1） perspective , there are three problems with previous discussions of system quality attributes:</p><p>The&nbsp; definitions&nbsp; provided&nbsp; for&nbsp; an&nbsp; attribute&nbsp; are&nbsp; not&nbsp; operational. It is （2） to&nbsp; say&nbsp; that a system&nbsp; will be modifiable. Every system is modifiable&nbsp; with&nbsp; respect to one set of changes and not modifiable with respect to another. The other attributes are similar.</p><p>A focus of discussion is often on which quality a particular aspect belongs to . Is a system failure an aspect of availability , an aspect of security , or an aspect of usability&nbsp; ?&nbsp; All three&nbsp; attribute communities would claim ownership of a system failure.</p><p>Each attribute community has developed its own&nbsp; （3） . The （4） community has “events” arriving at a system , the security community has “attacks” arriving at a system , the availability community has “failure” of a system , and the usability community has “user input”.&nbsp; All of these may actually refer to the same occurrence , but are described using different terms.</p><p>A solution to the first two of these problems （ nonoperational definitions and overlapping attribute concerns ） is to use quality attribute （5） as a means of characterizing quality attributes . A solution to the third problem is to provide a brief discussion of each attribute-concentrating on its underlying concerns-to illustrate the concepts that are fundamental to that attribute community.</p><ol class=\" list-paddingleft-2\" style=\"list-style-type: decimal;\"><li><p>从文中可知，解决前两个问题的方案使用的质量属性是（）。<br/>2.文中提到（）社区使用“events”这个术语。<br/></p><p>3.文中强调每个属性社区都发展了自己的（）。<br/></p><p>4.文中提到说一个系统是“modifiable”的是（）。<br/></p><p>5.从文中可知，这段话是从（）角度来讨论质量属性的。<br/></p></li></ol>",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "architect&#39;s",
      "developer",
      "tester",
      "user"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 73,
      "belong_page": 1,
      "question_id": 523309,
      "question_title": "<p>以下英文段落描述了软件质量属性的相关概念，请根据文段回答问题：</p><p>System quality attributes have been of interest to the software community at least since the 1970s. There are a variety of published taxonomies and definitions, and many of them have their own research and practitioner communities. From an （1） perspective , there are three problems with previous discussions of system quality attributes:</p><p>The&nbsp; definitions&nbsp; provided&nbsp; for&nbsp; an&nbsp; attribute&nbsp; are&nbsp; not&nbsp; operational. It is （2） to&nbsp; say&nbsp; that a system&nbsp; will be modifiable. Every system is modifiable&nbsp; with&nbsp; respect to one set of changes and not modifiable with respect to another. The other attributes are similar.</p><p>A focus of discussion is often on which quality a particular aspect belongs to . Is a system failure an aspect of availability , an aspect of security , or an aspect of usability&nbsp; ?&nbsp; All three&nbsp; attribute communities would claim ownership of a system failure.</p><p>Each attribute community has developed its own&nbsp; （3） . The （4） community has “events” arriving at a system , the security community has “attacks” arriving at a system , the availability community has “failure” of a system , and the usability community has “user input”.&nbsp; All of these may actually refer to the same occurrence , but are described using different terms.</p><p>A solution to the first two of these problems （ nonoperational definitions and overlapping attribute concerns ） is to use quality attribute （5） as a means of characterizing quality attributes . A solution to the third problem is to provide a brief discussion of each attribute-concentrating on its underlying concerns-to illustrate the concepts that are fundamental to that attribute community.</p><ol class=\" list-paddingleft-2\" style=\"list-style-type: decimal;\"><li><p>从文中可知，解决前两个问题的方案使用的质量属性是（）。<br/>2.文中提到（）社区使用“events”这个术语。<br/></p><p>3.文中强调每个属性社区都发展了自己的（）。<br/></p><p>4.文中提到说一个系统是“modifiable”的是（）。<br/></p><p>5.从文中可知，这段话是从（）角度来讨论质量属性的。<br/></p></li></ol>",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 523304,
      "score_rule": "",
      "material_text": null,
      "sort_son": "5",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "architect&#39;s",
        "developer",
        "tester",
        "user"
      ]
    },
    "crawl_time": 1753176911.3340533
  },
  {
    "section_id": "8350",
    "section_name": "补充知识 - 法律法规",
    "question_id": 371996,
    "question_title": "某软件公司根据客户需求，组织研发出一套应用软件，并与本公司的职工签订了保密协议，但是本公司某研发人员将该软件中的算法和部分程序代码公开发表。该软件研发人（1） ，该软件公司丧失了这套应用软件的 （2）。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "与公司共同享有该软件的著作权，是正常行使发表权",
      "与公司共同享有该软件的著作权，是正常行使信息网络传播权",
      "不享有该软件的著作权，其行为涉嫌侵犯公司的专利权",
      "不享有该软件的著作权，其行为涉嫌侵犯公司的软件著作权"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 371996,
      "question_title": "某软件公司根据客户需求，组织研发出一套应用软件，并与本公司的职工签订了保密协议，但是本公司某研发人员将该软件中的算法和部分程序代码公开发表。该软件研发人（1） ，该软件公司丧失了这套应用软件的 （2）。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371995,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "与公司共同享有该软件的著作权，是正常行使发表权",
        "与公司共同享有该软件的著作权，是正常行使信息网络传播权",
        "不享有该软件的著作权，其行为涉嫌侵犯公司的专利权",
        "不享有该软件的著作权，其行为涉嫌侵犯公司的软件著作权"
      ]
    },
    "crawl_time": 1753176912.6018193
  },
  {
    "section_id": "8350",
    "section_name": "补充知识 - 法律法规",
    "question_id": 371997,
    "question_title": "某软件公司根据客户需求，组织研发出一套应用软件，并与本公司的职工签订了保密协议，但是本公司某研发人员将该软件中的算法和部分程序代码公开发表。该软件研发人（1） ，该软件公司丧失了这套应用软件的 （2）。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "计算机软件著作权",
      "发表权",
      "专利权",
      "商业秘密"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 371997,
      "question_title": "某软件公司根据客户需求，组织研发出一套应用软件，并与本公司的职工签订了保密协议，但是本公司某研发人员将该软件中的算法和部分程序代码公开发表。该软件研发人（1） ，该软件公司丧失了这套应用软件的 （2）。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 371995,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "计算机软件著作权",
        "发表权",
        "专利权",
        "商业秘密"
      ]
    },
    "crawl_time": 1753176912.6018193
  },
  {
    "section_id": "8350",
    "section_name": "补充知识 - 法律法规",
    "question_id": 373665,
    "question_title": "我国标准分为强制性标准和推荐性标准，标准的编号由标准代号、标准发布顺序号和标准发布年代号构成，（29）为强制性地方标准的代号。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "DB11",
      "DB11/T",
      "GB/T",
      "SJ/T"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 373665,
      "question_title": "我国标准分为强制性标准和推荐性标准，标准的编号由标准代号、标准发布顺序号和标准发布年代号构成，（29）为强制性地方标准的代号。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 373665,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "DB11",
        "DB11/T",
        "GB/T",
        "SJ/T"
      ]
    },
    "crawl_time": 1753176912.6018193
  },
  {
    "section_id": "8350",
    "section_name": "补充知识 - 法律法规",
    "question_id": 500537,
    "question_title": "建模、 （ ） 和基于数据融合的数字线程是数字孪生体的三项核心技术。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "增强现实",
      "仿真",
      "机器学习",
      "区块链"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 500537,
      "question_title": "建模、 （ ） 和基于数据融合的数字线程是数字孪生体的三项核心技术。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 500537,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "增强现实",
        "仿真",
        "机器学习",
        "区块链"
      ]
    },
    "crawl_time": 1753176912.6018193
  },
  {
    "section_id": "8366",
    "section_name": "补充知识 - 嵌入式系统分析与设计",
    "question_id": 369366,
    "question_title": "在嵌入式处理器中，以一种微处理器内核为核心，集成部分内存和外设，称为 （65） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "MPU",
      "MCU",
      "DSP",
      "SoC"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 369366,
      "question_title": "在嵌入式处理器中，以一种微处理器内核为核心，集成部分内存和外设，称为 （65） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 369366,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "MPU",
        "MCU",
        "DSP",
        "SoC"
      ]
    },
    "crawl_time": 1753176913.8792818
  },
  {
    "section_id": "8366",
    "section_name": "补充知识 - 嵌入式系统分析与设计",
    "question_id": 376810,
    "question_title": "<p>以下存储器中不可以多次擦写的是 （&nbsp; ） 。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " FLASH ",
      " PROM ",
      " EPROM ",
      " EEPROM "
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 376810,
      "question_title": "<p>以下存储器中不可以多次擦写的是 （&nbsp; ） 。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 376810,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        " FLASH ",
        " PROM ",
        " EPROM ",
        " EEPROM "
      ]
    },
    "crawl_time": 1753176913.8792818
  },
  {
    "section_id": "8366",
    "section_name": "补充知识 - 嵌入式系统分析与设计",
    "question_id": 490288,
    "question_title": "以下嵌入式操作系统属于宏内核的是 （65） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "VRTX",
      "嵌入式Linux",
      "L4",
      "WinCE"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 490288,
      "question_title": "以下嵌入式操作系统属于宏内核的是 （65） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 490288,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "VRTX",
        "嵌入式Linux",
        "L4",
        "WinCE"
      ]
    },
    "crawl_time": 1753176913.8792818
  },
  {
    "section_id": "8366",
    "section_name": "补充知识 - 嵌入式系统分析与设计",
    "question_id": 499122,
    "question_title": "嵌入式操作系统与通用操作系统相比，通常不具有 （1） 特点；下列嵌入式操作系统的调度算法中， （2） 是基于任务周期的。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "可剪裁性",
      "可移植性",
      "丰富的图形用户界面",
      "强实时性"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 499122,
      "question_title": "嵌入式操作系统与通用操作系统相比，通常不具有 （1） 特点；下列嵌入式操作系统的调度算法中， （2） 是基于任务周期的。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 499121,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "可剪裁性",
        "可移植性",
        "丰富的图形用户界面",
        "强实时性"
      ]
    },
    "crawl_time": 1753176913.8792818
  },
  {
    "section_id": "8366",
    "section_name": "补充知识 - 嵌入式系统分析与设计",
    "question_id": 499123,
    "question_title": "嵌入式操作系统与通用操作系统相比，通常不具有 （1） 特点；下列嵌入式操作系统的调度算法中， （2） 是基于任务周期的。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "EDF",
      "LLF",
      "RMS",
      "时间片轮转"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 499123,
      "question_title": "嵌入式操作系统与通用操作系统相比，通常不具有 （1） 特点；下列嵌入式操作系统的调度算法中， （2） 是基于任务周期的。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 499121,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "EDF",
        "LLF",
        "RMS",
        "时间片轮转"
      ]
    },
    "crawl_time": 1753176913.8792818
  },
  {
    "section_id": "8366",
    "section_name": "补充知识 - 嵌入式系统分析与设计",
    "question_id": 500537,
    "question_title": "建模、 （ ） 和基于数据融合的数字线程是数字孪生体的三项核心技术。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "增强现实",
      "仿真",
      "机器学习",
      "区块链"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 500537,
      "question_title": "建模、 （ ） 和基于数据融合的数字线程是数字孪生体的三项核心技术。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 500537,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "增强现实",
        "仿真",
        "机器学习",
        "区块链"
      ]
    },
    "crawl_time": 1753176913.8792818
  },
  {
    "section_id": "8366",
    "section_name": "补充知识 - 嵌入式系统分析与设计",
    "question_id": 502544,
    "question_title": "与传统数据库相比，嵌入式数据库的主要特点不包括 （1） ；基于文件的嵌入式数据库系统架构典型产品是 （2） 。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "嵌入式",
      "实时性",
      "伸缩性",
      "分布性"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 502544,
      "question_title": "与传统数据库相比，嵌入式数据库的主要特点不包括 （1） ；基于文件的嵌入式数据库系统架构典型产品是 （2） 。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 502543,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "嵌入式",
        "实时性",
        "伸缩性",
        "分布性"
      ]
    },
    "crawl_time": 1753176913.8792818
  },
  {
    "section_id": "8366",
    "section_name": "补充知识 - 嵌入式系统分析与设计",
    "question_id": 502545,
    "question_title": "与传统数据库相比，嵌入式数据库的主要特点不包括 （1） ；基于文件的嵌入式数据库系统架构典型产品是 （2） 。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "SQLite",
      "Oracle",
      "eXtremeDB",
      "Firebird"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 502545,
      "question_title": "与传统数据库相比，嵌入式数据库的主要特点不包括 （1） ；基于文件的嵌入式数据库系统架构典型产品是 （2） 。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 502543,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "SQLite",
        "Oracle",
        "eXtremeDB",
        "Firebird"
      ]
    },
    "crawl_time": 1753176913.8792818
  },
  {
    "section_id": "8366",
    "section_name": "补充知识 - 嵌入式系统分析与设计",
    "question_id": 503053,
    "question_title": "嵌入式系统分为三层：应用软件、操作系统软件和中间件，中间件的主要作用是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "提供用户界面",
      "屏蔽底层操作系统的差异",
      "管理存储设备",
      "进行数据加密"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 503053,
      "question_title": "嵌入式系统分为三层：应用软件、操作系统软件和中间件，中间件的主要作用是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 503053,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "提供用户界面",
        "屏蔽底层操作系统的差异",
        "管理存储设备",
        "进行数据加密"
      ]
    },
    "crawl_time": 1753176913.8792818
  },
  {
    "section_id": "8366",
    "section_name": "补充知识 - 嵌入式系统分析与设计",
    "question_id": 503596,
    "question_title": "关于嵌入式操作系统内核，以下说法正确的是 （1） ；微内核架构中，进程间通信（IPC）通常通过 （2） 实现。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "宏内核比微内核可维护性更高",
      "微内核运行在用户空间，宏内核运行在内核空间",
      "宏内核提供更高的性能，微内核提供更高的模块化和安全性",
      "微内核总是比宏内核小"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 503596,
      "question_title": "关于嵌入式操作系统内核，以下说法正确的是 （1） ；微内核架构中，进程间通信（IPC）通常通过 （2） 实现。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 503595,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "宏内核比微内核可维护性更高",
        "微内核运行在用户空间，宏内核运行在内核空间",
        "宏内核提供更高的性能，微内核提供更高的模块化和安全性",
        "微内核总是比宏内核小"
      ]
    },
    "crawl_time": 1753176913.8792818
  },
  {
    "section_id": "8366",
    "section_name": "补充知识 - 嵌入式系统分析与设计",
    "question_id": 503597,
    "question_title": "关于嵌入式操作系统内核，以下说法正确的是 （1） ；微内核架构中，进程间通信（IPC）通常通过 （2） 实现。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "直接内存访问（DMA）",
      "消息传递机制",
      "共享内存",
      "硬件中断"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 503597,
      "question_title": "关于嵌入式操作系统内核，以下说法正确的是 （1） ；微内核架构中，进程间通信（IPC）通常通过 （2） 实现。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 503595,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "直接内存访问（DMA）",
        "消息传递机制",
        "共享内存",
        "硬件中断"
      ]
    },
    "crawl_time": 1753176913.8792818
  },
  {
    "section_id": "8366",
    "section_name": "补充知识 - 嵌入式系统分析与设计",
    "question_id": 510549,
    "question_title": "与传统数据库相比，嵌入式数据库的主要特点不包括 （1） ；基于文件的嵌入式数据库系统架构典型产品是 （2） 。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "嵌入式",
      "实时性",
      "伸缩性",
      "分布性"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 510549,
      "question_title": "与传统数据库相比，嵌入式数据库的主要特点不包括 （1） ；基于文件的嵌入式数据库系统架构典型产品是 （2） 。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 510548,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "嵌入式",
        "实时性",
        "伸缩性",
        "分布性"
      ]
    },
    "crawl_time": 1753176913.8792818
  },
  {
    "section_id": "8366",
    "section_name": "补充知识 - 嵌入式系统分析与设计",
    "question_id": 510550,
    "question_title": "与传统数据库相比，嵌入式数据库的主要特点不包括 （1） ；基于文件的嵌入式数据库系统架构典型产品是 （2） 。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "SQLite",
      "Oracle",
      "eXtremeDB",
      "Firebird"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 510550,
      "question_title": "与传统数据库相比，嵌入式数据库的主要特点不包括 （1） ；基于文件的嵌入式数据库系统架构典型产品是 （2） 。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 510548,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "SQLite",
        "Oracle",
        "eXtremeDB",
        "Firebird"
      ]
    },
    "crawl_time": 1753176913.8792818
  },
  {
    "section_id": "8366",
    "section_name": "补充知识 - 嵌入式系统分析与设计",
    "question_id": 510658,
    "question_title": "在传统嵌入式系统的硬件组成中 （1） 不是其主要组成部分；片上系统（SoC）的特点是 （2） 。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "微处理器",
      "显示器",
      "存储器",
      "总线"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 510658,
      "question_title": "在传统嵌入式系统的硬件组成中 （1） 不是其主要组成部分；片上系统（SoC）的特点是 （2） 。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 510657,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "微处理器",
        "显示器",
        "存储器",
        "总线"
      ]
    },
    "crawl_time": 1753176913.8792818
  },
  {
    "section_id": "8366",
    "section_name": "补充知识 - 嵌入式系统分析与设计",
    "question_id": 510659,
    "question_title": "在传统嵌入式系统的硬件组成中 （1） 不是其主要组成部分；片上系统（SoC）的特点是 （2） 。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "采用了哈佛结构，编译效率高",
      "专注于浮点运算，弥补了CPU运算速度不足",
      "采用了片内再编程技术，可通过编程配置硬件功能",
      "体积小，重量轻，成本低，但技术保密性差"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 510659,
      "question_title": "在传统嵌入式系统的硬件组成中 （1） 不是其主要组成部分；片上系统（SoC）的特点是 （2） 。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 510657,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "采用了哈佛结构，编译效率高",
        "专注于浮点运算，弥补了CPU运算速度不足",
        "采用了片内再编程技术，可通过编程配置硬件功能",
        "体积小，重量轻，成本低，但技术保密性差"
      ]
    },
    "crawl_time": 1753176913.8792818
  },
  {
    "section_id": "8366",
    "section_name": "补充知识 - 嵌入式系统分析与设计",
    "question_id": 512960,
    "question_title": "嵌入式数据库按照存储位置分类，不包括有 （1） ；下列数据库系统属于典型的嵌入式数据库系统的是 （2） 。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "基于内存的数据库系统",
      "基于文件的数据库",
      "基于服务器的数据库",
      "基于网络的数据库"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 512960,
      "question_title": "嵌入式数据库按照存储位置分类，不包括有 （1） ；下列数据库系统属于典型的嵌入式数据库系统的是 （2） 。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 512959,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "基于内存的数据库系统",
        "基于文件的数据库",
        "基于服务器的数据库",
        "基于网络的数据库"
      ]
    },
    "crawl_time": 1753176913.8792818
  },
  {
    "section_id": "8366",
    "section_name": "补充知识 - 嵌入式系统分析与设计",
    "question_id": 512961,
    "question_title": "嵌入式数据库按照存储位置分类，不包括有 （1） ；下列数据库系统属于典型的嵌入式数据库系统的是 （2） 。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "达梦",
      "SQLite",
      "Oracle",
      "MySQL"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 512961,
      "question_title": "嵌入式数据库按照存储位置分类，不包括有 （1） ；下列数据库系统属于典型的嵌入式数据库系统的是 （2） 。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 512959,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "达梦",
        "SQLite",
        "Oracle",
        "MySQL"
      ]
    },
    "crawl_time": 1753176913.8792818
  },
  {
    "section_id": "8366",
    "section_name": "补充知识 - 嵌入式系统分析与设计",
    "question_id": 513346,
    "question_title": "嵌入式操作系统与通用操作系统相比，通常不具有 （1） 特点；下列嵌入式操作系统的调度算法中， （2） 是基于任务周期的。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "可剪裁性",
      "可移植性",
      "丰富的图形用户界面",
      "强实时性"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 18,
      "belong_page": 1,
      "question_id": 513346,
      "question_title": "嵌入式操作系统与通用操作系统相比，通常不具有 （1） 特点；下列嵌入式操作系统的调度算法中， （2） 是基于任务周期的。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 513345,
      "score_rule": "",
      "material_text": null,
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "可剪裁性",
        "可移植性",
        "丰富的图形用户界面",
        "强实时性"
      ]
    },
    "crawl_time": 1753176913.8792818
  },
  {
    "section_id": "8366",
    "section_name": "补充知识 - 嵌入式系统分析与设计",
    "question_id": 513347,
    "question_title": "嵌入式操作系统与通用操作系统相比，通常不具有 （1） 特点；下列嵌入式操作系统的调度算法中， （2） 是基于任务周期的。",
    "question_type": 9,
    "answer_type": 1,
    "option": [
      "EDF",
      "LLF",
      "RMS",
      "时间片轮转"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 19,
      "belong_page": 1,
      "question_id": 513347,
      "question_title": "嵌入式操作系统与通用操作系统相比，通常不具有 （1） 特点；下列嵌入式操作系统的调度算法中， （2） 是基于任务周期的。",
      "question_type": 9,
      "answer_type": 1,
      "show_type_name": "完形类单选题",
      "new_parent_id": 513345,
      "score_rule": "",
      "material_text": null,
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "EDF",
        "LLF",
        "RMS",
        "时间片轮转"
      ]
    },
    "crawl_time": 1753176913.8792818
  },
  {
    "section_id": "8555",
    "section_name": "补充知识 - 新技术",
    "question_id": 369361,
    "question_title": "边缘计算的特点不包含 （60） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "联接性",
      "高可用性",
      "约束性",
      "分布性"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 369361,
      "question_title": "边缘计算的特点不包含 （60） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 369361,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "联接性",
        "高可用性",
        "约束性",
        "分布性"
      ]
    },
    "crawl_time": 1753176915.0466619
  },
  {
    "section_id": "8555",
    "section_name": "补充知识 - 新技术",
    "question_id": 369362,
    "question_title": "在云计算的三种服务方式中，在灵活性方面 （61） 依次增强。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "SaaS→PaaS→IaaS",
      "PaaS→IaaS→SaaS",
      "IaaS→SaaS→PaaS",
      "PaaS→SaaS→IaaS"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 369362,
      "question_title": "在云计算的三种服务方式中，在灵活性方面 （61） 依次增强。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 369362,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "SaaS→PaaS→IaaS",
        "PaaS→IaaS→SaaS",
        "IaaS→SaaS→PaaS",
        "PaaS→SaaS→IaaS"
      ]
    },
    "crawl_time": 1753176915.0466619
  },
  {
    "section_id": "8555",
    "section_name": "补充知识 - 新技术",
    "question_id": 376805,
    "question_title": "<p>自然语言处理涉及的领域主要不包括 （&nbsp; ） 。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 机器翻译 ",
      " 语义理解 ",
      " 知识图谱 ",
      " 问答系统 "
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 376805,
      "question_title": "<p>自然语言处理涉及的领域主要不包括 （&nbsp; ） 。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 376805,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        " 机器翻译 ",
        " 语义理解 ",
        " 知识图谱 ",
        " 问答系统 "
      ]
    },
    "crawl_time": 1753176915.0466619
  },
  {
    "section_id": "8555",
    "section_name": "补充知识 - 新技术",
    "question_id": 490283,
    "question_title": "（60） 通过对当前场景进行三维语义理解的基础上，主动观察场景内人和物之间的变化，预测可能发生的事件，从而影响之后的行动模式。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "场景自适应",
      "数字线程",
      "机器学习",
      "知识图谱"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 490283,
      "question_title": "（60） 通过对当前场景进行三维语义理解的基础上，主动观察场景内人和物之间的变化，预测可能发生的事件，从而影响之后的行动模式。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 490283,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "场景自适应",
        "数字线程",
        "机器学习",
        "知识图谱"
      ]
    },
    "crawl_time": 1753176915.0466619
  },
  {
    "section_id": "8555",
    "section_name": "补充知识 - 新技术",
    "question_id": 490284,
    "question_title": "边缘计算的业务本质是云计算在数据中心之外汇聚节点的延伸和演进，主要包括云边缘、边缘云和 （61） 三类落地形态。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "CDN",
      "云化网关",
      "区块链",
      "SDN"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 490284,
      "question_title": "边缘计算的业务本质是云计算在数据中心之外汇聚节点的延伸和演进，主要包括云边缘、边缘云和 （61） 三类落地形态。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 490284,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "CDN",
        "云化网关",
        "区块链",
        "SDN"
      ]
    },
    "crawl_time": 1753176915.0466619
  },
  {
    "section_id": "8555",
    "section_name": "补充知识 - 新技术",
    "question_id": 490285,
    "question_title": "（62） 作为标准化软件单元，它将应用及其所有依赖项打包，使应用不再受环境限制，在不同计算环境间快速、可靠地运行。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "虚拟机",
      "瘦终端",
      "容器",
      "超线程"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 490285,
      "question_title": "（62） 作为标准化软件单元，它将应用及其所有依赖项打包，使应用不再受环境限制，在不同计算环境间快速、可靠地运行。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 490285,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "虚拟机",
        "瘦终端",
        "容器",
        "超线程"
      ]
    },
    "crawl_time": 1753176915.0466619
  },
  {
    "section_id": "8555",
    "section_name": "补充知识 - 新技术",
    "question_id": 491756,
    "question_title": "建模、仿真和 （&nbsp; ） 是数字孪生体的三项核心技术。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "增强现实",
      "数字线程",
      "机器学习",
      "区块链"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 491756,
      "question_title": "建模、仿真和 （&nbsp; ） 是数字孪生体的三项核心技术。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 491756,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "增强现实",
        "数字线程",
        "机器学习",
        "区块链"
      ]
    },
    "crawl_time": 1753176915.0466619
  },
  {
    "section_id": "8555",
    "section_name": "补充知识 - 新技术",
    "question_id": 491757,
    "question_title": "在云计算的三种模式中，灵活性依次增强的是 （&nbsp; ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "PaaS→SaaS→IaaS",
      "SaaS→PaaS→IaaS",
      "PaaS→IaaS→SaaS",
      "IaaS→PaaS→SaaS"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 491757,
      "question_title": "在云计算的三种模式中，灵活性依次增强的是 （&nbsp; ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 491757,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "PaaS→SaaS→IaaS",
        "SaaS→PaaS→IaaS",
        "PaaS→IaaS→SaaS",
        "IaaS→PaaS→SaaS"
      ]
    },
    "crawl_time": 1753176915.0466619
  },
  {
    "section_id": "8555",
    "section_name": "补充知识 - 新技术",
    "question_id": 499114,
    "question_title": "以下不属于边缘计算的特点的是 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "联接性",
      "实时性",
      "约束性",
      "分布性"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 499114,
      "question_title": "以下不属于边缘计算的特点的是 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 499114,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "联接性",
        "实时性",
        "约束性",
        "分布性"
      ]
    },
    "crawl_time": 1753176915.0466619
  },
  {
    "section_id": "8555",
    "section_name": "补充知识 - 新技术",
    "question_id": 500537,
    "question_title": "建模、 （ ） 和基于数据融合的数字线程是数字孪生体的三项核心技术。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "增强现实",
      "仿真",
      "机器学习",
      "区块链"
    ],
    "answer": [
      "B"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 500537,
      "question_title": "建模、 （ ） 和基于数据融合的数字线程是数字孪生体的三项核心技术。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 500537,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "B"
      ],
      "option": [
        "增强现实",
        "仿真",
        "机器学习",
        "区块链"
      ]
    },
    "crawl_time": 1753176915.0466619
  },
  {
    "section_id": "8555",
    "section_name": "补充知识 - 新技术",
    "question_id": 502535,
    "question_title": "<p>信息物理系统（CPS）通过集成 （ ） 技术，构建了物理空间与信息空间中各要素的复杂系统。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "感知、计算、通信、决策",
      "感知、分析、控制、决策",
      "感知、分析、通信、优化",
      "感知、计算、通信、控制"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 502535,
      "question_title": "<p>信息物理系统（CPS）通过集成 （ ） 技术，构建了物理空间与信息空间中各要素的复杂系统。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 502535,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "感知、计算、通信、决策",
        "感知、分析、控制、决策",
        "感知、分析、通信、优化",
        "感知、计算、通信、控制"
      ]
    },
    "crawl_time": 1753176915.0466619
  },
  {
    "section_id": "8555",
    "section_name": "补充知识 - 新技术",
    "question_id": 502536,
    "question_title": "<p>以下 （ ） 不是人工智能的关键技术。</p>",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      " 区块链 ",
      " 计算机视觉 ",
      " 自然语言处理 ",
      " 机器学习 "
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 502536,
      "question_title": "<p>以下 （ ） 不是人工智能的关键技术。</p>",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 502536,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        " 区块链 ",
        " 计算机视觉 ",
        " 自然语言处理 ",
        " 机器学习 "
      ]
    },
    "crawl_time": 1753176915.0466619
  },
  {
    "section_id": "8555",
    "section_name": "补充知识 - 新技术",
    "question_id": 503113,
    "question_title": "下面不属于云计算之虚拟化技术的是（ ）。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "KVM",
      "Xen",
      "Hyper-V",
      "LVS"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 503113,
      "question_title": "下面不属于云计算之虚拟化技术的是（ ）。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 503113,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "KVM",
        "Xen",
        "Hyper-V",
        "LVS"
      ]
    },
    "crawl_time": 1753176915.0466619
  },
  {
    "section_id": "8555",
    "section_name": "补充知识 - 新技术",
    "question_id": 503587,
    "question_title": "以下 （ ） 不属于机器人4.0的核心技术。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "云—边—端的无缝协同计算",
      "持续学习与协同学习",
      "工业物联网",
      "场景自适应"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 503587,
      "question_title": "以下 （ ） 不属于机器人4.0的核心技术。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 503587,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "云—边—端的无缝协同计算",
        "持续学习与协同学习",
        "工业物联网",
        "场景自适应"
      ]
    },
    "crawl_time": 1753176915.0466619
  },
  {
    "section_id": "8555",
    "section_name": "补充知识 - 新技术",
    "question_id": 503588,
    "question_title": "边云协同不包括 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "资源协同",
      "数据协同",
      "业务管理协同",
      "网络安全协同"
    ],
    "answer": [
      "D"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 503588,
      "question_title": "边云协同不包括 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 503588,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "D"
      ],
      "option": [
        "资源协同",
        "数据协同",
        "业务管理协同",
        "网络安全协同"
      ]
    },
    "crawl_time": 1753176915.0466619
  },
  {
    "section_id": "8555",
    "section_name": "补充知识 - 新技术",
    "question_id": 510538,
    "question_title": "以下不属于边缘计算特点的是 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "联接性",
      "数据第一入口",
      "集中性",
      "分布性"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 510538,
      "question_title": "以下不属于边缘计算特点的是 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 510538,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "联接性",
        "数据第一入口",
        "集中性",
        "分布性"
      ]
    },
    "crawl_time": 1753176915.0466619
  },
  {
    "section_id": "8555",
    "section_name": "补充知识 - 新技术",
    "question_id": 510649,
    "question_title": "以下不属于人工智能的关键技术的是 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "自然语言处理",
      "计算机视觉",
      "边缘计算",
      "知识图谱"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 510649,
      "question_title": "以下不属于人工智能的关键技术的是 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 510649,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "自然语言处理",
        "计算机视觉",
        "边缘计算",
        "知识图谱"
      ]
    },
    "crawl_time": 1753176915.0466619
  },
  {
    "section_id": "8555",
    "section_name": "补充知识 - 新技术",
    "question_id": 512952,
    "question_title": "人工智能根据是否能真正实现推理、思考和解决问题，可以分为 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "弱人工智能和强人工智能",
      "初级人工智能和高级人工智能",
      "应用型人工智能和研究型人工智能",
      "感知型人工智能和决策型人工智能"
    ],
    "answer": [
      "A"
    ],
    "analysis": "",
    "raw_data": {
      "index": 18,
      "belong_page": 1,
      "question_id": 512952,
      "question_title": "人工智能根据是否能真正实现推理、思考和解决问题，可以分为 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 512952,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "A"
      ],
      "option": [
        "弱人工智能和强人工智能",
        "初级人工智能和高级人工智能",
        "应用型人工智能和研究型人工智能",
        "感知型人工智能和决策型人工智能"
      ]
    },
    "crawl_time": 1753176915.0466619
  },
  {
    "section_id": "8555",
    "section_name": "补充知识 - 新技术",
    "question_id": 513338,
    "question_title": "机器人4.0核心技术不包括 （ ） 。",
    "question_type": 1,
    "answer_type": 1,
    "option": [
      "云—边—段的无缝协同计算",
      "持续学习与协同学习",
      "数据挖掘算法",
      "场景自适应和数据安全"
    ],
    "answer": [
      "C"
    ],
    "analysis": "",
    "raw_data": {
      "index": 19,
      "belong_page": 1,
      "question_id": 513338,
      "question_title": "机器人4.0核心技术不包括 （ ） 。",
      "question_type": 1,
      "answer_type": 1,
      "show_type_name": "单选题",
      "new_parent_id": 513338,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "C"
      ],
      "option": [
        "云—边—段的无缝协同计算",
        "持续学习与协同学习",
        "数据挖掘算法",
        "场景自适应和数据安全"
      ]
    },
    "crawl_time": 1753176915.0466619
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 157510,
    "question_title": "<p>阅读以下关于系统建模的叙述，回答问题。</p><p>【说明】 某软件公司承接了一个软件开发的项目，为共享单车租赁公司开发一套单车租赁服务系统，公司项目组对此项目进行了初步分析，具体描述如下：</p><p>1）非注册用户可通过该系统进行注册，成为平台的合法用户， 其中包括提供身份、手机号等信息，在线支付押金；</p><p>2）非注册用户如果是支付宝会员的，可以通过支付宝的第三方服务直接关联注册成会员，且芝麻信用积分在500分以上的可不用支付押金，少于500分的需要支付押金；</p><p>3）将采购的共享单车注册到租赁服务系统后方可投入使用。即将单车的标识信息录入到系统；</p><p>4）注册用户通过手机或支付宝第三方服务登录到租赁服务系统中，通过扫描二维码或输入车辆编号以进行系统确认，系统后台确认车辆状态后下达解锁指令；</p><p>5）用户在用完车辆后关闭车锁，车辆自身将闭锁状态上报到租赁服务系统中，完成车辆状态的更新和用户租赁费用结算；</p><p>6) 系统不定时推出积分奖励方案，每200积分可提升会员等级，不同等级的会员在费用结算时会有不同的折扣；</p><p>7）系统开辟积分商城，会员可以使用积分去兑换或购买合作伙伴的产品及服务。</p><p>8）每个合作伙伴的类提供了不同的调用方法，系统设计中需要考虑如果公司更换了合作伙伴，应该尽可能少地在系统中修改或创建新类。</p><p>项目组薛工、邹工等分析之后达成一致：</p><p>（1）采用面向对象分析与设计方法开发系统;</p><p>（2）决定采用设计模式来满足上述设计要求，并确定从当前已经熟练掌握的设计模式中进行选择，这些设计模式包括：适配器模式(Adapter)、构造器模式(Builder)、命令模式(Command)、外观模式(Facade)、中介模式(Mediator)、原型模式(Prototype)、代理模式(Proxy)、状态模式(State)和策略模式(Strategy)等。</p><p>【问题1】 （12 分）</p><p>请分析下面 A~R&nbsp;所列出的共享单车租赁服务系统中的概念类及其方法，在图 1-1 所示用例图 （1） ~ （12）处补充所缺失信息。</p><p>A.用户，B.共享单车，C.用户管理，D.注册，E.注销，F.用户查询，G 单车管理，H.租赁，I.归还，J.单车查询，K.费用管理，L.保证金管理，M.租赁费管理，N.数据存储管理， O.用户数据存储管理，P.单车数据存储管理，Q.费用结算，R.身份认证<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191012/1570871020684826.jpg\" title=\"1570871020684826.jpg\" alt=\"1.jpg\"/></p><p>【问题2】（5分）</p><p>设计模式按照其应用模式可以分为三类：创建型、结构型和行为型，请用200字以内文字说明三者的作用。</p><p>【问题3】（8分）</p><p>针对题目中所提出的设计要求（6)~（8)，项目组应该分别选择何种设计模式?请分别用200字以内文字说明具体的解决方案。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题一】(12分）：</p><p>（1）D.注册</p><p>（2）F.用户查询</p><p>（3）C.用户管理</p><p>（4）R.身份认证</p><p>（5）A.用户</p><p>（6）N.数据存储管理</p><p>（7）P.单车数据存储管理</p><p>（8）I.归还</p><p>（9）B.共享单车</p><p>（10）K.费用管理</p><p>（11）L.保证金管理</p><p>（12）Q.费用结算</p><p>【问题二】(5分）：</p><p>创建型模式主要用于创建对象，为设计类实例化新对象提供指南。</p><p>结构型模式主要用于处理类或对象的组合，对类如何设计以形成更大的结构提供指南。</p><p>行为型模式主要用于描述类或对象的交互以及职责的分配，对类之间交互以及分配责任的方式提供指南。</p><p>【问题三】(8分）：</p><p>(1)策略模式</p><p>解决方案：在具有公共接口的独立类中定义每个计算。可以利用该模式创建各种促销类，它们从同一个超类继承。每个类都有相同名称的标准接口方法，用于根据会员等级计算将要折扣的金额总数。</p><p>(2)适配器模式</p><p>解决方案：增加一个类作为适配器，转换类的接口到客户端类期望的另一个接口。实现一个适配器类，这个类为系统的其他部分提供了一个不变的方法供调用，为了集成不同商品供应商提供的优惠计算类，编写一个适配器类的子类，包含调用购买类所需的代码。该子类将系统的调用映射到某个供应商的优惠计算类。如果要更换供应商，那么只需要写一个新的适配器子类，其他保持不变。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 157510,
      "question_title": "<p>阅读以下关于系统建模的叙述，回答问题。</p><p>【说明】 某软件公司承接了一个软件开发的项目，为共享单车租赁公司开发一套单车租赁服务系统，公司项目组对此项目进行了初步分析，具体描述如下：</p><p>1）非注册用户可通过该系统进行注册，成为平台的合法用户， 其中包括提供身份、手机号等信息，在线支付押金；</p><p>2）非注册用户如果是支付宝会员的，可以通过支付宝的第三方服务直接关联注册成会员，且芝麻信用积分在500分以上的可不用支付押金，少于500分的需要支付押金；</p><p>3）将采购的共享单车注册到租赁服务系统后方可投入使用。即将单车的标识信息录入到系统；</p><p>4）注册用户通过手机或支付宝第三方服务登录到租赁服务系统中，通过扫描二维码或输入车辆编号以进行系统确认，系统后台确认车辆状态后下达解锁指令；</p><p>5）用户在用完车辆后关闭车锁，车辆自身将闭锁状态上报到租赁服务系统中，完成车辆状态的更新和用户租赁费用结算；</p><p>6) 系统不定时推出积分奖励方案，每200积分可提升会员等级，不同等级的会员在费用结算时会有不同的折扣；</p><p>7）系统开辟积分商城，会员可以使用积分去兑换或购买合作伙伴的产品及服务。</p><p>8）每个合作伙伴的类提供了不同的调用方法，系统设计中需要考虑如果公司更换了合作伙伴，应该尽可能少地在系统中修改或创建新类。</p><p>项目组薛工、邹工等分析之后达成一致：</p><p>（1）采用面向对象分析与设计方法开发系统;</p><p>（2）决定采用设计模式来满足上述设计要求，并确定从当前已经熟练掌握的设计模式中进行选择，这些设计模式包括：适配器模式(Adapter)、构造器模式(Builder)、命令模式(Command)、外观模式(Facade)、中介模式(Mediator)、原型模式(Prototype)、代理模式(Proxy)、状态模式(State)和策略模式(Strategy)等。</p><p>【问题1】 （12 分）</p><p>请分析下面 A~R&nbsp;所列出的共享单车租赁服务系统中的概念类及其方法，在图 1-1 所示用例图 （1） ~ （12）处补充所缺失信息。</p><p>A.用户，B.共享单车，C.用户管理，D.注册，E.注销，F.用户查询，G 单车管理，H.租赁，I.归还，J.单车查询，K.费用管理，L.保证金管理，M.租赁费管理，N.数据存储管理， O.用户数据存储管理，P.单车数据存储管理，Q.费用结算，R.身份认证<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191012/1570871020684826.jpg\" title=\"1570871020684826.jpg\" alt=\"1.jpg\"/></p><p>【问题2】（5分）</p><p>设计模式按照其应用模式可以分为三类：创建型、结构型和行为型，请用200字以内文字说明三者的作用。</p><p>【问题3】（8分）</p><p>针对题目中所提出的设计要求（6)~（8)，项目组应该分别选择何种设计模式?请分别用200字以内文字说明具体的解决方案。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 157510,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题一】(12分）：</p><p>（1）D.注册</p><p>（2）F.用户查询</p><p>（3）C.用户管理</p><p>（4）R.身份认证</p><p>（5）A.用户</p><p>（6）N.数据存储管理</p><p>（7）P.单车数据存储管理</p><p>（8）I.归还</p><p>（9）B.共享单车</p><p>（10）K.费用管理</p><p>（11）L.保证金管理</p><p>（12）Q.费用结算</p><p>【问题二】(5分）：</p><p>创建型模式主要用于创建对象，为设计类实例化新对象提供指南。</p><p>结构型模式主要用于处理类或对象的组合，对类如何设计以形成更大的结构提供指南。</p><p>行为型模式主要用于描述类或对象的交互以及职责的分配，对类之间交互以及分配责任的方式提供指南。</p><p>【问题三】(8分）：</p><p>(1)策略模式</p><p>解决方案：在具有公共接口的独立类中定义每个计算。可以利用该模式创建各种促销类，它们从同一个超类继承。每个类都有相同名称的标准接口方法，用于根据会员等级计算将要折扣的金额总数。</p><p>(2)适配器模式</p><p>解决方案：增加一个类作为适配器，转换类的接口到客户端类期望的另一个接口。实现一个适配器类，这个类为系统的其他部分提供了一个不变的方法供调用，为了集成不同商品供应商提供的优惠计算类，编写一个适配器类的子类，包含调用购买类所需的代码。该子类将系统的调用映射到某个供应商的优惠计算类。如果要更换供应商，那么只需要写一个新的适配器子类，其他保持不变。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 157513,
    "question_title": "<p>阅读以下关于Web应用的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>在目前的大环境下，某房企决定转移业务重心，将原来以售卖为主的业务转变为互联网租房业务，为此拟开发一套基于Web的云管业务系统，该系统按租户视图、系统管理视图以及业务视图划分为多个相应的Web应用，需求中还包含诸如文件处理、安全防护等扩展功能。</p><p>&nbsp;</p><p>【问题1】（5分）</p><p>在选择系统所采用的Web开发框架时，项目组对阿里巴巴开发的WebX框架与轻量级Spring MVC框架进行了对比分析，最终决定采用WebX框架进行开发。请用300字以内文字，从多应用支持、基础服务支持以及可扩展性这三个方面对WebX与Spring MVC框架进行对比。</p><p>&nbsp;</p><p>【问题2】（12分）</p><p>在确定系统釆用的持久层技术方案时，项目组梳理了系统的典型持久化需求，对照需求对比分析了 Hibernate和MyBatis两种持久化方案，请分析两种持久化方案对4-1中所列项目需求的支持情况，将候选答案序号A或B填入表4-1相应位置。</p><p>【候选答案：A. 支持 B. 不支持或支持差】</p><p>&nbsp;表4-1 &nbsp;两种持久化方案对项目需求的支持情况</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191012/1570871232102493.jpg\" title=\"1570871232102493.jpg\" alt=\"1.jpg\"/><p>【问题3】（8分）</p><p>王工负责订单系统的数据库设计与开发，初步设计的核心订单关系模式为：orders（order_no，customer_no，order_date，product_no，price，……）；</p><p>考虑订单数据过多，单一表的设计会对系统性能产生较大影响，仅仅采用索引不足以解决性能问题。因此，需要将订单表拆分，按月存储。</p><p>王工采用反规范化设计方法来解决，给出了相应的解决方案。常见的反规范化设计包括增加冗余列、增加派生列、重新组表和表分割。为解决题干所述需求，王工采用的是哪种方法？请用300字以内的文字解释说明该方法，并指出其优缺点。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题1】 （5分）</p><p>（1）基础服务支持：因为WebX在阿里巴巴和淘宝用了很多年，对于超大访问量的电子商务网站，WebX经受了考验，被证明是成熟可靠的。</p><p>（2）多应用支持：WebX和Spring MVC一样，完全建立在Spring框架之上，可以使用Spring的所有特性。WebX被设计成多个层次，层次间的分界线很清晰，每个层次都足够开放和易于扩展。</p><p>（3）可扩展性：WebX对Spring做了扩展，一个组件可以扩展另一个组件，也可以被其他组件扩展。这种机制使WebX具有较好的扩展性，且比未经扩展的Spring更易使用。</p><p>【问题2】 （12分）</p><p>（1）A &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（2）B &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（3）B &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（4）A &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（5）A &nbsp;&nbsp;&nbsp;&nbsp;（6）B</p><p>&nbsp;</p><p>【问题3】 （8分）</p><p>&nbsp;</p><p>王工采用的是表分割方式中的水平分割（分割参数是：“月”）。</p><p>表分割包括水平分割与垂直分割两种形式：</p><p>水平分割：按记录进行分割，不同的记录可以分开保存，每个子表的列数相同。分割的条件可能是某列或多列数据的值，如时间参数。</p><p>垂直分割：按列进行分割，即把一条记录分开多个地方保存，每个子表的行数相同。把主键和一些行放到一个表，然后把主键和另外的列放到另一个表中，通过主键进行关联。</p><p>优点：水平分割后可以降低在查询时需要读取的数据和索引页数，同时也降低了索引的层数，提高查询速度。</p><p>缺点：水平分割会给应用增加复杂度，在查询时需要多个表名，查询所有数据需要union操作。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 157513,
      "question_title": "<p>阅读以下关于Web应用的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>在目前的大环境下，某房企决定转移业务重心，将原来以售卖为主的业务转变为互联网租房业务，为此拟开发一套基于Web的云管业务系统，该系统按租户视图、系统管理视图以及业务视图划分为多个相应的Web应用，需求中还包含诸如文件处理、安全防护等扩展功能。</p><p>&nbsp;</p><p>【问题1】（5分）</p><p>在选择系统所采用的Web开发框架时，项目组对阿里巴巴开发的WebX框架与轻量级Spring MVC框架进行了对比分析，最终决定采用WebX框架进行开发。请用300字以内文字，从多应用支持、基础服务支持以及可扩展性这三个方面对WebX与Spring MVC框架进行对比。</p><p>&nbsp;</p><p>【问题2】（12分）</p><p>在确定系统釆用的持久层技术方案时，项目组梳理了系统的典型持久化需求，对照需求对比分析了 Hibernate和MyBatis两种持久化方案，请分析两种持久化方案对4-1中所列项目需求的支持情况，将候选答案序号A或B填入表4-1相应位置。</p><p>【候选答案：A. 支持 B. 不支持或支持差】</p><p>&nbsp;表4-1 &nbsp;两种持久化方案对项目需求的支持情况</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191012/1570871232102493.jpg\" title=\"1570871232102493.jpg\" alt=\"1.jpg\"/><p>【问题3】（8分）</p><p>王工负责订单系统的数据库设计与开发，初步设计的核心订单关系模式为：orders（order_no，customer_no，order_date，product_no，price，……）；</p><p>考虑订单数据过多，单一表的设计会对系统性能产生较大影响，仅仅采用索引不足以解决性能问题。因此，需要将订单表拆分，按月存储。</p><p>王工采用反规范化设计方法来解决，给出了相应的解决方案。常见的反规范化设计包括增加冗余列、增加派生列、重新组表和表分割。为解决题干所述需求，王工采用的是哪种方法？请用300字以内的文字解释说明该方法，并指出其优缺点。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 157513,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题1】 （5分）</p><p>（1）基础服务支持：因为WebX在阿里巴巴和淘宝用了很多年，对于超大访问量的电子商务网站，WebX经受了考验，被证明是成熟可靠的。</p><p>（2）多应用支持：WebX和Spring MVC一样，完全建立在Spring框架之上，可以使用Spring的所有特性。WebX被设计成多个层次，层次间的分界线很清晰，每个层次都足够开放和易于扩展。</p><p>（3）可扩展性：WebX对Spring做了扩展，一个组件可以扩展另一个组件，也可以被其他组件扩展。这种机制使WebX具有较好的扩展性，且比未经扩展的Spring更易使用。</p><p>【问题2】 （12分）</p><p>（1）A &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（2）B &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（3）B &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（4）A &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（5）A &nbsp;&nbsp;&nbsp;&nbsp;（6）B</p><p>&nbsp;</p><p>【问题3】 （8分）</p><p>&nbsp;</p><p>王工采用的是表分割方式中的水平分割（分割参数是：“月”）。</p><p>表分割包括水平分割与垂直分割两种形式：</p><p>水平分割：按记录进行分割，不同的记录可以分开保存，每个子表的列数相同。分割的条件可能是某列或多列数据的值，如时间参数。</p><p>垂直分割：按列进行分割，即把一条记录分开多个地方保存，每个子表的行数相同。把主键和一些行放到一个表，然后把主键和另外的列放到另一个表中，通过主键进行关联。</p><p>优点：水平分割后可以降低在查询时需要读取的数据和索引页数，同时也降低了索引的层数，提高查询速度。</p><p>缺点：水平分割会给应用增加复杂度，在查询时需要多个表名，查询所有数据需要union操作。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 157514,
    "question_title": "<p>阅读以下关于智能安防应用的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>随着人们生活水平的提高，人们对于物质文化生活要求提高的同时，对于居家安全也越来越重视。某软件公司长期从事智能移动应用开发，现决定开发一套适用于家庭使用的便捷式智能安防系统。系统包括两个层面，其一为硬件层面，基于嵌入式操作系统实现动态拍摄，并上传到视频服务器；其二为用户软件层面，基于Web界面，用户通过安全认证后可在线查看监控视频。项目组召开会议对以下需求进行了重点讨论：</p><p>（1）系统终端用户的界面呈现较丰富，包括图片、视频及语音消息。</p><p>（2）付费VIP客户视频可以保存18个月，普通用户视频只能保存1个月，滚动覆盖。</p><p>（3）系统上线后需应对大量客户端并发请求处理，并发用户数可能会有上万人的规模；系统预期用户呈明显地域集中分布特征。</p><p>【问题1】（12分）&nbsp;&nbsp;&nbsp;</p><p>项目组在讨论实现需求（3）的技术方案时，首先确定了以下技术原则：</p><p>（a）系统中用户信息按类别划分不同数据库或表存放。</p><p>（b）系统应提供热备份机制以防止服务器意外失效。</p><p>（c）为满足大规模并发处理要求，系统软硬件投入可根据需要追加。</p><p>项目组经过集思广益，抽取了HTML静态化、缓存、P2P、集群与镜像、负载均衡等候选技术手段。请结合需求（3）及相应技术原则，分析上述技术手段在本项目中的可行性，将结果填入表格5-1中。</p><p>表5-1 &nbsp;技术手段可行性分析</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191012/1570871320698213.jpg\" title=\"1570871320698213.jpg\" alt=\"1.jpg\"/><br/><p>【问题2】（5分）&nbsp;</p><p>本项目涉及到了嵌入式系统的知识。根据你的理解，请用300宇以内文字说明嵌入式系统的主要特点。</p><p>&nbsp;</p><p>【问题3】 （8分）</p><p>为了提高系统的安全性和可靠性，便于应用软件的可重用性，需要选择一款满足安防要求的嵌入式操作系统，并在操作系统之上开发视频监控软件。请根据你对嵌入式操作系统选择方法的理解，判断表5-2给出的有关选择嵌入式操作系统的观点是否正确，将解答写在答题纸的对应栏内。</p><p>表5-2&nbsp;&nbsp;选择嵌入式操作系统的8种观点</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191012/1570871344152379.jpg\" title=\"1570871344152379.jpg\" alt=\"1.jpg\"/>11<br/>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题1】（12分）&nbsp;&nbsp;&nbsp;</p><p>（1）HTML静态化手段可实现对系统经常访问的网页进行静态化以提高系统访问效率，但系统页面通常需要根据数据库中的用户信息以及用户的选择动态显示。因此不适合采用。</p><p>（2）缓存技术手段：系统应用需要频繁访问数据库，可以对经常访问的数据建立缓存，以提高并发访问效率。因此适合。</p><p>（3）p2p视频播放技术：视频播放实现边下边播完善用户体验，节省服务器带宽，降低成本，支持边下边播断点续传，支持多源下载，以提高并发访问效率。因此适合。</p><p>（4）根据需求（3），系统需有效处理大量并发请求，且系统预期用户呈明显地域集中分布特征，因此可以采用集群与镜像手段提高用户的并发访问效率，且技术原则（b）要求系统应提供热备份机制以防止服务器意外失效，因此可以采用镜像机制提高系统的可靠性，根据题干中技术原则（c），又可根据需要追加集群与镜像所需的软硬件投入。因此适合。</p><p>（5）负载均衡将是大型Web应用解决高负荷访问和大量并发请求时常用的有效解决方法，在系统采用集群和镜像技术手段时，负载均衡也是系统必须采用的相应配合手段。因此适合。</p><p>综上不难看出，除HTML静态化手段外，其他四种技术手段均可应用于本系统，以提高大规模用户并发访问的处理效率。</p><p>&nbsp;</p><p>【问题2】（5分）&nbsp;&nbsp;&nbsp;</p><p>（1） 系统专用性强。嵌入式系统是针对具体应用的专门系统。它的个性化很强，软件和硬件结合紧密。一般要针对硬件进行软件的开发和移植，根据硬件的变化和增减对软件进行修改。</p><p>（2） 系统实时性强。许多嵌入式系统对外部事件要求在限定的时间内及时作出响应，具有实时性。根据实时性的强弱，通常将嵌入式系统分为实时嵌入式系统和非实时嵌入式系统，其中大部分为实施嵌入式系统。</p><p>（3） 软硬件依赖性强。嵌入式系统的专用性决定了其软硬件的互相依赖性很强，两者必须协同设计，以达到共同实现预定功能的目的，并满足性能、成本和可靠性等方面的严格要求。</p><p>（4） 处理器专用。嵌入式系统的处理器一般是为某一特定目的和应用而专门设计的。通常具备功耗低、体积小和集成度高等特点，能够将许多在通用计算机上需要由板卡完成的任务和功能集成到芯片内部，从而有利于嵌入式系统的小型化和移动能力的增强。</p><p>（5） 多种技术紧密结合。嵌入式系统通常是计算机技术、半导体技术、电力电子技术、机械技术与各行业的具体应用相结合的产物。通用计算机技术也离不开这些技术，但它们相互结合的紧密程度不及嵌入式系统。</p><p>（6） 系统透明性。嵌入式系统在形态上与通用计算机系统差距甚大。它的输入设备往往不是常见的鼠标和键盘之类的设备，甚至不用输出装置，用户可能根本感觉不到它所使用的设备中有嵌入式系统的存在，即使知道，也不必关心嵌入式系统的相关情况。</p><p>（7） 系统资源受限。嵌入式系统为了达到结构紧凑、高可靠性和低成本的目的，其存储容量、I/O设备的数量和处理能力都比较有限。</p><p>&nbsp;</p><p>【问题3】（8分）&nbsp;&nbsp;&nbsp;</p><p>答：（1）√（2）×（3）√（4）√（5）√（6）√（7）×（8）√</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 157514,
      "question_title": "<p>阅读以下关于智能安防应用的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>随着人们生活水平的提高，人们对于物质文化生活要求提高的同时，对于居家安全也越来越重视。某软件公司长期从事智能移动应用开发，现决定开发一套适用于家庭使用的便捷式智能安防系统。系统包括两个层面，其一为硬件层面，基于嵌入式操作系统实现动态拍摄，并上传到视频服务器；其二为用户软件层面，基于Web界面，用户通过安全认证后可在线查看监控视频。项目组召开会议对以下需求进行了重点讨论：</p><p>（1）系统终端用户的界面呈现较丰富，包括图片、视频及语音消息。</p><p>（2）付费VIP客户视频可以保存18个月，普通用户视频只能保存1个月，滚动覆盖。</p><p>（3）系统上线后需应对大量客户端并发请求处理，并发用户数可能会有上万人的规模；系统预期用户呈明显地域集中分布特征。</p><p>【问题1】（12分）&nbsp;&nbsp;&nbsp;</p><p>项目组在讨论实现需求（3）的技术方案时，首先确定了以下技术原则：</p><p>（a）系统中用户信息按类别划分不同数据库或表存放。</p><p>（b）系统应提供热备份机制以防止服务器意外失效。</p><p>（c）为满足大规模并发处理要求，系统软硬件投入可根据需要追加。</p><p>项目组经过集思广益，抽取了HTML静态化、缓存、P2P、集群与镜像、负载均衡等候选技术手段。请结合需求（3）及相应技术原则，分析上述技术手段在本项目中的可行性，将结果填入表格5-1中。</p><p>表5-1 &nbsp;技术手段可行性分析</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191012/1570871320698213.jpg\" title=\"1570871320698213.jpg\" alt=\"1.jpg\"/><br/><p>【问题2】（5分）&nbsp;</p><p>本项目涉及到了嵌入式系统的知识。根据你的理解，请用300宇以内文字说明嵌入式系统的主要特点。</p><p>&nbsp;</p><p>【问题3】 （8分）</p><p>为了提高系统的安全性和可靠性，便于应用软件的可重用性，需要选择一款满足安防要求的嵌入式操作系统，并在操作系统之上开发视频监控软件。请根据你对嵌入式操作系统选择方法的理解，判断表5-2给出的有关选择嵌入式操作系统的观点是否正确，将解答写在答题纸的对应栏内。</p><p>表5-2&nbsp;&nbsp;选择嵌入式操作系统的8种观点</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191012/1570871344152379.jpg\" title=\"1570871344152379.jpg\" alt=\"1.jpg\"/>11<br/>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 157514,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题1】（12分）&nbsp;&nbsp;&nbsp;</p><p>（1）HTML静态化手段可实现对系统经常访问的网页进行静态化以提高系统访问效率，但系统页面通常需要根据数据库中的用户信息以及用户的选择动态显示。因此不适合采用。</p><p>（2）缓存技术手段：系统应用需要频繁访问数据库，可以对经常访问的数据建立缓存，以提高并发访问效率。因此适合。</p><p>（3）p2p视频播放技术：视频播放实现边下边播完善用户体验，节省服务器带宽，降低成本，支持边下边播断点续传，支持多源下载，以提高并发访问效率。因此适合。</p><p>（4）根据需求（3），系统需有效处理大量并发请求，且系统预期用户呈明显地域集中分布特征，因此可以采用集群与镜像手段提高用户的并发访问效率，且技术原则（b）要求系统应提供热备份机制以防止服务器意外失效，因此可以采用镜像机制提高系统的可靠性，根据题干中技术原则（c），又可根据需要追加集群与镜像所需的软硬件投入。因此适合。</p><p>（5）负载均衡将是大型Web应用解决高负荷访问和大量并发请求时常用的有效解决方法，在系统采用集群和镜像技术手段时，负载均衡也是系统必须采用的相应配合手段。因此适合。</p><p>综上不难看出，除HTML静态化手段外，其他四种技术手段均可应用于本系统，以提高大规模用户并发访问的处理效率。</p><p>&nbsp;</p><p>【问题2】（5分）&nbsp;&nbsp;&nbsp;</p><p>（1） 系统专用性强。嵌入式系统是针对具体应用的专门系统。它的个性化很强，软件和硬件结合紧密。一般要针对硬件进行软件的开发和移植，根据硬件的变化和增减对软件进行修改。</p><p>（2） 系统实时性强。许多嵌入式系统对外部事件要求在限定的时间内及时作出响应，具有实时性。根据实时性的强弱，通常将嵌入式系统分为实时嵌入式系统和非实时嵌入式系统，其中大部分为实施嵌入式系统。</p><p>（3） 软硬件依赖性强。嵌入式系统的专用性决定了其软硬件的互相依赖性很强，两者必须协同设计，以达到共同实现预定功能的目的，并满足性能、成本和可靠性等方面的严格要求。</p><p>（4） 处理器专用。嵌入式系统的处理器一般是为某一特定目的和应用而专门设计的。通常具备功耗低、体积小和集成度高等特点，能够将许多在通用计算机上需要由板卡完成的任务和功能集成到芯片内部，从而有利于嵌入式系统的小型化和移动能力的增强。</p><p>（5） 多种技术紧密结合。嵌入式系统通常是计算机技术、半导体技术、电力电子技术、机械技术与各行业的具体应用相结合的产物。通用计算机技术也离不开这些技术，但它们相互结合的紧密程度不及嵌入式系统。</p><p>（6） 系统透明性。嵌入式系统在形态上与通用计算机系统差距甚大。它的输入设备往往不是常见的鼠标和键盘之类的设备，甚至不用输出装置，用户可能根本感觉不到它所使用的设备中有嵌入式系统的存在，即使知道，也不必关心嵌入式系统的相关情况。</p><p>（7） 系统资源受限。嵌入式系统为了达到结构紧凑、高可靠性和低成本的目的，其存储容量、I/O设备的数量和处理能力都比较有限。</p><p>&nbsp;</p><p>【问题3】（8分）&nbsp;&nbsp;&nbsp;</p><p>答：（1）√（2）×（3）√（4）√（5）√（6）√（7）×（8）√</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 159271,
    "question_title": "<p>阅读以下关于某保险集团公司中间业务系统开发的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>随着信息化的发展，某保险集团公司的中心账务系统，从区域中心模式已经升级到全国中心模式。但是处理各种代收代付业务的中间业务系统，目前仍然采用区域中心模式，由各区域分部自行负责，使得集团总部对于中间业务管理比较困难。因此，集团总部计划将中间业务系统全部升级到总部统一管理模式。</p><p>各区域分部采用基于web的中间业务系统，均为各区域自行建设的，系统的硬件平台、软件系统、数据模式等均有非常大的差异。为统一管理，集团总部决定重新开发一套集中控制模式的中间业务系统，用来替代各区域的中间业务系统，但要求能够支持目前各区域的所有中间业务。</p><p>【问题1】 （8分）&nbsp;&nbsp;</p><p>在如何对待遗留系统上，项目组存在两种不同的策略：淘汰策略和继承策略。请简要解释这两种策略，并说明新开发的中间业务系统适合采用哪种策略及其原因。</p><p>&nbsp;<span style=\"font-size: 16px;\">【问题2】（5分）</span></p><p>中间业务系统中，最为核心的是业务数据。因此，在新旧系统切换时存在一项重要的工作：数据迁移。考虑到各区域中间业务系统的巨大差异，因此需要做好数据迁移前的准备工作。请简要说明数据迁移准备工作的内容。<span style=\"font-size: 16px;\">&nbsp;</span></p><p>【问题3】（ 12分）</p><p>项目组邹工提出采用 REST 架构风格设计实现该中间业务系统，而薛工提出采用RPC风格来实现该系统，项目组经过热烈的讨论之后决定采用邹工的方案。请根据你对于这两种模式的理解，用300字描述这两种风格的不同之处，以及REST风格的设计原则包括哪些。<span style=\"font-size: 16px;\"></span></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题1】 （8分）</p><p>（1） 淘汰策略：遗留系统的技术含量低，具有较低的业务价值，因此需要全面重新开发新系统以替代遗留系统；一般是企业的业务发生了根本变化，遗留系统已经基本上不再适应企业运作的需要；或者是遗留系统的维护人员流失，维护文档资料丢失。评价后发现，开发新系统比维护与改造旧系统从成本上更经济合算。</p><p>（2） 继承策略：遗留系统技术含量低，已经满足企业运作的功能或性能要求，但有较高的业务价值，目前企业的业务尚需依赖该遗留系统。因此，开发系统替代遗留系统时，需要完全兼容遗留系统的功能模型和数据模型。</p><p>适合采用的是继承策略。因为集团总部中心需要管理所有中间业务，而目前的各区域系统从技术上不满足全国中心的需求，需要重新开发新的中间业务系统；同时，新系统必须支持当前各区域的所有中间业务。因此，必须完全兼容目前各系统的功能模型和数据模型。</p><p>&nbsp;</p><p>【问题2】（5分）</p><p>（1） 待迁移数据源的详细说明，包括数据的存放方式、数据量和数据的时间跨度。</p><p>（2） 建立新旧系统数据库的数据字典，对现有系统的历史数据进行质量分析，以及新旧系统数据结构的差异分析。</p><p>（3） 新旧系统代码数据的差异分析。</p><p>（4） 建立新旧系统数据库表的映射关系，对无法映射字段的处理方法。</p><p>（5） 开发或购买、部署ETL工具。</p><p>（6） 编写数据转换的测试计划和校验程序。</p><p>（7） 制定数据转换的应急措施。</p><p>&nbsp;</p><p>【问题3】（12分）</p><p>1、REST 相对于 RPC 更为轻量化，RPC 服务提供方与调用方接口依赖太高，会导致编码格式的复杂性，而 REST 服务提供方和调用方的依赖只是依靠定义好的规则，不存依赖问题。</p><p>2、REST 服务很好的实现了跨平台，任何一个语言（JavaScript、Vue、HTML5、Bootstap 等）的调用方都可以根据接口定义来实现，而 RPC 服务对平台有要求限制，在某些情况下很难实现复用。</p><p>3、Rest 完全通过 HTTP 协议实现的，使用 HTTP 协议处理数据通信。所以 REST 架构对资源的操作就包括了 HTTP 协议中提供的 GET、POST、PUT、PATCH、DELETE、COPY、HEAD等众多操作方法。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191019/1571474339827317.jpg\" title=\"1571474339827317.jpg\" alt=\"2.jpg\"/><p>REST风格的5条关键原则包括：</p><p>（1）网络上的所有事物都被抽象为资源。</p><p>（2）每个资源对应一个唯一的资源标识。</p><p>（3）通过通用的连接件接口对资源进行操作。</p><p>（4）对资源的各种操作不会改变资源标识。</p><p>（5）所有的操作都是无状态的。<span style=\"font-size: 16px;\"></span></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 159271,
      "question_title": "<p>阅读以下关于某保险集团公司中间业务系统开发的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>随着信息化的发展，某保险集团公司的中心账务系统，从区域中心模式已经升级到全国中心模式。但是处理各种代收代付业务的中间业务系统，目前仍然采用区域中心模式，由各区域分部自行负责，使得集团总部对于中间业务管理比较困难。因此，集团总部计划将中间业务系统全部升级到总部统一管理模式。</p><p>各区域分部采用基于web的中间业务系统，均为各区域自行建设的，系统的硬件平台、软件系统、数据模式等均有非常大的差异。为统一管理，集团总部决定重新开发一套集中控制模式的中间业务系统，用来替代各区域的中间业务系统，但要求能够支持目前各区域的所有中间业务。</p><p>【问题1】 （8分）&nbsp;&nbsp;</p><p>在如何对待遗留系统上，项目组存在两种不同的策略：淘汰策略和继承策略。请简要解释这两种策略，并说明新开发的中间业务系统适合采用哪种策略及其原因。</p><p>&nbsp;<span style=\"font-size: 16px;\">【问题2】（5分）</span></p><p>中间业务系统中，最为核心的是业务数据。因此，在新旧系统切换时存在一项重要的工作：数据迁移。考虑到各区域中间业务系统的巨大差异，因此需要做好数据迁移前的准备工作。请简要说明数据迁移准备工作的内容。<span style=\"font-size: 16px;\">&nbsp;</span></p><p>【问题3】（ 12分）</p><p>项目组邹工提出采用 REST 架构风格设计实现该中间业务系统，而薛工提出采用RPC风格来实现该系统，项目组经过热烈的讨论之后决定采用邹工的方案。请根据你对于这两种模式的理解，用300字描述这两种风格的不同之处，以及REST风格的设计原则包括哪些。<span style=\"font-size: 16px;\"></span></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 159271,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题1】 （8分）</p><p>（1） 淘汰策略：遗留系统的技术含量低，具有较低的业务价值，因此需要全面重新开发新系统以替代遗留系统；一般是企业的业务发生了根本变化，遗留系统已经基本上不再适应企业运作的需要；或者是遗留系统的维护人员流失，维护文档资料丢失。评价后发现，开发新系统比维护与改造旧系统从成本上更经济合算。</p><p>（2） 继承策略：遗留系统技术含量低，已经满足企业运作的功能或性能要求，但有较高的业务价值，目前企业的业务尚需依赖该遗留系统。因此，开发系统替代遗留系统时，需要完全兼容遗留系统的功能模型和数据模型。</p><p>适合采用的是继承策略。因为集团总部中心需要管理所有中间业务，而目前的各区域系统从技术上不满足全国中心的需求，需要重新开发新的中间业务系统；同时，新系统必须支持当前各区域的所有中间业务。因此，必须完全兼容目前各系统的功能模型和数据模型。</p><p>&nbsp;</p><p>【问题2】（5分）</p><p>（1） 待迁移数据源的详细说明，包括数据的存放方式、数据量和数据的时间跨度。</p><p>（2） 建立新旧系统数据库的数据字典，对现有系统的历史数据进行质量分析，以及新旧系统数据结构的差异分析。</p><p>（3） 新旧系统代码数据的差异分析。</p><p>（4） 建立新旧系统数据库表的映射关系，对无法映射字段的处理方法。</p><p>（5） 开发或购买、部署ETL工具。</p><p>（6） 编写数据转换的测试计划和校验程序。</p><p>（7） 制定数据转换的应急措施。</p><p>&nbsp;</p><p>【问题3】（12分）</p><p>1、REST 相对于 RPC 更为轻量化，RPC 服务提供方与调用方接口依赖太高，会导致编码格式的复杂性，而 REST 服务提供方和调用方的依赖只是依靠定义好的规则，不存依赖问题。</p><p>2、REST 服务很好的实现了跨平台，任何一个语言（JavaScript、Vue、HTML5、Bootstap 等）的调用方都可以根据接口定义来实现，而 RPC 服务对平台有要求限制，在某些情况下很难实现复用。</p><p>3、Rest 完全通过 HTTP 协议实现的，使用 HTTP 协议处理数据通信。所以 REST 架构对资源的操作就包括了 HTTP 协议中提供的 GET、POST、PUT、PATCH、DELETE、COPY、HEAD等众多操作方法。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191019/1571474339827317.jpg\" title=\"1571474339827317.jpg\" alt=\"2.jpg\"/><p>REST风格的5条关键原则包括：</p><p>（1）网络上的所有事物都被抽象为资源。</p><p>（2）每个资源对应一个唯一的资源标识。</p><p>（3）通过通用的连接件接口对资源进行操作。</p><p>（4）对资源的各种操作不会改变资源标识。</p><p>（5）所有的操作都是无状态的。<span style=\"font-size: 16px;\"></span></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 208617,
    "question_title": "<p>阅读以下关于分布式系统设计的叙述，回答问题。</p><p>【说明】</p><p>某软件公司拟开发一套电信领域的分布式系统，该系统后台多个功能模块同时运行时的计算负载较大，且需要控制不同的特定电信硬件设备，由于硬件体积和I/O端口冲突等原因，这些设备需要分散安装在多个不同计算机系统中。该系统上线运行后将为企业最终用户提供7×24小时的不间断服务，而用户的单次接入服务往往需要后台多个模块共同协作完成。基于上述原因，该系统后台软件模块需分布在局域网内的多台计算机上。</p><p>项目组决定基于ISO的开放分布进程(ODP)规范来进行系统架构的设计与开发，近期项目组召开了多次会议，对架构设计阶段的关键问题进行了讨论分析。</p><p>【问题1】</p><p>ODP从5个标准的视点组织分析系统的架构，这些视点描述了同一系统的不同重要方面，请根据图中不同视点所关注的核心内容，将备选的架构视点填入图中的(1)～(5)。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577701552739961.jpg\" title=\"1577701552739961.jpg\" alt=\"1.jpg\"/></p><p>备选答案：技术选择架构、企业业务架构、分布式工程架构、计算接口架构、逻辑信息架构</p><p><span style=\"font-size: 16px;\">【问题2】</span><br/></p><p>在技术选择架构规划时，王工认为系统应基于现有分布式基础设施(分布式中间件)来构建，因为这样可以充分利用现有基础设施提供的各种支撑，在更短时间内构造出质量更高的分布式系统；而李工则认为可基于基本的进程间通信机制自主开发系统的支撑平台，这样可以避免对特定中间件的依赖，项目组经过认真讨论，最终采用了王工的方案。请用400字以内文字，从构件管理支持、互操作支持以及公共服务支持三个方面说明现有分布式基础设施为构建分布式系统所提供的基本支撑。</p><p><span style=\"font-size: 16px;\">【问题3】</span><br/></p><p>由于系统后台模块的分布式特性，后台分布式对象之间的互操作机制是需要考虑的核心问题之一。下图所示是当前分布式基础设施中支持分布式对象互操作的基本机制，请将相应部件名称填入图中(1)～(2)；基于图给出的结构，用300字以内文字说明完成一次分布式对象调用的详细步骤。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577701564929005.jpg\" title=\"1577701564929005.jpg\" alt=\"2.jpg\"/></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题1】答案：</p><p>(1)企业业务架构</p><p>(2)逻辑信息架构</p><p>(3)计算接口架构</p><p>(4)分布式工程架构</p><p>(5)技术选择架构</p><p><br/></p><p>【问题2】答案：</p><p>(1)构件管理支持：现有分布式基础设施一般通过构件容器为构件提供基本的运行环境；具体功能一般包括管理构件的实例及其生命周期、管理构件的元信息等。</p><p>(2)互操作支持：现有分布式基础设施均提供了高层通信协议以屏蔽节点的物理特性以及各节点在处理器、操作系统、程序设计语言等方面的异构性；基于互操作支持，开发人员在开发与调用分布式对象时，均不需自己编写处理底层通信的代码。</p><p>(3)公共服务支持：现有分布式基础设施通常将针对分布式软件的通用支持集成于一身，以公共服务的形式提供给应用程序；其提供的常见公共服务包括命名服务、事务服务、安全服务、持久性 &nbsp;服务等。&nbsp;</p><p><br/></p><p>【问题3】答案：</p><p>(1)存根/桩 (2)框架</p><p>或(1)代理 (2)存根</p><p>一次远程调用的过程如下：</p><p>①客户程序将调用请求发送给客户端桩，对于客户程序来说，桩就是服务程序在客户端的代理。</p><p>②客户端桩负责将远程调用请求进行编组并发送给通信总线。</p><p>③调用请求经通信总线传送到服务端框架。</p><p>④服务端框架将调用请求解组并分派给真正的远程对象实现(服务程序)。</p><p>⑤服务程序完成客户端的调用请求，将结果返回给服务端框架。</p><p>⑥服务端框架将调用结果编组并发送给通信总线。</p><p>⑦调用结果经通信总线传送到客户端桩。</p><p>⑧客户端桩将调用结果解组并返回给客户程序，客户程序得到调用结果。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 208617,
      "question_title": "<p>阅读以下关于分布式系统设计的叙述，回答问题。</p><p>【说明】</p><p>某软件公司拟开发一套电信领域的分布式系统，该系统后台多个功能模块同时运行时的计算负载较大，且需要控制不同的特定电信硬件设备，由于硬件体积和I/O端口冲突等原因，这些设备需要分散安装在多个不同计算机系统中。该系统上线运行后将为企业最终用户提供7×24小时的不间断服务，而用户的单次接入服务往往需要后台多个模块共同协作完成。基于上述原因，该系统后台软件模块需分布在局域网内的多台计算机上。</p><p>项目组决定基于ISO的开放分布进程(ODP)规范来进行系统架构的设计与开发，近期项目组召开了多次会议，对架构设计阶段的关键问题进行了讨论分析。</p><p>【问题1】</p><p>ODP从5个标准的视点组织分析系统的架构，这些视点描述了同一系统的不同重要方面，请根据图中不同视点所关注的核心内容，将备选的架构视点填入图中的(1)～(5)。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577701552739961.jpg\" title=\"1577701552739961.jpg\" alt=\"1.jpg\"/></p><p>备选答案：技术选择架构、企业业务架构、分布式工程架构、计算接口架构、逻辑信息架构</p><p><span style=\"font-size: 16px;\">【问题2】</span><br/></p><p>在技术选择架构规划时，王工认为系统应基于现有分布式基础设施(分布式中间件)来构建，因为这样可以充分利用现有基础设施提供的各种支撑，在更短时间内构造出质量更高的分布式系统；而李工则认为可基于基本的进程间通信机制自主开发系统的支撑平台，这样可以避免对特定中间件的依赖，项目组经过认真讨论，最终采用了王工的方案。请用400字以内文字，从构件管理支持、互操作支持以及公共服务支持三个方面说明现有分布式基础设施为构建分布式系统所提供的基本支撑。</p><p><span style=\"font-size: 16px;\">【问题3】</span><br/></p><p>由于系统后台模块的分布式特性，后台分布式对象之间的互操作机制是需要考虑的核心问题之一。下图所示是当前分布式基础设施中支持分布式对象互操作的基本机制，请将相应部件名称填入图中(1)～(2)；基于图给出的结构，用300字以内文字说明完成一次分布式对象调用的详细步骤。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577701564929005.jpg\" title=\"1577701564929005.jpg\" alt=\"2.jpg\"/></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 208617,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题1】答案：</p><p>(1)企业业务架构</p><p>(2)逻辑信息架构</p><p>(3)计算接口架构</p><p>(4)分布式工程架构</p><p>(5)技术选择架构</p><p><br/></p><p>【问题2】答案：</p><p>(1)构件管理支持：现有分布式基础设施一般通过构件容器为构件提供基本的运行环境；具体功能一般包括管理构件的实例及其生命周期、管理构件的元信息等。</p><p>(2)互操作支持：现有分布式基础设施均提供了高层通信协议以屏蔽节点的物理特性以及各节点在处理器、操作系统、程序设计语言等方面的异构性；基于互操作支持，开发人员在开发与调用分布式对象时，均不需自己编写处理底层通信的代码。</p><p>(3)公共服务支持：现有分布式基础设施通常将针对分布式软件的通用支持集成于一身，以公共服务的形式提供给应用程序；其提供的常见公共服务包括命名服务、事务服务、安全服务、持久性 &nbsp;服务等。&nbsp;</p><p><br/></p><p>【问题3】答案：</p><p>(1)存根/桩 (2)框架</p><p>或(1)代理 (2)存根</p><p>一次远程调用的过程如下：</p><p>①客户程序将调用请求发送给客户端桩，对于客户程序来说，桩就是服务程序在客户端的代理。</p><p>②客户端桩负责将远程调用请求进行编组并发送给通信总线。</p><p>③调用请求经通信总线传送到服务端框架。</p><p>④服务端框架将调用请求解组并分派给真正的远程对象实现(服务程序)。</p><p>⑤服务程序完成客户端的调用请求，将结果返回给服务端框架。</p><p>⑥服务端框架将调用结果编组并发送给通信总线。</p><p>⑦调用结果经通信总线传送到客户端桩。</p><p>⑧客户端桩将调用结果解组并返回给客户程序，客户程序得到调用结果。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 208618,
    "question_title": "<p>请详细阅读有关嵌入式软件架构设计方面的描述，回答问题。</p><p>【说明】</p><p>在嵌入式系统中，软件采用开放式架构已成为新的发展趋势。软件架构设计的优劣将直接影响软件的重用和移植能力。</p><p>某软件公司主要从事宇航领域的嵌入式软件研发工作。经二十多年的发展，其软件产品已被广泛应用于各种航天飞行器中。该公司积累了众多成熟软件，但由于当初没有充分考虑软件的架构，原有软件无法被再利用，为适应嵌入式软件技术发展需要，该公司决策层决定成立宇航嵌入式软件开放式架构研究小组，为公司完成开放式架构的定义与设计，确保公司软件资源能得到充分利用。</p><p>研究小组查阅了大量的国外资料和标准，最终将研究重点集中在了SAE AS4893《通用开放式架构(GOA)框架》标准，下图给出了GOA定义的架构图。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577701668391860.jpg\" title=\"1577701668391860.jpg\" alt=\"1.jpg\"/></p><p>【问题1】</p><p>请用300字以内的文字简要说明开放式架构的四个基本特点。<br/></p><p>【问题2】</p><p>如图所示，GOA框架规定了软件、硬件和接口的结构，以在不同应用领域中实现系统功能。GOA框架规定了一组接口，其重要特点是建立了关键组件及组件间接口关系，这些接口的确定可用于支持软件的可移植性和可升级性，以满足功能的增加和技术的更新要求。除操作系统服务与扩展操作系统之间的接口(3X)外，GOA将其他接口分为两类：即直接接口(iD(i=1，2，3，…))和逻辑接口(iL(i=1，2，3，…))，直接接口定义了信息传输方式；逻辑接口定义了对等数据交换的要求，逻辑接口没有定义真正的信息传输方式，其传输发生在一个或多个直接接口。根据图所标注的接口在框架中的具体位置，请填写下表的(1)～(8)处空白。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577701701681492.jpg\" title=\"1577701701681492.jpg\" alt=\"1.jpg\"/><br/></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p><br/></p><p>【问题1】答案：</p><p>开放架构应具有以下4个基本特点：</p><p>①可移植性。各种计算机应用系统可在具有开放架构特性的各种计算机系统间进行移植，不论这些计算机是否同种型号、同种机型。</p><p>②可互操作性。如计算机网络中的各结点机都具有开放架构的特性，则该网上各结点机间可相互操作和资源共享。</p><p>③可剪裁性。如某个计算机系统是具有开放架构特性的，则在该系统的低档机上运行的应用系统应能在高档机上运行，原在高档机上运行的应用系统经剪裁后也可在低档机上运行。</p><p>④易获得性。在具有开放架构特性的机器上所运行的软件环境易于从多方获得，不受某个来源所控制。</p>【问题2】答案：<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577701839215273.jpg\" title=\"1577701839215273.jpg\" alt=\"1.jpg\"/><p><br/></p><br/>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 208618,
      "question_title": "<p>请详细阅读有关嵌入式软件架构设计方面的描述，回答问题。</p><p>【说明】</p><p>在嵌入式系统中，软件采用开放式架构已成为新的发展趋势。软件架构设计的优劣将直接影响软件的重用和移植能力。</p><p>某软件公司主要从事宇航领域的嵌入式软件研发工作。经二十多年的发展，其软件产品已被广泛应用于各种航天飞行器中。该公司积累了众多成熟软件，但由于当初没有充分考虑软件的架构，原有软件无法被再利用，为适应嵌入式软件技术发展需要，该公司决策层决定成立宇航嵌入式软件开放式架构研究小组，为公司完成开放式架构的定义与设计，确保公司软件资源能得到充分利用。</p><p>研究小组查阅了大量的国外资料和标准，最终将研究重点集中在了SAE AS4893《通用开放式架构(GOA)框架》标准，下图给出了GOA定义的架构图。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577701668391860.jpg\" title=\"1577701668391860.jpg\" alt=\"1.jpg\"/></p><p>【问题1】</p><p>请用300字以内的文字简要说明开放式架构的四个基本特点。<br/></p><p>【问题2】</p><p>如图所示，GOA框架规定了软件、硬件和接口的结构，以在不同应用领域中实现系统功能。GOA框架规定了一组接口，其重要特点是建立了关键组件及组件间接口关系，这些接口的确定可用于支持软件的可移植性和可升级性，以满足功能的增加和技术的更新要求。除操作系统服务与扩展操作系统之间的接口(3X)外，GOA将其他接口分为两类：即直接接口(iD(i=1，2，3，…))和逻辑接口(iL(i=1，2，3，…))，直接接口定义了信息传输方式；逻辑接口定义了对等数据交换的要求，逻辑接口没有定义真正的信息传输方式，其传输发生在一个或多个直接接口。根据图所标注的接口在框架中的具体位置，请填写下表的(1)～(8)处空白。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577701701681492.jpg\" title=\"1577701701681492.jpg\" alt=\"1.jpg\"/><br/></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 208618,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p><br/></p><p>【问题1】答案：</p><p>开放架构应具有以下4个基本特点：</p><p>①可移植性。各种计算机应用系统可在具有开放架构特性的各种计算机系统间进行移植，不论这些计算机是否同种型号、同种机型。</p><p>②可互操作性。如计算机网络中的各结点机都具有开放架构的特性，则该网上各结点机间可相互操作和资源共享。</p><p>③可剪裁性。如某个计算机系统是具有开放架构特性的，则在该系统的低档机上运行的应用系统应能在高档机上运行，原在高档机上运行的应用系统经剪裁后也可在低档机上运行。</p><p>④易获得性。在具有开放架构特性的机器上所运行的软件环境易于从多方获得，不受某个来源所控制。</p>【问题2】答案：<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577701839215273.jpg\" title=\"1577701839215273.jpg\" alt=\"1.jpg\"/><p><br/></p><br/>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 208625,
    "question_title": "<p>阅读以下关于企业应用系统集成架构设计的说明，回答问题。</p><p>【说明】</p><p>某航空公司希望对构建于上世纪七八十年代的主要业务系统进行改造与集成，提高企业的竞争力。由于集成过程非常复杂，公司决定首先以Ramp Coordination系统为例进行集成过程的探索与验证。</p><p>在航空业中，Ramp Coordination是指飞机从降落到起飞过程中所需要进行的各种业务活动的协调过程。通常每个航班都有一位员工负责Ramp Coordination，称之为RampCoordinator。由Ramp Coordinator协调的业务活动包括检查机位环境、卸货和装货等。</p><p>由于航班类型、机型的不同，Ramp Coordination的流程有很大差异。图(a)所示的流程主要针对短期中转航班，这类航班在机场稍作停留后就起飞；图(b)所示的流程主要针对到达航班，通常在机场过夜后第二天起飞；图(c)所示的流程主要针对离港航班，这类航班是每天的第一班飞机。这三种类型的航班根据长途/短途、国内/国外等因素还可以进一步细分，每种细分航班类型的Ramp Coordination的流程也略有不同。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577702730637682.jpg\" title=\"1577702730637682.jpg\" alt=\"1.jpg\"/></p><p>为了完成上述业务，Ramp Coordination信息系统需要从乘务人员管理系统中提取航班乘务员的信息、从订票系统中提取乘客信息、从机务人员管理系统中提取机务人员信息、接收来自航班调度系统的航班到达事件。其中乘务人员管理系统和航班调度系统运行在大型主机系统中，机务人员管理系统运行在Unix操作系统之上，订票系统基于Java语言，具有Web界面，运行在Linux操作系统之上。</p><p>目前Ramp Coordination信息系统主要由人工完成所有协调工作，效率低且容易出错。公司领导要求集成后的Ramp Coordination信息系统能够针对不同需求迅速开展业务流程，灵活、高效地完成协调任务。</p><p>针对上述要求，公司IT部门的架构师经过分析与讨论，最终采用面向服务的架构，以服务为中心进行Ramp Coordination信息系统的集成工作。</p><p>【问题1】</p><p>服务建模是对Ramp Coordination信息系统进行集成的首要工作，公司的架构师首先对Ramp Coordination信息系统进行服务建模，识别出系统中的两个主要业务服务组件：</p><p>(1)Ramp Control：负责Ramp Coordination信息系统中相关各种业务活动的组件；</p><p>(2)Flight Management：负责航班相关信息的管理，包括航班日程，乘客信息等。</p><p>针对上述服务模型，结合题干描述，请为每个业务服务组件提供的服务进行分析与整理，完成表中的空白部分。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577702743991947.jpg\" title=\"1577702743991947.jpg\" alt=\"1.jpg\"/></p><p>【问题2】</p><p>对Ramp Coordination信息系统的集成涉及对乘务人员管理系统、航班调度系统、机务人员管理系统和订票系统的组织与协调，公司架构师决定采用企业服务总线(Enterprise Service Bus，ESB.技术进行系统集成，请用200字以内的文字对ESB的定义进行描述，给出ESB的五个主要功能，并针对题干描述，将恰当的内容填入图中的(1)～(6)</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577702785521450.jpg\" title=\"1577702785521450.jpg\" alt=\"1.jpg\"/></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题1】答案：<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577702764557490.jpg\" title=\"1577702764557490.jpg\" alt=\"1.jpg\"/><br/></p><p>【问题2】答案：</p><p>企业服务总线(Enterprise Service Bus，ESB)是传统中间件技术与XML、Web服务等技术结合的产物，主要支持异构系统集成。ESB基于内容的路由和过滤，具备复杂数据的传输能力，并可以提供一系列的标准接口。</p><p>ESB的主要功能有：(1)服务位置透明性；(2)传输协议转换；(3)消息格式转换；(4)消息路由；(5)消息增强；(6)安全性；(7)监控与管理<br/>图中：(1)企业服务总线 (2)订票系统 (3)航班到达事件 (4)乘务人员系统 (5)机务人员信息 (6)机务人员管理系统<span style=\"font-size: 16px;\"></span></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 208625,
      "question_title": "<p>阅读以下关于企业应用系统集成架构设计的说明，回答问题。</p><p>【说明】</p><p>某航空公司希望对构建于上世纪七八十年代的主要业务系统进行改造与集成，提高企业的竞争力。由于集成过程非常复杂，公司决定首先以Ramp Coordination系统为例进行集成过程的探索与验证。</p><p>在航空业中，Ramp Coordination是指飞机从降落到起飞过程中所需要进行的各种业务活动的协调过程。通常每个航班都有一位员工负责Ramp Coordination，称之为RampCoordinator。由Ramp Coordinator协调的业务活动包括检查机位环境、卸货和装货等。</p><p>由于航班类型、机型的不同，Ramp Coordination的流程有很大差异。图(a)所示的流程主要针对短期中转航班，这类航班在机场稍作停留后就起飞；图(b)所示的流程主要针对到达航班，通常在机场过夜后第二天起飞；图(c)所示的流程主要针对离港航班，这类航班是每天的第一班飞机。这三种类型的航班根据长途/短途、国内/国外等因素还可以进一步细分，每种细分航班类型的Ramp Coordination的流程也略有不同。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577702730637682.jpg\" title=\"1577702730637682.jpg\" alt=\"1.jpg\"/></p><p>为了完成上述业务，Ramp Coordination信息系统需要从乘务人员管理系统中提取航班乘务员的信息、从订票系统中提取乘客信息、从机务人员管理系统中提取机务人员信息、接收来自航班调度系统的航班到达事件。其中乘务人员管理系统和航班调度系统运行在大型主机系统中，机务人员管理系统运行在Unix操作系统之上，订票系统基于Java语言，具有Web界面，运行在Linux操作系统之上。</p><p>目前Ramp Coordination信息系统主要由人工完成所有协调工作，效率低且容易出错。公司领导要求集成后的Ramp Coordination信息系统能够针对不同需求迅速开展业务流程，灵活、高效地完成协调任务。</p><p>针对上述要求，公司IT部门的架构师经过分析与讨论，最终采用面向服务的架构，以服务为中心进行Ramp Coordination信息系统的集成工作。</p><p>【问题1】</p><p>服务建模是对Ramp Coordination信息系统进行集成的首要工作，公司的架构师首先对Ramp Coordination信息系统进行服务建模，识别出系统中的两个主要业务服务组件：</p><p>(1)Ramp Control：负责Ramp Coordination信息系统中相关各种业务活动的组件；</p><p>(2)Flight Management：负责航班相关信息的管理，包括航班日程，乘客信息等。</p><p>针对上述服务模型，结合题干描述，请为每个业务服务组件提供的服务进行分析与整理，完成表中的空白部分。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577702743991947.jpg\" title=\"1577702743991947.jpg\" alt=\"1.jpg\"/></p><p>【问题2】</p><p>对Ramp Coordination信息系统的集成涉及对乘务人员管理系统、航班调度系统、机务人员管理系统和订票系统的组织与协调，公司架构师决定采用企业服务总线(Enterprise Service Bus，ESB.技术进行系统集成，请用200字以内的文字对ESB的定义进行描述，给出ESB的五个主要功能，并针对题干描述，将恰当的内容填入图中的(1)～(6)</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577702785521450.jpg\" title=\"1577702785521450.jpg\" alt=\"1.jpg\"/></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 208625,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题1】答案：<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577702764557490.jpg\" title=\"1577702764557490.jpg\" alt=\"1.jpg\"/><br/></p><p>【问题2】答案：</p><p>企业服务总线(Enterprise Service Bus，ESB)是传统中间件技术与XML、Web服务等技术结合的产物，主要支持异构系统集成。ESB基于内容的路由和过滤，具备复杂数据的传输能力，并可以提供一系列的标准接口。</p><p>ESB的主要功能有：(1)服务位置透明性；(2)传输协议转换；(3)消息格式转换；(4)消息路由；(5)消息增强；(6)安全性；(7)监控与管理<br/>图中：(1)企业服务总线 (2)订票系统 (3)航班到达事件 (4)乘务人员系统 (5)机务人员信息 (6)机务人员管理系统<span style=\"font-size: 16px;\"></span></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 208627,
    "question_title": "<p>阅读以下有关嵌入式软件FMEA方法和相关案例的说明，回答问题。</p><p>【说明】</p><p>故障(失效)模型影响分析FMEA是分析产品所有可能的故障模式及其可能产生的影响，并按每个故障模式产生影响的严重程度及其发生概率予以分类的一种归纳分析方法。近年来，FMEA方法已被广泛用于安全关键系统的嵌入式软件可靠性分析工作。</p><p>某软件公司承担了一项通信软件的开发项目。该项目由FC系统、DY系统和GD系统组成，而DY系统(TMS320C25S)软件负责按系统的通信协议完成与FC系统的通信，图给出了该通信软件的约定层次图。公司高层将项目交给王工，王工认为此项目是安全关键系统，安全等级应为II类(致命的)，因此应开展软件的FMEA分析。</p><p>【问题1】</p><p>请阅读以下有关FMEA的描述，将恰当的内容填入(1)～(7)。</p><p>FMEA是FMA(故障模式分析)和FEA(故障影响分析)的组合，它对系统各种可能的风险进行评价、分析后，在现有技术的基础上消除这些风险或将这些风险降低到可接受的水平。为达到最佳效益，FMEA必须在产品研制初期进行。</p><p>FMEA实际是一组系列化的活动，其主要活动包括：</p><p>&nbsp; &nbsp; &nbsp; (1) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;；</p><p>&nbsp; &nbsp; &nbsp; (2) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;；</p><p>&nbsp; &nbsp; &nbsp; (3) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 。</p><p>&nbsp; &nbsp; 由于产品故障可能与设计、制造过程、使用、承包商/供应商以及服务有关，因此FMEA又细分为 &nbsp;(4) &nbsp;FMEA、 &nbsp;(5) &nbsp;。FMEA、 &nbsp;(6) &nbsp;FMEA和 &nbsp;(7) &nbsp;FMEA四类</p><span style=\"font-size: 16px;\">【问题2】</span><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577703251922383.jpg\" title=\"1577703251922383.jpg\" alt=\"1.jpg\"/></p><p>从图可以看出，CSU01通信模块是该项目的关键模块，主要功能定义为：总线通信控制器自动完成一帧数据的接收，存入数据缓冲区，并产生中断(INT0)，通知CPU从数据缓冲区中读取数据；CPU读完数据后，将准备好的发送数据写至数据缓存区，写完后通知总线通信控制器自动完成一帧数据的发送。CRC校验由外部电路完成判别，其结果通过数据线上的相应位进行标识。针对CSU01通信模块，简要描述实施FMEA的具体内容，填写完成下表的(1)～(5)。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577703281813983.jpg\" title=\"1577703281813983.jpg\" alt=\"1.jpg\"/></p><p>【问题3】</p><p>下表给出针对该项目的CSU01通信模块的软件故障(失效)模型影响分析FMECA表(局部)，请根据此题描述情况填写表中的(1)～(7)。</p><p>注：表中的SRPN(软件风险优先数)=SESR(软件故障模式的严酷度等级)×SOPR(软件故障模式的发生概率等级)×SDDR(软件故障模式的被检测难度等级)。</p><p>通信模块INT0-ISR的软件FMECA表(局部)</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577703381852833.jpg\" title=\"1577703381852833.jpg\" alt=\"1.jpg\"/>11<br/></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题1】答案：</p><p>(1)找出产品/过程中潜在的故障模式</p><p>(2)根据相应的评价体系对找出的潜在故障模式进行风险量化评估</p><p>(3)列出故障起因/机理，寻找预防或改进措施</p><p>(4)设计</p><p>(5)过程</p><p>(6)使用</p><p>(7)服务</p><p>【问题2】答案：</p><p>(1)根据通信协议，可按接收数据功能和发送数据功能分别确定故障模式；</p><p>(2)故障原因分为总线通信控制器原因、对方发送的原因和自身程序的原因；</p><p>(3)针对每个故障模式分析其对本模块直至整个DY系统造成的影响；</p><p>(4)采用风险优先数RPN方法进行该通信模块的危害性分析；</p><p>(5)根据以上故障模式、原因、影响及危害性的分析结果，综合考虑故障的影响及SRPN值等情况，对每个故障模式制定了相应的改进措施。<br/></p><p>【问题3】答案：</p><p>(1)程序写0C300H地址单元不当</p><p>(2)无法响应INT0中断</p><p>(3)线路误码</p><p>(4)通信错误</p><p>(5)程序控制错误</p><p>(6)210</p><p>(7)数据发送始终不成功数据发送始终不成功。<span style=\"font-size: 16px;\"></span></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 208627,
      "question_title": "<p>阅读以下有关嵌入式软件FMEA方法和相关案例的说明，回答问题。</p><p>【说明】</p><p>故障(失效)模型影响分析FMEA是分析产品所有可能的故障模式及其可能产生的影响，并按每个故障模式产生影响的严重程度及其发生概率予以分类的一种归纳分析方法。近年来，FMEA方法已被广泛用于安全关键系统的嵌入式软件可靠性分析工作。</p><p>某软件公司承担了一项通信软件的开发项目。该项目由FC系统、DY系统和GD系统组成，而DY系统(TMS320C25S)软件负责按系统的通信协议完成与FC系统的通信，图给出了该通信软件的约定层次图。公司高层将项目交给王工，王工认为此项目是安全关键系统，安全等级应为II类(致命的)，因此应开展软件的FMEA分析。</p><p>【问题1】</p><p>请阅读以下有关FMEA的描述，将恰当的内容填入(1)～(7)。</p><p>FMEA是FMA(故障模式分析)和FEA(故障影响分析)的组合，它对系统各种可能的风险进行评价、分析后，在现有技术的基础上消除这些风险或将这些风险降低到可接受的水平。为达到最佳效益，FMEA必须在产品研制初期进行。</p><p>FMEA实际是一组系列化的活动，其主要活动包括：</p><p>&nbsp; &nbsp; &nbsp; (1) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;；</p><p>&nbsp; &nbsp; &nbsp; (2) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;；</p><p>&nbsp; &nbsp; &nbsp; (3) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 。</p><p>&nbsp; &nbsp; 由于产品故障可能与设计、制造过程、使用、承包商/供应商以及服务有关，因此FMEA又细分为 &nbsp;(4) &nbsp;FMEA、 &nbsp;(5) &nbsp;。FMEA、 &nbsp;(6) &nbsp;FMEA和 &nbsp;(7) &nbsp;FMEA四类</p><span style=\"font-size: 16px;\">【问题2】</span><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577703251922383.jpg\" title=\"1577703251922383.jpg\" alt=\"1.jpg\"/></p><p>从图可以看出，CSU01通信模块是该项目的关键模块，主要功能定义为：总线通信控制器自动完成一帧数据的接收，存入数据缓冲区，并产生中断(INT0)，通知CPU从数据缓冲区中读取数据；CPU读完数据后，将准备好的发送数据写至数据缓存区，写完后通知总线通信控制器自动完成一帧数据的发送。CRC校验由外部电路完成判别，其结果通过数据线上的相应位进行标识。针对CSU01通信模块，简要描述实施FMEA的具体内容，填写完成下表的(1)～(5)。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577703281813983.jpg\" title=\"1577703281813983.jpg\" alt=\"1.jpg\"/></p><p>【问题3】</p><p>下表给出针对该项目的CSU01通信模块的软件故障(失效)模型影响分析FMECA表(局部)，请根据此题描述情况填写表中的(1)～(7)。</p><p>注：表中的SRPN(软件风险优先数)=SESR(软件故障模式的严酷度等级)×SOPR(软件故障模式的发生概率等级)×SDDR(软件故障模式的被检测难度等级)。</p><p>通信模块INT0-ISR的软件FMECA表(局部)</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577703381852833.jpg\" title=\"1577703381852833.jpg\" alt=\"1.jpg\"/>11<br/></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 208627,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题1】答案：</p><p>(1)找出产品/过程中潜在的故障模式</p><p>(2)根据相应的评价体系对找出的潜在故障模式进行风险量化评估</p><p>(3)列出故障起因/机理，寻找预防或改进措施</p><p>(4)设计</p><p>(5)过程</p><p>(6)使用</p><p>(7)服务</p><p>【问题2】答案：</p><p>(1)根据通信协议，可按接收数据功能和发送数据功能分别确定故障模式；</p><p>(2)故障原因分为总线通信控制器原因、对方发送的原因和自身程序的原因；</p><p>(3)针对每个故障模式分析其对本模块直至整个DY系统造成的影响；</p><p>(4)采用风险优先数RPN方法进行该通信模块的危害性分析；</p><p>(5)根据以上故障模式、原因、影响及危害性的分析结果，综合考虑故障的影响及SRPN值等情况，对每个故障模式制定了相应的改进措施。<br/></p><p>【问题3】答案：</p><p>(1)程序写0C300H地址单元不当</p><p>(2)无法响应INT0中断</p><p>(3)线路误码</p><p>(4)通信错误</p><p>(5)程序控制错误</p><p>(6)210</p><p>(7)数据发送始终不成功数据发送始终不成功。<span style=\"font-size: 16px;\"></span></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 208629,
    "question_title": "<p>阅读以下有关软件与信息安全方面的说明，回答问题。</p><p>【说明】</p><p>某软件公司拟开发一套信息安全支撑平台，为客户的局域网业务环境提供信息安全保护。该支撑平台的主要需求如下：</p><p>1.为局域网业务环境提供用户身份鉴别与资源访问授权功能；</p><p>2.为局域网环境中交换的网络数据提供加密保护；</p><p>3.为服务器和终端机存储的敏感持久数据提供加密保护；</p><p>4.保护的主要实体对象包括局域网内交换的网络数据包、文件服务器中的敏感数据文件、数据库服务器中的敏感关系数据和终端机用户存储的敏感数据文件；</p><p>5.服务器中存储的敏感数据按安全管理员配置的权限访问；</p><p>6.业务系统生成的单个敏感数据文件可能会达到数百兆的规模；</p><p>7.终端机用户存储的敏感数据为用户私有；</p><p>8.局域网业务环境的总用户数在100人以内。</p><p>【问题1】</p><p>在确定该支撑平台所采用的用户身份鉴别机制时，王工提出采用基于口令的简单认证机制，而李工则提出采用基于公钥体系的认证机制。项目组经过讨论，确定采用基于公钥体系的机制，请结合上述需求具体分析采用李工方案的原因。</p><p>【问题2】</p><p>针对需求7，项目组经过讨论，确定了基于数字信封的加密方式，其加密后的文件结构如图所示。请结合需求说明对文件数据进行加密时，应采用对称加密的块加密方式还是流加密方式，为什么?并对该机制中的数据加密与解密过程进行描述。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577703770889211.jpg\" title=\"1577703770889211.jpg\" alt=\"1.jpg\"/></p><p>【问题3】</p><p>对数据库服务器中的敏感关系数据进行加密保护时，客户业务系统中的敏感关系数据主要是特定数据库表中的敏感字段值，客户要求对不同程度的敏感字段采用不同强度的密钥进行防护，且加密方式应尽可能减少安全管理与应用程序的负担。目前数据库管理系统提供的基本数据加密方式主要包括加解密API和透明加密两种，请用300字以内的文字对这两种方式进行解释，并结合需求说明应采用哪种加密方式。<span style=\"font-size: 16px;\"></span></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题1】答案：</p><p>(1)基于口令的认证方式实现简单，但由于口令复杂度及管理方面的原因，易受到认证攻击；而在基于公钥体系的认证方式中，由于其密钥机制的复杂性，同时在认证过程中私钥不在网络上传输，因此可以有效防止认证攻击，与基于口令的认证方式相比更为安全。</p><p>(2)按照需求描述，在完成用户身份鉴别后，需依据用户身份进一步对业务数据进行安全保护，且受保护数据中包含用户私有的终端机数据文件，在基于口令的认证方式中，用户口令为用户和认证服务器共享，没有用户独有的直接秘密信息，而在基于公钥的认证方式中，可基于用户私钥对私有数据进行加密保护，实现更加简便。</p><p>(3)基于公钥体系的认证方式协议和计算更加复杂，因此其计算复杂度要高于基于口令的认证方式，但业务环境的总用户数在100人以内，用户规模不大，运行环境又为局域网环境，因此基于公钥体系的认证方式可满足平台效率要求。</p><p>【问题2】答案：</p><p>应采用流加密方式。因为需求中提及“单个敏感数据文件可能会达到数百兆的规模”，文件数据量较大，使用流加密方式可以获得更高的加解密效率。</p><p>数据加密与解密过程如下：</p><p>其加密过程为：首先生成一个对称密钥，使用用户公钥加密这个对称密钥后存储在文件头，然后用生成的对称密钥加密文件数据存储；</p><p>其解密过程为：用户首先使用自己的私钥解密被加密的对称密钥，再用该对称密钥解密出数据原文。</p><p>【问题3】答案：</p><p>目前数据库管理系统提供的基本数据加密支持主要有以下两种：</p><p>(1)加解密API：数据库管理系统提供可在SQL，语句中调用的加解密API，应用可以利用这些API构建自己的基础架构，对数据进行加密保护。</p><p>(2)透明加密：安全管理员为数据库敏感字段选择加密方式及密钥强度，应用访问受保护数据时只需使用口令打开或关闭密钥表，对数据的加密和解密由数据库管理系统自动完成。</p><p>加解密API方式的灵活性强，但构建和管理复杂；而透明加密方式管理简单，应用程序负担轻，但灵活性较差。用户要求尽可能减少安全管理与应用程序的负担，因此应选择透明加密方式。<span style=\"font-size: 16px;\"></span></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 208629,
      "question_title": "<p>阅读以下有关软件与信息安全方面的说明，回答问题。</p><p>【说明】</p><p>某软件公司拟开发一套信息安全支撑平台，为客户的局域网业务环境提供信息安全保护。该支撑平台的主要需求如下：</p><p>1.为局域网业务环境提供用户身份鉴别与资源访问授权功能；</p><p>2.为局域网环境中交换的网络数据提供加密保护；</p><p>3.为服务器和终端机存储的敏感持久数据提供加密保护；</p><p>4.保护的主要实体对象包括局域网内交换的网络数据包、文件服务器中的敏感数据文件、数据库服务器中的敏感关系数据和终端机用户存储的敏感数据文件；</p><p>5.服务器中存储的敏感数据按安全管理员配置的权限访问；</p><p>6.业务系统生成的单个敏感数据文件可能会达到数百兆的规模；</p><p>7.终端机用户存储的敏感数据为用户私有；</p><p>8.局域网业务环境的总用户数在100人以内。</p><p>【问题1】</p><p>在确定该支撑平台所采用的用户身份鉴别机制时，王工提出采用基于口令的简单认证机制，而李工则提出采用基于公钥体系的认证机制。项目组经过讨论，确定采用基于公钥体系的机制，请结合上述需求具体分析采用李工方案的原因。</p><p>【问题2】</p><p>针对需求7，项目组经过讨论，确定了基于数字信封的加密方式，其加密后的文件结构如图所示。请结合需求说明对文件数据进行加密时，应采用对称加密的块加密方式还是流加密方式，为什么?并对该机制中的数据加密与解密过程进行描述。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20191230/1577703770889211.jpg\" title=\"1577703770889211.jpg\" alt=\"1.jpg\"/></p><p>【问题3】</p><p>对数据库服务器中的敏感关系数据进行加密保护时，客户业务系统中的敏感关系数据主要是特定数据库表中的敏感字段值，客户要求对不同程度的敏感字段采用不同强度的密钥进行防护，且加密方式应尽可能减少安全管理与应用程序的负担。目前数据库管理系统提供的基本数据加密方式主要包括加解密API和透明加密两种，请用300字以内的文字对这两种方式进行解释，并结合需求说明应采用哪种加密方式。<span style=\"font-size: 16px;\"></span></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 208629,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题1】答案：</p><p>(1)基于口令的认证方式实现简单，但由于口令复杂度及管理方面的原因，易受到认证攻击；而在基于公钥体系的认证方式中，由于其密钥机制的复杂性，同时在认证过程中私钥不在网络上传输，因此可以有效防止认证攻击，与基于口令的认证方式相比更为安全。</p><p>(2)按照需求描述，在完成用户身份鉴别后，需依据用户身份进一步对业务数据进行安全保护，且受保护数据中包含用户私有的终端机数据文件，在基于口令的认证方式中，用户口令为用户和认证服务器共享，没有用户独有的直接秘密信息，而在基于公钥的认证方式中，可基于用户私钥对私有数据进行加密保护，实现更加简便。</p><p>(3)基于公钥体系的认证方式协议和计算更加复杂，因此其计算复杂度要高于基于口令的认证方式，但业务环境的总用户数在100人以内，用户规模不大，运行环境又为局域网环境，因此基于公钥体系的认证方式可满足平台效率要求。</p><p>【问题2】答案：</p><p>应采用流加密方式。因为需求中提及“单个敏感数据文件可能会达到数百兆的规模”，文件数据量较大，使用流加密方式可以获得更高的加解密效率。</p><p>数据加密与解密过程如下：</p><p>其加密过程为：首先生成一个对称密钥，使用用户公钥加密这个对称密钥后存储在文件头，然后用生成的对称密钥加密文件数据存储；</p><p>其解密过程为：用户首先使用自己的私钥解密被加密的对称密钥，再用该对称密钥解密出数据原文。</p><p>【问题3】答案：</p><p>目前数据库管理系统提供的基本数据加密支持主要有以下两种：</p><p>(1)加解密API：数据库管理系统提供可在SQL，语句中调用的加解密API，应用可以利用这些API构建自己的基础架构，对数据进行加密保护。</p><p>(2)透明加密：安全管理员为数据库敏感字段选择加密方式及密钥强度，应用访问受保护数据时只需使用口令打开或关闭密钥表，对数据的加密和解密由数据库管理系统自动完成。</p><p>加解密API方式的灵活性强，但构建和管理复杂；而透明加密方式管理简单，应用程序负担轻，但灵活性较差。用户要求尽可能减少安全管理与应用程序的负担，因此应选择透明加密方式。<span style=\"font-size: 16px;\"></span></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 281382,
    "question_title": "<p>[问题3]</p><p>故障处理是宇航系统软件设计中极为重要的组成部分。故障处理主要包括故障监视、故障定位、故障隔离和系统容错(重组)。用150字以内的文字说明嵌入式系统中故障主要分哪几类 并分别给出两种常用的故障滤波算法和容错算法。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "【问题三】<p>(1),嵌入式系统中故障主要分为：</p><p>①硬件故障：如CPU、存储器和定时器等；</p><p>②应用软件故障：如数值越界、异常和超时等；</p><p>③操作系统故障：如越权访问、死锁和资源枯竭等。</p><p>(2),滤波算法：</p><p>①门限算法</p><p>②递减算法</p><p>③递增算法</p><p>④周期滤波算法</p><p>(3),容错算法：</p><p>①N+1备份</p><p>②冷备</p><p>③温备</p><p>④热备</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 281382,
      "question_title": "<p>[问题3]</p><p>故障处理是宇航系统软件设计中极为重要的组成部分。故障处理主要包括故障监视、故障定位、故障隔离和系统容错(重组)。用150字以内的文字说明嵌入式系统中故障主要分哪几类 并分别给出两种常用的故障滤波算法和容错算法。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 281379,
      "score_rule": "",
      "material_text": "<p>试题三（25分）&nbsp;&nbsp;</p><p>某公司承担了一项宇航嵌入式设备的研制任务。本项目除对硬件设备环境有很高的要求外，还要求支持以下功能：</p><p>(1) 设备由多个处理机模块组成，需要时外场可快速更换(即LRM结构)；</p><p>(2) 应用软件应与硬件无关，便于软硬件的升级；</p><p>(3) 由于宇航嵌入式设备中要支持不同功能，系统应支持完成不同功能任务间的数据隔离；</p><p>(4) 宇航设备可靠性要求高，系统要有故障处理能力。</p><p>公司在接到此项任务后，进行了反复论证，提出三层栈(TLS)软件总体架构，如下图所示，并将软件设计工作交给了李工，要求他在三周内完成软件总体设计工作，给出总体设计方案。<br/><img src=\"https://s2.51cto.com/images/20210419/1618801516472025.png\" title=\"1618801516472025.png\" alt=\"TLS.png\"/></p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "【问题三】<p>(1),嵌入式系统中故障主要分为：</p><p>①硬件故障：如CPU、存储器和定时器等；</p><p>②应用软件故障：如数值越界、异常和超时等；</p><p>③操作系统故障：如越权访问、死锁和资源枯竭等。</p><p>(2),滤波算法：</p><p>①门限算法</p><p>②递减算法</p><p>③递增算法</p><p>④周期滤波算法</p><p>(3),容错算法：</p><p>①N+1备份</p><p>②冷备</p><p>③温备</p><p>④热备</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 281388,
    "question_title": "<p>[问题2]（12分）</p><p>&nbsp;&nbsp; &nbsp;请用200字以内的文字叙述Struts、Spring和Hibernate开源框架特点和结合方式。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "【问题二】<br/><span style=\"font-size: 16px;\">（1）Struts框架的组件在页面中显示的粗粒度，以及框架类的限制在很多情况下会表现得过于死板，给表示层的开发会带来一些额外的代码开销。</span><p>Spring框架采用依赖注入使得它可以很容易地实现Bean的装配，提供了简洁的AOP并据此实现事务管理等，但是它不具备处理应用分布式的能力。</p><p>Hiberhate是一个开源的O/R Mapping框架，它对JDBC进行了非常轻量级的对象封装，可以应用在任何使用JDBC的场合，可以在应用EJB的J2EE框架中取代CMP，完成数据持久化的重任。Hibernat使用Java反射机制而不是字节码增强程序来实现透明性；使用简单；映射的灵活性很出色，它支持各种关系数据库，从一对一(1:1)到多对多(m:n)的各种复杂关系。其缺点是限制所使用的对象模型(例如，一个持久性类不能映射到多个表)。</p><p>以上意思对即可给分。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 281388,
      "question_title": "<p>[问题2]（12分）</p><p>&nbsp;&nbsp; &nbsp;请用200字以内的文字叙述Struts、Spring和Hibernate开源框架特点和结合方式。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 281386,
      "score_rule": "",
      "material_text": "<p>试题五（25分）</p><p>阅读以下关于Java企业级应用系统开发架构的叙述，根据要求回答问题。</p><p>[说明]</p><p>&nbsp;&nbsp; &nbsp;某软件公司承担了某中小型企业应用软件开发任务，进度要求紧迫。为了按时完成任务，选择合适的企业应用系统开发架构非常重要。项目组在进行方案论证时，项目组成员提出了两种开发思路。</p><p>&nbsp;&nbsp; 刘工建议采用J2EE 5.0和EJB 3.0进行开发。理由是J2EE定义了标准的应用开发体系结构和部署环境，EJB是J2EE的基础和核心。J2EE 5.0主要目标是简化开发，相比EJB 2.1，EJB 3.0具有很多改进和提高。</p><p>&nbsp;&nbsp; 杜工建议采用Struts、Spring和Hibenate轻量级开源框架相结合的方式。理由是随着Java开源项目阵营的发展壮大，一些基于POJOs(Plan Old Java Objects)的开源框架被广泛地引入到Java企业应用开发中来，与重量级的EJB框架相比，这些轻量级的框架有很多优点。</p><p>&nbsp;&nbsp; &nbsp;项目组仔细比较分析了两种方案的特点、优点和不足之处。认为杜工和刘工的建议都合理，但是从结合当前项目实际情况出发，最后决定采用杜工的建议。<span style=\"font-size: 16px;\"></span></p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "【问题二】<br/><span style=\"font-size: 16px;\">（1）Struts框架的组件在页面中显示的粗粒度，以及框架类的限制在很多情况下会表现得过于死板，给表示层的开发会带来一些额外的代码开销。</span><p>Spring框架采用依赖注入使得它可以很容易地实现Bean的装配，提供了简洁的AOP并据此实现事务管理等，但是它不具备处理应用分布式的能力。</p><p>Hiberhate是一个开源的O/R Mapping框架，它对JDBC进行了非常轻量级的对象封装，可以应用在任何使用JDBC的场合，可以在应用EJB的J2EE框架中取代CMP，完成数据持久化的重任。Hibernat使用Java反射机制而不是字节码增强程序来实现透明性；使用简单；映射的灵活性很出色，它支持各种关系数据库，从一对一(1:1)到多对多(m:n)的各种复杂关系。其缺点是限制所使用的对象模型(例如，一个持久性类不能映射到多个表)。</p><p>以上意思对即可给分。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 281389,
    "question_title": "<p>[问题3]（7分）</p><p>请用200字以内的文字说明基于Struts、Spring和Hibernate的轻量级框架与基于EJB的重量级框架解决问题的侧重点有什么不同?</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题三】<br/>轻量级框架侧重于减小开发的复杂度，相应的它的处理能力便有所减弱(如事务功能弱、不具备分布式处理能力)，比较适用于开发中小型企业应用。</p><p>重量级框架的EJB框架则强调高可伸缩性，适用于开发大型企业应用。在EJB体系结构中，一切与基础结构服务相关的问题和底层分配问题都由应用程序容器或服务器来处理，且EJB容器通过减少数据库访问次数及分布式处理等方式提供了专门的系统性能解决方案，能够充分解决系统性能问题。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 281389,
      "question_title": "<p>[问题3]（7分）</p><p>请用200字以内的文字说明基于Struts、Spring和Hibernate的轻量级框架与基于EJB的重量级框架解决问题的侧重点有什么不同?</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 281386,
      "score_rule": "",
      "material_text": "<p>试题五（25分）</p><p>阅读以下关于Java企业级应用系统开发架构的叙述，根据要求回答问题。</p><p>[说明]</p><p>&nbsp;&nbsp; &nbsp;某软件公司承担了某中小型企业应用软件开发任务，进度要求紧迫。为了按时完成任务，选择合适的企业应用系统开发架构非常重要。项目组在进行方案论证时，项目组成员提出了两种开发思路。</p><p>&nbsp;&nbsp; 刘工建议采用J2EE 5.0和EJB 3.0进行开发。理由是J2EE定义了标准的应用开发体系结构和部署环境，EJB是J2EE的基础和核心。J2EE 5.0主要目标是简化开发，相比EJB 2.1，EJB 3.0具有很多改进和提高。</p><p>&nbsp;&nbsp; 杜工建议采用Struts、Spring和Hibenate轻量级开源框架相结合的方式。理由是随着Java开源项目阵营的发展壮大，一些基于POJOs(Plan Old Java Objects)的开源框架被广泛地引入到Java企业应用开发中来，与重量级的EJB框架相比，这些轻量级的框架有很多优点。</p><p>&nbsp;&nbsp; &nbsp;项目组仔细比较分析了两种方案的特点、优点和不足之处。认为杜工和刘工的建议都合理，但是从结合当前项目实际情况出发，最后决定采用杜工的建议。<span style=\"font-size: 16px;\"></span></p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题三】<br/>轻量级框架侧重于减小开发的复杂度，相应的它的处理能力便有所减弱(如事务功能弱、不具备分布式处理能力)，比较适用于开发中小型企业应用。</p><p>重量级框架的EJB框架则强调高可伸缩性，适用于开发大型企业应用。在EJB体系结构中，一切与基础结构服务相关的问题和底层分配问题都由应用程序容器或服务器来处理，且EJB容器通过减少数据库访问次数及分布式处理等方式提供了专门的系统性能解决方案，能够充分解决系统性能问题。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 284734,
    "question_title": "<p>[问题1]（12分）</p><p>&nbsp;&nbsp; &nbsp;请分析比较两种集成方案的优点和不足，将表中的(1)～(6)空缺处的内容填写完整。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602645778645323.jpg\" title=\"1602645778645323.jpg\" alt=\"1.jpg\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题一】</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210417/1618630292198713.jpg\" title=\"1618630292198713.jpg\" alt=\"284734.jpg\"/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 284734,
      "question_title": "<p>[问题1]（12分）</p><p>&nbsp;&nbsp; &nbsp;请分析比较两种集成方案的优点和不足，将表中的(1)～(6)空缺处的内容填写完整。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602645778645323.jpg\" title=\"1602645778645323.jpg\" alt=\"1.jpg\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 284733,
      "score_rule": "",
      "material_text": "<p>试题一（25分） &nbsp;<br/>阅读以下关于企业应用集成的叙述，根据要求回答问题。</p><p>[说明]</p><p>&nbsp;&nbsp; &nbsp;某大型企业随着信息化的进展，积累了许多异构的遗产信息系统，这些系统分别采用J2EE、.NET等技术进行开发，分布在不同的地理位置，采用不同的协议进行数据传输。企业要求集成后的系统能够实现功能整合，并在组织现有功能的基础上提供增值服务。FT软件开发公司承接了某大型企业应用系统集成任务。为了按时保质完成任务，选择合适的企业应用集成方法和架构非常重要。项目组在讨论方案时，提出了两种集成思路。</p><p>&nbsp;&nbsp; 魏工建议采用传统的应用集成方法，将应用集成分为多个层次，并采用消息代理中间件连接遗产系统。</p><p>&nbsp;&nbsp; 陈工建议采用基于SOA的方法进行应用集成，将现有遗产系统采用Web Service的方式进行包装，暴露统一格式的接口，并采用企业服务总线(ESB.进行连接。</p><p>&nbsp;&nbsp;&nbsp;项目组仔细分析比较了两种方案的优点和不足后，认为魏工和陈工的建议都合理，但是结合当前项目的实际情况，最后决定采用陈工的建议。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题一】</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210417/1618630292198713.jpg\" title=\"1618630292198713.jpg\" alt=\"284734.jpg\"/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 284735,
    "question_title": "<p>[问题2]（9分）</p><p>企业数据的分布性和异构性是应用系统方便访问企业数据和在企业数据之上提供增值服务的主要障碍。基于SOA的企业集成通过信息服务提供集成数据的能力，针对该企业的集成实际情况，请用300字以内的文字列举3种基于SOA的企业集成中的“数据整合——信息服务”，并给出简要说明。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题二】</p><p>(1)联邦服务(Federation,Service)：提供将各种类型的数据聚合的能力，它既支持关系型数据，也支持XML数据、文本数据和内容数据等非关系型数据。同时，所有的数据仍然按照自己本身的方式管理。</p><p>(2)复制服务(Replication,Service)：提供远程数据的本地访问能力，它通过自动的实时复制和数据转换，在本地维护一个数据源的副本。本地数据和数据源在技术实现上可以是独立的。</p><p>(3)转换服务(Transformation,Service)：用于数据源格式到目标格式的转换，可以是批量的或者是基于记录的。</p><p>(4)搜索服务(Search,Service)：提供对企业数据的查询和检索服务，既支持数据库等结构化数据，也支持如PDF等非结构化数据。,　</p><p>以上答案任选三条。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 284735,
      "question_title": "<p>[问题2]（9分）</p><p>企业数据的分布性和异构性是应用系统方便访问企业数据和在企业数据之上提供增值服务的主要障碍。基于SOA的企业集成通过信息服务提供集成数据的能力，针对该企业的集成实际情况，请用300字以内的文字列举3种基于SOA的企业集成中的“数据整合——信息服务”，并给出简要说明。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 284733,
      "score_rule": "",
      "material_text": "<p>试题一（25分） &nbsp;<br/>阅读以下关于企业应用集成的叙述，根据要求回答问题。</p><p>[说明]</p><p>&nbsp;&nbsp; &nbsp;某大型企业随着信息化的进展，积累了许多异构的遗产信息系统，这些系统分别采用J2EE、.NET等技术进行开发，分布在不同的地理位置，采用不同的协议进行数据传输。企业要求集成后的系统能够实现功能整合，并在组织现有功能的基础上提供增值服务。FT软件开发公司承接了某大型企业应用系统集成任务。为了按时保质完成任务，选择合适的企业应用集成方法和架构非常重要。项目组在讨论方案时，提出了两种集成思路。</p><p>&nbsp;&nbsp; 魏工建议采用传统的应用集成方法，将应用集成分为多个层次，并采用消息代理中间件连接遗产系统。</p><p>&nbsp;&nbsp; 陈工建议采用基于SOA的方法进行应用集成，将现有遗产系统采用Web Service的方式进行包装，暴露统一格式的接口，并采用企业服务总线(ESB.进行连接。</p><p>&nbsp;&nbsp;&nbsp;项目组仔细分析比较了两种方案的优点和不足后，认为魏工和陈工的建议都合理，但是结合当前项目的实际情况，最后决定采用陈工的建议。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题二】</p><p>(1)联邦服务(Federation,Service)：提供将各种类型的数据聚合的能力，它既支持关系型数据，也支持XML数据、文本数据和内容数据等非关系型数据。同时，所有的数据仍然按照自己本身的方式管理。</p><p>(2)复制服务(Replication,Service)：提供远程数据的本地访问能力，它通过自动的实时复制和数据转换，在本地维护一个数据源的副本。本地数据和数据源在技术实现上可以是独立的。</p><p>(3)转换服务(Transformation,Service)：用于数据源格式到目标格式的转换，可以是批量的或者是基于记录的。</p><p>(4)搜索服务(Search,Service)：提供对企业数据的查询和检索服务，既支持数据库等结构化数据，也支持如PDF等非结构化数据。,　</p><p>以上答案任选三条。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 284736,
    "question_title": "<p>[问题3]（4分）</p><p>结合你的系统架构设计经验，请用300字以内的文字简要说明FT公司项目组在对该企业构建SOA架构时，除了注意原有系统架构中的集成需求之外，还需要在服务构建时重点关注哪些问题。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "【问题三】<p>当基于SOA来构建一个企业级的系统架构时，一定要注意对原有系统架构中的集成需求进行细致的分析和整理。而关于系统中最重要的元素，也就是SOA系统中服务的构建有两点需要特别注意的地方：①是对于服务粒度的控制；②是对于无状态服务的设计。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 284736,
      "question_title": "<p>[问题3]（4分）</p><p>结合你的系统架构设计经验，请用300字以内的文字简要说明FT公司项目组在对该企业构建SOA架构时，除了注意原有系统架构中的集成需求之外，还需要在服务构建时重点关注哪些问题。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 284733,
      "score_rule": "",
      "material_text": "<p>试题一（25分） &nbsp;<br/>阅读以下关于企业应用集成的叙述，根据要求回答问题。</p><p>[说明]</p><p>&nbsp;&nbsp; &nbsp;某大型企业随着信息化的进展，积累了许多异构的遗产信息系统，这些系统分别采用J2EE、.NET等技术进行开发，分布在不同的地理位置，采用不同的协议进行数据传输。企业要求集成后的系统能够实现功能整合，并在组织现有功能的基础上提供增值服务。FT软件开发公司承接了某大型企业应用系统集成任务。为了按时保质完成任务，选择合适的企业应用集成方法和架构非常重要。项目组在讨论方案时，提出了两种集成思路。</p><p>&nbsp;&nbsp; 魏工建议采用传统的应用集成方法，将应用集成分为多个层次，并采用消息代理中间件连接遗产系统。</p><p>&nbsp;&nbsp; 陈工建议采用基于SOA的方法进行应用集成，将现有遗产系统采用Web Service的方式进行包装，暴露统一格式的接口，并采用企业服务总线(ESB.进行连接。</p><p>&nbsp;&nbsp;&nbsp;项目组仔细分析比较了两种方案的优点和不足后，认为魏工和陈工的建议都合理，但是结合当前项目的实际情况，最后决定采用陈工的建议。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "【问题三】<p>当基于SOA来构建一个企业级的系统架构时，一定要注意对原有系统架构中的集成需求进行细致的分析和整理。而关于系统中最重要的元素，也就是SOA系统中服务的构建有两点需要特别注意的地方：①是对于服务粒度的控制；②是对于无状态服务的设计。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 284742,
    "question_title": "<p>[问题1]（7分）</p><p>用150字以内的文字，说明公司制定的TLS软件架构的层次特点，并针对上述功能需求(1)～(4)，说明架构中各层内涵。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题一】</p><p>TLS结构框架的主要特点：</p><p>(1) 应用软件仅与操作系统服务相关，不直接操作硬件。</p><p>(2) 操作系统通过模块支持原软件访问硬件，可与具体硬件无关。</p><p>(3) 模块支持层将硬件抽象成标准操作。</p><p>(4) 通过三层栈的划分可实现硬件的快速更改与升级，应用软件的升级不会引起硬件的变更。</p><p>TLS结构框架的各层内涵是：</p><p>(1) 应用层主要完成宇航设备的具体工作，由多个功能任务组成，各功能任务间的隔离由操作系统层实现。</p><p>(2) 操作系统层实现应用软件与硬件的隔离，为应用软件提供更加丰富的计算机资源服务。操作系统为应用软件提供标准的API接口(如POSIX)，确保了应用软件的可升级性。</p><p>(3) 模块支持层为操作系统管理硬件资源提供统一管理方法，用一种抽象的标准接口实现软件与硬件的无关性，达到硬件的升级要求，便于硬件的外场快速更换。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 284742,
      "question_title": "<p>[问题1]（7分）</p><p>用150字以内的文字，说明公司制定的TLS软件架构的层次特点，并针对上述功能需求(1)～(4)，说明架构中各层内涵。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 284741,
      "score_rule": "",
      "material_text": "<p>某公司承担了一项宇航嵌入式设备的研制任务。本项目除对硬件设备环境有很高的要求外，还要求支持以下功能：</p><p>(1) 设备由多个处理机模块组成，需要时外场可快速更换(即LRM结构)；</p><p>(2) 应用软件应与硬件无关，便于软硬件的升级；</p><p>(3) 由于宇航嵌入式设备中要支持不同功能，系统应支持完成不同功能任务间的数据隔离；</p><p>(4) 宇航设备可靠性要求高，系统要有故障处理能力。</p><p>公司在接到此项任务后，进行了反复论证，提出三层栈(TLS)软件总体架构，如下图所示，并将软件设计工作交给了李工，要求他在三周内完成软件总体设计工作，给出总体设计方案。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题一】</p><p>TLS结构框架的主要特点：</p><p>(1) 应用软件仅与操作系统服务相关，不直接操作硬件。</p><p>(2) 操作系统通过模块支持原软件访问硬件，可与具体硬件无关。</p><p>(3) 模块支持层将硬件抽象成标准操作。</p><p>(4) 通过三层栈的划分可实现硬件的快速更改与升级，应用软件的升级不会引起硬件的变更。</p><p>TLS结构框架的各层内涵是：</p><p>(1) 应用层主要完成宇航设备的具体工作，由多个功能任务组成，各功能任务间的隔离由操作系统层实现。</p><p>(2) 操作系统层实现应用软件与硬件的隔离，为应用软件提供更加丰富的计算机资源服务。操作系统为应用软件提供标准的API接口(如POSIX)，确保了应用软件的可升级性。</p><p>(3) 模块支持层为操作系统管理硬件资源提供统一管理方法，用一种抽象的标准接口实现软件与硬件的无关性，达到硬件的升级要求，便于硬件的外场快速更换。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 284743,
    "question_title": "<p>[问题2]（13分）</p><p>在TLS软件架构的基础上，关于选择哪种类型的嵌入式操作系统问题，李工与总工程师发生了严重分歧。李工认为，宇航系统是实时系统，操作系统的处理时间越快越好，隔离意味着以时间作代价，没有必要，建议选择类似于VxWorks5.5的操作系统；总工程师认为，应用软件间隔离是宇航系统安全性要求，宇航系统在选择操作系统时必须考虑这一点，建议选择类似于Linux的操作系统。</p><p>请说明两种操作系统的主要差异，完成下表中的空白部分，并针对本任务要求，用200字以内的文字说明你选择操作系统的类型和理由。</p><p>两种操作系统的主要差异</p><br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602646202856592.jpg\" title=\"1602646202856592.jpg\" alt=\"1.jpg\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602646218908086.jpg\" title=\"1602646218908086.jpg\" alt=\"1.jpg\"/>选择类似于Linux的嵌入式操作系统。理由如下：</p><p>(1) Linux操作系统是一种安全性较强的操作系统。内核工作在系统态，应用软件工作在用户态，可以有效防止应用软件对操作系统的破坏。</p><p>(2) Linux操作系统调度的最小单位是线程，线程归属于进程，进程具有自己独立的资源。进程通过存储器管理部件(MMU)实现多功能应用间隔离。</p><p>(3) 嵌入式Linux操作系统支持硬件抽象，可有效实现TLS结构，并将硬件抽象与操作系统分离，可方便实现硬件的外场快速更换。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 284743,
      "question_title": "<p>[问题2]（13分）</p><p>在TLS软件架构的基础上，关于选择哪种类型的嵌入式操作系统问题，李工与总工程师发生了严重分歧。李工认为，宇航系统是实时系统，操作系统的处理时间越快越好，隔离意味着以时间作代价，没有必要，建议选择类似于VxWorks5.5的操作系统；总工程师认为，应用软件间隔离是宇航系统安全性要求，宇航系统在选择操作系统时必须考虑这一点，建议选择类似于Linux的操作系统。</p><p>请说明两种操作系统的主要差异，完成下表中的空白部分，并针对本任务要求，用200字以内的文字说明你选择操作系统的类型和理由。</p><p>两种操作系统的主要差异</p><br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602646202856592.jpg\" title=\"1602646202856592.jpg\" alt=\"1.jpg\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 284741,
      "score_rule": "",
      "material_text": "<p>某公司承担了一项宇航嵌入式设备的研制任务。本项目除对硬件设备环境有很高的要求外，还要求支持以下功能：</p><p>(1) 设备由多个处理机模块组成，需要时外场可快速更换(即LRM结构)；</p><p>(2) 应用软件应与硬件无关，便于软硬件的升级；</p><p>(3) 由于宇航嵌入式设备中要支持不同功能，系统应支持完成不同功能任务间的数据隔离；</p><p>(4) 宇航设备可靠性要求高，系统要有故障处理能力。</p><p>公司在接到此项任务后，进行了反复论证，提出三层栈(TLS)软件总体架构，如下图所示，并将软件设计工作交给了李工，要求他在三周内完成软件总体设计工作，给出总体设计方案。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20201014/1602646218908086.jpg\" title=\"1602646218908086.jpg\" alt=\"1.jpg\"/>选择类似于Linux的嵌入式操作系统。理由如下：</p><p>(1) Linux操作系统是一种安全性较强的操作系统。内核工作在系统态，应用软件工作在用户态，可以有效防止应用软件对操作系统的破坏。</p><p>(2) Linux操作系统调度的最小单位是线程，线程归属于进程，进程具有自己独立的资源。进程通过存储器管理部件(MMU)实现多功能应用间隔离。</p><p>(3) 嵌入式Linux操作系统支持硬件抽象，可有效实现TLS结构，并将硬件抽象与操作系统分离，可方便实现硬件的外场快速更换。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 284744,
    "question_title": "<p>[问题3]（5分）</p><p>故障处理是宇航系统软件设计中极为重要的组成部分。故障处理主要包括故障监视、故障定位、故障隔离和系统容错(重组)。用150字以内的文字说明嵌入式系统中故障主要分哪几类 并分别给出两种常用的故障滤波算法和容错算法。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题三】</p><p>(1) 嵌入式系统中故障主要分为：</p><p>①硬件故障：如CPU、存储器和定时器等；</p><p>②应用软件故障：如数值越界、异常和超时等；</p><p>③操作系统故障：如越权访问、死锁和资源枯竭等。</p><p>(2) 滤波算法：</p><p>①门限算法</p><p>②递减算法</p><p>③递增算法</p><p>④周期滤波算法</p><p>(3) 容错算法：</p><p>①N+1备份</p><p>②冷备</p><p>③温备</p><p>④热备</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 18,
      "belong_page": 1,
      "question_id": 284744,
      "question_title": "<p>[问题3]（5分）</p><p>故障处理是宇航系统软件设计中极为重要的组成部分。故障处理主要包括故障监视、故障定位、故障隔离和系统容错(重组)。用150字以内的文字说明嵌入式系统中故障主要分哪几类 并分别给出两种常用的故障滤波算法和容错算法。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 284741,
      "score_rule": "",
      "material_text": "<p>某公司承担了一项宇航嵌入式设备的研制任务。本项目除对硬件设备环境有很高的要求外，还要求支持以下功能：</p><p>(1) 设备由多个处理机模块组成，需要时外场可快速更换(即LRM结构)；</p><p>(2) 应用软件应与硬件无关，便于软硬件的升级；</p><p>(3) 由于宇航嵌入式设备中要支持不同功能，系统应支持完成不同功能任务间的数据隔离；</p><p>(4) 宇航设备可靠性要求高，系统要有故障处理能力。</p><p>公司在接到此项任务后，进行了反复论证，提出三层栈(TLS)软件总体架构，如下图所示，并将软件设计工作交给了李工，要求他在三周内完成软件总体设计工作，给出总体设计方案。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题三】</p><p>(1) 嵌入式系统中故障主要分为：</p><p>①硬件故障：如CPU、存储器和定时器等；</p><p>②应用软件故障：如数值越界、异常和超时等；</p><p>③操作系统故障：如越权访问、死锁和资源枯竭等。</p><p>(2) 滤波算法：</p><p>①门限算法</p><p>②递减算法</p><p>③递增算法</p><p>④周期滤波算法</p><p>(3) 容错算法：</p><p>①N+1备份</p><p>②冷备</p><p>③温备</p><p>④热备</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 284751,
    "question_title": "<p>【问题3】（8分）答对4条即可</p><p>应用网关是实现微服务的主要技术之一，请简述应用网关的作用。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>1、提供统一入口</p><p>2、可以进行权限身份认证等安全管理</p><p>3、可以根据流量进行限流</p><p>4、数据缓存</p><p>5、性能监控等</p><p>6、异常重试</p><p>7、服务降级</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 19,
      "belong_page": 1,
      "question_id": 284751,
      "question_title": "<p>【问题3】（8分）答对4条即可</p><p>应用网关是实现微服务的主要技术之一，请简述应用网关的作用。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 284748,
      "score_rule": "",
      "material_text": "<p>试题五（25分）</p><p>● 阅读以下关于 Web 应用设计开发的描述，在答题纸上回答问题 1 至问题 3。</p><p>某公司拟开发一个网络约车调度服务平台，实现基于互联网的出租车预约与管理。公司的系统分析师王工首先进行了需求分析，得到的系统需求列举如下：</p><p>系统的参与者包括乘客、出租车司机和平台管理员三类；</p><p>系统能够实现对乘客和出租车司机的信息注册与身份认证等功能，并对乘客的信用信息进行管理，对出租车司机的违章情况进行审核；</p><p>系统需要与后端的银行支付系统对接，完成支付信息审核、支付信息更新与在线支付等功能；</p><p>针对乘客发起的每一笔订单，系统需要实现订单发起、提交、跟踪、撤销、支付、完成等业务过程的处理：</p><p>系统需要以短信、微信和电子邮件多种方式分别为系统中的用户进行事件提醒。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>1、提供统一入口</p><p>2、可以进行权限身份认证等安全管理</p><p>3、可以根据流量进行限流</p><p>4、数据缓存</p><p>5、性能监控等</p><p>6、异常重试</p><p>7、服务降级</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 311989,
    "question_title": "【问题1】(5分)<p>图 3-1是本题的服务型智能扫地机器人典型的功能结构图，请根据说明的描述，填写（1）～（5）空白处，完成该功能结构图。请将（1）～（5）的内容填在答题纸上相应的位置中。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210929/1632885729533411.png\" title=\"1632885729533411.png\" alt=\"image.png\"/></p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）紧急状态感知（2）跌落检测（3）航向测量（4）单目视觉避障系统（5）扫地及吸尘单元</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 20,
      "belong_page": 1,
      "question_id": 311989,
      "question_title": "【问题1】(5分)<p>图 3-1是本题的服务型智能扫地机器人典型的功能结构图，请根据说明的描述，填写（1）～（5）空白处，完成该功能结构图。请将（1）～（5）的内容填在答题纸上相应的位置中。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210929/1632885729533411.png\" title=\"1632885729533411.png\" alt=\"image.png\"/></p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 311988,
      "score_rule": "",
      "material_text": "<p>试题五</p><p>服务型智能扫地机器人因其低廉的价格和高效的工作能力，越来越受到消费者的认可，目前已逐渐进入家庭生活代替人们的清洁工作，具有广阔的市场。</p><p>服务型智能扫地机器人需要具有自主运动规划和导航功能，在其工作过程中，需要通过对环境信息的融合感知进行行为决策。扫地机器人一般具备的主要功能包括∶</p><p>（1）紧急状态感知∶ 包括碰撞检测、跌落检测和离地检测等功能，防 止上与障碍物碰撞、前方台阶跌落危险以及扫地机器人离地等，实现扫地机器人运动中的自我保护。</p><p>（2）姿态感知∶包括运动里程计数和航向测量等功能，需要获取扫地机器人的运动速度、行走距离、航向角度等信息。</p><p>（3）视觉感知∶包括单目视觉避障系统和单目视觉定位系统等，需要通过视觉信息探测障碍物，视觉信息来自两个单目摄像头系统。在某些设计中。也可结合红外测距传感器进行障碍物探测。</p><p>（4）自动充电∶在工作过程中，需要实时监控扫地机器人的电量，且在电量少于一定阈值时自动返回电源处进行充电。</p><p>（5）扫地及吸尘单元∶使用电机控制刷子实现清扫，使用抽灰电机实现吸尘。（6）运动执行∶对机器人的运动进行控制。</p><p>（7）监控系统∶通过无线网络传递扫地机器人的状态数据及视频图像等信息到远程客户端，客户端参与到扫地机器人的运动监视及控制中，实现信息交互，监控扫地机器人的实时状态。客户端包括 PC客户端和手机客户端两种。</p><p>（8）信息处理中心∶用于接收各种传感器信息和视觉信息，通过分析处理进行扫地机器人的运动控制，且负责和后台监控中心通信。</p><p>服务型智能扫地机器人选用 ARM+STM32 双核架构模式，分别处理数据量较大的图像信息和短促型的非图像信息。STM32选用STM32F103VET6芯片，用于实现非图像以外的众多传感器的驱动以及数据采集，并控制车轮电机的运动;ARM选用S5PV210处理器实现摄像头图片的采集、在监控系统中接入无线网络、对 STM32 串口传过来的传感器数据以及图像定位和避障信息做综合处理，生成运动决策，发送给STM32，执行扫地机的前进、后退、转弯等。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）紧急状态感知（2）跌落检测（3）航向测量（4）单目视觉避障系统（5）扫地及吸尘单元</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 311990,
    "question_title": "<p>【问题2】（12分）</p><p>为了实现服务型智能扫地机器人的功能，就需要多种传感器来感知工作环境信息。王工在对传感器进行选型时，选择了如下类型的传感器∶</p><p>1.USB摄像头;</p><p>2.开关式传感器;</p><p>3.槽型光耦模块;</p><p>4.数字式防跌落传感器;</p><p>5.红外测距传感器;<br/>6.GGPM01A单轴角度陀螺仪（传感器）;</p><p>7.霍尔码盘传感器。</p><p>请根据传感器的功能完成表3-1，请将（1）～（6）的内容填在答题纸上相应的位置中。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210929/1632886490354059.png\" title=\"1632886490354059.png\" alt=\"image.png\"/></p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "（1）红外测距传感器（2）数字式防跌落传感器（3）开关式传感器（4）槽型光耦模块<p>（5）GGPM01A单轴角度陀螺仪（6）霍尔码盘传感器或给出编号∶(1)5 (2)4 (3)2 (4)3(5)6 (6)7</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 21,
      "belong_page": 1,
      "question_id": 311990,
      "question_title": "<p>【问题2】（12分）</p><p>为了实现服务型智能扫地机器人的功能，就需要多种传感器来感知工作环境信息。王工在对传感器进行选型时，选择了如下类型的传感器∶</p><p>1.USB摄像头;</p><p>2.开关式传感器;</p><p>3.槽型光耦模块;</p><p>4.数字式防跌落传感器;</p><p>5.红外测距传感器;<br/>6.GGPM01A单轴角度陀螺仪（传感器）;</p><p>7.霍尔码盘传感器。</p><p>请根据传感器的功能完成表3-1，请将（1）～（6）的内容填在答题纸上相应的位置中。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210929/1632886490354059.png\" title=\"1632886490354059.png\" alt=\"image.png\"/></p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 311988,
      "score_rule": "",
      "material_text": "<p>试题五</p><p>服务型智能扫地机器人因其低廉的价格和高效的工作能力，越来越受到消费者的认可，目前已逐渐进入家庭生活代替人们的清洁工作，具有广阔的市场。</p><p>服务型智能扫地机器人需要具有自主运动规划和导航功能，在其工作过程中，需要通过对环境信息的融合感知进行行为决策。扫地机器人一般具备的主要功能包括∶</p><p>（1）紧急状态感知∶ 包括碰撞检测、跌落检测和离地检测等功能，防 止上与障碍物碰撞、前方台阶跌落危险以及扫地机器人离地等，实现扫地机器人运动中的自我保护。</p><p>（2）姿态感知∶包括运动里程计数和航向测量等功能，需要获取扫地机器人的运动速度、行走距离、航向角度等信息。</p><p>（3）视觉感知∶包括单目视觉避障系统和单目视觉定位系统等，需要通过视觉信息探测障碍物，视觉信息来自两个单目摄像头系统。在某些设计中。也可结合红外测距传感器进行障碍物探测。</p><p>（4）自动充电∶在工作过程中，需要实时监控扫地机器人的电量，且在电量少于一定阈值时自动返回电源处进行充电。</p><p>（5）扫地及吸尘单元∶使用电机控制刷子实现清扫，使用抽灰电机实现吸尘。（6）运动执行∶对机器人的运动进行控制。</p><p>（7）监控系统∶通过无线网络传递扫地机器人的状态数据及视频图像等信息到远程客户端，客户端参与到扫地机器人的运动监视及控制中，实现信息交互，监控扫地机器人的实时状态。客户端包括 PC客户端和手机客户端两种。</p><p>（8）信息处理中心∶用于接收各种传感器信息和视觉信息，通过分析处理进行扫地机器人的运动控制，且负责和后台监控中心通信。</p><p>服务型智能扫地机器人选用 ARM+STM32 双核架构模式，分别处理数据量较大的图像信息和短促型的非图像信息。STM32选用STM32F103VET6芯片，用于实现非图像以外的众多传感器的驱动以及数据采集，并控制车轮电机的运动;ARM选用S5PV210处理器实现摄像头图片的采集、在监控系统中接入无线网络、对 STM32 串口传过来的传感器数据以及图像定位和避障信息做综合处理，生成运动决策，发送给STM32，执行扫地机的前进、后退、转弯等。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "（1）红外测距传感器（2）数字式防跌落传感器（3）开关式传感器（4）槽型光耦模块<p>（5）GGPM01A单轴角度陀螺仪（6）霍尔码盘传感器或给出编号∶(1)5 (2)4 (3)2 (4)3(5)6 (6)7</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 311991,
    "question_title": "<p>【问题3】（8分）</p><p>由于该服务型智能扫地机器人的硬件采用双处理器架构，即 ARM+STM32 双核架构模式，选用串口方式在处理器之间传递数据，如图3-2所示。假设在本串行传输中的数据格式为∶</p><p>8位数据位、1位起始位、1位停止位，无校验位。</p><p>（1）当波特率为 9600b/s 时，每秒钟传送的有效数据是多少字节?<br/>（2）为保证数据收发正确（每个字节数据传输中的累计误差不大于1/4 bit），试分析发送方和接收方时钟允许的误差范围，并以百分比形式给出最大误差。请将答案填写在答题纸的对应栏中。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210929/1632886565806300.png\" title=\"1632886565806300.png\" alt=\"image.png\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "（1）960字节。<p>（2）数据位8位、起始位1位、停止位1位，无校验位，累积的最大误差为（8+1+1）△，该值应小于1/4位，即（8+1+1）△≤1/4，所以最大误差为2.5%。</p><p>&nbsp;</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 22,
      "belong_page": 1,
      "question_id": 311991,
      "question_title": "<p>【问题3】（8分）</p><p>由于该服务型智能扫地机器人的硬件采用双处理器架构，即 ARM+STM32 双核架构模式，选用串口方式在处理器之间传递数据，如图3-2所示。假设在本串行传输中的数据格式为∶</p><p>8位数据位、1位起始位、1位停止位，无校验位。</p><p>（1）当波特率为 9600b/s 时，每秒钟传送的有效数据是多少字节?<br/>（2）为保证数据收发正确（每个字节数据传输中的累计误差不大于1/4 bit），试分析发送方和接收方时钟允许的误差范围，并以百分比形式给出最大误差。请将答案填写在答题纸的对应栏中。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20210929/1632886565806300.png\" title=\"1632886565806300.png\" alt=\"image.png\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 311988,
      "score_rule": "",
      "material_text": "<p>试题五</p><p>服务型智能扫地机器人因其低廉的价格和高效的工作能力，越来越受到消费者的认可，目前已逐渐进入家庭生活代替人们的清洁工作，具有广阔的市场。</p><p>服务型智能扫地机器人需要具有自主运动规划和导航功能，在其工作过程中，需要通过对环境信息的融合感知进行行为决策。扫地机器人一般具备的主要功能包括∶</p><p>（1）紧急状态感知∶ 包括碰撞检测、跌落检测和离地检测等功能，防 止上与障碍物碰撞、前方台阶跌落危险以及扫地机器人离地等，实现扫地机器人运动中的自我保护。</p><p>（2）姿态感知∶包括运动里程计数和航向测量等功能，需要获取扫地机器人的运动速度、行走距离、航向角度等信息。</p><p>（3）视觉感知∶包括单目视觉避障系统和单目视觉定位系统等，需要通过视觉信息探测障碍物，视觉信息来自两个单目摄像头系统。在某些设计中。也可结合红外测距传感器进行障碍物探测。</p><p>（4）自动充电∶在工作过程中，需要实时监控扫地机器人的电量，且在电量少于一定阈值时自动返回电源处进行充电。</p><p>（5）扫地及吸尘单元∶使用电机控制刷子实现清扫，使用抽灰电机实现吸尘。（6）运动执行∶对机器人的运动进行控制。</p><p>（7）监控系统∶通过无线网络传递扫地机器人的状态数据及视频图像等信息到远程客户端，客户端参与到扫地机器人的运动监视及控制中，实现信息交互，监控扫地机器人的实时状态。客户端包括 PC客户端和手机客户端两种。</p><p>（8）信息处理中心∶用于接收各种传感器信息和视觉信息，通过分析处理进行扫地机器人的运动控制，且负责和后台监控中心通信。</p><p>服务型智能扫地机器人选用 ARM+STM32 双核架构模式，分别处理数据量较大的图像信息和短促型的非图像信息。STM32选用STM32F103VET6芯片，用于实现非图像以外的众多传感器的驱动以及数据采集，并控制车轮电机的运动;ARM选用S5PV210处理器实现摄像头图片的采集、在监控系统中接入无线网络、对 STM32 串口传过来的传感器数据以及图像定位和避障信息做综合处理，生成运动决策，发送给STM32，执行扫地机的前进、后退、转弯等。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "（1）960字节。<p>（2）数据位8位、起始位1位、停止位1位，无校验位，累积的最大误差为（8+1+1）△，该值应小于1/4位，即（8+1+1）△≤1/4，所以最大误差为2.5%。</p><p>&nbsp;</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 313004,
    "question_title": "<p>【问题1】（8分）</p><p>&nbsp; &nbsp; 用150字以内的文字，说明公司制定的TLS软件架构的层次特点，并针对上述功能需求（1）~（4），说明架构中各层内涵。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题1】</p><p>TLS结构框架的主要特点：</p><p>（1）应用软件仅与操作系统服务相关，不直接操作硬件。</p><p>（2）操作系统通过模块支持原软件访问硬件，可与具体硬件无关。</p><p>（3）模块支持层将硬件抽象成标准操作。</p><p>（4）通过三层栈的划分可实现硬件的快速更改与升级，应用软件的升级不会引起硬件的变更。</p><p>TLS结构框架的各层内涵是：</p><p>（1）应用层主要完成宇航设备的具体工作，由多个功能任务组成，各功能任务间的隔离由操作系统层实现。</p><p>（2）操作系统层实现应用软件与硬件的隔离，为应用软件提供更加丰富的计算机资源服务。操作系统为应用软件提供标准的API接口（如POSIX），确保了应用软件的可升级性。</p><p>（3）模块支持层为操作系统管理硬件资源提供统一管理方法，用一种抽象的标准接口实现软件与硬件的无关性，达到硬件的升级要求，便于硬件的外场快速更换。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 23,
      "belong_page": 1,
      "question_id": 313004,
      "question_title": "<p>【问题1】（8分）</p><p>&nbsp; &nbsp; 用150字以内的文字，说明公司制定的TLS软件架构的层次特点，并针对上述功能需求（1）~（4），说明架构中各层内涵。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 313003,
      "score_rule": "",
      "material_text": "<p>试题三（25分）</p><p>阅读以下关于嵌入式软件体系架构的叙述，在答题纸上回答问题1至问题3。</p><p>某公司承担了一项宇航嵌入式设备的研制任务。本项目除对硬件设备环境有很高的要求外，还要求支持以下功能：</p><p>（1）设备由多个处理机模块组成，需要时外场可快速更换（即LRM结构）；</p><p>（2）应用软件应与硬件无关，便于软硬件的升级；</p><p>（3）由于宇航嵌入式设备中要支持不同功能，系统应支持完成不同功能任务间的数据隔离；</p><p>（4）宇航设备可靠性要求高，系统要有故障处理能力。</p><p>公司在接到此项任务后，进行了反复论证，提出三层栈（TLS）软件总体架构，如图3-1所示，并将软件设计工作交给了李工，要求其在三周内完成软件总体设计工作，给出总体设计方案。</p><img src=\"https://s2.51cto.com/images/20211014/1634143047958736.jpg\" title=\"1634143047958736.jpg\" alt=\"1.jpg\"/>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题1】</p><p>TLS结构框架的主要特点：</p><p>（1）应用软件仅与操作系统服务相关，不直接操作硬件。</p><p>（2）操作系统通过模块支持原软件访问硬件，可与具体硬件无关。</p><p>（3）模块支持层将硬件抽象成标准操作。</p><p>（4）通过三层栈的划分可实现硬件的快速更改与升级，应用软件的升级不会引起硬件的变更。</p><p>TLS结构框架的各层内涵是：</p><p>（1）应用层主要完成宇航设备的具体工作，由多个功能任务组成，各功能任务间的隔离由操作系统层实现。</p><p>（2）操作系统层实现应用软件与硬件的隔离，为应用软件提供更加丰富的计算机资源服务。操作系统为应用软件提供标准的API接口（如POSIX），确保了应用软件的可升级性。</p><p>（3）模块支持层为操作系统管理硬件资源提供统一管理方法，用一种抽象的标准接口实现软件与硬件的无关性，达到硬件的升级要求，便于硬件的外场快速更换。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 313005,
    "question_title": "<p>【问题2】（10分）</p><p>&nbsp; &nbsp; 在TLS软件架构的基础上，关于选择哪种类型的嵌入式操作系统问题，李工与总工程师发生了严重分歧。李工认为，宇航系统是实时系统，操作系统的处理时间越快越好，隔离意味着以时间作代价，没有必要，建议选择类似于VxWorks5.5的操作系统；总工程师认为，应用软件间隔离是宇航系统安全性要求，宇航系统在选择操作系统时必须考虑这一点，建议选择类似于Linux的操作系统。</p><p>&nbsp; &nbsp; 请说明两种操作系统的主要差异，完成表3-1中的空白部分，并针对本任务要求，用200字以内的文字说明你选择操作系统的类型和理由。</p><p>表3-1 两种操作系统的主要差异<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211014/1634143103274748.jpg\" title=\"1634143103274748.jpg\" alt=\"1.jpg\"/></p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题2】</p><p>两种操作系统的差异见下表。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211014/1634143120891371.jpg\" title=\"1634143120891371.jpg\" alt=\"1.jpg\"/><p>选择类似于Linux的嵌入式操作系统。理由如下：</p><p>（1）Linux操作系统是一种安全性较强的操作系统。内核工作在系统态，应用软件工作在用户态，可以有效防止应用软件对操作系统的破坏。</p><p>（2）Linux操作系统调度的最小单位是线程，线程归属于进程，进程具有自己独立的资源。进程通过存储器管理部件（MMU）实现多功能应用间隔离。</p><p>（3）嵌入式Linux操作系统支持硬件抽象，可有效实现TLS结构，并将硬件抽象与操作系统分离，可方便实现硬件的外场快速更换。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 24,
      "belong_page": 1,
      "question_id": 313005,
      "question_title": "<p>【问题2】（10分）</p><p>&nbsp; &nbsp; 在TLS软件架构的基础上，关于选择哪种类型的嵌入式操作系统问题，李工与总工程师发生了严重分歧。李工认为，宇航系统是实时系统，操作系统的处理时间越快越好，隔离意味着以时间作代价，没有必要，建议选择类似于VxWorks5.5的操作系统；总工程师认为，应用软件间隔离是宇航系统安全性要求，宇航系统在选择操作系统时必须考虑这一点，建议选择类似于Linux的操作系统。</p><p>&nbsp; &nbsp; 请说明两种操作系统的主要差异，完成表3-1中的空白部分，并针对本任务要求，用200字以内的文字说明你选择操作系统的类型和理由。</p><p>表3-1 两种操作系统的主要差异<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211014/1634143103274748.jpg\" title=\"1634143103274748.jpg\" alt=\"1.jpg\"/></p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 313003,
      "score_rule": "",
      "material_text": "<p>试题三（25分）</p><p>阅读以下关于嵌入式软件体系架构的叙述，在答题纸上回答问题1至问题3。</p><p>某公司承担了一项宇航嵌入式设备的研制任务。本项目除对硬件设备环境有很高的要求外，还要求支持以下功能：</p><p>（1）设备由多个处理机模块组成，需要时外场可快速更换（即LRM结构）；</p><p>（2）应用软件应与硬件无关，便于软硬件的升级；</p><p>（3）由于宇航嵌入式设备中要支持不同功能，系统应支持完成不同功能任务间的数据隔离；</p><p>（4）宇航设备可靠性要求高，系统要有故障处理能力。</p><p>公司在接到此项任务后，进行了反复论证，提出三层栈（TLS）软件总体架构，如图3-1所示，并将软件设计工作交给了李工，要求其在三周内完成软件总体设计工作，给出总体设计方案。</p><img src=\"https://s2.51cto.com/images/20211014/1634143047958736.jpg\" title=\"1634143047958736.jpg\" alt=\"1.jpg\"/>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题2】</p><p>两种操作系统的差异见下表。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211014/1634143120891371.jpg\" title=\"1634143120891371.jpg\" alt=\"1.jpg\"/><p>选择类似于Linux的嵌入式操作系统。理由如下：</p><p>（1）Linux操作系统是一种安全性较强的操作系统。内核工作在系统态，应用软件工作在用户态，可以有效防止应用软件对操作系统的破坏。</p><p>（2）Linux操作系统调度的最小单位是线程，线程归属于进程，进程具有自己独立的资源。进程通过存储器管理部件（MMU）实现多功能应用间隔离。</p><p>（3）嵌入式Linux操作系统支持硬件抽象，可有效实现TLS结构，并将硬件抽象与操作系统分离，可方便实现硬件的外场快速更换。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 313006,
    "question_title": "<p>【问题3】（7分）</p><p>故障处理是宇航系统软件设计中极为重要的组成部分。故障处理主要包括故障监视、故障定位、故障隔离和系统容错（重组）。用150字以内的文字说明嵌入式系统中故障主要分哪几类？并分别给出两种常用的故障滤波算法和容错算法。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【问题3】</p><p>（1）嵌入式系统中故障主要分为：</p><p>① 硬件故障：如CPU、存储器和定时器等；</p><p>② 应用软件故障：如数值越界、异常和超时等；</p><p>③ 操作系统故障：如越权访问、死锁和资源枯竭等。</p><p>（2）滤波算法：</p><p>① 门限算法</p><p>② 递减算法</p><p>③ 递增算法</p><p>④ 周期滤波算法</p><p>（3）容错算法：</p><p>① N+1备份</p><p>② 冷备</p><p>③ 温备</p><p>④ 热备&nbsp;</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 25,
      "belong_page": 1,
      "question_id": 313006,
      "question_title": "<p>【问题3】（7分）</p><p>故障处理是宇航系统软件设计中极为重要的组成部分。故障处理主要包括故障监视、故障定位、故障隔离和系统容错（重组）。用150字以内的文字说明嵌入式系统中故障主要分哪几类？并分别给出两种常用的故障滤波算法和容错算法。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 313003,
      "score_rule": "",
      "material_text": "<p>试题三（25分）</p><p>阅读以下关于嵌入式软件体系架构的叙述，在答题纸上回答问题1至问题3。</p><p>某公司承担了一项宇航嵌入式设备的研制任务。本项目除对硬件设备环境有很高的要求外，还要求支持以下功能：</p><p>（1）设备由多个处理机模块组成，需要时外场可快速更换（即LRM结构）；</p><p>（2）应用软件应与硬件无关，便于软硬件的升级；</p><p>（3）由于宇航嵌入式设备中要支持不同功能，系统应支持完成不同功能任务间的数据隔离；</p><p>（4）宇航设备可靠性要求高，系统要有故障处理能力。</p><p>公司在接到此项任务后，进行了反复论证，提出三层栈（TLS）软件总体架构，如图3-1所示，并将软件设计工作交给了李工，要求其在三周内完成软件总体设计工作，给出总体设计方案。</p><img src=\"https://s2.51cto.com/images/20211014/1634143047958736.jpg\" title=\"1634143047958736.jpg\" alt=\"1.jpg\"/>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【问题3】</p><p>（1）嵌入式系统中故障主要分为：</p><p>① 硬件故障：如CPU、存储器和定时器等；</p><p>② 应用软件故障：如数值越界、异常和超时等；</p><p>③ 操作系统故障：如越权访问、死锁和资源枯竭等。</p><p>（2）滤波算法：</p><p>① 门限算法</p><p>② 递减算法</p><p>③ 递增算法</p><p>④ 周期滤波算法</p><p>（3）容错算法：</p><p>① N+1备份</p><p>② 冷备</p><p>③ 温备</p><p>④ 热备&nbsp;</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 313008,
    "question_title": "<p>【问题1】（6分）</p><p>张工方案中采用了读写分离，主从复制策略。简述主从复制给系统带来的好处。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>①避免数据库单点故障：主服务器实时、异步复制数据到从服务器，当主数据库宕机时，可在从数据库中选择一个升级为主服务器，从而防止数据库单点故障。</p><p>&nbsp; &nbsp; ②提高查询效率：根据系统数据库访问特点，可以使用主数据库进行数据的插入、删除及更新等写操作，而从数据库则专门用来进行数据查询操作，从而将查询操作分担到不同的从服务器以提高数据库访问效率。</p><p><br/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 26,
      "belong_page": 1,
      "question_id": 313008,
      "question_title": "<p>【问题1】（6分）</p><p>张工方案中采用了读写分离，主从复制策略。简述主从复制给系统带来的好处。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 313007,
      "score_rule": "",
      "material_text": "<p>试题四（20分）（选做题，二选一）</p><p>【说明】</p><p>某软件企业开发了一套新闻社交类软件，提供常见的新闻发布、用户关注、用户推荐、新闻点评、新闻推荐、热点新闻等功能，项目采用 My SQL 数据库来存储业务数据。系统上线后，随着用户数量的增加，数据库服务器的压力不断加大。</p><p>为此，该企业设立了专门的工作组来解决此问题。张工提出对 My SQL 数据库进行扩展，采用读写分离，主从复制的策略，好处是程序改动比较小，可以较快完成，后续也可以扩展到 My SQL 集群，其方案如图 4-1 所示。李工认为该系统的诸多功能，并不需要采用关系数据库，甚至关系数据库限制了功能的实现，应该采用 No SQL 数据库来替代 My SQL，重新构造系统的数据层。而刘工认为张工的方案过于保守，对该系统的某些功能，如关注列表、</p><p>推荐列表、热搜榜单等实现困难，且性能提升不大；而李工的方案又太激进，工作量太大，短期无法完成，应尽量综合二者的优点，采用Key-Value数据库+My SQL数据库的混合方案。</p><p>经过组内多次讨论，该企业最终决定采用刘工提出的方案。</p><br/><img src=\"https://s2.51cto.com/images/20211014/1634143207661293.jpg\" title=\"1634143207661293.jpg\" alt=\"1.jpg\"/>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>①避免数据库单点故障：主服务器实时、异步复制数据到从服务器，当主数据库宕机时，可在从数据库中选择一个升级为主服务器，从而防止数据库单点故障。</p><p>&nbsp; &nbsp; ②提高查询效率：根据系统数据库访问特点，可以使用主数据库进行数据的插入、删除及更新等写操作，而从数据库则专门用来进行数据查询操作，从而将查询操作分担到不同的从服务器以提高数据库访问效率。</p><p><br/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 313009,
    "question_title": "<p>【问题2】（6分）</p><p>My SQL 数据库中，主从复制是通过 binary log 来实现主从服务器的数据同步。请简述主从复制的过程。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "当在从库上启动复制时，首先创建I/O线程连接主库，主库随后创建Binlog Dump线程读取数据库事件并发送给I/O线程，I/O线程获取到事件数据后更新到从库的中继日志Relay Log中去，之后从库上的SQL线程读取中继日志Relay Log中更新的数据库事件并应用。"
    ],
    "analysis": "",
    "raw_data": {
      "index": 27,
      "belong_page": 1,
      "question_id": 313009,
      "question_title": "<p>【问题2】（6分）</p><p>My SQL 数据库中，主从复制是通过 binary log 来实现主从服务器的数据同步。请简述主从复制的过程。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 313007,
      "score_rule": "",
      "material_text": "<p>试题四（20分）（选做题，二选一）</p><p>【说明】</p><p>某软件企业开发了一套新闻社交类软件，提供常见的新闻发布、用户关注、用户推荐、新闻点评、新闻推荐、热点新闻等功能，项目采用 My SQL 数据库来存储业务数据。系统上线后，随着用户数量的增加，数据库服务器的压力不断加大。</p><p>为此，该企业设立了专门的工作组来解决此问题。张工提出对 My SQL 数据库进行扩展，采用读写分离，主从复制的策略，好处是程序改动比较小，可以较快完成，后续也可以扩展到 My SQL 集群，其方案如图 4-1 所示。李工认为该系统的诸多功能，并不需要采用关系数据库，甚至关系数据库限制了功能的实现，应该采用 No SQL 数据库来替代 My SQL，重新构造系统的数据层。而刘工认为张工的方案过于保守，对该系统的某些功能，如关注列表、</p><p>推荐列表、热搜榜单等实现困难，且性能提升不大；而李工的方案又太激进，工作量太大，短期无法完成，应尽量综合二者的优点，采用Key-Value数据库+My SQL数据库的混合方案。</p><p>经过组内多次讨论，该企业最终决定采用刘工提出的方案。</p><br/><img src=\"https://s2.51cto.com/images/20211014/1634143207661293.jpg\" title=\"1634143207661293.jpg\" alt=\"1.jpg\"/>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "当在从库上启动复制时，首先创建I/O线程连接主库，主库随后创建Binlog Dump线程读取数据库事件并发送给I/O线程，I/O线程获取到事件数据后更新到从库的中继日志Relay Log中去，之后从库上的SQL线程读取中继日志Relay Log中更新的数据库事件并应用。"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 313010,
    "question_title": "<p>【问题3】（8分）</p><p>主从复制可以采用同步、异步、半同步复制。请简述每种复制技术的特点。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）同步复制主数据库需要等待所有备数据库均操作成功才可以响应用户，影响用户体验。这种方式保证了系统的一致性，但牺牲了数据的可用性。</p><p>异步复制：当用户请求更新数据时，主数据库处理完请求后可直接给用户响应，而不必等待备数据库完成同步，备数据库会异步进行数据的同步，用户的更新操作不会因为备数据库未完成数据同步而导致阻塞。这种方式保证了系统的可用性，但牺牲了数据的一致性。（3）半同步复制：用户发出写请求后，主数据库会执行写操作，并给备数据库发送同步请求，但主数据库不用等待所有备数据库回复数据同步成功便可响应用户，也就是说主数据库可以等待一部分备数据库同步完成后响应用户写操作执行成功。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 28,
      "belong_page": 1,
      "question_id": 313010,
      "question_title": "<p>【问题3】（8分）</p><p>主从复制可以采用同步、异步、半同步复制。请简述每种复制技术的特点。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 313007,
      "score_rule": "",
      "material_text": "<p>试题四（20分）（选做题，二选一）</p><p>【说明】</p><p>某软件企业开发了一套新闻社交类软件，提供常见的新闻发布、用户关注、用户推荐、新闻点评、新闻推荐、热点新闻等功能，项目采用 My SQL 数据库来存储业务数据。系统上线后，随着用户数量的增加，数据库服务器的压力不断加大。</p><p>为此，该企业设立了专门的工作组来解决此问题。张工提出对 My SQL 数据库进行扩展，采用读写分离，主从复制的策略，好处是程序改动比较小，可以较快完成，后续也可以扩展到 My SQL 集群，其方案如图 4-1 所示。李工认为该系统的诸多功能，并不需要采用关系数据库，甚至关系数据库限制了功能的实现，应该采用 No SQL 数据库来替代 My SQL，重新构造系统的数据层。而刘工认为张工的方案过于保守，对该系统的某些功能，如关注列表、</p><p>推荐列表、热搜榜单等实现困难，且性能提升不大；而李工的方案又太激进，工作量太大，短期无法完成，应尽量综合二者的优点，采用Key-Value数据库+My SQL数据库的混合方案。</p><p>经过组内多次讨论，该企业最终决定采用刘工提出的方案。</p><br/><img src=\"https://s2.51cto.com/images/20211014/1634143207661293.jpg\" title=\"1634143207661293.jpg\" alt=\"1.jpg\"/>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）同步复制主数据库需要等待所有备数据库均操作成功才可以响应用户，影响用户体验。这种方式保证了系统的一致性，但牺牲了数据的可用性。</p><p>异步复制：当用户请求更新数据时，主数据库处理完请求后可直接给用户响应，而不必等待备数据库完成同步，备数据库会异步进行数据的同步，用户的更新操作不会因为备数据库未完成数据同步而导致阻塞。这种方式保证了系统的可用性，但牺牲了数据的一致性。（3）半同步复制：用户发出写请求后，主数据库会执行写操作，并给备数据库发送同步请求，但主数据库不用等待所有备数据库回复数据同步成功便可响应用户，也就是说主数据库可以等待一部分备数据库同步完成后响应用户写操作执行成功。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 313013,
    "question_title": "<p>【问题2】（6分）</p><p>微服务的通信方式一般有RPC 和REST两种，请对比下表将缺失部分补充完整。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211014/1634143332226521.jpg\" title=\"1634143332226521.jpg\" alt=\"1.jpg\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "&nbsp;<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211014/1634143345234374.jpg\" title=\"1634143345234374.jpg\" alt=\"1.jpg\"/>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 29,
      "belong_page": 1,
      "question_id": 313013,
      "question_title": "<p>【问题2】（6分）</p><p>微服务的通信方式一般有RPC 和REST两种，请对比下表将缺失部分补充完整。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211014/1634143332226521.jpg\" title=\"1634143332226521.jpg\" alt=\"1.jpg\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 313011,
      "score_rule": "",
      "material_text": "<p>试题五（20分）&nbsp;（选做题，二选一）</p><p>近年来，随着互联网行业的迅猛发展，公司或组织业务的不断扩张，需求的快速变化以及用户量的不断增加，传统的单块（Monolithic）软件架构面临着越来越多的挑战，已逐渐无法适应互联网时代对软件的要求。在这一背景下，微服务架构模式(Microservice?Architecture?Pattern)逐渐流行，它强调将单一业务功能开发成微服务的形式，每个微服务运行在一个进程中；采用HTTP等通用协议和轻量级API实现微服务之间的协作与通信。这些微服务可以使用不同的开发语言以及不同数据存储技术，能够通过自动化部署工具独立发布，并保持最低限制的集中式管理。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "&nbsp;<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20211014/1634143345234374.jpg\" title=\"1634143345234374.jpg\" alt=\"1.jpg\"/>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 350375,
    "question_title": "<p>【问题1】（8分）</p><p>软件的逆向工程是分析已有程序，寻求比源代码更高级的抽象表现形式。与之相关的概念包括软件重构、设计恢复、重构工程等。请说明设计恢复中常见的恢复信息的4种级别。</p><p><br/></p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）实现级：包括程序的抽象语法树、符号表等信息；</p><p>（2）结构级：包括反映程序分量之间相互依赖的关系的信息，调用图、结构图等；</p><p>（3）功能级：包括反映程序功能与程序之间关系的信息；</p><p>（4）领域级：包括反映程序分量或程序诸实体与应用领域概念之间对应关系的信息。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 30,
      "belong_page": 1,
      "question_id": 350375,
      "question_title": "<p>【问题1】（8分）</p><p>软件的逆向工程是分析已有程序，寻求比源代码更高级的抽象表现形式。与之相关的概念包括软件重构、设计恢复、重构工程等。请说明设计恢复中常见的恢复信息的4种级别。</p><p><br/></p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 350374,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于系统运行与维护的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某全国大型企业经过多年的信息化建设，存在大量的应用软件系统，为了保证这些系统的运行与维护，专门组建应用系统维护部门。该部门的主要工作是保证系统的正常运行、处理问题以及扩展这些应该系统的功能，以满足企业业务功能的变化与扩展。</p><p>目前该部门存在人员流失、变更频繁，文档丢失或长期失于维护，维护成本愈来愈高等问题，具体表现为：</p><p>问题（1）：随着时间和人员的变动，程序被多人修改，往往导致程序难以理解，注释混乱，流程复杂；</p><p>问题（2）：随着不断修改程序和增加新的功能，模块之间的耦合关系日益复杂，维护成本不断增加。</p><p>这些问题导致新来的维护人员需要直接面对大量流程、结构复杂的源程序，维护困难，往往一次改动需要设计大量的软件模块。</p><p>为解决应用系统维护部门面对的问题，企业信息部门组织了专门的专家讨论会。各位专家一致认为，逆向工程与重构工程是目前预防性维护采用的主要技术，应该采用逆向工程的技术方法，重构相关应用系统文档，同时采用软件重构来降低软件代码的复杂性，最终降低维护成本。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）实现级：包括程序的抽象语法树、符号表等信息；</p><p>（2）结构级：包括反映程序分量之间相互依赖的关系的信息，调用图、结构图等；</p><p>（3）功能级：包括反映程序功能与程序之间关系的信息；</p><p>（4）领域级：包括反映程序分量或程序诸实体与应用领域概念之间对应关系的信息。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8393009
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 350376,
    "question_title": "<p>【问题2】（11分）</p><p>重构是对软件内部结构的一种调整，目的是不改变软件功能的前提下，提高其可理解性，降低其修改成本。请说明软件重构的三个类别，并简要说明常见的重构方法。针对题干中的问题（1）和问题（2），宜采用何种重构方法？</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>软件重构一般分为三类：</p><p>（1）代码重构；（2）模块重构；（3）架构重构。</p><p>常见的重构方法有：重新组织函数、重新组织对象、重新组织数据、简化条件表达式、简化函数调用和处理概括关系。</p><p>针对问题（1），采用代码重构，重新梳理代码流程，使代码容易理解和维护；</p><p>针对问题（2），采用模块重构和架构重构，梳理模块之间的关系，使其更容易扩展和维护，降低模块之间的耦合度。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 31,
      "belong_page": 1,
      "question_id": 350376,
      "question_title": "<p>【问题2】（11分）</p><p>重构是对软件内部结构的一种调整，目的是不改变软件功能的前提下，提高其可理解性，降低其修改成本。请说明软件重构的三个类别，并简要说明常见的重构方法。针对题干中的问题（1）和问题（2），宜采用何种重构方法？</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 350374,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于系统运行与维护的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某全国大型企业经过多年的信息化建设，存在大量的应用软件系统，为了保证这些系统的运行与维护，专门组建应用系统维护部门。该部门的主要工作是保证系统的正常运行、处理问题以及扩展这些应该系统的功能，以满足企业业务功能的变化与扩展。</p><p>目前该部门存在人员流失、变更频繁，文档丢失或长期失于维护，维护成本愈来愈高等问题，具体表现为：</p><p>问题（1）：随着时间和人员的变动，程序被多人修改，往往导致程序难以理解，注释混乱，流程复杂；</p><p>问题（2）：随着不断修改程序和增加新的功能，模块之间的耦合关系日益复杂，维护成本不断增加。</p><p>这些问题导致新来的维护人员需要直接面对大量流程、结构复杂的源程序，维护困难，往往一次改动需要设计大量的软件模块。</p><p>为解决应用系统维护部门面对的问题，企业信息部门组织了专门的专家讨论会。各位专家一致认为，逆向工程与重构工程是目前预防性维护采用的主要技术，应该采用逆向工程的技术方法，重构相关应用系统文档，同时采用软件重构来降低软件代码的复杂性，最终降低维护成本。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>软件重构一般分为三类：</p><p>（1）代码重构；（2）模块重构；（3）架构重构。</p><p>常见的重构方法有：重新组织函数、重新组织对象、重新组织数据、简化条件表达式、简化函数调用和处理概括关系。</p><p>针对问题（1），采用代码重构，重新梳理代码流程，使代码容易理解和维护；</p><p>针对问题（2），采用模块重构和架构重构，梳理模块之间的关系，使其更容易扩展和维护，降低模块之间的耦合度。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 350377,
    "question_title": "<p>【问题3】（6分）</p><p>软件重构做出的修改可能导致程序运行变慢，但也更容易进行软件的性能优化和调整，请分析原因。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>软件重构可能因为以下原因导致程序变慢：</p><p>（1）引入了额外的构件而增加了开销；</p><p>（2）提高了代码的可读性和可维护性，但牺牲了性能；</p><p>（3）多线程的资源竞争和上下文切换增加了运行开销。</p><p>一个模块化程度好的程序可从两方面帮助性能优化。<br/></p><p>（1）分解良好的程序，使得性能分析的粒度更细，性能调整更加容易；</p><p>（2）分解良好的程序，由于代码更加淸晰，更容易与性能优化工具结合，分析系统性能瓶颈的具体位置。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 32,
      "belong_page": 1,
      "question_id": 350377,
      "question_title": "<p>【问题3】（6分）</p><p>软件重构做出的修改可能导致程序运行变慢，但也更容易进行软件的性能优化和调整，请分析原因。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 350374,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于系统运行与维护的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某全国大型企业经过多年的信息化建设，存在大量的应用软件系统，为了保证这些系统的运行与维护，专门组建应用系统维护部门。该部门的主要工作是保证系统的正常运行、处理问题以及扩展这些应该系统的功能，以满足企业业务功能的变化与扩展。</p><p>目前该部门存在人员流失、变更频繁，文档丢失或长期失于维护，维护成本愈来愈高等问题，具体表现为：</p><p>问题（1）：随着时间和人员的变动，程序被多人修改，往往导致程序难以理解，注释混乱，流程复杂；</p><p>问题（2）：随着不断修改程序和增加新的功能，模块之间的耦合关系日益复杂，维护成本不断增加。</p><p>这些问题导致新来的维护人员需要直接面对大量流程、结构复杂的源程序，维护困难，往往一次改动需要设计大量的软件模块。</p><p>为解决应用系统维护部门面对的问题，企业信息部门组织了专门的专家讨论会。各位专家一致认为，逆向工程与重构工程是目前预防性维护采用的主要技术，应该采用逆向工程的技术方法，重构相关应用系统文档，同时采用软件重构来降低软件代码的复杂性，最终降低维护成本。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>软件重构可能因为以下原因导致程序变慢：</p><p>（1）引入了额外的构件而增加了开销；</p><p>（2）提高了代码的可读性和可维护性，但牺牲了性能；</p><p>（3）多线程的资源竞争和上下文切换增加了运行开销。</p><p>一个模块化程度好的程序可从两方面帮助性能优化。<br/></p><p>（1）分解良好的程序，使得性能分析的粒度更细，性能调整更加容易；</p><p>（2）分解良好的程序，由于代码更加淸晰，更容易与性能优化工具结合，分析系统性能瓶颈的具体位置。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 350383,
    "question_title": "<p>【问题1】（8分）</p><p>请阅读以下有关FMEA的描述，将恰当的内容填入(1)～(7)。</p><p>FMEA是FMA(故障模式分析)和FEA(故障影响分析)的组合，它对系统各种可能的风险进行评价、分析后，在现有技术的基础上消除这些风险或将这些风险降低到可接受的水平。为达到最佳效益，FMEA必须在产品研制初期进行。</p><p>FMEA实际是一组系列化的活动，其主要活动包括：</p><p>&nbsp;(1) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;；</p><p>&nbsp;(2) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;；</p><p>&nbsp;(3)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;由于产品故障可能与设计、制造过程、使用、承包商/供应商以及服务有关，因此FMEA又细分为&nbsp;&nbsp;(4) &nbsp;FMEA、&nbsp;&nbsp;(5) &nbsp;。FMEA、&nbsp;&nbsp;(6) &nbsp;FMEA和&nbsp;&nbsp;(7) &nbsp;FMEA四类</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>(1)找出产品/过程中潜在的故障模式</p><p>(2)根据相应的评价体系对找出的潜在故障模式进行风险量化评估</p><p>(3)列出故障起因/机理，寻找预防或改进措施</p><p>(4)设计</p><p>(5)过程</p><p>(6)使用</p><p>(7)服务</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 33,
      "belong_page": 1,
      "question_id": 350383,
      "question_title": "<p>【问题1】（8分）</p><p>请阅读以下有关FMEA的描述，将恰当的内容填入(1)～(7)。</p><p>FMEA是FMA(故障模式分析)和FEA(故障影响分析)的组合，它对系统各种可能的风险进行评价、分析后，在现有技术的基础上消除这些风险或将这些风险降低到可接受的水平。为达到最佳效益，FMEA必须在产品研制初期进行。</p><p>FMEA实际是一组系列化的活动，其主要活动包括：</p><p>&nbsp;(1) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;；</p><p>&nbsp;(2) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;；</p><p>&nbsp;(3)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;由于产品故障可能与设计、制造过程、使用、承包商/供应商以及服务有关，因此FMEA又细分为&nbsp;&nbsp;(4) &nbsp;FMEA、&nbsp;&nbsp;(5) &nbsp;。FMEA、&nbsp;&nbsp;(6) &nbsp;FMEA和&nbsp;&nbsp;(7) &nbsp;FMEA四类</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 350382,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三（25分）</p><p>阅读以下有关嵌入式软件FMEA方法和相关案例的说明，回答问题。</p><p>【说明】</p><p>故障(失效)模型影响分析FMEA是分析产品所有可能的故障模式及其可能产生的影响，并按每个故障模式产生影响的严重程度及其发生概率予以分类的一种归纳分析方法。近年来，FMEA方法已被广泛用于安全关键系统的嵌入式软件可靠性分析工作。</p><p>某软件公司承担了一项通信软件的开发项目。该项目由FC系统、DY系统和GD系统组成，而DY系统(TMS320C25S)软件负责按系统的通信协议完成与FC系统的通信，图给出了该通信软件的约定层次图。公司高层将项目交给王工，王工认为此项目是安全关键系统，安全等级应为II类(致命的)，因此应开展软件的FMEA分析。</p><img src=\"https://s2.51cto.com/images/20220909/1662697979227107.png\" title=\"1662697979227107.png\" alt=\"image.png\"/><br/><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 某设备通信软件的约定层次图</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>(1)找出产品/过程中潜在的故障模式</p><p>(2)根据相应的评价体系对找出的潜在故障模式进行风险量化评估</p><p>(3)列出故障起因/机理，寻找预防或改进措施</p><p>(4)设计</p><p>(5)过程</p><p>(6)使用</p><p>(7)服务</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 350384,
    "question_title": "<p>【问题2】（10分）</p><p>从图可以看出，CSU01通信模块是该项目的关键模块，主要功能定义为：总线通信控制器自动完成一帧数据的接收，存入数据缓冲区，并产生中断(INT0)，通知CPU从数据缓冲区中读取数据；CPU读完数据后，将准备好的发送数据写至数据缓存区，写完后通知总线通信控制器自动完成一帧数据的发送。CRC校验由外部电路完成判别，其结果通过数据线上的相应位进行标识。针对CSU01通信模块，简要描述实施FMEA的具体内容，填写完成下表的(1)～(5)。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220909/1662698058369954.png\" title=\"1662698058369954.png\" alt=\"image.png\"/></p><br/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>(1)根据通信协议，可按接收数据功能和发送数据功能分别确定故障模式；</p><p>(2)故障原因分为总线通信控制器原因、对方发送的原因和自身程序的原因；</p><p>(3)针对每个故障模式分析其对本模块直至整个DY系统造成的影响；</p><p>(4)采用风险优先数RPN方法进行该通信模块的危害性分析；</p><p>(5)根据以上故障模式、原因、影响及危害性的分析结果，综合考虑故障的影响及SRPN值等情况，对每个故障模式制定了相应的改进措施。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 34,
      "belong_page": 1,
      "question_id": 350384,
      "question_title": "<p>【问题2】（10分）</p><p>从图可以看出，CSU01通信模块是该项目的关键模块，主要功能定义为：总线通信控制器自动完成一帧数据的接收，存入数据缓冲区，并产生中断(INT0)，通知CPU从数据缓冲区中读取数据；CPU读完数据后，将准备好的发送数据写至数据缓存区，写完后通知总线通信控制器自动完成一帧数据的发送。CRC校验由外部电路完成判别，其结果通过数据线上的相应位进行标识。针对CSU01通信模块，简要描述实施FMEA的具体内容，填写完成下表的(1)～(5)。</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220909/1662698058369954.png\" title=\"1662698058369954.png\" alt=\"image.png\"/></p><br/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 350382,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三（25分）</p><p>阅读以下有关嵌入式软件FMEA方法和相关案例的说明，回答问题。</p><p>【说明】</p><p>故障(失效)模型影响分析FMEA是分析产品所有可能的故障模式及其可能产生的影响，并按每个故障模式产生影响的严重程度及其发生概率予以分类的一种归纳分析方法。近年来，FMEA方法已被广泛用于安全关键系统的嵌入式软件可靠性分析工作。</p><p>某软件公司承担了一项通信软件的开发项目。该项目由FC系统、DY系统和GD系统组成，而DY系统(TMS320C25S)软件负责按系统的通信协议完成与FC系统的通信，图给出了该通信软件的约定层次图。公司高层将项目交给王工，王工认为此项目是安全关键系统，安全等级应为II类(致命的)，因此应开展软件的FMEA分析。</p><img src=\"https://s2.51cto.com/images/20220909/1662697979227107.png\" title=\"1662697979227107.png\" alt=\"image.png\"/><br/><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 某设备通信软件的约定层次图</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>(1)根据通信协议，可按接收数据功能和发送数据功能分别确定故障模式；</p><p>(2)故障原因分为总线通信控制器原因、对方发送的原因和自身程序的原因；</p><p>(3)针对每个故障模式分析其对本模块直至整个DY系统造成的影响；</p><p>(4)采用风险优先数RPN方法进行该通信模块的危害性分析；</p><p>(5)根据以上故障模式、原因、影响及危害性的分析结果，综合考虑故障的影响及SRPN值等情况，对每个故障模式制定了相应的改进措施。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 350385,
    "question_title": "<p>【问题3】（7分）</p><p>下表给出针对该项目的CSU01通信模块的软件故障(失效)模型影响分析FMECA表(局部)，请根据此题描述情况填写表中的(1)～(7)。</p><p>注：表中的SRPN(软件风险优先数)=SESR(软件故障模式的严酷度等级)×SOPR(软件故障模式的发生概率等级)×SDDR(软件故障模式的被检测难度等级)。</p><p>通信模块INT0-ISR的软件FMECA表(局部)</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220909/1662698217374539.png\" title=\"1662698217374539.png\" alt=\"image.png\"/><br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220909/1662698232737121.png\" title=\"1662698232737121.png\" alt=\"image.png\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>(1)程序写0C300H地址单元不当</p><p>&nbsp; (2)无法响应INT0中断</p><p>(3)线路误码</p><p>(4)通信错误</p><p>(5)程序控制错误</p><p>(6)210</p><p>(7)数据发送始终不成功数据发送始终不成功。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 35,
      "belong_page": 1,
      "question_id": 350385,
      "question_title": "<p>【问题3】（7分）</p><p>下表给出针对该项目的CSU01通信模块的软件故障(失效)模型影响分析FMECA表(局部)，请根据此题描述情况填写表中的(1)～(7)。</p><p>注：表中的SRPN(软件风险优先数)=SESR(软件故障模式的严酷度等级)×SOPR(软件故障模式的发生概率等级)×SDDR(软件故障模式的被检测难度等级)。</p><p>通信模块INT0-ISR的软件FMECA表(局部)</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220909/1662698217374539.png\" title=\"1662698217374539.png\" alt=\"image.png\"/><br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220909/1662698232737121.png\" title=\"1662698232737121.png\" alt=\"image.png\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 350382,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三（25分）</p><p>阅读以下有关嵌入式软件FMEA方法和相关案例的说明，回答问题。</p><p>【说明】</p><p>故障(失效)模型影响分析FMEA是分析产品所有可能的故障模式及其可能产生的影响，并按每个故障模式产生影响的严重程度及其发生概率予以分类的一种归纳分析方法。近年来，FMEA方法已被广泛用于安全关键系统的嵌入式软件可靠性分析工作。</p><p>某软件公司承担了一项通信软件的开发项目。该项目由FC系统、DY系统和GD系统组成，而DY系统(TMS320C25S)软件负责按系统的通信协议完成与FC系统的通信，图给出了该通信软件的约定层次图。公司高层将项目交给王工，王工认为此项目是安全关键系统，安全等级应为II类(致命的)，因此应开展软件的FMEA分析。</p><img src=\"https://s2.51cto.com/images/20220909/1662697979227107.png\" title=\"1662697979227107.png\" alt=\"image.png\"/><br/><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 某设备通信软件的约定层次图</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>(1)程序写0C300H地址单元不当</p><p>&nbsp; (2)无法响应INT0中断</p><p>(3)线路误码</p><p>(4)通信错误</p><p>(5)程序控制错误</p><p>(6)210</p><p>(7)数据发送始终不成功数据发送始终不成功。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 352353,
    "question_title": "<p>【问题2】（9分）</p><p>针对在线投票系统的实际应用需求和要求，项目组应选用哪种技术实现数据持久层?请用200字以内文字说明其采用该技术的原因。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>项目组应该采用Hibernate框架。</p><p>原因：</p><p>（1）Hibernate支持多种不同类型数据库，满足项目组数据库移植需求；</p><p>（2）Hibernate相对于iBatis减少了SQL语句开发的工作量；</p><p>（3）iBatis生成的PO是扁平化的，无法像Hibernate一样支持对象的继承和聚合等立体化关系。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 36,
      "belong_page": 1,
      "question_id": 352353,
      "question_title": "<p>【问题2】（9分）</p><p>针对在线投票系统的实际应用需求和要求，项目组应选用哪种技术实现数据持久层?请用200字以内文字说明其采用该技术的原因。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 352351,
      "score_rule": "",
      "material_text": "<p style=\"margin-top:16px;text-indent:29px\">试题五</p><p>阅读以下关于Web系统架构的设计的叙述，回答下列问题。</p><p>【说明】</p><p>某信息技术公司计划开发一套在线投票系统，用于为市场调研、信息调查和销售反馈等业务提供服务。该系统计划通过大量宣传和奖品鼓励的方式快速积累用户，当用户规模扩大到一定程度时，开始联系相关企业提供信息服务，并按照信息服务种类和用户投票数量收取费用。</p><p>为了降低开发成本和提高开发效率，项目组经过讨论后决定采用轻量级Java EE开发框架设计系统应用架构。在应用架构设计中，除了满足系统主要功能需求，还需要考虑的因素包括：</p><p>1.项目开发采用MySQL，数据库存储数据，但将来可能移植到其他数据库平台；</p><p>2.系统开发过程中尽可能降低或者消除SQL语句开发的工作量；</p><p>3.投票系统中数据之间的关系复杂，需要支持数据对象的聚合和继承等关系。</p><p>项目组基于MVC模式设计出了投票系统的架构，包括表示层、业务逻辑层、数据持久层和数据层。在具体讨论数据持久层采用哪种技术方案时，老王建议采用成熟的Hibernate框架，小李则认为iBatis更加灵活，更适合作为投票系统数据持久层开发技术。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>项目组应该采用Hibernate框架。</p><p>原因：</p><p>（1）Hibernate支持多种不同类型数据库，满足项目组数据库移植需求；</p><p>（2）Hibernate相对于iBatis减少了SQL语句开发的工作量；</p><p>（3）iBatis生成的PO是扁平化的，无法像Hibernate一样支持对象的继承和聚合等立体化关系。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 352354,
    "question_title": "<p>【问题3】（8分）</p><p>数据持久层是Web应用系统框架中重要的组成部分，主流的数据持久层技术分别基于不同的技术方案，请在下表中(1)～(4)处分别根据(a)～(d)所列技术的方案类别填入其序号。&nbsp;</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663933649897077.png\" title=\"1663933649897077.png\" alt=\"image.png\"/><p><br/></p>(a)BMP、CMP<br/><p>(b)iBatis/MyBatis</p><p>(c)Spring JdbcTemplate</p><p>(d)TopLink、JDO、Hibernate&nbsp;</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）（c） &nbsp; &nbsp;（2）（b） &nbsp; &nbsp;（3）（d） &nbsp; &nbsp;（4）（a）</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 37,
      "belong_page": 1,
      "question_id": 352354,
      "question_title": "<p>【问题3】（8分）</p><p>数据持久层是Web应用系统框架中重要的组成部分，主流的数据持久层技术分别基于不同的技术方案，请在下表中(1)～(4)处分别根据(a)～(d)所列技术的方案类别填入其序号。&nbsp;</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20220923/1663933649897077.png\" title=\"1663933649897077.png\" alt=\"image.png\"/><p><br/></p>(a)BMP、CMP<br/><p>(b)iBatis/MyBatis</p><p>(c)Spring JdbcTemplate</p><p>(d)TopLink、JDO、Hibernate&nbsp;</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 352351,
      "score_rule": "",
      "material_text": "<p style=\"margin-top:16px;text-indent:29px\">试题五</p><p>阅读以下关于Web系统架构的设计的叙述，回答下列问题。</p><p>【说明】</p><p>某信息技术公司计划开发一套在线投票系统，用于为市场调研、信息调查和销售反馈等业务提供服务。该系统计划通过大量宣传和奖品鼓励的方式快速积累用户，当用户规模扩大到一定程度时，开始联系相关企业提供信息服务，并按照信息服务种类和用户投票数量收取费用。</p><p>为了降低开发成本和提高开发效率，项目组经过讨论后决定采用轻量级Java EE开发框架设计系统应用架构。在应用架构设计中，除了满足系统主要功能需求，还需要考虑的因素包括：</p><p>1.项目开发采用MySQL，数据库存储数据，但将来可能移植到其他数据库平台；</p><p>2.系统开发过程中尽可能降低或者消除SQL语句开发的工作量；</p><p>3.投票系统中数据之间的关系复杂，需要支持数据对象的聚合和继承等关系。</p><p>项目组基于MVC模式设计出了投票系统的架构，包括表示层、业务逻辑层、数据持久层和数据层。在具体讨论数据持久层采用哪种技术方案时，老王建议采用成熟的Hibernate框架，小李则认为iBatis更加灵活，更适合作为投票系统数据持久层开发技术。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）（c） &nbsp; &nbsp;（2）（b） &nbsp; &nbsp;（3）（d） &nbsp; &nbsp;（4）（a）</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 356283,
    "question_title": "<p>【问题3】(9分)</p><p>张工在方案中指出，本系统的故障诊断采用故障诊断器实现，它可综合多种故障信息和系统状态，依据智能决策数据库提供的决策策略判定出故障类型和处理方法。智能决策数据库中的策略可以对故障开展定性或定量分析，通常，在定量分析中，普遍采用基于解析模型的方法和数据驱动的方法，张工在方案中提出该系统定量分析时应采用基于解析模型的方法。但是此提议受到王工的反对，王工指出采用数据驱动的方法更适合分布式综合化电子系统架构的设计。请用300字以内的文字，说明数据驱动方法的基本概念，以及王工提出采用此方法的理由。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>数据驱动方法是一种问题求解方法。从初始的数据或观测值出发，运用启发式规则，寻找和建立内部特征之间的关系，从而发现一些定理或定律。通常也指基于大规模统计数据的自然语言处理方法。</p><p>在本题中，由于是分布式环境，需要综合多种故障信息和系统状态，依据智能决策数据库的决策策略判定，如果采用预先定制的解析模型，这个模型可能会非常复杂。因此采用数据驱动方法能通过已有的数据去训练模型，可以达到逐渐精细化，并兼容未来的变化。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 38,
      "belong_page": 1,
      "question_id": 356283,
      "question_title": "<p>【问题3】(9分)</p><p>张工在方案中指出，本系统的故障诊断采用故障诊断器实现，它可综合多种故障信息和系统状态，依据智能决策数据库提供的决策策略判定出故障类型和处理方法。智能决策数据库中的策略可以对故障开展定性或定量分析，通常，在定量分析中，普遍采用基于解析模型的方法和数据驱动的方法，张工在方案中提出该系统定量分析时应采用基于解析模型的方法。但是此提议受到王工的反对，王工指出采用数据驱动的方法更适合分布式综合化电子系统架构的设计。请用300字以内的文字，说明数据驱动方法的基本概念，以及王工提出采用此方法的理由。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 356280,
      "score_rule": "",
      "material_text": "<p>试题三（25分）：</p><p>阅读以下关于嵌入式系统故障检测和诊断的相关描述，在答题纸上回答问题1至问题3</p><p>【说明】</p><p>系统的故障检测和诊断是宇航系统提高装备可靠性的主要技术之一，随着装备信息化的发展，分布式架构下的资源配置越来越多、资源布局也越来越分散，这对系统的故障检测和诊断方法提出了新的要求，为了适应宇航装备的分布式综合化电子系统的发展，解决由于系统资源部署的分散性，造成系统状态的综合和监控困难的问题，公司领导安排张工进行研究。张工经过分析、调研提出了针对分布式综合化电子系统架构的故障检测和诊断的方案。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>数据驱动方法是一种问题求解方法。从初始的数据或观测值出发，运用启发式规则，寻找和建立内部特征之间的关系，从而发现一些定理或定律。通常也指基于大规模统计数据的自然语言处理方法。</p><p>在本题中，由于是分布式环境，需要综合多种故障信息和系统状态，依据智能决策数据库的决策策略判定，如果采用预先定制的解析模型，这个模型可能会非常复杂。因此采用数据驱动方法能通过已有的数据去训练模型，可以达到逐渐精细化，并兼容未来的变化。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 356289,
    "question_title": "<p>【问题1】(5分)</p><p>MQTT协议在工业物联网中得到广泛的应用，请用300字以内的文字简要说明MQTT协议。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>MQTT是一个物联网传输协议，它被设计用于轻量级的发布/订阅式消息传输，旨在为低带宽和不稳定的网络环境中的物联网设备提供可靠的网络服务。MQTT是专门针对物联网开发的轻量级传输协议。MQTT协议针对低带宽网络，低计算能力的设备，做了特殊的优化，使得其能适应各种物联网应用场景。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 39,
      "belong_page": 1,
      "question_id": 356289,
      "question_title": "<p>【问题1】(5分)</p><p>MQTT协议在工业物联网中得到广泛的应用，请用300字以内的文字简要说明MQTT协议。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 356288,
      "score_rule": "",
      "material_text": "<p>试题五（25分）：</p><p>阅读以下关于Web系统架构设计的叙述，在答题纸上回答问题1至问题3</p><p>【说明】</p><p>某公司拟开发一套基于边缘计算的智能门禁系统，用于如园区、新零售、工业现场等存在来访、被访业务的场景。来访者在来访前，可以通过线上提前预约的方式将自己的个人信息记录在后台，被访者在系统中通过此请求后，来访者在到访时可以直接通过“刷脸”的方式通过门禁，无需做其他验证。此外，系统的管理员可对正在运行的门禁设备进行管理。</p><p>基于项目需求，该公司组建项目组，召开了项目讨论会。会上，张工根据业务需求并结合边缘计算的思想，提出本系统可由访客注册模块、模型训练模块、端侧识别模块与设备调度平台模块等四项功能组成，李工从技术层面提出该系统可使用 Flask 框架与SSM 框架为基础来开发后台服务器，将开发好的系统通过 Docker 进行部署，并使用MQTT 协议对 Docker 进行管理。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>MQTT是一个物联网传输协议，它被设计用于轻量级的发布/订阅式消息传输，旨在为低带宽和不稳定的网络环境中的物联网设备提供可靠的网络服务。MQTT是专门针对物联网开发的轻量级传输协议。MQTT协议针对低带宽网络，低计算能力的设备，做了特殊的优化，使得其能适应各种物联网应用场景。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 369379,
    "question_title": "<p>【问题1】（9分）</p><p>在架构评估过程中，质量属性效用树 （utility tree）是对系统质量属性进行识别和优先级排序的重要工具。请给出合适的质量属性，填入图 1-1 中（1） ~ （4）空白处；并选择题干描述的 （a）~（q） ，填入（5） ~（8） 空白处（注：1个空可能对应多个选项），完成该系统的效用树。（评分规则：对于多选的空，少选按答对个数得分，错选不得分）</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230902/1693670347828057.png\" title=\"1693670347828057.png\" alt=\"image.png\" width=\"399\" height=\"463\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）性能 （2）安全性 （3）可用性 （4）可修改性</p><p>（5）（d） （6）（b）（l）（7）（q）（8）（j）</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 40,
      "belong_page": 1,
      "question_id": 369379,
      "question_title": "<p>【问题1】（9分）</p><p>在架构评估过程中，质量属性效用树 （utility tree）是对系统质量属性进行识别和优先级排序的重要工具。请给出合适的质量属性，填入图 1-1 中（1） ~ （4）空白处；并选择题干描述的 （a）~（q） ，填入（5） ~（8） 空白处（注：1个空可能对应多个选项），完成该系统的效用树。（评分规则：对于多选的空，少选按答对个数得分，错选不得分）</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230902/1693670347828057.png\" title=\"1693670347828057.png\" alt=\"image.png\" width=\"399\" height=\"463\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 369378,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于系统架构开发的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>51CTO公司欲为某教育机构开发一个在线教育平台，支持用户完成网上下单购买课程，在线点播视频，在线测试等功能。在系统开发之初，企业对该平台提出了如下要求和质量场景：</p><p>（a）10000用户并发点播视频时，视频不卡顿。</p><p>（b）用户口令在保存进数据库之前，必须进行MD5码处理。</p><p>（c）视频点播支持多平台，当一个平台出现故障后，30秒内将用户请求切换至另一平台。</p><p>（d）平台支持的高清视频码率至少达到3Mb/s。</p><p>（e）学员不必查看帮助文档，也能正常使用系统。</p><p>（f）学员信息数据库授权必须保证99. 9%可用。</p><p>（g）更改视频加密的方式将对安全性和性能产生影响。</p><p>（h）目前对学员学习情况分析功能尚未达成共识，这可能导致部分业务功能模块开发后期需要调整。</p><p>（i）用户名要求必须以字母开头，可以包含下划线和数字，长度不少于6个字符。</p><p>（j）系统要扩容时，应保证在2人•月内完成所有的部署与测试工作。</p><p>（k）对用户隐私的保护要求将影响系统的数据传输协议和处理过程的设计。</p><p>（l）系统对学员的操作行为有完整的日志记录。</p><p>（m）系统必须提供远程调试接口，并支持系统的远程调试。</p><p>（o）更新系统的 Web 界面接口必须在 1 人月内完成。</p><p>（p）若每秒学员交卷请求的数量是30个，处理单个请求的时间为20毫秒，则系统保证在1秒内完成用户的请求是可以做到的。</p><p>（q）当在线教育平台发生网络失效后，需要在60秒内发现错误并启用备用网络。</p><p>在对系统需求，质量属性描述和架构特性进行分析的基础上，系统的架构师给出了三个候选的架构设计方案，公司目前正在组织系统开发的相关人员对系统架构进行评估。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）性能 （2）安全性 （3）可用性 （4）可修改性</p><p>（5）（d） （6）（b）（l）（7）（q）（8）（j）</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 369380,
    "question_title": "<p>【问题2】（4分）</p><p>在架构设计过程中，除了需要考虑经典的4大质量属性，还要考虑其它属性，如：易用性，可测试性。题目中&nbsp;（9）&nbsp;是易用性的示例，&nbsp;（10）&nbsp;是可测试性的示例。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（9）（e） （10）（m）</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 41,
      "belong_page": 1,
      "question_id": 369380,
      "question_title": "<p>【问题2】（4分）</p><p>在架构设计过程中，除了需要考虑经典的4大质量属性，还要考虑其它属性，如：易用性，可测试性。题目中&nbsp;（9）&nbsp;是易用性的示例，&nbsp;（10）&nbsp;是可测试性的示例。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 369378,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于系统架构开发的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>51CTO公司欲为某教育机构开发一个在线教育平台，支持用户完成网上下单购买课程，在线点播视频，在线测试等功能。在系统开发之初，企业对该平台提出了如下要求和质量场景：</p><p>（a）10000用户并发点播视频时，视频不卡顿。</p><p>（b）用户口令在保存进数据库之前，必须进行MD5码处理。</p><p>（c）视频点播支持多平台，当一个平台出现故障后，30秒内将用户请求切换至另一平台。</p><p>（d）平台支持的高清视频码率至少达到3Mb/s。</p><p>（e）学员不必查看帮助文档，也能正常使用系统。</p><p>（f）学员信息数据库授权必须保证99. 9%可用。</p><p>（g）更改视频加密的方式将对安全性和性能产生影响。</p><p>（h）目前对学员学习情况分析功能尚未达成共识，这可能导致部分业务功能模块开发后期需要调整。</p><p>（i）用户名要求必须以字母开头，可以包含下划线和数字，长度不少于6个字符。</p><p>（j）系统要扩容时，应保证在2人•月内完成所有的部署与测试工作。</p><p>（k）对用户隐私的保护要求将影响系统的数据传输协议和处理过程的设计。</p><p>（l）系统对学员的操作行为有完整的日志记录。</p><p>（m）系统必须提供远程调试接口，并支持系统的远程调试。</p><p>（o）更新系统的 Web 界面接口必须在 1 人月内完成。</p><p>（p）若每秒学员交卷请求的数量是30个，处理单个请求的时间为20毫秒，则系统保证在1秒内完成用户的请求是可以做到的。</p><p>（q）当在线教育平台发生网络失效后，需要在60秒内发现错误并启用备用网络。</p><p>在对系统需求，质量属性描述和架构特性进行分析的基础上，系统的架构师给出了三个候选的架构设计方案，公司目前正在组织系统开发的相关人员对系统架构进行评估。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（9）（e） （10）（m）</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 369381,
    "question_title": "<p>【问题3】（12分）</p><p>在架构评估过程中；需要正确识别系统的架构风险点、非风险点、敏感点和权衡点，并进行合理的架构决策。请用300字以内的文字给出系统架构风险点、非风险点、敏感点和权衡点的定义，并从题干描述中的（a）～（q ）各选出1个属于系统架构风险点、非风险点、敏感点和权衡点的描述。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>敏感点是一个或多个构件（和／或构件之间的关系）的特性，它能影响系统的某个质量属性。</p><p>权衡点是影响多个质量属性的特性，是多个质量属性的敏感点。</p><p>风险点是指架构设计中潜在的、存在问题的架构决策所带来的隐患。</p><p>非风险点是指不会带来隐患的分析与描述。</p><p>敏感点：（k）权衡点：（g）风险点：（h） &nbsp;非风险点：（p）</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 42,
      "belong_page": 1,
      "question_id": 369381,
      "question_title": "<p>【问题3】（12分）</p><p>在架构评估过程中；需要正确识别系统的架构风险点、非风险点、敏感点和权衡点，并进行合理的架构决策。请用300字以内的文字给出系统架构风险点、非风险点、敏感点和权衡点的定义，并从题干描述中的（a）～（q ）各选出1个属于系统架构风险点、非风险点、敏感点和权衡点的描述。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 369378,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于系统架构开发的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>51CTO公司欲为某教育机构开发一个在线教育平台，支持用户完成网上下单购买课程，在线点播视频，在线测试等功能。在系统开发之初，企业对该平台提出了如下要求和质量场景：</p><p>（a）10000用户并发点播视频时，视频不卡顿。</p><p>（b）用户口令在保存进数据库之前，必须进行MD5码处理。</p><p>（c）视频点播支持多平台，当一个平台出现故障后，30秒内将用户请求切换至另一平台。</p><p>（d）平台支持的高清视频码率至少达到3Mb/s。</p><p>（e）学员不必查看帮助文档，也能正常使用系统。</p><p>（f）学员信息数据库授权必须保证99. 9%可用。</p><p>（g）更改视频加密的方式将对安全性和性能产生影响。</p><p>（h）目前对学员学习情况分析功能尚未达成共识，这可能导致部分业务功能模块开发后期需要调整。</p><p>（i）用户名要求必须以字母开头，可以包含下划线和数字，长度不少于6个字符。</p><p>（j）系统要扩容时，应保证在2人•月内完成所有的部署与测试工作。</p><p>（k）对用户隐私的保护要求将影响系统的数据传输协议和处理过程的设计。</p><p>（l）系统对学员的操作行为有完整的日志记录。</p><p>（m）系统必须提供远程调试接口，并支持系统的远程调试。</p><p>（o）更新系统的 Web 界面接口必须在 1 人月内完成。</p><p>（p）若每秒学员交卷请求的数量是30个，处理单个请求的时间为20毫秒，则系统保证在1秒内完成用户的请求是可以做到的。</p><p>（q）当在线教育平台发生网络失效后，需要在60秒内发现错误并启用备用网络。</p><p>在对系统需求，质量属性描述和架构特性进行分析的基础上，系统的架构师给出了三个候选的架构设计方案，公司目前正在组织系统开发的相关人员对系统架构进行评估。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>敏感点是一个或多个构件（和／或构件之间的关系）的特性，它能影响系统的某个质量属性。</p><p>权衡点是影响多个质量属性的特性，是多个质量属性的敏感点。</p><p>风险点是指架构设计中潜在的、存在问题的架构决策所带来的隐患。</p><p>非风险点是指不会带来隐患的分析与描述。</p><p>敏感点：（k）权衡点：（g）风险点：（h） &nbsp;非风险点：（p）</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 369383,
    "question_title": "<p>【问题1】（6分）</p><p>以下哪些行为属于信息安全中的被动攻击方式：</p><p>A、重放攻击B、主观抵赖C、网络监听D、假冒身份E、信息截取 F、散播病毒G、拒绝服务H、数据篡改I、流量分析</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>C、E、I</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 43,
      "belong_page": 1,
      "question_id": 369383,
      "question_title": "<p>【问题1】（6分）</p><p>以下哪些行为属于信息安全中的被动攻击方式：</p><p>A、重放攻击B、主观抵赖C、网络监听D、假冒身份E、信息截取 F、散播病毒G、拒绝服务H、数据篡改I、流量分析</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 369382,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于系统安全架构的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某证券公司计划更新其网络架构,以提高安全服务能力。该公司技术总监王工通过对公司内部调研，以及对现有系统分析发现，公司网络经常遭受同一种网络攻击。被攻击时的现象为：</p><p>（1）被攻击主机上有大量等待的TCP连接；</p><p>（2）网络中充斥着大量的无用的数据包，源地址为假；</p><p>（3）高流量无用数据，造成网络拥塞，使受害主机无法正常和外界通讯；</p><p>（4）在遭受严重攻击时，主机系统出现崩溃死机的状况。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>C、E、I</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 369384,
    "question_title": "<p>【问题2】（8分）</p><p>请分析以下攻击方式，是破坏哪一种安全属性。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230903/1693670491396389.png\" title=\"1693670491396389.png\" alt=\"image.png\" width=\"343\" height=\"114\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）完整性（2）保密性（3）可用性（4）完整性</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 44,
      "belong_page": 1,
      "question_id": 369384,
      "question_title": "<p>【问题2】（8分）</p><p>请分析以下攻击方式，是破坏哪一种安全属性。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230903/1693670491396389.png\" title=\"1693670491396389.png\" alt=\"image.png\" width=\"343\" height=\"114\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 369382,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于系统安全架构的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某证券公司计划更新其网络架构,以提高安全服务能力。该公司技术总监王工通过对公司内部调研，以及对现有系统分析发现，公司网络经常遭受同一种网络攻击。被攻击时的现象为：</p><p>（1）被攻击主机上有大量等待的TCP连接；</p><p>（2）网络中充斥着大量的无用的数据包，源地址为假；</p><p>（3）高流量无用数据，造成网络拥塞，使受害主机无法正常和外界通讯；</p><p>（4）在遭受严重攻击时，主机系统出现崩溃死机的状况。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）完整性（2）保密性（3）可用性（4）完整性</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 369385,
    "question_title": "<p>【问题3】（11分）</p><p>请根据王工所描述的现象,分析这是一种什么样的网络攻击。可以采取何种方式来抵抗这种攻击。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>DDos攻击或分布式拒绝服务攻击。（3分）</p><p>（1）关闭不必要的服务</p><p>（2）及时更新系统补丁</p><p>（3）限制同时打开的Syn半连接数目</p><p>（4）缩短Syn半连接的timeout时间</p><p>（5）限制特定IP地址的访问</p><p>注：每答对1空得2分，最高得8分。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 45,
      "belong_page": 1,
      "question_id": 369385,
      "question_title": "<p>【问题3】（11分）</p><p>请根据王工所描述的现象,分析这是一种什么样的网络攻击。可以采取何种方式来抵抗这种攻击。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 369382,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于系统安全架构的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某证券公司计划更新其网络架构,以提高安全服务能力。该公司技术总监王工通过对公司内部调研，以及对现有系统分析发现，公司网络经常遭受同一种网络攻击。被攻击时的现象为：</p><p>（1）被攻击主机上有大量等待的TCP连接；</p><p>（2）网络中充斥着大量的无用的数据包，源地址为假；</p><p>（3）高流量无用数据，造成网络拥塞，使受害主机无法正常和外界通讯；</p><p>（4）在遭受严重攻击时，主机系统出现崩溃死机的状况。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>DDos攻击或分布式拒绝服务攻击。（3分）</p><p>（1）关闭不必要的服务</p><p>（2）及时更新系统补丁</p><p>（3）限制同时打开的Syn半连接数目</p><p>（4）缩短Syn半连接的timeout时间</p><p>（5）限制特定IP地址的访问</p><p>注：每答对1空得2分，最高得8分。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 369387,
    "question_title": "<p>【问题1】（14分）</p><p>王工提交的设计方案中指出：由于公司目前研制的嵌入式实时产品属于简单型系统，其嵌入式子系统相互独立、功能单一、时序简单。而未来满足网络化、智能化和综合化的嵌入式实时系统将是一种复杂系统，其核心特征体现为实时任务的机理、状态和行为的复杂性。简单任务和复杂任务的特征区分主要表现在十个方面。请参考表3-1给出的实时任务特征分类，用题干中给出的（a）～（t）20个实时任务特征描述，补充完善表3-1给出的空（l）～（l4）。</p><p>（a）任务属性不会随时间变化而改变；</p><p>（b）任务的属性与时间相关；</p><p>（c）任务仅可以从非连续集中获取特征变量；</p><p>（d）任务变量域是连续的；</p><p>（e）功能原理不依赖于上下文；</p><p>（f）功能原理依赖于上下文；</p><p>（g）任务行为可以用step-by-step顺序分析方法来理解；</p><p>（h）许多任务在产生访问活动时相互间是并发处理的，很难用step-by-step方法分析；</p><p>（i）因果关系相互影响；</p><p>（j）行为特征依赖于大量的反馈机制；</p><p>（k）系统内构成、策略和描述是相似的；</p><p>（l）系统内存在许多不同的构成、策略和描述；</p><p>（m）功能关系是非线性的；</p><p>（n）功能关系是线性的；</p><p>（O）不同的子任务是相互独立的，任务内部仅存在少量的交互操作；</p><p>（p）不同的子任务有很高的交互操作，要把一个单任务的行为隔离开是困难的；</p><p>（q）域特征有非常整齐的原则和规则；</p><p>（r）许多不同的上下文依赖于规则；</p><p>（S）原理和规则在表面属性上很容易被识别；</p><p>（t）原理被覆盖、抽象，而不会在表面属性上被识别。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230903/1693670587872310.png\" title=\"1693670587872310.png\" alt=\"image.png\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1） （c）</p><p>（2） （d）</p><p>（3） （o）</p><p>（4） （p）</p><p>（5） （g）</p><p>（6） （h）</p><p>（7） （k）</p><p>（8） （l）</p><p>（9） （i）</p><p>（10） （j）</p><p>（1l） （n）</p><p>（l2） （m）</p><p>（l3） （e）</p><p>（l4） （f）</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 46,
      "belong_page": 1,
      "question_id": 369387,
      "question_title": "<p>【问题1】（14分）</p><p>王工提交的设计方案中指出：由于公司目前研制的嵌入式实时产品属于简单型系统，其嵌入式子系统相互独立、功能单一、时序简单。而未来满足网络化、智能化和综合化的嵌入式实时系统将是一种复杂系统，其核心特征体现为实时任务的机理、状态和行为的复杂性。简单任务和复杂任务的特征区分主要表现在十个方面。请参考表3-1给出的实时任务特征分类，用题干中给出的（a）～（t）20个实时任务特征描述，补充完善表3-1给出的空（l）～（l4）。</p><p>（a）任务属性不会随时间变化而改变；</p><p>（b）任务的属性与时间相关；</p><p>（c）任务仅可以从非连续集中获取特征变量；</p><p>（d）任务变量域是连续的；</p><p>（e）功能原理不依赖于上下文；</p><p>（f）功能原理依赖于上下文；</p><p>（g）任务行为可以用step-by-step顺序分析方法来理解；</p><p>（h）许多任务在产生访问活动时相互间是并发处理的，很难用step-by-step方法分析；</p><p>（i）因果关系相互影响；</p><p>（j）行为特征依赖于大量的反馈机制；</p><p>（k）系统内构成、策略和描述是相似的；</p><p>（l）系统内存在许多不同的构成、策略和描述；</p><p>（m）功能关系是非线性的；</p><p>（n）功能关系是线性的；</p><p>（O）不同的子任务是相互独立的，任务内部仅存在少量的交互操作；</p><p>（p）不同的子任务有很高的交互操作，要把一个单任务的行为隔离开是困难的；</p><p>（q）域特征有非常整齐的原则和规则；</p><p>（r）许多不同的上下文依赖于规则；</p><p>（S）原理和规则在表面属性上很容易被识别；</p><p>（t）原理被覆盖、抽象，而不会在表面属性上被识别。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230903/1693670587872310.png\" title=\"1693670587872310.png\" alt=\"image.png\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 369386,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三（25分）</p><p>阅读以下关于嵌入式实时系统相关技术的叙述，在答题纸上回答问题l和问题2。</p><p>【说明】</p><p>某公司长期从事宇航领域嵌入式实时系统的软件研制任务。公司为了适应未来嵌入式系统网络化、智能化和综合化的技术发展需要，决定重新考虑新产品的架构问题，经理将论证工作交给王工负责。王工经调研和分析，完成了新产品架构设计方案，提交公司高层讨论。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1） （c）</p><p>（2） （d）</p><p>（3） （o）</p><p>（4） （p）</p><p>（5） （g）</p><p>（6） （h）</p><p>（7） （k）</p><p>（8） （l）</p><p>（9） （i）</p><p>（10） （j）</p><p>（1l） （n）</p><p>（l2） （m）</p><p>（l3） （e）</p><p>（l4） （f）</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 369388,
    "question_title": "<p>【问题2】（11分）</p><p>王工设计方案中指出：要满足未来网络化、智能化和综合化的需求，应该设计一种能够充分表达嵌入式系统行为的，且具有一定通用性的通信架构， 以避免复杂任务的某些特征带来的通信复杂性。通常为了实现嵌入式系统中计算组件间的通信，在架构上需要一种简单的架构风格，用于屏蔽不同协议、不同硬件和不同结构组成所带来的复杂性。图3-l给出了一种“腰（Waistline）”型通信模式的架构风格。腰型架构的关键是基本消息通信（BMTS），通常， BMTS的消息与时间属性相关，支持事件触发消息、速率约束消息和时间触发消息。</p><p>请用400字以内的文字说明基于BMTS的消息通信网络的主要特征，说明三种消息的基本含义，并举例给出两种具有时间触发消息能力的网络总线。&nbsp;</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230903/1693670626491069.png\" title=\"1693670626491069.png\" alt=\"image.png\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>BMTS是从一个计算组件传输消息到另外一个或多个接收组件，这样的传输具有高可靠、低延迟和微小抖动等特点。</p><p>（l）事件触发消息（Event-triggered messages）：此类消息是在发送端有某重要事件发生 时产生的偶发消息。建立消息间不存在最小时间（Minimum Time）。此类消息从发送到接收之间的延迟是不能确定的。在发送产生时， BMTS可能要处理许多消息，要么在发送者或消息被丢失时做相应处理。</p><p>（2）速率约束消息（Rate-constrained messages） ：此类消息是偶发性产生的，而不考虑发送者承诺消息不超出最大消息速率。在给定的故障假设条件内，BMTS承诺不超过最大的传输时延（Latency）。抖动依赖于网络负载或最坏情况下的传输时延和最小传输时延的范围。</p><p>（3）时间触发消息（Time-triggered messages）：此类消息是指发送者和接收者遵循一个精确的时间片周期完成消息的发送与接收。在给定的故障假设条件内， BMTS承诺消息将被在指定的时间片、确定的抖动条件下发送或接收。</p><p>具有时间触发消息能力的网络总线包括： TTE总线、FC总线、AFDX总线。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 47,
      "belong_page": 1,
      "question_id": 369388,
      "question_title": "<p>【问题2】（11分）</p><p>王工设计方案中指出：要满足未来网络化、智能化和综合化的需求，应该设计一种能够充分表达嵌入式系统行为的，且具有一定通用性的通信架构， 以避免复杂任务的某些特征带来的通信复杂性。通常为了实现嵌入式系统中计算组件间的通信，在架构上需要一种简单的架构风格，用于屏蔽不同协议、不同硬件和不同结构组成所带来的复杂性。图3-l给出了一种“腰（Waistline）”型通信模式的架构风格。腰型架构的关键是基本消息通信（BMTS），通常， BMTS的消息与时间属性相关，支持事件触发消息、速率约束消息和时间触发消息。</p><p>请用400字以内的文字说明基于BMTS的消息通信网络的主要特征，说明三种消息的基本含义，并举例给出两种具有时间触发消息能力的网络总线。&nbsp;</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230903/1693670626491069.png\" title=\"1693670626491069.png\" alt=\"image.png\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 369386,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三（25分）</p><p>阅读以下关于嵌入式实时系统相关技术的叙述，在答题纸上回答问题l和问题2。</p><p>【说明】</p><p>某公司长期从事宇航领域嵌入式实时系统的软件研制任务。公司为了适应未来嵌入式系统网络化、智能化和综合化的技术发展需要，决定重新考虑新产品的架构问题，经理将论证工作交给王工负责。王工经调研和分析，完成了新产品架构设计方案，提交公司高层讨论。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>BMTS是从一个计算组件传输消息到另外一个或多个接收组件，这样的传输具有高可靠、低延迟和微小抖动等特点。</p><p>（l）事件触发消息（Event-triggered messages）：此类消息是在发送端有某重要事件发生 时产生的偶发消息。建立消息间不存在最小时间（Minimum Time）。此类消息从发送到接收之间的延迟是不能确定的。在发送产生时， BMTS可能要处理许多消息，要么在发送者或消息被丢失时做相应处理。</p><p>（2）速率约束消息（Rate-constrained messages） ：此类消息是偶发性产生的，而不考虑发送者承诺消息不超出最大消息速率。在给定的故障假设条件内，BMTS承诺不超过最大的传输时延（Latency）。抖动依赖于网络负载或最坏情况下的传输时延和最小传输时延的范围。</p><p>（3）时间触发消息（Time-triggered messages）：此类消息是指发送者和接收者遵循一个精确的时间片周期完成消息的发送与接收。在给定的故障假设条件内， BMTS承诺消息将被在指定的时间片、确定的抖动条件下发送或接收。</p><p>具有时间触发消息能力的网络总线包括： TTE总线、FC总线、AFDX总线。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 369390,
    "question_title": "<p>【问题1】（9分）</p><p>经过分析，张工认为当前预约订单信息表存储了所有订单信息，记录已达到了百万级别。系统主要的核心功能均涉及对订单信息表的操作，应首先优化预约订单信息表的读写性能，建议针对系统中的SQL语句，建立相应索引，并进行适当的索引优化。</p><p>针对张工的方案，其他设计人员提出了一些异议，认为索引过多有很多副作用。请用100字以内的文字简要说明索引|过多的副作用。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>索引过多的副作用有：</p><p>（1）过多的索引会占用大量的存储空间；</p><p>（2）更新开销，更新语句会引起相应的索引更新；</p><p>（3）过多索引会导致查询优化器需要评估的组合增多；</p><p>（4）每个索引都有对应的统计信息，索引越多则需要的统计信息越多；</p><p>（5）聚集索引的变化会导致非聚集索引的同步变化。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 48,
      "belong_page": 1,
      "question_id": 369390,
      "question_title": "<p>【问题1】（9分）</p><p>经过分析，张工认为当前预约订单信息表存储了所有订单信息，记录已达到了百万级别。系统主要的核心功能均涉及对订单信息表的操作，应首先优化预约订单信息表的读写性能，建议针对系统中的SQL语句，建立相应索引，并进行适当的索引优化。</p><p>针对张工的方案，其他设计人员提出了一些异议，认为索引过多有很多副作用。请用100字以内的文字简要说明索引|过多的副作用。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 369389,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于数据管理的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某全国连锁药店企业在新冠肺炎疫情期间，紧急推出在线口罩预约业务系统。该业务系统为普通用户提供口罩商品查询、购买、订单查询等业务，为后台管理人员提供订单查询、订单地点分布汇总、物流调度等功能。该系统核心的关系模式为预约订单信息表。</p><p>推出业务系统后，几天内业务迅速增长到每日10万多笔预约订单，系统数据库服务器压力剧增，导致该业务交易响应速度迅速降低，甚至出现部分用户页面无法刷新、预约订单服务无响应的情况。为此，该企业紧急成立技术团队，由张工负责，以期尽快解决该问题。&nbsp;</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>索引过多的副作用有：</p><p>（1）过多的索引会占用大量的存储空间；</p><p>（2）更新开销，更新语句会引起相应的索引更新；</p><p>（3）过多索引会导致查询优化器需要评估的组合增多；</p><p>（4）每个索引都有对应的统计信息，索引越多则需要的统计信息越多；</p><p>（5）聚集索引的变化会导致非聚集索引的同步变化。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 369391,
    "question_title": "<p>【问题2】（10分）</p><p>作为团队成员之一 ，李工认为增加索引并进行优化并不能解决当前问题，建议采用物理分区策略，可以根据预约订单信息表中“所在城市”属性进行表分区，并将每个分区分布到独立的物理磁盘上，以提高读写性能。常见的物理分区特征如表41所示。李工建议选择物理分区中的列表分区模式。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230903/1693670740189592.png\" title=\"1693670740189592.png\" alt=\"image.png\" width=\"680\" height=\"162\"/><br/></p><p>请填补表4-1中的空（a）--（d）处，并用100字以内的文字解释说明李工选择该方案的原因。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（a）属性的哈希值</p><p>（b）周期性数据/周期数据</p><p>（c）能力强</p><p>（d）不均匀</p><p>李工建议根据预约订单所在城市进行表分区，而所在城市属性为离散值，根据所在城市属性建立列表分区，也方便不同城市处理自己的数据，方便数据管理。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 49,
      "belong_page": 1,
      "question_id": 369391,
      "question_title": "<p>【问题2】（10分）</p><p>作为团队成员之一 ，李工认为增加索引并进行优化并不能解决当前问题，建议采用物理分区策略，可以根据预约订单信息表中“所在城市”属性进行表分区，并将每个分区分布到独立的物理磁盘上，以提高读写性能。常见的物理分区特征如表41所示。李工建议选择物理分区中的列表分区模式。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230903/1693670740189592.png\" title=\"1693670740189592.png\" alt=\"image.png\" width=\"680\" height=\"162\"/><br/></p><p>请填补表4-1中的空（a）--（d）处，并用100字以内的文字解释说明李工选择该方案的原因。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 369389,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于数据管理的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某全国连锁药店企业在新冠肺炎疫情期间，紧急推出在线口罩预约业务系统。该业务系统为普通用户提供口罩商品查询、购买、订单查询等业务，为后台管理人员提供订单查询、订单地点分布汇总、物流调度等功能。该系统核心的关系模式为预约订单信息表。</p><p>推出业务系统后，几天内业务迅速增长到每日10万多笔预约订单，系统数据库服务器压力剧增，导致该业务交易响应速度迅速降低，甚至出现部分用户页面无法刷新、预约订单服务无响应的情况。为此，该企业紧急成立技术团队，由张工负责，以期尽快解决该问题。&nbsp;</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（a）属性的哈希值</p><p>（b）周期性数据/周期数据</p><p>（c）能力强</p><p>（d）不均匀</p><p>李工建议根据预约订单所在城市进行表分区，而所在城市属性为离散值，根据所在城市属性建立列表分区，也方便不同城市处理自己的数据，方便数据管理。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 369392,
    "question_title": "<p>【问题3】（6分）</p><p>在系统运行过程中，李工发现后台管理人员执行的订单地址信息汇总等操作，经常出现与普通用户的预约订单操作形成读写冲突，影响系统的性能。因此李工建议采用读写分离模式，采用两台数据库服务器，并采用主从复制的方式进行数据同步。请用200字以内的文字简要说明主从复制的三种模式。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）全同步复制，是指主库在执行完一个事务后，会等待所有从库执行完该事务后，才会将结果返回给客户端。这种方式的优点是数据一致性较高，但因为需要等待所有从库执行完事务，所以性能可能会较低。</p><p>（2）异步复制，则是主库在执行完客户端提交的事务后，会立即将结果返回给客户端，而不关心从库是否已经接收并处理。这种方式简单且性能较好，但可能会导致主从之间数据不一致的概率较大。</p><p>（3）半同步复制，则介于同步复制和异步复制之间，主库在执行完客户端提交的事务后，会等待至少一个从库接收到并写入中继日志后，才会将结果返回给客户端。这种方式牺牲了一定的性能，但提高了数据的安全性。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 50,
      "belong_page": 1,
      "question_id": 369392,
      "question_title": "<p>【问题3】（6分）</p><p>在系统运行过程中，李工发现后台管理人员执行的订单地址信息汇总等操作，经常出现与普通用户的预约订单操作形成读写冲突，影响系统的性能。因此李工建议采用读写分离模式，采用两台数据库服务器，并采用主从复制的方式进行数据同步。请用200字以内的文字简要说明主从复制的三种模式。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 369389,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于数据管理的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某全国连锁药店企业在新冠肺炎疫情期间，紧急推出在线口罩预约业务系统。该业务系统为普通用户提供口罩商品查询、购买、订单查询等业务，为后台管理人员提供订单查询、订单地点分布汇总、物流调度等功能。该系统核心的关系模式为预约订单信息表。</p><p>推出业务系统后，几天内业务迅速增长到每日10万多笔预约订单，系统数据库服务器压力剧增，导致该业务交易响应速度迅速降低，甚至出现部分用户页面无法刷新、预约订单服务无响应的情况。为此，该企业紧急成立技术团队，由张工负责，以期尽快解决该问题。&nbsp;</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）全同步复制，是指主库在执行完一个事务后，会等待所有从库执行完该事务后，才会将结果返回给客户端。这种方式的优点是数据一致性较高，但因为需要等待所有从库执行完事务，所以性能可能会较低。</p><p>（2）异步复制，则是主库在执行完客户端提交的事务后，会立即将结果返回给客户端，而不关心从库是否已经接收并处理。这种方式简单且性能较好，但可能会导致主从之间数据不一致的概率较大。</p><p>（3）半同步复制，则介于同步复制和异步复制之间，主库在执行完客户端提交的事务后，会等待至少一个从库接收到并写入中继日志后，才会将结果返回给客户端。这种方式牺牲了一定的性能，但提高了数据的安全性。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 369395,
    "question_title": "<p>【问题1】（12分）</p><p>请从下面给出的(a)--(j) 中进行选择，补充完善图5-1中空(1)--(6)处的内容，协助李工完成该系统的架构设计方案。</p><br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230903/1693670845254982.png\" title=\"1693670845254982.png\" alt=\"image.png\" width=\"450\" height=\"622\"/><p>(a)Wi-Fi</p><p>(b)蓝牙</p><p>(c)驱动程序</p><p>(d)软件系统</p><p>(e)家庭网关</p><p>(f)云平台</p><p>(g)微服务</p><p>(h)用户终端</p><p>(i)Android</p><p>(j)TCP/IP</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）（h）用户终端</p><p>（2）（i）Android</p><p>（3）（f）云平台</p><p>（4）（d）软件系统</p><p>（5）（e）家庭网关</p><p>（6）（c）驱动程序</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 51,
      "belong_page": 1,
      "question_id": 369395,
      "question_title": "<p>【问题1】（12分）</p><p>请从下面给出的(a)--(j) 中进行选择，补充完善图5-1中空(1)--(6)处的内容，协助李工完成该系统的架构设计方案。</p><br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230903/1693670845254982.png\" title=\"1693670845254982.png\" alt=\"image.png\" width=\"450\" height=\"622\"/><p>(a)Wi-Fi</p><p>(b)蓝牙</p><p>(c)驱动程序</p><p>(d)软件系统</p><p>(e)家庭网关</p><p>(f)云平台</p><p>(g)微服务</p><p>(h)用户终端</p><p>(i)Android</p><p>(j)TCP/IP</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 369394,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web系统架构设计的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某公司拟开发一个智能家居管理系统，该系统的主要功能需求如下：</p><p>(1)&nbsp;用户可使用该系统客户端实现对家居设备的控制，且家居设备可向客户端反馈实时状态；</p><p>(2)&nbsp;支持家居设备数据的实时存储和查询；</p><p>(3)&nbsp;基于用户数据，挖掘用户生活习惯，向用户提供家居设备智能化使用建议。</p><p>基于上述需求，该公司组建了项目组，在项目会议上，张工给出了基于家庭网关的传统智能家居管理系统的设计思路，李工给出了基于云平台的智能家居系统的设计思路。经过深入讨论，公司决定采用李工的设计思路。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）（h）用户终端</p><p>（2）（i）Android</p><p>（3）（f）云平台</p><p>（4）（d）软件系统</p><p>（5）（e）家庭网关</p><p>（6）（c）驱动程序</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 369396,
    "question_title": "<p>【问题2】（8分）</p><p>云原生技术已成为驱动业务增长的重要引擎，云原生逐渐在人工智能、大数据、边缘计算、5G等新兴领域崭路头角。请列举出主要的云原生架构模式并简要解释每种模式的特点。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>1、服务化架构模式：典型代表微服务和小服务模式， 服务拆分使维护压力大增。</p><p>2、Mesh化架构模式：把中间件框架(RPC、 缓存、异步消息)从业务进程中分离，由Mesh进程完成。</p><p>3、Serverless模式： 非常适合于事件驱动的数据计算任务。</p><p>4、存储计算分离模式：各类暂态数据(如session) 用云服务保存。</p><p>5、分布式事务模式：解决微服务模式中多数据源事务问题。</p><p>6、可观测架构：包括Logging、Tracing、 Metrics三 个方面。</p><p>7、事件驱动架构：本质.上是一种应用/组件间的集成架构模式。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 52,
      "belong_page": 1,
      "question_id": 369396,
      "question_title": "<p>【问题2】（8分）</p><p>云原生技术已成为驱动业务增长的重要引擎，云原生逐渐在人工智能、大数据、边缘计算、5G等新兴领域崭路头角。请列举出主要的云原生架构模式并简要解释每种模式的特点。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 369394,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web系统架构设计的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某公司拟开发一个智能家居管理系统，该系统的主要功能需求如下：</p><p>(1)&nbsp;用户可使用该系统客户端实现对家居设备的控制，且家居设备可向客户端反馈实时状态；</p><p>(2)&nbsp;支持家居设备数据的实时存储和查询；</p><p>(3)&nbsp;基于用户数据，挖掘用户生活习惯，向用户提供家居设备智能化使用建议。</p><p>基于上述需求，该公司组建了项目组，在项目会议上，张工给出了基于家庭网关的传统智能家居管理系统的设计思路，李工给出了基于云平台的智能家居系统的设计思路。经过深入讨论，公司决定采用李工的设计思路。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>1、服务化架构模式：典型代表微服务和小服务模式， 服务拆分使维护压力大增。</p><p>2、Mesh化架构模式：把中间件框架(RPC、 缓存、异步消息)从业务进程中分离，由Mesh进程完成。</p><p>3、Serverless模式： 非常适合于事件驱动的数据计算任务。</p><p>4、存储计算分离模式：各类暂态数据(如session) 用云服务保存。</p><p>5、分布式事务模式：解决微服务模式中多数据源事务问题。</p><p>6、可观测架构：包括Logging、Tracing、 Metrics三 个方面。</p><p>7、事件驱动架构：本质.上是一种应用/组件间的集成架构模式。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 369397,
    "question_title": "<p>【问题3】（5分）</p><p>根据李工建议，该系统采用层次架构，请用300字以内的文字分析层次型架构优势。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>层次架构的优势：</p><p>1、良好的复用性，只要接口不变可用在其它处；</p><p>2、可维护性好；</p><p>3、可扩展性好，支持递增设计；</p><p>4、经过合理分层，能让系统整体耦合性降低，达到解耦的效果；</p><p>5、可把相同逻辑与抽象级别的内容放在同一层次，更利于理解。</p><p style=\"text-align: left;\"><br/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 53,
      "belong_page": 1,
      "question_id": 369397,
      "question_title": "<p>【问题3】（5分）</p><p>根据李工建议，该系统采用层次架构，请用300字以内的文字分析层次型架构优势。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 369394,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web系统架构设计的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某公司拟开发一个智能家居管理系统，该系统的主要功能需求如下：</p><p>(1)&nbsp;用户可使用该系统客户端实现对家居设备的控制，且家居设备可向客户端反馈实时状态；</p><p>(2)&nbsp;支持家居设备数据的实时存储和查询；</p><p>(3)&nbsp;基于用户数据，挖掘用户生活习惯，向用户提供家居设备智能化使用建议。</p><p>基于上述需求，该公司组建了项目组，在项目会议上，张工给出了基于家庭网关的传统智能家居管理系统的设计思路，李工给出了基于云平台的智能家居系统的设计思路。经过深入讨论，公司决定采用李工的设计思路。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>层次架构的优势：</p><p>1、良好的复用性，只要接口不变可用在其它处；</p><p>2、可维护性好；</p><p>3、可扩展性好，支持递增设计；</p><p>4、经过合理分层，能让系统整体耦合性降低，达到解耦的效果；</p><p>5、可把相同逻辑与抽象级别的内容放在同一层次，更利于理解。</p><p style=\"text-align: left;\"><br/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 371572,
    "question_title": "<p>【问题1】（8分）</p><p>请阅读以下有关FMEA的描述，将恰当的内容填入(1)～(7)。</p><p>FMEA是FMA(故障模式分析)和FEA(故障影响分析)的组合，它对系统各种可能的风险进行评价、分析后，在现有技术的基础上消除这些风险或将这些风险降低到可接受的水平。为达到最佳效益，FMEA必须在产品研制初期进行。</p><p>FMEA实际是一组系列化的活动，其主要活动包括：</p><p>&nbsp;(1) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;；</p><p>&nbsp;(2) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;；</p><p>&nbsp;(3)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;由于产品故障可能与设计、制造过程、使用、承包商/供应商以及服务有关，因此FMEA又细分为&nbsp;&nbsp;(4) &nbsp;FMEA、&nbsp;&nbsp;(5) &nbsp;。FMEA、&nbsp;&nbsp;(6) &nbsp;FMEA和&nbsp;&nbsp;(7) &nbsp;FMEA四类</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>(1)找出产品/过程中潜在的故障模式</p><p>(2)根据相应的评价体系对找出的潜在故障模式进行风险量化评估</p><p>(3)列出故障起因/机理，寻找预防或改进措施</p><p>(4)设计</p><p>(5)过程</p><p>(6)使用</p><p>(7)服务</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 54,
      "belong_page": 1,
      "question_id": 371572,
      "question_title": "<p>【问题1】（8分）</p><p>请阅读以下有关FMEA的描述，将恰当的内容填入(1)～(7)。</p><p>FMEA是FMA(故障模式分析)和FEA(故障影响分析)的组合，它对系统各种可能的风险进行评价、分析后，在现有技术的基础上消除这些风险或将这些风险降低到可接受的水平。为达到最佳效益，FMEA必须在产品研制初期进行。</p><p>FMEA实际是一组系列化的活动，其主要活动包括：</p><p>&nbsp;(1) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;；</p><p>&nbsp;(2) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;；</p><p>&nbsp;(3)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;由于产品故障可能与设计、制造过程、使用、承包商/供应商以及服务有关，因此FMEA又细分为&nbsp;&nbsp;(4) &nbsp;FMEA、&nbsp;&nbsp;(5) &nbsp;。FMEA、&nbsp;&nbsp;(6) &nbsp;FMEA和&nbsp;&nbsp;(7) &nbsp;FMEA四类</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 371571,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三（25分）</p><p>阅读以下有关嵌入式软件FMEA方法和相关案例的说明，回答问题。</p><p>【说明】</p><p>故障(失效)模型影响分析FMEA是分析产品所有可能的故障模式及其可能产生的影响，并按每个故障模式产生影响的严重程度及其发生概率予以分类的一种归纳分析方法。近年来，FMEA方法已被广泛用于安全关键系统的嵌入式软件可靠性分析工作。</p><p>某软件公司承担了一项通信软件的开发项目。该项目由FC系统、DY系统和GD系统组成，而DY系统(TMS320C25S)软件负责按系统的通信协议完成与FC系统的通信，图给出了该通信软件的约定层次图。公司高层将项目交给王工，王工认为此项目是安全关键系统，安全等级应为II类(致命的)，因此应开展软件的FMEA分析。</p><img src=\"https://s2.51cto.com/images/20230916/1694870988412325.png\" title=\"1694870988412325.png\" alt=\"image.png\" width=\"611\" height=\"378\"/>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>(1)找出产品/过程中潜在的故障模式</p><p>(2)根据相应的评价体系对找出的潜在故障模式进行风险量化评估</p><p>(3)列出故障起因/机理，寻找预防或改进措施</p><p>(4)设计</p><p>(5)过程</p><p>(6)使用</p><p>(7)服务</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 371573,
    "question_title": "<p>【问题2】（10分）</p><p>从图可以看出，CSU01通信模块是该项目的关键模块，主要功能定义为：总线通信控制器自动完成一帧数据的接收，存入数据缓冲区，并产生中断(INT0)，通知CPU从数据缓冲区中读取数据；CPU读完数据后，将准备好的发送数据写至数据缓存区，写完后通知总线通信控制器自动完成一帧数据的发送。CRC校验由外部电路完成判别，其结果通过数据线上的相应位进行标识。针对CSU01通信模块，简要描述实施FMEA的具体内容，填写完成下表的(1)～(5)。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230916/1694871043982454.png\" title=\"1694871043982454.png\" alt=\"image.png\" width=\"651\" height=\"170\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>(1)根据通信协议，可按接收数据功能和发送数据功能分别确定故障模式；</p><p>(2)故障原因分为总线通信控制器原因、对方发送的原因和自身程序的原因；</p><p>(3)针对每个故障模式分析其对本模块直至整个DY系统造成的影响；</p><p>(4)采用风险优先数RPN方法进行该通信模块的危害性分析；</p><p>(5)根据以上故障模式、原因、影响及危害性的分析结果，综合考虑故障的影响及SRPN值等情况，对每个故障模式制定了相应的改进措施。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 55,
      "belong_page": 1,
      "question_id": 371573,
      "question_title": "<p>【问题2】（10分）</p><p>从图可以看出，CSU01通信模块是该项目的关键模块，主要功能定义为：总线通信控制器自动完成一帧数据的接收，存入数据缓冲区，并产生中断(INT0)，通知CPU从数据缓冲区中读取数据；CPU读完数据后，将准备好的发送数据写至数据缓存区，写完后通知总线通信控制器自动完成一帧数据的发送。CRC校验由外部电路完成判别，其结果通过数据线上的相应位进行标识。针对CSU01通信模块，简要描述实施FMEA的具体内容，填写完成下表的(1)～(5)。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230916/1694871043982454.png\" title=\"1694871043982454.png\" alt=\"image.png\" width=\"651\" height=\"170\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 371571,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三（25分）</p><p>阅读以下有关嵌入式软件FMEA方法和相关案例的说明，回答问题。</p><p>【说明】</p><p>故障(失效)模型影响分析FMEA是分析产品所有可能的故障模式及其可能产生的影响，并按每个故障模式产生影响的严重程度及其发生概率予以分类的一种归纳分析方法。近年来，FMEA方法已被广泛用于安全关键系统的嵌入式软件可靠性分析工作。</p><p>某软件公司承担了一项通信软件的开发项目。该项目由FC系统、DY系统和GD系统组成，而DY系统(TMS320C25S)软件负责按系统的通信协议完成与FC系统的通信，图给出了该通信软件的约定层次图。公司高层将项目交给王工，王工认为此项目是安全关键系统，安全等级应为II类(致命的)，因此应开展软件的FMEA分析。</p><img src=\"https://s2.51cto.com/images/20230916/1694870988412325.png\" title=\"1694870988412325.png\" alt=\"image.png\" width=\"611\" height=\"378\"/>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>(1)根据通信协议，可按接收数据功能和发送数据功能分别确定故障模式；</p><p>(2)故障原因分为总线通信控制器原因、对方发送的原因和自身程序的原因；</p><p>(3)针对每个故障模式分析其对本模块直至整个DY系统造成的影响；</p><p>(4)采用风险优先数RPN方法进行该通信模块的危害性分析；</p><p>(5)根据以上故障模式、原因、影响及危害性的分析结果，综合考虑故障的影响及SRPN值等情况，对每个故障模式制定了相应的改进措施。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 371574,
    "question_title": "<p>【问题3】（7分）</p><p>下表给出针对该项目的CSU01通信模块的软件故障(失效)模型影响分析FMECA表(局部)，请根据此题描述情况填写表中的(1)～(7)。</p><p>注：表中的SRPN(软件风险优先数)=SESR(软件故障模式的严酷度等级)×SOPR(软件故障模式的发生概率等级)×SDDR(软件故障模式的被检测难度等级)。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230916/1694871098313637.png\" title=\"1694871098313637.png\" alt=\"image.png\" width=\"773\" height=\"641\"/><br/></p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230916/1694871139763547.png\" title=\"1694871139763547.png\" alt=\"image.png\" width=\"678\" height=\"440\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>(1)程序写0C300H地址单元不当</p><p>&nbsp; (2)无法响应INT0中断</p><p>(3)线路误码</p><p>(4)通信错误</p><p>(5)程序控制错误</p><p>(6)210</p><p>(7)数据发送始终不成功数据发送始终不成功。</p><p>&nbsp;</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 56,
      "belong_page": 1,
      "question_id": 371574,
      "question_title": "<p>【问题3】（7分）</p><p>下表给出针对该项目的CSU01通信模块的软件故障(失效)模型影响分析FMECA表(局部)，请根据此题描述情况填写表中的(1)～(7)。</p><p>注：表中的SRPN(软件风险优先数)=SESR(软件故障模式的严酷度等级)×SOPR(软件故障模式的发生概率等级)×SDDR(软件故障模式的被检测难度等级)。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230916/1694871098313637.png\" title=\"1694871098313637.png\" alt=\"image.png\" width=\"773\" height=\"641\"/><br/></p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20230916/1694871139763547.png\" title=\"1694871139763547.png\" alt=\"image.png\" width=\"678\" height=\"440\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 371571,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三（25分）</p><p>阅读以下有关嵌入式软件FMEA方法和相关案例的说明，回答问题。</p><p>【说明】</p><p>故障(失效)模型影响分析FMEA是分析产品所有可能的故障模式及其可能产生的影响，并按每个故障模式产生影响的严重程度及其发生概率予以分类的一种归纳分析方法。近年来，FMEA方法已被广泛用于安全关键系统的嵌入式软件可靠性分析工作。</p><p>某软件公司承担了一项通信软件的开发项目。该项目由FC系统、DY系统和GD系统组成，而DY系统(TMS320C25S)软件负责按系统的通信协议完成与FC系统的通信，图给出了该通信软件的约定层次图。公司高层将项目交给王工，王工认为此项目是安全关键系统，安全等级应为II类(致命的)，因此应开展软件的FMEA分析。</p><img src=\"https://s2.51cto.com/images/20230916/1694870988412325.png\" title=\"1694870988412325.png\" alt=\"image.png\" width=\"611\" height=\"378\"/>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>(1)程序写0C300H地址单元不当</p><p>&nbsp; (2)无法响应INT0中断</p><p>(3)线路误码</p><p>(4)通信错误</p><p>(5)程序控制错误</p><p>(6)210</p><p>(7)数据发送始终不成功数据发送始终不成功。</p><p>&nbsp;</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 373735,
    "question_title": "<p>【问题3】（10分）</p><p>ROS 的架构定义了 ROS 系统由多个各自独立的节点(组件〉组成，并且各个节点之间可以通过发布/订阅(Publish/Subscribe )消息模型进行通信。图 3-1 给出一个简单机器人结构实例，请根据以下文字描述，补充图 3-1 中(1)-(5) 处空白，将答案写在答题纸上。&quot;机器人开始阶段，所有节点都要注册 (Registration) 到 Master 上，注册后，摄像 头节点声明它要发布(Pu blish)一个叫做 limage_data 的消息。另外两个节点〈图像处理处理节点和图像显示节点〉声明它们需要订阅( Subscribe) 这个 image _data 消息。因此， 一旦摄像头节点收到相机发送的数据(Data)，就立即将数据image_data直接发送到另外两个节点。<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696271218119872.png\" title=\"1696271218119872.png\" alt=\"image.png\" width=\"604\" height=\"570\"/></p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【参考答案】</p><p>(1)&nbsp;Registration (2)Data (3) publish (4)Subscribe &nbsp;(5)Subscribe</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 57,
      "belong_page": 1,
      "question_id": 373735,
      "question_title": "<p>【问题3】（10分）</p><p>ROS 的架构定义了 ROS 系统由多个各自独立的节点(组件〉组成，并且各个节点之间可以通过发布/订阅(Publish/Subscribe )消息模型进行通信。图 3-1 给出一个简单机器人结构实例，请根据以下文字描述，补充图 3-1 中(1)-(5) 处空白，将答案写在答题纸上。&quot;机器人开始阶段，所有节点都要注册 (Registration) 到 Master 上，注册后，摄像 头节点声明它要发布(Pu blish)一个叫做 limage_data 的消息。另外两个节点〈图像处理处理节点和图像显示节点〉声明它们需要订阅( Subscribe) 这个 image _data 消息。因此， 一旦摄像头节点收到相机发送的数据(Data)，就立即将数据image_data直接发送到另外两个节点。<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20231003/1696271218119872.png\" title=\"1696271218119872.png\" alt=\"image.png\" width=\"604\" height=\"570\"/></p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 373732,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三（25分）</p><p>阅读以下关于机器人操作系统架构的描述，回答问题 1 至问题 3</p><p>【说明】</p><p>随着人工智能技术的发展，工业机器人已成为当前工业界的热点研究对象。某宇航设备公司为了扩大业务范围，决策层研究决定准备开展工业机器人研制新业务。公司将论证工作交给了软件架构师王工，王工经过分析和调研，从机器人市场现状、领域需求、 组成及关键技术和风险分析等方面开展了综合论证。论证报告指出:首先，为了保障本公司机器人研制的持续性，应根据领域需求选择一种适应的设计架构:其次，为了规避风险，公司的研制工作不能从零开始，应该采用国际开源社区所提供机器人操作系统 (Robot Operating System ，ROS)作为机器人开发的基本平台。</p><p>在讨论会上，架构师李工提出不同意见，他认为公司针对宇航领域已开发了某款嵌入式实时操作系统，且被多种宇航装备使用，可靠性较高。因此应该采用现有架构体系作为机器人的开发平台。会上王工说明了机器人操作系统与该款操作系统的差别，要沿用需要进行改造，技入较大。经过激烈讨论，公司领导同意了王工采用 ROS 的意见。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【参考答案】</p><p>(1)&nbsp;Registration (2)Data (3) publish (4)Subscribe &nbsp;(5)Subscribe</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 490304,
    "question_title": "<p>【问题1】（10分）</p><p>识别软件架构质量属性是进行架构设计的重要步骤， 请分析题干中的需求描述，填写表 1- 1 中（ 1 ） ~ （ 5 ） 处的空白。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240402/1712073537755716.png\" title=\"1712073537755716.png\" alt=\"image.png\" width=\"355\" height=\"350\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）f &nbsp;&nbsp;（2）性能 &nbsp;（3） g &nbsp;&nbsp;&nbsp;（4） h &nbsp;&nbsp;&nbsp;（5） b</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 58,
      "belong_page": 1,
      "question_id": 490304,
      "question_title": "<p>【问题1】（10分）</p><p>识别软件架构质量属性是进行架构设计的重要步骤， 请分析题干中的需求描述，填写表 1- 1 中（ 1 ） ~ （ 5 ） 处的空白。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240402/1712073537755716.png\" title=\"1712073537755716.png\" alt=\"image.png\" width=\"355\" height=\"350\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 490303,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件架构设计的叙述， 在答题纸上回答问题 1~3。</p><p>【说明】</p><p>某软件公司为某品牌手机厂商开发一套手机应用程序集成开发环境，以提高开发手机应 用程序的质量和效率。在项目之初，公司的系统分析师对该集成开发环境的需求进行了调研和分析，具体描述如下。</p><p>a．需要支持和兼容该厂商的全系列硬件。</p><p>b．经过调研，手机应用开发人员更倾向于使用Android系统，因此集成开发环境的界面需要与 Android平台上的主流开发工具的界面风格保持一致。</p><p>c．支持相关开发数据在云端存储，需要保证在云端存储数据的机密性和完整性。</p><p>d．支持用户备份和加载配置。</p><p>e．支持不同模型的自动转换，在初始需求中定义的机器性能条件下， 对于一个包含 50 个对象的设计模型，将其转换为相应代码框架时所消耗时间不超过 5 s。</p><p>f．能够连续运行的时间不小于 360 小时，意外退出后能够在 10 s 之内自动重启。</p><p>g．集成开发环境具有丰富的插件库。</p><p>h．支持应用开发过程中的代码调试功能，开发人员可以设置断点并启动调试。编辑器可以自动卷屏并命中断点， 能通过变量监视器查看当前变量取值。</p><p>在对需求进行分析后，公司的架构师小张查阅了相关的资料，认为该集成开发环境应该 采用管道-过滤器（Pipe-Filter）的架构风格。公司的资深架构师王工在仔细分析后，认为应该采用数据仓储（Data Repository）的架构风格。公司经过评审，最终采用了王工的方案。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）f &nbsp;&nbsp;（2）性能 &nbsp;（3） g &nbsp;&nbsp;&nbsp;（4） h &nbsp;&nbsp;&nbsp;（5） b</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 490305,
    "question_title": "<p>【问题2】（7分）</p><p>请在阅读题干需求描述的基础上，从交互方式、数据结构、控制结构和扩展方法 4 个方面对两种架构风格进行比较， 填写表 1-2 中（1）~（4）处的空白。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240402/1712073561406385.png\" title=\"1712073561406385.png\" alt=\"image.png\" width=\"565\" height=\"201\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）星型 &nbsp;&nbsp;（2）数据流 &nbsp;&nbsp;（3）数据流驱动 &nbsp;&nbsp;（4）模型适配</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 59,
      "belong_page": 1,
      "question_id": 490305,
      "question_title": "<p>【问题2】（7分）</p><p>请在阅读题干需求描述的基础上，从交互方式、数据结构、控制结构和扩展方法 4 个方面对两种架构风格进行比较， 填写表 1-2 中（1）~（4）处的空白。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240402/1712073561406385.png\" title=\"1712073561406385.png\" alt=\"image.png\" width=\"565\" height=\"201\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 490303,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件架构设计的叙述， 在答题纸上回答问题 1~3。</p><p>【说明】</p><p>某软件公司为某品牌手机厂商开发一套手机应用程序集成开发环境，以提高开发手机应 用程序的质量和效率。在项目之初，公司的系统分析师对该集成开发环境的需求进行了调研和分析，具体描述如下。</p><p>a．需要支持和兼容该厂商的全系列硬件。</p><p>b．经过调研，手机应用开发人员更倾向于使用Android系统，因此集成开发环境的界面需要与 Android平台上的主流开发工具的界面风格保持一致。</p><p>c．支持相关开发数据在云端存储，需要保证在云端存储数据的机密性和完整性。</p><p>d．支持用户备份和加载配置。</p><p>e．支持不同模型的自动转换，在初始需求中定义的机器性能条件下， 对于一个包含 50 个对象的设计模型，将其转换为相应代码框架时所消耗时间不超过 5 s。</p><p>f．能够连续运行的时间不小于 360 小时，意外退出后能够在 10 s 之内自动重启。</p><p>g．集成开发环境具有丰富的插件库。</p><p>h．支持应用开发过程中的代码调试功能，开发人员可以设置断点并启动调试。编辑器可以自动卷屏并命中断点， 能通过变量监视器查看当前变量取值。</p><p>在对需求进行分析后，公司的架构师小张查阅了相关的资料，认为该集成开发环境应该 采用管道-过滤器（Pipe-Filter）的架构风格。公司的资深架构师王工在仔细分析后，认为应该采用数据仓储（Data Repository）的架构风格。公司经过评审，最终采用了王工的方案。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）星型 &nbsp;&nbsp;（2）数据流 &nbsp;&nbsp;（3）数据流驱动 &nbsp;&nbsp;（4）模型适配</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 490309,
    "question_title": "<p>【问题1】（12分）</p><p>识别设计类是面向对象设计过程中的重要工作，设计类表达了类的职责，即该类所担任的任务。请用300字以内的文字说明设计类通常分为哪三种类型，每种类型的主要职责，并针对题干描述案例涉及的具体类为每种类型的设计类举出2个实例。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>在系统设计过程中，类可以分为三种类型：实体类、边界类（或接口类）和控制类。</p><p>实体类映射需求中的每个实体，实体类保存需要存储在永久存储体中的信息。题干描述中商品、订单、注册用户、送货信息、购物车等都是实体类。</p><p>边界类用于封装在用例内、外流动的信息或数据流。题干描述中商品信息页面、订单信息录入页面和订单表单都属于边界类。</p><p>控制类是用于控制用例工作的类，—般是由动宾结构的短语（“动词+名词”或“名词+动词”）转化来的名词。题干描述中订单结算、订单支付、备货、出货等都属于控制类。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 60,
      "belong_page": 1,
      "question_id": 490309,
      "question_title": "<p>【问题1】（12分）</p><p>识别设计类是面向对象设计过程中的重要工作，设计类表达了类的职责，即该类所担任的任务。请用300字以内的文字说明设计类通常分为哪三种类型，每种类型的主要职责，并针对题干描述案例涉及的具体类为每种类型的设计类举出2个实例。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 490308,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于系统设计的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某软件公司为知名制造企业开发一套网上销售系统，以增加销售的渠道和效率。在项目之初，项目组决定釆用面向对象的开发方法进行系统开发，并对系统的核心业务功能进行了分析，具体描述如下：</p><p>注册用户通过商品信息页面在线浏览商品，将需要购买的商品添加进购物车内， 点击“结算”按钮后开始录入订单信息。</p><p>用户在订单信息录入页面上选择支付方式，填写并确认收货人、收货地址和联系方式等信息。点击“提交订单”按钮后产生订单，并开始进行订单结算。</p><p>订单需要在30分钟内进行支付，否则会自动取消，用户也可以手工取消订单。</p><p>用户支付完成，经确认后，系统开始备货，扣除该商品可接单数量，并移除用户购物车中的所有商品资料。</p><p>生成订单表单，出货完毕，订单生效。为用户快递商品，等待用户接收。</p><p>用户签收商品，交易完成。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>在系统设计过程中，类可以分为三种类型：实体类、边界类（或接口类）和控制类。</p><p>实体类映射需求中的每个实体，实体类保存需要存储在永久存储体中的信息。题干描述中商品、订单、注册用户、送货信息、购物车等都是实体类。</p><p>边界类用于封装在用例内、外流动的信息或数据流。题干描述中商品信息页面、订单信息录入页面和订单表单都属于边界类。</p><p>控制类是用于控制用例工作的类，—般是由动宾结构的短语（“动词+名词”或“名词+动词”）转化来的名词。题干描述中订单结算、订单支付、备货、出货等都属于控制类。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 490310,
    "question_title": "<p>【问题2】（3分）</p><p>在面向对象的设计过程中，活动图（activity diagram）阐明了业务用例实现的工作流程。请用300字以内的文字给出活动图与流程图（flow chart）的三个主要区别。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>活动图和流程图的主要区别有以下三点：</p><p>（1）活动图是面向对象的，而流程图是面向过程的。</p><p>（2）活动图描述的是对象活动的顺序关系所遵循的规则，它着重表现的是系统的行为，而非系统的处理过程。流程图着重描述处理过程，它的主要控制结构是顺序、分支和循环，各个处理过程之间有严格的顺序和时间关系。</p><p>（3）活动图能够表示并发活动的情形，而流程图不能。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 61,
      "belong_page": 1,
      "question_id": 490310,
      "question_title": "<p>【问题2】（3分）</p><p>在面向对象的设计过程中，活动图（activity diagram）阐明了业务用例实现的工作流程。请用300字以内的文字给出活动图与流程图（flow chart）的三个主要区别。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 490308,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于系统设计的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某软件公司为知名制造企业开发一套网上销售系统，以增加销售的渠道和效率。在项目之初，项目组决定釆用面向对象的开发方法进行系统开发，并对系统的核心业务功能进行了分析，具体描述如下：</p><p>注册用户通过商品信息页面在线浏览商品，将需要购买的商品添加进购物车内， 点击“结算”按钮后开始录入订单信息。</p><p>用户在订单信息录入页面上选择支付方式，填写并确认收货人、收货地址和联系方式等信息。点击“提交订单”按钮后产生订单，并开始进行订单结算。</p><p>订单需要在30分钟内进行支付，否则会自动取消，用户也可以手工取消订单。</p><p>用户支付完成，经确认后，系统开始备货，扣除该商品可接单数量，并移除用户购物车中的所有商品资料。</p><p>生成订单表单，出货完毕，订单生效。为用户快递商品，等待用户接收。</p><p>用户签收商品，交易完成。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>活动图和流程图的主要区别有以下三点：</p><p>（1）活动图是面向对象的，而流程图是面向过程的。</p><p>（2）活动图描述的是对象活动的顺序关系所遵循的规则，它着重表现的是系统的行为，而非系统的处理过程。流程图着重描述处理过程，它的主要控制结构是顺序、分支和循环，各个处理过程之间有严格的顺序和时间关系。</p><p>（3）活动图能够表示并发活动的情形，而流程图不能。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 490311,
    "question_title": "<p>【问题3】（10分）</p><p>在面向对象的设计过程中，状态图（statechart diagram）描述了一个实体基于事件反应的动态行为。请根据题干描述，填写图2-1中的（a）～（e）空白，完成订单处理的状态图。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240403/1712073697642008.png\" title=\"1712073697642008.png\" alt=\"image.png\" width=\"574\" height=\"427\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（a）取消 （b）待结算 （c）大于30分钟 （d）订单生效 （e）用户签收</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 62,
      "belong_page": 1,
      "question_id": 490311,
      "question_title": "<p>【问题3】（10分）</p><p>在面向对象的设计过程中，状态图（statechart diagram）描述了一个实体基于事件反应的动态行为。请根据题干描述，填写图2-1中的（a）～（e）空白，完成订单处理的状态图。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240403/1712073697642008.png\" title=\"1712073697642008.png\" alt=\"image.png\" width=\"574\" height=\"427\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 490308,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于系统设计的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某软件公司为知名制造企业开发一套网上销售系统，以增加销售的渠道和效率。在项目之初，项目组决定釆用面向对象的开发方法进行系统开发，并对系统的核心业务功能进行了分析，具体描述如下：</p><p>注册用户通过商品信息页面在线浏览商品，将需要购买的商品添加进购物车内， 点击“结算”按钮后开始录入订单信息。</p><p>用户在订单信息录入页面上选择支付方式，填写并确认收货人、收货地址和联系方式等信息。点击“提交订单”按钮后产生订单，并开始进行订单结算。</p><p>订单需要在30分钟内进行支付，否则会自动取消，用户也可以手工取消订单。</p><p>用户支付完成，经确认后，系统开始备货，扣除该商品可接单数量，并移除用户购物车中的所有商品资料。</p><p>生成订单表单，出货完毕，订单生效。为用户快递商品，等待用户接收。</p><p>用户签收商品，交易完成。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（a）取消 （b）待结算 （c）大于30分钟 （d）订单生效 （e）用户签收</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 490319,
    "question_title": "<p>【问题1】（6分）</p><p>机票代理关系模式的修改，满足了用户对代理商机票价格查询的需求，提高了查询效率。但这种修改导致机票代理关系模式不满足3NF，会带来存储异常的问题。</p><p>1）请具体说明其问题，并举例说明。</p><p>2）这种存储异常会造成数据不一致，请给出解决该存储异常的方案。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>因为不满足3NF，具体问题有数据冗余和更新异常。</p><p>数据冗余：代理商名称和客服电话存在于两个关系模式，而且机票代理关系模式中，该代理商代理了多少个航班，则代理商名称和客服电话被重复存储多少次。</p><p>更新异常：当代理商名称或客服电话变更时，不仅需要修改代理商关系模式，还需要修改机票代理关系模式，否则会造成数据不一致。</p><p>可采用两种方案实现。</p><p>（1）通过程序实现，当修改代理商关系模式数据时，程序同步修改机票代理关系模式；</p><p>（2）通过触发器实现，在代理商关系模式上加修改触发器，当修改代理商关系模式数据时，程序同步修改机票代理关系模式。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 63,
      "belong_page": 1,
      "question_id": 490319,
      "question_title": "<p>【问题1】（6分）</p><p>机票代理关系模式的修改，满足了用户对代理商机票价格查询的需求，提高了查询效率。但这种修改导致机票代理关系模式不满足3NF，会带来存储异常的问题。</p><p>1）请具体说明其问题，并举例说明。</p><p>2）这种存储异常会造成数据不一致，请给出解决该存储异常的方案。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 490318,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于数据库设计的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某航空公司要开发一个订票信息处理系统，以方便各个代理商销售机票。开发小组经过设计，给出该系统的部分关系模式如下：</p><p>航班（航班编号，航空公司，起飞地，起飞时间，目的地，到达时间，剩余票数，票价）</p><p>代理商（代理商编号，代理商名称，客服电话，地址，负责人）</p><p>机票代理（代理商编号，航班编号，票价）</p><p>旅客（身份证号，姓名，性别，出生日期，电话）</p><p>购票（购票单号，身份证号，航班编号，搭乘日期，购票金额）</p><p>在提供给用户的界面上，其核心功能是当用户查询某航班时，将该航班所有的代理商信息及其优惠票价信息，返回给用户，方便用户购买价格优惠的机票。在实现过程中发现，要实现此功能，需要在代理商和机票代理两个关系模式上进行连接操作，性能很差。为此开发小组将机票代理关系模式进行了扩充，结果为：</p><p>机票代理（代理商编号，航班编号，代理商名称，客服电话，票价）</p><p>这样，用户在查找信息时只需对机票代理关系模式进行查询即可，提高了查询效率。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>因为不满足3NF，具体问题有数据冗余和更新异常。</p><p>数据冗余：代理商名称和客服电话存在于两个关系模式，而且机票代理关系模式中，该代理商代理了多少个航班，则代理商名称和客服电话被重复存储多少次。</p><p>更新异常：当代理商名称或客服电话变更时，不仅需要修改代理商关系模式，还需要修改机票代理关系模式，否则会造成数据不一致。</p><p>可采用两种方案实现。</p><p>（1）通过程序实现，当修改代理商关系模式数据时，程序同步修改机票代理关系模式；</p><p>（2）通过触发器实现，在代理商关系模式上加修改触发器，当修改代理商关系模式数据时，程序同步修改机票代理关系模式。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 490320,
    "question_title": "<p>【问题2】（9分）</p><p>在机票销售信息处理系统中，两个代理商的售票并发执行，可能产生的操作序列如表4-1所示。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240403/1712073911486131.png\" title=\"1712073911486131.png\" alt=\"image.png\" width=\"391\" height=\"383\"/><p>假设两个代理商执行之前，该航班仅剩1张机票。</p><p>1）请说明上述两个代理商操作的结果。</p><p>2）并发操作会带来数据不一致的问题，请具体说明3种问题。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>1）第一个代理商能够正确售票。第二个代理商查询剩余票数时正确，为l张机票但剩</p><p>余票数减一操作时出错，因为该机票已经被第一个代理商售出，此时第二个代理商无票可售。</p><p>2）并发操作会带来数据不一致问题具体为：丢失修改、读脏数据、不可重复读。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 64,
      "belong_page": 1,
      "question_id": 490320,
      "question_title": "<p>【问题2】（9分）</p><p>在机票销售信息处理系统中，两个代理商的售票并发执行，可能产生的操作序列如表4-1所示。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240403/1712073911486131.png\" title=\"1712073911486131.png\" alt=\"image.png\" width=\"391\" height=\"383\"/><p>假设两个代理商执行之前，该航班仅剩1张机票。</p><p>1）请说明上述两个代理商操作的结果。</p><p>2）并发操作会带来数据不一致的问题，请具体说明3种问题。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 490318,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于数据库设计的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某航空公司要开发一个订票信息处理系统，以方便各个代理商销售机票。开发小组经过设计，给出该系统的部分关系模式如下：</p><p>航班（航班编号，航空公司，起飞地，起飞时间，目的地，到达时间，剩余票数，票价）</p><p>代理商（代理商编号，代理商名称，客服电话，地址，负责人）</p><p>机票代理（代理商编号，航班编号，票价）</p><p>旅客（身份证号，姓名，性别，出生日期，电话）</p><p>购票（购票单号，身份证号，航班编号，搭乘日期，购票金额）</p><p>在提供给用户的界面上，其核心功能是当用户查询某航班时，将该航班所有的代理商信息及其优惠票价信息，返回给用户，方便用户购买价格优惠的机票。在实现过程中发现，要实现此功能，需要在代理商和机票代理两个关系模式上进行连接操作，性能很差。为此开发小组将机票代理关系模式进行了扩充，结果为：</p><p>机票代理（代理商编号，航班编号，代理商名称，客服电话，票价）</p><p>这样，用户在查找信息时只需对机票代理关系模式进行查询即可，提高了查询效率。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>1）第一个代理商能够正确售票。第二个代理商查询剩余票数时正确，为l张机票但剩</p><p>余票数减一操作时出错，因为该机票已经被第一个代理商售出，此时第二个代理商无票可售。</p><p>2）并发操作会带来数据不一致问题具体为：丢失修改、读脏数据、不可重复读。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 490321,
    "question_title": "<p>【问题3】（10分）</p><p>为了避免问题2中的问题，开发组使用库的读写锁机制，操作序列变为表4-2所示。<br/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; “表4-2&nbsp; 加入读写锁机制后，两个代理商可能的操作序列”</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240403/1712073950621810.png\" title=\"1712073950621810.png\" alt=\"image.png\" width=\"804\" height=\"442\"/><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p><p>1、请填写表中的空白项，并用150字以内的文字说明读写锁机制的缺点。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）加写锁 （2）加读锁 （3）加写锁 （4）被阻塞（5）得到通知 （6）加写锁</p><p>读写锁的缺点：读写锁会造成读写操作的互相阻塞，实际使得用户的操作被串行化，降低了系统的并发性能。设计不好的情况下，可能会出现资源的交叉锁定，形成死锁。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 65,
      "belong_page": 1,
      "question_id": 490321,
      "question_title": "<p>【问题3】（10分）</p><p>为了避免问题2中的问题，开发组使用库的读写锁机制，操作序列变为表4-2所示。<br/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; “表4-2&nbsp; 加入读写锁机制后，两个代理商可能的操作序列”</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240403/1712073950621810.png\" title=\"1712073950621810.png\" alt=\"image.png\" width=\"804\" height=\"442\"/><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p><p>1、请填写表中的空白项，并用150字以内的文字说明读写锁机制的缺点。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 490318,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于数据库设计的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某航空公司要开发一个订票信息处理系统，以方便各个代理商销售机票。开发小组经过设计，给出该系统的部分关系模式如下：</p><p>航班（航班编号，航空公司，起飞地，起飞时间，目的地，到达时间，剩余票数，票价）</p><p>代理商（代理商编号，代理商名称，客服电话，地址，负责人）</p><p>机票代理（代理商编号，航班编号，票价）</p><p>旅客（身份证号，姓名，性别，出生日期，电话）</p><p>购票（购票单号，身份证号，航班编号，搭乘日期，购票金额）</p><p>在提供给用户的界面上，其核心功能是当用户查询某航班时，将该航班所有的代理商信息及其优惠票价信息，返回给用户，方便用户购买价格优惠的机票。在实现过程中发现，要实现此功能，需要在代理商和机票代理两个关系模式上进行连接操作，性能很差。为此开发小组将机票代理关系模式进行了扩充，结果为：</p><p>机票代理（代理商编号，航班编号，代理商名称，客服电话，票价）</p><p>这样，用户在查找信息时只需对机票代理关系模式进行查询即可，提高了查询效率。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）加写锁 （2）加读锁 （3）加写锁 （4）被阻塞（5）得到通知 （6）加写锁</p><p>读写锁的缺点：读写锁会造成读写操作的互相阻塞，实际使得用户的操作被串行化，降低了系统的并发性能。设计不好的情况下，可能会出现资源的交叉锁定，形成死锁。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 491778,
    "question_title": "<p>【问题1】（12分）</p><p>在架构评估过程中，质量属性效用树(utility tree)是对系统质量属性进行识别和优先级排序的重要工具。请给出合适的质量属性，填入图1中(1)、(2)空白处；并选择题干描述中的(a)～(k)，将恰当的序号填入(3)～(6)空白处，完成该系统的效用树。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240418/1713394035597834.png\" title=\"1713394035597834.png\" alt=\"image.png\" width=\"494\" height=\"624\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240418/1713394051453633.png\" title=\"1713394051453633.png\" alt=\"image.png\" width=\"407\" height=\"183\"/>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 66,
      "belong_page": 1,
      "question_id": 491778,
      "question_title": "<p>【问题1】（12分）</p><p>在架构评估过程中，质量属性效用树(utility tree)是对系统质量属性进行识别和优先级排序的重要工具。请给出合适的质量属性，填入图1中(1)、(2)空白处；并选择题干描述中的(a)～(k)，将恰当的序号填入(3)～(6)空白处，完成该系统的效用树。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240418/1713394035597834.png\" title=\"1713394035597834.png\" alt=\"image.png\" width=\"494\" height=\"624\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 491777,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件架构评估的说明，回答下列问题。</p><p>【说明】</p><p>某市机关后勤服务集团拟开发一套车辆管理与监控系统，以提高车辆管理的效率和准确性，防止公车私用。在系统需求分析与架构设计阶段，用户提出的部分需求和关键质量属性场景如下：</p><p>(a)系统传输信息的加密程度将影响系统的安全性；</p><p>(b)正常负载情况下，系统必须在1秒内对用户的车辆查询请求进行响应；</p><p>(c)系统能够抵御99.999%的黑客攻击；</p><p>(d)系统的密码必须同时包括字母、数字与特殊字符，长度不少于8个字符；</p><p>(e)对查询结果准确性的要求将同时影响系统的易用性和性能；</p><p>(f)北斗信号失效时，系统需要在10秒钟内启用5G基站定位作为备用定位手段；</p><p>(g)在系统升级时，需要保证在1个月内添加一个新的备件管理功能；</p><p>(h)查询过程中涉及到的车辆实时定位需要保证20米以内的精度误差；</p><p>(i)车辆过于频繁地发送位置信息可能造成系统资源不足；</p><p>(j)系统主站点断电后，需要在3秒内将请求重定向到备用站点；</p><p>(k)更改系统的Web界面接口必须在1周内完成；</p><p>在对系统需求和质量属性场景进行分析的基础上，系统的架构师给出了三个候选的架构设计方案。开发部门目前正在组织系统开发的相关人员对系统架构进行评估。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240418/1713394051453633.png\" title=\"1713394051453633.png\" alt=\"image.png\" width=\"407\" height=\"183\"/>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 491783,
    "question_title": "<p>【问题2】（10分）</p><p>采用面向对象方法对过程进行分析，常常以序列图来建模。请简要说明在UML2.0中，序列图中存在哪些元素。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）对象，系统中参与交互的元素。</p><p>（2）参与者，系统之外参与交互的元素。</p><p>（3）生命线，由对象或参与者延伸出的一条时间线，代表该个体在交互过程中的状态（虚线表示挂起，空心矩形表示激活）。</p><p>（4）消息，是对象之间的一种通信，它可以传递信息并期望相关的动作被执行。</p><p>（5）序列片段，为序列图增加一定程度的处理逻辑。这是UML2.0新增的元素。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 67,
      "belong_page": 1,
      "question_id": 491783,
      "question_title": "<p>【问题2】（10分）</p><p>采用面向对象方法对过程进行分析，常常以序列图来建模。请简要说明在UML2.0中，序列图中存在哪些元素。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 491781,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于软件系统设计与建模的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某医院拟委托软件公司开发一套预约挂号管理系统，以便为患者提供更好的就医体验，为医院提供更加科学的预约管理。本系统的主要功能描述如下：(a)注册登录，(b)信息浏览，(c)账号管理，(d)预约挂号，(e)查询与取消预约，(f)号源管理，(g)报告查询，(h)预约管理，(i)报表管理和(j)科室管理等。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）对象，系统中参与交互的元素。</p><p>（2）参与者，系统之外参与交互的元素。</p><p>（3）生命线，由对象或参与者延伸出的一条时间线，代表该个体在交互过程中的状态（虚线表示挂起，空心矩形表示激活）。</p><p>（4）消息，是对象之间的一种通信，它可以传递信息并期望相关的动作被执行。</p><p>（5）序列片段，为序列图增加一定程度的处理逻辑。这是UML2.0新增的元素。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 491786,
    "question_title": "<p>【问题1】（9分）</p><p>请用200字以内文字说明获取构件的方法有哪几种?开发构件通常采用哪几种策略?并列举出两种主流构件标准。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>基于构件的软件开发中，可以通过不同的途径来获取构件，主要包括以下4种方法：</p><p>（1）从现有构件中获得符合要求的构件，直接使用或做适应性修改，得到可复用的构件；</p><p>（2）通过遗留工程（Legacy Engineering），将具有潜在复用价值的软件提取出来，得到可复用的构件；</p><p>（3）从市场上购买现成的商业构件，即COTS （Commercial Off-The-Shell）构件；</p><p>（4）开发新的符合要求的构件。</p><p>开发构件通常采取3种策略：</p><p>（1）分区（partitioning）：指的是将问题情景的空间分割成几乎可以独立研究的部分；</p><p>（2）抽象（abstraction）：是对在给定实践内执行指定计算的软/硬件单元的一种抽象；</p><p>（3）分割（segmentation）；是将结构引入构件的行为，支持对行为性质进行时序推理。</p><p>当前主流构件标准有：</p><p>（1）CORBA：由OMG（对象管理集团）制定；</p><p>（2）COM/DCOM：由Microsoft制定；</p><p>（3）EJB：由SUN的Java企业Bean制定。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 68,
      "belong_page": 1,
      "question_id": 491786,
      "question_title": "<p>【问题1】（9分）</p><p>请用200字以内文字说明获取构件的方法有哪几种?开发构件通常采用哪几种策略?并列举出两种主流构件标准。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 491785,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三（25分）</p><p>请详细阅读有关嵌入式构件设计方面的说明，回答下列问题。</p><p>【说明】</p><p>构件（component）也称为组件，是一个功能相对独立的具有可复用价值的软硬件单元。近年来，构件技术正在逐步应用于大型嵌入式系统的软件设计。某公司长期从事飞行器电子设备研制工作，已积累了大量成熟软件。但是，由于当初管理和设计等原因，公司的大量软件不能被复用，严重影响了公司后续发展。公司领导层高度重视软件复用问题，明确提出了要将本公司的成熟软件进行改造，建立公司可复用的软件构件库，以提升开发效率、降低成本。公司领导层决定将此项任务交给技术部门的王工程师负责组织实施。两个月后，王工程师经过调研、梳理和实验，提交了一份实施方案。此方案得到了公司领导层的肯定，但在实施过程中遇到了许多困难，主要表现在公司软件架构的变更和构件抽取的界面等方面。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>基于构件的软件开发中，可以通过不同的途径来获取构件，主要包括以下4种方法：</p><p>（1）从现有构件中获得符合要求的构件，直接使用或做适应性修改，得到可复用的构件；</p><p>（2）通过遗留工程（Legacy Engineering），将具有潜在复用价值的软件提取出来，得到可复用的构件；</p><p>（3）从市场上购买现成的商业构件，即COTS （Commercial Off-The-Shell）构件；</p><p>（4）开发新的符合要求的构件。</p><p>开发构件通常采取3种策略：</p><p>（1）分区（partitioning）：指的是将问题情景的空间分割成几乎可以独立研究的部分；</p><p>（2）抽象（abstraction）：是对在给定实践内执行指定计算的软/硬件单元的一种抽象；</p><p>（3）分割（segmentation）；是将结构引入构件的行为，支持对行为性质进行时序推理。</p><p>当前主流构件标准有：</p><p>（1）CORBA：由OMG（对象管理集团）制定；</p><p>（2）COM/DCOM：由Microsoft制定；</p><p>（3）EJB：由SUN的Java企业Bean制定。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 491787,
    "question_title": "<p>【问题2】（6分）</p><p>由于该公司已具备大量的成熟软件，王工程师此次的主要工作就是采用遗留工程（Legacy Engineering）方法，将具有潜在复用价值的软件提取出来，得到可复用的构件。因此，在设计软件时与原开发技术人员产生了重大意见分歧，主要分歧焦点在于大家对构件概念理解上的差异。请根据你对构件的理解，判断下表给出的有关构件的说法是否正确。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240418/1713394300324797.png\" title=\"1713394300324797.png\" alt=\"image.png\" width=\"548\" height=\"697\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）√ &nbsp;&nbsp;&nbsp;（2）× &nbsp;&nbsp;&nbsp;（3）× &nbsp;&nbsp;&nbsp;（4）√ &nbsp;&nbsp;&nbsp;（5）× &nbsp;&nbsp;&nbsp;（6）×</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 69,
      "belong_page": 1,
      "question_id": 491787,
      "question_title": "<p>【问题2】（6分）</p><p>由于该公司已具备大量的成熟软件，王工程师此次的主要工作就是采用遗留工程（Legacy Engineering）方法，将具有潜在复用价值的软件提取出来，得到可复用的构件。因此，在设计软件时与原开发技术人员产生了重大意见分歧，主要分歧焦点在于大家对构件概念理解上的差异。请根据你对构件的理解，判断下表给出的有关构件的说法是否正确。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240418/1713394300324797.png\" title=\"1713394300324797.png\" alt=\"image.png\" width=\"548\" height=\"697\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 491785,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三（25分）</p><p>请详细阅读有关嵌入式构件设计方面的说明，回答下列问题。</p><p>【说明】</p><p>构件（component）也称为组件，是一个功能相对独立的具有可复用价值的软硬件单元。近年来，构件技术正在逐步应用于大型嵌入式系统的软件设计。某公司长期从事飞行器电子设备研制工作，已积累了大量成熟软件。但是，由于当初管理和设计等原因，公司的大量软件不能被复用，严重影响了公司后续发展。公司领导层高度重视软件复用问题，明确提出了要将本公司的成熟软件进行改造，建立公司可复用的软件构件库，以提升开发效率、降低成本。公司领导层决定将此项任务交给技术部门的王工程师负责组织实施。两个月后，王工程师经过调研、梳理和实验，提交了一份实施方案。此方案得到了公司领导层的肯定，但在实施过程中遇到了许多困难，主要表现在公司软件架构的变更和构件抽取的界面等方面。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）√ &nbsp;&nbsp;&nbsp;（2）× &nbsp;&nbsp;&nbsp;（3）× &nbsp;&nbsp;&nbsp;（4）√ &nbsp;&nbsp;&nbsp;（5）× &nbsp;&nbsp;&nbsp;（6）×</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 491788,
    "question_title": "<p>【问题3】（10分）</p><p>王工程师的实施方案指出：本公司的大部分产品是为用户提供标准计算平台的，而此平台中的主要开发工作是为嵌入式操作系统研制板级支持软件（BSP）。为了提高BSP软件的复用，应首先开展BSP构件的开发，且构件架构应符合国外GENESYS规范定义的嵌入式系统架构风格。下图给出了架构风格定义的构件通用接口，其中：链接接口（LIF）是构件对外提供的功能服务接口；局部接口建立了构件和它的局部环境的连接，如传感器、作动器或人机接口；技术相关接口（TDI）提供了查看构件内部、观察构件的内部变量的手段，如诊断等；技术无关接口（TII）用来在运行时配置、复位、重启构件的接口。现需要针对BSP中常用的RS-232串行驱动程序设计一个可复用的软构件，请说明该软构件四类接口的具体功能。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240418/1713394343723681.png\" title=\"1713394343723681.png\" alt=\"image.png\" width=\"590\" height=\"381\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>RS-232驱动程序主要完成对RS-232芯片的初始化，实现RS-232数据发送、接收和控制等功能。依据GENESYS规范定义的构件接口含义，RS-232驱动程序构件的接口定义如下：</p><p>（1）链接接口</p><p>RS-232驱动构件的使用者是上层的操作系统或应用软件，本构件应该给他们提供串行接口的数据发送、数据接收服务。因此，链接接口至少包括以下功能服务：</p><p>●Send（）：处理机中的程序向RS-232芯片输出数据；</p><p>●Receive（）：处理机中的程序通过RS-232芯片从外部接收数据；</p><p>●Init232（）：初始化RS-232芯片。</p><p>（2）局部接口</p><p>RS-232驱动构件的局部接口应该是RS-232芯片为编程提供的各类寄存器和CPU对外围芯片的支持，此接口与硬件紧密相关。就RS-232芯片而言，局部接口至少包括以下功能服务：</p><p>●Intconnect（）：将RS-232芯片的外部中断向量连接到CPU；</p><p>●Read（）：从RS-232芯片中读取寄存器的内容（包括控制、状态类寄存器和数据输入寄存器）；</p><p>●Write（）：将控制信息或输出的数据写入RS-232芯片的相应寄存器。</p><p>（3）技术相关接口</p><p>RS-232驱动构件的技术相关接口应该是RS-232驱动构件为维护人员提供的芯片诊断接口，此接口与硬件和应用紧密相关。就RS-232芯片使用而言，技术相关接口至少包括以下诊断功能服务：</p><p>●Datacheck（）：诊断数据传输校验的错误。</p><p>（4）技术无关接口</p><p>RS-232驱动构件的技术无关接口应该是RS-232驱动构件为编程人员提供的芯片初始化或运行时的配置接口。技术无关接口至少包括以下功能服务：</p><p>●Reset（）：RS-232芯片或驱动构件复位；</p><p>●Restart（）：RS-232芯片或驱动构件重启动；</p><p>●Rateconfigure（）：配置、重新配置RS-232传输速率。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 70,
      "belong_page": 1,
      "question_id": 491788,
      "question_title": "<p>【问题3】（10分）</p><p>王工程师的实施方案指出：本公司的大部分产品是为用户提供标准计算平台的，而此平台中的主要开发工作是为嵌入式操作系统研制板级支持软件（BSP）。为了提高BSP软件的复用，应首先开展BSP构件的开发，且构件架构应符合国外GENESYS规范定义的嵌入式系统架构风格。下图给出了架构风格定义的构件通用接口，其中：链接接口（LIF）是构件对外提供的功能服务接口；局部接口建立了构件和它的局部环境的连接，如传感器、作动器或人机接口；技术相关接口（TDI）提供了查看构件内部、观察构件的内部变量的手段，如诊断等；技术无关接口（TII）用来在运行时配置、复位、重启构件的接口。现需要针对BSP中常用的RS-232串行驱动程序设计一个可复用的软构件，请说明该软构件四类接口的具体功能。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240418/1713394343723681.png\" title=\"1713394343723681.png\" alt=\"image.png\" width=\"590\" height=\"381\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 491785,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三（25分）</p><p>请详细阅读有关嵌入式构件设计方面的说明，回答下列问题。</p><p>【说明】</p><p>构件（component）也称为组件，是一个功能相对独立的具有可复用价值的软硬件单元。近年来，构件技术正在逐步应用于大型嵌入式系统的软件设计。某公司长期从事飞行器电子设备研制工作，已积累了大量成熟软件。但是，由于当初管理和设计等原因，公司的大量软件不能被复用，严重影响了公司后续发展。公司领导层高度重视软件复用问题，明确提出了要将本公司的成熟软件进行改造，建立公司可复用的软件构件库，以提升开发效率、降低成本。公司领导层决定将此项任务交给技术部门的王工程师负责组织实施。两个月后，王工程师经过调研、梳理和实验，提交了一份实施方案。此方案得到了公司领导层的肯定，但在实施过程中遇到了许多困难，主要表现在公司软件架构的变更和构件抽取的界面等方面。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>RS-232驱动程序主要完成对RS-232芯片的初始化，实现RS-232数据发送、接收和控制等功能。依据GENESYS规范定义的构件接口含义，RS-232驱动程序构件的接口定义如下：</p><p>（1）链接接口</p><p>RS-232驱动构件的使用者是上层的操作系统或应用软件，本构件应该给他们提供串行接口的数据发送、数据接收服务。因此，链接接口至少包括以下功能服务：</p><p>●Send（）：处理机中的程序向RS-232芯片输出数据；</p><p>●Receive（）：处理机中的程序通过RS-232芯片从外部接收数据；</p><p>●Init232（）：初始化RS-232芯片。</p><p>（2）局部接口</p><p>RS-232驱动构件的局部接口应该是RS-232芯片为编程提供的各类寄存器和CPU对外围芯片的支持，此接口与硬件紧密相关。就RS-232芯片而言，局部接口至少包括以下功能服务：</p><p>●Intconnect（）：将RS-232芯片的外部中断向量连接到CPU；</p><p>●Read（）：从RS-232芯片中读取寄存器的内容（包括控制、状态类寄存器和数据输入寄存器）；</p><p>●Write（）：将控制信息或输出的数据写入RS-232芯片的相应寄存器。</p><p>（3）技术相关接口</p><p>RS-232驱动构件的技术相关接口应该是RS-232驱动构件为维护人员提供的芯片诊断接口，此接口与硬件和应用紧密相关。就RS-232芯片使用而言，技术相关接口至少包括以下诊断功能服务：</p><p>●Datacheck（）：诊断数据传输校验的错误。</p><p>（4）技术无关接口</p><p>RS-232驱动构件的技术无关接口应该是RS-232驱动构件为编程人员提供的芯片初始化或运行时的配置接口。技术无关接口至少包括以下功能服务：</p><p>●Reset（）：RS-232芯片或驱动构件复位；</p><p>●Restart（）：RS-232芯片或驱动构件重启动；</p><p>●Rateconfigure（）：配置、重新配置RS-232传输速率。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 491790,
    "question_title": "<p>【问题1】（8分）</p><p>请从设计难度、数据冗余程度、数据架构、应用扩展性等4个方面对关系型数据库管理系统和文件系统两种数据存储方式进行比较，填写下表中(1)～(4)。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240418/1713394400674582.png\" title=\"1713394400674582.png\" alt=\"image.png\" width=\"584\" height=\"154\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）数据结构需要符合某些模式，设计难度较大</p><p>（2）可能在多个文件中复制相同的数据属性，数据冗余较大</p><p>（3）以应用系统为中心组织、管理数据</p><p>（4）数据独立于应用系统，很容易在不同的应用系统之间共享数据</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 71,
      "belong_page": 1,
      "question_id": 491790,
      "question_title": "<p>【问题1】（8分）</p><p>请从设计难度、数据冗余程度、数据架构、应用扩展性等4个方面对关系型数据库管理系统和文件系统两种数据存储方式进行比较，填写下表中(1)～(4)。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240418/1713394400674582.png\" title=\"1713394400674582.png\" alt=\"image.png\" width=\"584\" height=\"154\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 491789,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于应用系统数据架构的说明，回答下列问题。</p><p>【说明】</p><p>某软件公司计划开发一套全新的办公自动化系统，旨在提高企业运营效率。该系统将涵盖多个关键功能模块，包括但不限于公文办理、员工管理、考勤、报销审批等。通过自动化和智能化的方式，该系统将帮助企业简化日常办公流程，减少人工干预，并提高整体工作效率。此外，该系统还将提供易于使用的界面和强大的数据分析功能，以支持企业做出更明智的决策。随着企业规模的扩大和业务需求的增长，该系统也将能够进行无缝扩展和优化，以满足不断变化的市场需求。</p><p>在对系统进行数据架构设计时，公司项目组的架构师王工主张采用文件系统进行数据管理，原因是目前公司客户和商品数量不大，且系统功能较为简单，采用文件系统进行数据管理简单直观，开发周期短。架构师李工则建议采用数据库进行数据管理，原因在于公司目前正处在高速扩张期，虽然目前的客户和商品数量不大，但随着公司快速发展，需要管理的数据必然飞速膨胀，采用数据库作为数据存储层，系统的扩展性更强，并能够对未来可能增加的复杂业务提供有效支持。经过讨论，项目组初步采纳了李工的意见，决定采用数据库存储客户数据，并针对业务特征对系统性能进行优化。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）数据结构需要符合某些模式，设计难度较大</p><p>（2）可能在多个文件中复制相同的数据属性，数据冗余较大</p><p>（3）以应用系统为中心组织、管理数据</p><p>（4）数据独立于应用系统，很容易在不同的应用系统之间共享数据</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 491791,
    "question_title": "<p>【问题2】（8分）</p><p>对系统的核心业务需求进行认真分析后，公司的资深架构师张工提出采用文档数据库代替日常使用的关系数据库。请首先分析比较文档数据库和关系数据库在数据模型、读写性能、模式扩展性、数据一致性等方面的差异，填写下表4-2中(1)～(4)的空白。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240418/1713394430526076.png\" title=\"1713394430526076.png\" alt=\"image.png\" width=\"618\" height=\"213\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）文档模型</p><p>（2）性能相对较低，特别是关联查询多时</p><p>（3）模式自由，可以随时增加字段或者嵌套内部对象</p><p>（4）欠缺事务支持，数据一致性差</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 72,
      "belong_page": 1,
      "question_id": 491791,
      "question_title": "<p>【问题2】（8分）</p><p>对系统的核心业务需求进行认真分析后，公司的资深架构师张工提出采用文档数据库代替日常使用的关系数据库。请首先分析比较文档数据库和关系数据库在数据模型、读写性能、模式扩展性、数据一致性等方面的差异，填写下表4-2中(1)～(4)的空白。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240418/1713394430526076.png\" title=\"1713394430526076.png\" alt=\"image.png\" width=\"618\" height=\"213\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 491789,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于应用系统数据架构的说明，回答下列问题。</p><p>【说明】</p><p>某软件公司计划开发一套全新的办公自动化系统，旨在提高企业运营效率。该系统将涵盖多个关键功能模块，包括但不限于公文办理、员工管理、考勤、报销审批等。通过自动化和智能化的方式，该系统将帮助企业简化日常办公流程，减少人工干预，并提高整体工作效率。此外，该系统还将提供易于使用的界面和强大的数据分析功能，以支持企业做出更明智的决策。随着企业规模的扩大和业务需求的增长，该系统也将能够进行无缝扩展和优化，以满足不断变化的市场需求。</p><p>在对系统进行数据架构设计时，公司项目组的架构师王工主张采用文件系统进行数据管理，原因是目前公司客户和商品数量不大，且系统功能较为简单，采用文件系统进行数据管理简单直观，开发周期短。架构师李工则建议采用数据库进行数据管理，原因在于公司目前正处在高速扩张期，虽然目前的客户和商品数量不大，但随着公司快速发展，需要管理的数据必然飞速膨胀，采用数据库作为数据存储层，系统的扩展性更强，并能够对未来可能增加的复杂业务提供有效支持。经过讨论，项目组初步采纳了李工的意见，决定采用数据库存储客户数据，并针对业务特征对系统性能进行优化。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）文档模型</p><p>（2）性能相对较低，特别是关联查询多时</p><p>（3）模式自由，可以随时增加字段或者嵌套内部对象</p><p>（4）欠缺事务支持，数据一致性差</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 491792,
    "question_title": "<p>【问题3】（9分）</p><p>经过讨论，最终采用了MongoDB作为系统的数据库。MongoDB采用JSON格式来存储数据，请用300字以内的文字说明JSON在数据存储、修改和传输方面的优点。&nbsp;</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>JSON（JavaScript Object Notation）在数据存储、修改和传输方面具有显著的优势。首先，JSON的语法简洁明了，易于阅读和编写，降低了数据存储的复杂性。其次，JSON支持多种数据类型，包括字符串、数字、布尔值、数组和对象，这使得它可以灵活地表示复杂的数据结构。此外，JSON允许空值和可选字段，增加了数据的灵活性，缩小了空间占用。</p><p>在修改方面，由于基于文本的格式，JSON文档可以直接被程序解析和修改。JSON也支持使用文本编辑器进行查看和编辑，这对于开发调试非常有用。</p><p>在传输方面，JSON的格式紧凑，易于传输和存储。同时，JSON也支持跨平台和跨语言的数据交换，使得在不同的系统和编程语言之间进行数据传输变得简单。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 73,
      "belong_page": 1,
      "question_id": 491792,
      "question_title": "<p>【问题3】（9分）</p><p>经过讨论，最终采用了MongoDB作为系统的数据库。MongoDB采用JSON格式来存储数据，请用300字以内的文字说明JSON在数据存储、修改和传输方面的优点。&nbsp;</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 491789,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于应用系统数据架构的说明，回答下列问题。</p><p>【说明】</p><p>某软件公司计划开发一套全新的办公自动化系统，旨在提高企业运营效率。该系统将涵盖多个关键功能模块，包括但不限于公文办理、员工管理、考勤、报销审批等。通过自动化和智能化的方式，该系统将帮助企业简化日常办公流程，减少人工干预，并提高整体工作效率。此外，该系统还将提供易于使用的界面和强大的数据分析功能，以支持企业做出更明智的决策。随着企业规模的扩大和业务需求的增长，该系统也将能够进行无缝扩展和优化，以满足不断变化的市场需求。</p><p>在对系统进行数据架构设计时，公司项目组的架构师王工主张采用文件系统进行数据管理，原因是目前公司客户和商品数量不大，且系统功能较为简单，采用文件系统进行数据管理简单直观，开发周期短。架构师李工则建议采用数据库进行数据管理，原因在于公司目前正处在高速扩张期，虽然目前的客户和商品数量不大，但随着公司快速发展，需要管理的数据必然飞速膨胀，采用数据库作为数据存储层，系统的扩展性更强，并能够对未来可能增加的复杂业务提供有效支持。经过讨论，项目组初步采纳了李工的意见，决定采用数据库存储客户数据，并针对业务特征对系统性能进行优化。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>JSON（JavaScript Object Notation）在数据存储、修改和传输方面具有显著的优势。首先，JSON的语法简洁明了，易于阅读和编写，降低了数据存储的复杂性。其次，JSON支持多种数据类型，包括字符串、数字、布尔值、数组和对象，这使得它可以灵活地表示复杂的数据结构。此外，JSON允许空值和可选字段，增加了数据的灵活性，缩小了空间占用。</p><p>在修改方面，由于基于文本的格式，JSON文档可以直接被程序解析和修改。JSON也支持使用文本编辑器进行查看和编辑，这对于开发调试非常有用。</p><p>在传输方面，JSON的格式紧凑，易于传输和存储。同时，JSON也支持跨平台和跨语言的数据交换，使得在不同的系统和编程语言之间进行数据传输变得简单。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 491795,
    "question_title": "<p>【问题1】（5分）</p><p>请用300以内文字说明什么是数据持久层，使用数据持久层能够为项目开发带来哪些好处？</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>数据持久层是根据分层思想，通过建立逻辑数据操作接口，采取一定的对象/关系映射策略，隐藏数据库访问代码细节，向业务开发人员提供透明的对象持久化操作机制。</p><p>能够为项目开发带来的好处：</p><p>（1）分离业务逻辑层和数据层，降低两者之间的耦合；</p><p>（2）通过对象/关系映射向业务逻辑提供面向对象的数据访问；</p><p>（3）简化数据层访问，隐藏数据库链接、数据读写命令和事务管理细节。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 74,
      "belong_page": 1,
      "question_id": 491795,
      "question_title": "<p>【问题1】（5分）</p><p>请用300以内文字说明什么是数据持久层，使用数据持久层能够为项目开发带来哪些好处？</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 491794,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web系统架构的设计的叙述，回答下列问题。</p><p>【说明】</p><p>某信息技术公司计划开发一套在线投票系统，用于为市场调研、信息调查和销售反馈等业务提供服务。该系统计划通过大量宣传和奖品鼓励的方式快速积累用户，当用户规模扩大到一定程度时，开始联系相关企业提供信息服务，并按照信息服务种类和用户投票数量收取费用。</p><p>为了降低开发成本和提高开发效率，项目组经过讨论后决定采用轻量级Java EE开发框架设计系统应用架构。在应用架构设计中，除了满足系统主要功能需求，还需要考虑的因素包括：</p><p>1.项目开发采用Oracle数据库存储数据，但将来可能移植到其他数据库平台；</p><p>2.系统开发过程中尽可能降低或者消除SQL语句开发的工作量；</p><p>3.投票系统中数据之间的关系复杂，需要支持数据对象的聚合和继承等关系。</p><p>项目组基于MVC模式设计出了投票系统的架构，包括表示层、业务逻辑层、数据持久层和数据层。在具体讨论数据持久层采用哪种技术方案时，老王建议采用成熟的客户端库函数，小李则认为ORM更加灵活，更适合作为投票系统数据持久层开发技术。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>数据持久层是根据分层思想，通过建立逻辑数据操作接口，采取一定的对象/关系映射策略，隐藏数据库访问代码细节，向业务开发人员提供透明的对象持久化操作机制。</p><p>能够为项目开发带来的好处：</p><p>（1）分离业务逻辑层和数据层，降低两者之间的耦合；</p><p>（2）通过对象/关系映射向业务逻辑提供面向对象的数据访问；</p><p>（3）简化数据层访问，隐藏数据库链接、数据读写命令和事务管理细节。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 491796,
    "question_title": "<p>【问题2】（12分）</p><p>针对在线投票系统的实际应用需求和要求，项目组应选用哪种技术实现数据持久层?请用300字以内文字说明其采用两种技术的优缺点。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>项目组应该采用ORM。</p><p>Oracle客户端的库函数访问接口（Oracle Call Interface，OCI）的优缺点：</p><p>优点：</p><p>（1）直接与数据库交互，性能高；</p><p>（2）隐藏服务端配置，部署灵活；</p><p>（3）支持加密，安全性高。</p><p>缺点：</p><p>（1）需要深入了解数据库知识，学习成本高；</p><p>（2）硬编码，维护成本高；</p><p>（3）移植困难。</p><p>对象关系映射（Object Relational Mapping，ORM）技术的优缺点：</p><p>优点：</p><p>（1）易用性高，降低了程序员数据库知识的要求；</p><p>（2）抽象层，隐藏了数据库底层结构和SQL语句；</p><p>（3）易移植，支持多种数据库系统。</p><p>缺点：</p><p>（1）数据库访问有额外开销，性能低；</p><p>（2）支持复杂查询困难；</p><p>（3）程序员易产生依赖，忽视数据库底层知识。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 75,
      "belong_page": 1,
      "question_id": 491796,
      "question_title": "<p>【问题2】（12分）</p><p>针对在线投票系统的实际应用需求和要求，项目组应选用哪种技术实现数据持久层?请用300字以内文字说明其采用两种技术的优缺点。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 491794,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web系统架构的设计的叙述，回答下列问题。</p><p>【说明】</p><p>某信息技术公司计划开发一套在线投票系统，用于为市场调研、信息调查和销售反馈等业务提供服务。该系统计划通过大量宣传和奖品鼓励的方式快速积累用户，当用户规模扩大到一定程度时，开始联系相关企业提供信息服务，并按照信息服务种类和用户投票数量收取费用。</p><p>为了降低开发成本和提高开发效率，项目组经过讨论后决定采用轻量级Java EE开发框架设计系统应用架构。在应用架构设计中，除了满足系统主要功能需求，还需要考虑的因素包括：</p><p>1.项目开发采用Oracle数据库存储数据，但将来可能移植到其他数据库平台；</p><p>2.系统开发过程中尽可能降低或者消除SQL语句开发的工作量；</p><p>3.投票系统中数据之间的关系复杂，需要支持数据对象的聚合和继承等关系。</p><p>项目组基于MVC模式设计出了投票系统的架构，包括表示层、业务逻辑层、数据持久层和数据层。在具体讨论数据持久层采用哪种技术方案时，老王建议采用成熟的客户端库函数，小李则认为ORM更加灵活，更适合作为投票系统数据持久层开发技术。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>项目组应该采用ORM。</p><p>Oracle客户端的库函数访问接口（Oracle Call Interface，OCI）的优缺点：</p><p>优点：</p><p>（1）直接与数据库交互，性能高；</p><p>（2）隐藏服务端配置，部署灵活；</p><p>（3）支持加密，安全性高。</p><p>缺点：</p><p>（1）需要深入了解数据库知识，学习成本高；</p><p>（2）硬编码，维护成本高；</p><p>（3）移植困难。</p><p>对象关系映射（Object Relational Mapping，ORM）技术的优缺点：</p><p>优点：</p><p>（1）易用性高，降低了程序员数据库知识的要求；</p><p>（2）抽象层，隐藏了数据库底层结构和SQL语句；</p><p>（3）易移植，支持多种数据库系统。</p><p>缺点：</p><p>（1）数据库访问有额外开销，性能低；</p><p>（2）支持复杂查询困难；</p><p>（3）程序员易产生依赖，忽视数据库底层知识。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 491797,
    "question_title": "<p>【问题3】（8分）</p><p>ORM技术中，主流有Hibernate和MyBatis/MyBatis Plus，请用200以内文字说明他们的区别。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>①开发方面：Hibernate开发中，SQL语句已经被封装，直接可以使用；MyBatis属于半自动化，SQL需要手工完成。</p><p>②SQL优化方面：对复杂查询的SQL语句进行人工调优的时候，MyBatis更方便。</p><p>③可移植性方面：Hibernate使用时自动生成相应的SQL语句，因此具备良好的数据库移植性，而MyBatis中手动编写的SQL语句需要针对不同厂商的数据库进行修改。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 76,
      "belong_page": 1,
      "question_id": 491797,
      "question_title": "<p>【问题3】（8分）</p><p>ORM技术中，主流有Hibernate和MyBatis/MyBatis Plus，请用200以内文字说明他们的区别。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 491794,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web系统架构的设计的叙述，回答下列问题。</p><p>【说明】</p><p>某信息技术公司计划开发一套在线投票系统，用于为市场调研、信息调查和销售反馈等业务提供服务。该系统计划通过大量宣传和奖品鼓励的方式快速积累用户，当用户规模扩大到一定程度时，开始联系相关企业提供信息服务，并按照信息服务种类和用户投票数量收取费用。</p><p>为了降低开发成本和提高开发效率，项目组经过讨论后决定采用轻量级Java EE开发框架设计系统应用架构。在应用架构设计中，除了满足系统主要功能需求，还需要考虑的因素包括：</p><p>1.项目开发采用Oracle数据库存储数据，但将来可能移植到其他数据库平台；</p><p>2.系统开发过程中尽可能降低或者消除SQL语句开发的工作量；</p><p>3.投票系统中数据之间的关系复杂，需要支持数据对象的聚合和继承等关系。</p><p>项目组基于MVC模式设计出了投票系统的架构，包括表示层、业务逻辑层、数据持久层和数据层。在具体讨论数据持久层采用哪种技术方案时，老王建议采用成熟的客户端库函数，小李则认为ORM更加灵活，更适合作为投票系统数据持久层开发技术。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>①开发方面：Hibernate开发中，SQL语句已经被封装，直接可以使用；MyBatis属于半自动化，SQL需要手工完成。</p><p>②SQL优化方面：对复杂查询的SQL语句进行人工调优的时候，MyBatis更方便。</p><p>③可移植性方面：Hibernate使用时自动生成相应的SQL语句，因此具备良好的数据库移植性，而MyBatis中手动编写的SQL语句需要针对不同厂商的数据库进行修改。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 499135,
    "question_title": "<p>【问题1】（12分）</p><p>在架构评估过程中，质量属性效用树(utility tree)是对系统质量属性进行识别和优先级排序的重要工具。请给出合适的质量属性，填入图1中(1)、(2)空白处；并选择题干描述中的(a)～(h)，将恰当的序号填入(3)～(6)空白处，完成该系统的效用树。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240826/1724605591729176.png\" title=\"1724605591729176.png\" alt=\"image.png\" width=\"495\" height=\"539\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240826/1724605608716549.png\" title=\"1724605608716549.png\" alt=\"image.png\" width=\"561\" height=\"165\"/>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 77,
      "belong_page": 1,
      "question_id": 499135,
      "question_title": "<p>【问题1】（12分）</p><p>在架构评估过程中，质量属性效用树(utility tree)是对系统质量属性进行识别和优先级排序的重要工具。请给出合适的质量属性，填入图1中(1)、(2)空白处；并选择题干描述中的(a)～(h)，将恰当的序号填入(3)～(6)空白处，完成该系统的效用树。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240826/1724605591729176.png\" title=\"1724605591729176.png\" alt=\"image.png\" width=\"495\" height=\"539\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 499134,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件架构评估的说明，回答下列问题。</p><p>【说明】</p><p>某大型医院计划开发一套综合医疗信息管理系统，旨在提升医疗服务效率，加强患者数据管理和保护患者隐私。在系统需求分析与架构设计阶段，用户提出的部分需求和关键质量属性场景如下：</p><p>(a)在高峰时段，系统响应时间不得超过3秒，以支持快速挂号和就诊；</p><p>(b)更新系统的用户界面以同时适应老中青的操作习惯，必须在2周内完成；</p><p>(c)所有用户密码必须遵循复杂性规则，包括大小写字母、数字和特殊字符；</p><p>(d)当主数据库服务器故障时，系统需立即切换至备用服务器，切换时间不超过5分钟；</p><p>(e)系统需支持对新增子系统的无缝集成；</p><p>(f)系统必须能够准确识别并提示患者药物过敏信息，以避免医疗事故；</p><p>(g)系统需具备快速恢复功能，在遭遇严重故障后，能在2小时内恢复服务；</p><p>(h)支持不小于100个门诊终端和20个取药终端。</p><p>在此基础上开发部门目前正在组织系统开发的相关人员对系统架构进行评估。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240826/1724605608716549.png\" title=\"1724605608716549.png\" alt=\"image.png\" width=\"561\" height=\"165\"/>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 499136,
    "question_title": "<p>【问题2】（4分）</p><p>基于软件系统的生命周期，可以将软件系统的质量属性分为开发期质量属性和运行期质量属性2个部分。请把以上四个质量属性分别归类。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>性能、安全性、可用性属于运行期质量属性；</p><p>可修改性属于开发期质量属性。</p><p>&nbsp;</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 78,
      "belong_page": 1,
      "question_id": 499136,
      "question_title": "<p>【问题2】（4分）</p><p>基于软件系统的生命周期，可以将软件系统的质量属性分为开发期质量属性和运行期质量属性2个部分。请把以上四个质量属性分别归类。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 499134,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件架构评估的说明，回答下列问题。</p><p>【说明】</p><p>某大型医院计划开发一套综合医疗信息管理系统，旨在提升医疗服务效率，加强患者数据管理和保护患者隐私。在系统需求分析与架构设计阶段，用户提出的部分需求和关键质量属性场景如下：</p><p>(a)在高峰时段，系统响应时间不得超过3秒，以支持快速挂号和就诊；</p><p>(b)更新系统的用户界面以同时适应老中青的操作习惯，必须在2周内完成；</p><p>(c)所有用户密码必须遵循复杂性规则，包括大小写字母、数字和特殊字符；</p><p>(d)当主数据库服务器故障时，系统需立即切换至备用服务器，切换时间不超过5分钟；</p><p>(e)系统需支持对新增子系统的无缝集成；</p><p>(f)系统必须能够准确识别并提示患者药物过敏信息，以避免医疗事故；</p><p>(g)系统需具备快速恢复功能，在遭遇严重故障后，能在2小时内恢复服务；</p><p>(h)支持不小于100个门诊终端和20个取药终端。</p><p>在此基础上开发部门目前正在组织系统开发的相关人员对系统架构进行评估。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>性能、安全性、可用性属于运行期质量属性；</p><p>可修改性属于开发期质量属性。</p><p>&nbsp;</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 499137,
    "question_title": "<p>【问题3】（9分）</p><p>列举质量属性场景的6要素，并在(a)中找出至少3个要素。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>质量属性场景包括刺激源（Source）、刺激（Stimulus）、环境（Environment）、制品（Artifact）、响应（Response）、响应度量（Measurement）6个要素。</p><p>在(a)“在高峰时段，系统响应时间不得超过3秒，以支持快速挂号和就诊”中，</p><p>（1）刺激源是用户请求；</p><p>（2）刺激是快速挂号和就诊；</p><p>（3）环境是在高峰时段；</p><p>（4）制品是系统；</p><p>（5）响应是系统响应/处理刺激；</p><p>（6）响应度量是不得超过3秒。</p><p>上面(a)中要素答出3个即可。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 79,
      "belong_page": 1,
      "question_id": 499137,
      "question_title": "<p>【问题3】（9分）</p><p>列举质量属性场景的6要素，并在(a)中找出至少3个要素。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 499134,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件架构评估的说明，回答下列问题。</p><p>【说明】</p><p>某大型医院计划开发一套综合医疗信息管理系统，旨在提升医疗服务效率，加强患者数据管理和保护患者隐私。在系统需求分析与架构设计阶段，用户提出的部分需求和关键质量属性场景如下：</p><p>(a)在高峰时段，系统响应时间不得超过3秒，以支持快速挂号和就诊；</p><p>(b)更新系统的用户界面以同时适应老中青的操作习惯，必须在2周内完成；</p><p>(c)所有用户密码必须遵循复杂性规则，包括大小写字母、数字和特殊字符；</p><p>(d)当主数据库服务器故障时，系统需立即切换至备用服务器，切换时间不超过5分钟；</p><p>(e)系统需支持对新增子系统的无缝集成；</p><p>(f)系统必须能够准确识别并提示患者药物过敏信息，以避免医疗事故；</p><p>(g)系统需具备快速恢复功能，在遭遇严重故障后，能在2小时内恢复服务；</p><p>(h)支持不小于100个门诊终端和20个取药终端。</p><p>在此基础上开发部门目前正在组织系统开发的相关人员对系统架构进行评估。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>质量属性场景包括刺激源（Source）、刺激（Stimulus）、环境（Environment）、制品（Artifact）、响应（Response）、响应度量（Measurement）6个要素。</p><p>在(a)“在高峰时段，系统响应时间不得超过3秒，以支持快速挂号和就诊”中，</p><p>（1）刺激源是用户请求；</p><p>（2）刺激是快速挂号和就诊；</p><p>（3）环境是在高峰时段；</p><p>（4）制品是系统；</p><p>（5）响应是系统响应/处理刺激；</p><p>（6）响应度量是不得超过3秒。</p><p>上面(a)中要素答出3个即可。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 499139,
    "question_title": "<p>【问题1】（15分）</p><p>李工为了介绍活动图的优势，画了一张局部活动图为例。请补充说明在下图中的（1）~（5）分别是什么元素，并以300字以内的文字介绍5个元素各自特点。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240826/1724605679601072.png\" title=\"1724605679601072.png\" alt=\"image.png\" width=\"542\" height=\"563\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）并发分岔：将流程拆分为多个并行路径，表示多个活动可同时进行，提高处理效率。</p><p>（2）并发汇合：将多个并行路径重新合并，确保所有并发活动完成后再继续后续流程，保证流程完整性。</p><p>（3）泳道：将活动图中的活动按角色或实体分类，清晰展示各参与者的职责和交互。</p><p>（4）监护表达式：在分支结构中使用的条件判断，决定流程在何种条件下选择特定路径，增加流程灵活性。</p><p>（5）分支：表示在某个活动执行过程中，根据条件的不同选择不同的执行路径，用菱形表示，是活动图中重要的决策点。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 80,
      "belong_page": 1,
      "question_id": 499139,
      "question_title": "<p>【问题1】（15分）</p><p>李工为了介绍活动图的优势，画了一张局部活动图为例。请补充说明在下图中的（1）~（5）分别是什么元素，并以300字以内的文字介绍5个元素各自特点。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240826/1724605679601072.png\" title=\"1724605679601072.png\" alt=\"image.png\" width=\"542\" height=\"563\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 499138,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于系统设计的说明，回答下列问题。</p><p>【说明】</p><p>某传统线下成衣经销商拟开发一套在线电商系统，以改善用户体验。在系统设计阶段，团队成员就使用何种流程建模工具发生了分歧。张工提出采用传统的流程图，而李工则认为活动图更具优势，双方争执不下。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）并发分岔：将流程拆分为多个并行路径，表示多个活动可同时进行，提高处理效率。</p><p>（2）并发汇合：将多个并行路径重新合并，确保所有并发活动完成后再继续后续流程，保证流程完整性。</p><p>（3）泳道：将活动图中的活动按角色或实体分类，清晰展示各参与者的职责和交互。</p><p>（4）监护表达式：在分支结构中使用的条件判断，决定流程在何种条件下选择特定路径，增加流程灵活性。</p><p>（5）分支：表示在某个活动执行过程中，根据条件的不同选择不同的执行路径，用菱形表示，是活动图中重要的决策点。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 499140,
    "question_title": "<p>【问题2】（10分）</p><p>请以300字以内的文字说明流程图与活动图的主要区别。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）流程图描述处理过程。主要控制结构是顺序、分支和循环，各个处理过程之间有严格的顺序和时间关系。活动图描述的是对象活动的顺序关系所遵循的规则，它侧重表现的是系统的行为，而非系统的处理过程。</p><p>（2）流程图不能表示并发活动的情形，活动图能够表示并发活动的情形。</p><p>（3）流程图是面向过程的，活动图是面向对象的。</p><p>（4）流程图只能有一个结束节点，而活动图可以有多个结束节点。</p><p>（5）流程图没有专用的元素表达消息传递、时间延迟等操作，而活动图有这类图形元素。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 81,
      "belong_page": 1,
      "question_id": 499140,
      "question_title": "<p>【问题2】（10分）</p><p>请以300字以内的文字说明流程图与活动图的主要区别。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 499138,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于系统设计的说明，回答下列问题。</p><p>【说明】</p><p>某传统线下成衣经销商拟开发一套在线电商系统，以改善用户体验。在系统设计阶段，团队成员就使用何种流程建模工具发生了分歧。张工提出采用传统的流程图，而李工则认为活动图更具优势，双方争执不下。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）流程图描述处理过程。主要控制结构是顺序、分支和循环，各个处理过程之间有严格的顺序和时间关系。活动图描述的是对象活动的顺序关系所遵循的规则，它侧重表现的是系统的行为，而非系统的处理过程。</p><p>（2）流程图不能表示并发活动的情形，活动图能够表示并发活动的情形。</p><p>（3）流程图是面向过程的，活动图是面向对象的。</p><p>（4）流程图只能有一个结束节点，而活动图可以有多个结束节点。</p><p>（5）流程图没有专用的元素表达消息传递、时间延迟等操作，而活动图有这类图形元素。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 499142,
    "question_title": "<p>【问题1】（9分）</p><p>请用300字以内的文字简要说明开放式架构的四个基本特点。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>开放架构应具有以下4个基本特点：</p><p>①可移植性。各种计算机应用系统可在具有开放架构特性的各种计算机系统间进行移植，不论这些计算机是否同种型号、同种机型。</p><p>②可互操作性。如计算机网络中的各结点机都具有开放架构的特性，则该网上各结点机间可相互操作和资源共享。</p><p>③可剪裁性。如某个计算机系统是具有开放架构特性的，则在该系统的低档机上运行的应用系统应能在高档机上运行，原在高档机上运行的应用系统经剪裁后也可在低档机上运行。</p><p>④易获得性。在具有开放架构特性的机器上所运行的软件环境易于从多方获得，不受某个来源所控制。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 82,
      "belong_page": 1,
      "question_id": 499142,
      "question_title": "<p>【问题1】（9分）</p><p>请用300字以内的文字简要说明开放式架构的四个基本特点。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 499141,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三（25分）</p><p>请详细阅读有关嵌入式软件架构设计方面的描述，回答问题。</p><p>【说明】</p><p>在嵌入式系统中，软件采用开放式架构已成为新的发展趋势。软件架构设计的优劣将直接影响软件的重用和移植能力。</p><p>某软件公司主要从事宇航领域的嵌入式软件研发工作。经二十多年的发展，其软件产品已被广泛应用于各种航天飞行器中。该公司积累了众多成熟软件，但由于当初没有充分考虑软件的架构，原有软件无法被再利用，为适应嵌入式软件技术发展需要，该公司决策层决定成立宇航嵌入式软件开放式架构研究小组，为公司完成开放式架构的定义与设计，确保公司软件资源能得到充分利用。</p><p>研究小组查阅了大量的国外资料和标准，最终将研究重点集中在了SAE AS4893《通用开放式架构(GOA)框架》标准，下图给出了GOA定义的架构图。</p><img src=\"https://s2.51cto.com/images/20240826/1724605750151462.png\" title=\"1724605750151462.png\" alt=\"image.png\" width=\"676\" height=\"413\"/>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>开放架构应具有以下4个基本特点：</p><p>①可移植性。各种计算机应用系统可在具有开放架构特性的各种计算机系统间进行移植，不论这些计算机是否同种型号、同种机型。</p><p>②可互操作性。如计算机网络中的各结点机都具有开放架构的特性，则该网上各结点机间可相互操作和资源共享。</p><p>③可剪裁性。如某个计算机系统是具有开放架构特性的，则在该系统的低档机上运行的应用系统应能在高档机上运行，原在高档机上运行的应用系统经剪裁后也可在低档机上运行。</p><p>④易获得性。在具有开放架构特性的机器上所运行的软件环境易于从多方获得，不受某个来源所控制。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 499143,
    "question_title": "<p>【问题2】（16分）</p><p>如图所示，GOA框架规定了软件、硬件和接口的结构，以在不同应用领域中实现系统功能。GOA框架规定了一组接口，其重要特点是建立了关键组件及组件间接口关系，这些接口的确定可用于支持软件的可移植性和可升级性，以满足功能的增加和技术的更新要求。除操作系统服务与扩展操作系统之间的接口(3X)外，GOA将其他接口分为两类：即直接接口(iD(i=1，2，3，…))和逻辑接口(iL(i=1，2，3，…))，直接接口定义了信息传输方式；逻辑接口定义了对等数据交换的要求，逻辑接口没有定义真正的信息传输方式，其传输发生在一个或多个直接接口。根据图所标注的接口在框架中的具体位置，请填写下表的(1)～(8)处空白。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240826/1724605795207767.png\" title=\"1724605795207767.png\" alt=\"image.png\" width=\"636\" height=\"659\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p></p><p>（1）为任何处理机中的服务功能提供各应用软件互操作服务的接口(应用到系统服务的直接接口)</p><p>（2）1L</p><p>（3）3D</p><p>（4）4L</p><p>（5）物理资源与物理资源之间以及物理资源与外部环境之间的接口(物理资源到物理资源直接接口)</p><p>（6）在同一个或不同的处理机之间，为处理机中的系统服务提供逻辑服务和远程服务的接口(系统服务逻辑接口)</p><p>（7）2L</p><p>（8）2D</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 83,
      "belong_page": 1,
      "question_id": 499143,
      "question_title": "<p>【问题2】（16分）</p><p>如图所示，GOA框架规定了软件、硬件和接口的结构，以在不同应用领域中实现系统功能。GOA框架规定了一组接口，其重要特点是建立了关键组件及组件间接口关系，这些接口的确定可用于支持软件的可移植性和可升级性，以满足功能的增加和技术的更新要求。除操作系统服务与扩展操作系统之间的接口(3X)外，GOA将其他接口分为两类：即直接接口(iD(i=1，2，3，…))和逻辑接口(iL(i=1，2，3，…))，直接接口定义了信息传输方式；逻辑接口定义了对等数据交换的要求，逻辑接口没有定义真正的信息传输方式，其传输发生在一个或多个直接接口。根据图所标注的接口在框架中的具体位置，请填写下表的(1)～(8)处空白。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240826/1724605795207767.png\" title=\"1724605795207767.png\" alt=\"image.png\" width=\"636\" height=\"659\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 499141,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三（25分）</p><p>请详细阅读有关嵌入式软件架构设计方面的描述，回答问题。</p><p>【说明】</p><p>在嵌入式系统中，软件采用开放式架构已成为新的发展趋势。软件架构设计的优劣将直接影响软件的重用和移植能力。</p><p>某软件公司主要从事宇航领域的嵌入式软件研发工作。经二十多年的发展，其软件产品已被广泛应用于各种航天飞行器中。该公司积累了众多成熟软件，但由于当初没有充分考虑软件的架构，原有软件无法被再利用，为适应嵌入式软件技术发展需要，该公司决策层决定成立宇航嵌入式软件开放式架构研究小组，为公司完成开放式架构的定义与设计，确保公司软件资源能得到充分利用。</p><p>研究小组查阅了大量的国外资料和标准，最终将研究重点集中在了SAE AS4893《通用开放式架构(GOA)框架》标准，下图给出了GOA定义的架构图。</p><img src=\"https://s2.51cto.com/images/20240826/1724605750151462.png\" title=\"1724605750151462.png\" alt=\"image.png\" width=\"676\" height=\"413\"/>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p></p><p>（1）为任何处理机中的服务功能提供各应用软件互操作服务的接口(应用到系统服务的直接接口)</p><p>（2）1L</p><p>（3）3D</p><p>（4）4L</p><p>（5）物理资源与物理资源之间以及物理资源与外部环境之间的接口(物理资源到物理资源直接接口)</p><p>（6）在同一个或不同的处理机之间，为处理机中的系统服务提供逻辑服务和远程服务的接口(系统服务逻辑接口)</p><p>（7）2L</p><p>（8）2D</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 499145,
    "question_title": "<p>【问题1】（8分）</p><p>请分析并比较MySQL与Cassandra在数据模型、可扩展性、一致性模型及适用场景方面的差异，并填写下表。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240826/1724605843377097.png\" title=\"1724605843377097.png\" alt=\"image.png\" width=\"573\" height=\"141\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）列式存储，灵活可扩展的数据模型</p><p>（2）垂直和有限水平扩展</p><p>（3）弱一致性（或者最终一致性）</p><p>（4）复杂查询、事务处理</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 84,
      "belong_page": 1,
      "question_id": 499145,
      "question_title": "<p>【问题1】（8分）</p><p>请分析并比较MySQL与Cassandra在数据模型、可扩展性、一致性模型及适用场景方面的差异，并填写下表。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240826/1724605843377097.png\" title=\"1724605843377097.png\" alt=\"image.png\" width=\"573\" height=\"141\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 499144,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于某电商平台数据架构的说明，回答下列问题。</p><p>【说明】</p><p>某电商平台计划升级其现有的数据存储系统，以支持日益增长的商品数据、用户信息及交易记录。该平台的目标是提高数据查询效率、增强数据安全性、以及实现数据的灵活扩展，以适应未来业务发展的需求。当前，平台主要使用MySQL关系型数据库存储结构化数据，但面临着查询性能瓶颈、数据备份恢复复杂度高以及难以高效处理大规模非结构化数据（如商品图片、用户评价等）的问题。</p><p>项目团队经过调研，决定引入NoSQL数据库（如Cassandra）和分布式文件系统（如HDFS）来优化数据存储架构。Cassandra因其高可用性、线性扩展性和低延迟读写性能被选为处理高并发用户数据和商品信息的数据库，而HDFS则用于存储和处理大规模非结构化数据。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）列式存储，灵活可扩展的数据模型</p><p>（2）垂直和有限水平扩展</p><p>（3）弱一致性（或者最终一致性）</p><p>（4）复杂查询、事务处理</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 499146,
    "question_title": "<p>【问题2】（6分）</p><p>在引入HDFS作为非结构化数据存储解决方案时，请阐述HDFS在数据可靠性、伸缩性和性能方面的优势，并说明HDFS是如何实现这些优势的。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>HDFS在数据可靠性、伸缩性和性能方面具有显著优势。</p><p>（1）在数据可靠性方面，HDFS通过数据冗余存储（默认为三副本）和自动容错机制（如数据块复制、心跳检测和数据块扫描等）来确保数据的高可靠性。</p><p>（2）HDFS具有良好的伸缩性，通过添加更多的节点来线性扩展存储容量，能够支持PB级数据的存储。</p><p>（3）在性能方面，HDFS通过数据本地化、优化读写路径以及利用硬件特性（如磁盘并行读写）来提高数据传输和处理效率。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 85,
      "belong_page": 1,
      "question_id": 499146,
      "question_title": "<p>【问题2】（6分）</p><p>在引入HDFS作为非结构化数据存储解决方案时，请阐述HDFS在数据可靠性、伸缩性和性能方面的优势，并说明HDFS是如何实现这些优势的。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 499144,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于某电商平台数据架构的说明，回答下列问题。</p><p>【说明】</p><p>某电商平台计划升级其现有的数据存储系统，以支持日益增长的商品数据、用户信息及交易记录。该平台的目标是提高数据查询效率、增强数据安全性、以及实现数据的灵活扩展，以适应未来业务发展的需求。当前，平台主要使用MySQL关系型数据库存储结构化数据，但面临着查询性能瓶颈、数据备份恢复复杂度高以及难以高效处理大规模非结构化数据（如商品图片、用户评价等）的问题。</p><p>项目团队经过调研，决定引入NoSQL数据库（如Cassandra）和分布式文件系统（如HDFS）来优化数据存储架构。Cassandra因其高可用性、线性扩展性和低延迟读写性能被选为处理高并发用户数据和商品信息的数据库，而HDFS则用于存储和处理大规模非结构化数据。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>HDFS在数据可靠性、伸缩性和性能方面具有显著优势。</p><p>（1）在数据可靠性方面，HDFS通过数据冗余存储（默认为三副本）和自动容错机制（如数据块复制、心跳检测和数据块扫描等）来确保数据的高可靠性。</p><p>（2）HDFS具有良好的伸缩性，通过添加更多的节点来线性扩展存储容量，能够支持PB级数据的存储。</p><p>（3）在性能方面，HDFS通过数据本地化、优化读写路径以及利用硬件特性（如磁盘并行读写）来提高数据传输和处理效率。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 499147,
    "question_title": "<p>【问题3】（11分）</p><p>考虑到电商平台对实时数据分析的需求，团队计划将部分实时数据从Cassandra同步到Kafka中，以支持实时数据流处理和分析。请说明为何选择Kafka作为实时数据流处理的中间件。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p></p><p>（1）兼容性：Kafka能够收集和处理来自Cassandra的实时数据流。</p><p>（2）可伸缩性：Kafka的分布式架构支持通过增加节点来线性伸缩，适应不断增长的数据量。</p><p>（3）容错性：Kafka通过数据复制和分区机制提供强大的容错能力。</p><p>（4）高吞吐量：支持高吞吐量的数据处理，也能够削峰填谷。</p><p>（5）低延迟：Kafka能够满足电商平台对实时数据处理的需求。</p><p>（6）发布-订阅模式：Kafka的发布-订阅模型允许不同的消费者（如实时分析引擎、数据仓库等）独立地消费数据，互不影响。</p><p>（7）持久化：Kafka的数据持久化机制允许用户根据需要调整数据的保留策略和副本因子，以适应不同的业务场景。</p><p>（8）生态系统支持：Kafka拥有丰富的API和强大的生态系统支持，可以无缝集成到现有的数据处理和分析框架中。</p><p>（答出6个即满分）</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 86,
      "belong_page": 1,
      "question_id": 499147,
      "question_title": "<p>【问题3】（11分）</p><p>考虑到电商平台对实时数据分析的需求，团队计划将部分实时数据从Cassandra同步到Kafka中，以支持实时数据流处理和分析。请说明为何选择Kafka作为实时数据流处理的中间件。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 499144,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于某电商平台数据架构的说明，回答下列问题。</p><p>【说明】</p><p>某电商平台计划升级其现有的数据存储系统，以支持日益增长的商品数据、用户信息及交易记录。该平台的目标是提高数据查询效率、增强数据安全性、以及实现数据的灵活扩展，以适应未来业务发展的需求。当前，平台主要使用MySQL关系型数据库存储结构化数据，但面临着查询性能瓶颈、数据备份恢复复杂度高以及难以高效处理大规模非结构化数据（如商品图片、用户评价等）的问题。</p><p>项目团队经过调研，决定引入NoSQL数据库（如Cassandra）和分布式文件系统（如HDFS）来优化数据存储架构。Cassandra因其高可用性、线性扩展性和低延迟读写性能被选为处理高并发用户数据和商品信息的数据库，而HDFS则用于存储和处理大规模非结构化数据。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p></p><p>（1）兼容性：Kafka能够收集和处理来自Cassandra的实时数据流。</p><p>（2）可伸缩性：Kafka的分布式架构支持通过增加节点来线性伸缩，适应不断增长的数据量。</p><p>（3）容错性：Kafka通过数据复制和分区机制提供强大的容错能力。</p><p>（4）高吞吐量：支持高吞吐量的数据处理，也能够削峰填谷。</p><p>（5）低延迟：Kafka能够满足电商平台对实时数据处理的需求。</p><p>（6）发布-订阅模式：Kafka的发布-订阅模型允许不同的消费者（如实时分析引擎、数据仓库等）独立地消费数据，互不影响。</p><p>（7）持久化：Kafka的数据持久化机制允许用户根据需要调整数据的保留策略和副本因子，以适应不同的业务场景。</p><p>（8）生态系统支持：Kafka拥有丰富的API和强大的生态系统支持，可以无缝集成到现有的数据处理和分析框架中。</p><p>（答出6个即满分）</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 499149,
    "question_title": "<p>【问题1】（8分）</p><p>请以200字以内的文字说明API网关在微服务架构中的作用。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p></p><p>（1）封装系统架构：封装了整个系统的架构，为客户端提供统一的接口。</p><p>（2）路由和转发：根据请求的URL、头部信息或请求体内容，将请求路由到相应的微服务实例。</p><p>（3）负载均衡：对请求进行负载均衡，将请求分配到多个微服务实例上。这有助于提高系统的可伸缩性和可用性。</p><p>（4）聚合响应：对于需要多个微服务协同完成的请求，API网关可以并行调用这些服务，并聚合它们的响应返回给客户端。</p><p>（5）认证与授权：在请求到达微服务之前，API网关可以执行身份验证和授权，确保只有合法的请求才能通过。</p><p>（6）限流与熔断：通过限流和熔断机制，API网关可以保护微服务免受流量洪峰和故障的影响，提高系统的稳定性和可用性。</p><p>（7）协议转换：充当协议转换器的角色，将来自客户端的请求转换为微服务可以理解的协议，并将微服务的响应转换回客户端可以理解的协议。</p><p>（8）缓存：API网关可以对常见的请求进行缓存，减少对后端微服务的调用，提高系统的性能和响应速度。</p><p>（答出4个即满分）</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 87,
      "belong_page": 1,
      "question_id": 499149,
      "question_title": "<p>【问题1】（8分）</p><p>请以200字以内的文字说明API网关在微服务架构中的作用。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 499148,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web应用开发的描述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某在线教育平台计划开发一个全新的在线学习系统，该系统旨在提供高质量的在线课程、互动学习社区以及个性化学习推荐等功能。为了应对未来可能的高并发访问和快速迭代的需求，系统决定采用微服务架构进行开发。系统被划分为用户管理服务、课程管理服务、学习进度跟踪服务、社区互动服务、推荐算法服务等多个微服务。</p><p>在系统开发初期，团队遇到了如何有效管理微服务间通信和依赖的问题，以及如何在保证系统稳定性的同时，实现快速迭代和扩展。团队中的李工提出了使用API网关和服务发现机制来优化微服务架构，而赵工则建议引入DevOps和持续集成/持续部署（CI/CD）流程来加速开发和部署过程。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p></p><p>（1）封装系统架构：封装了整个系统的架构，为客户端提供统一的接口。</p><p>（2）路由和转发：根据请求的URL、头部信息或请求体内容，将请求路由到相应的微服务实例。</p><p>（3）负载均衡：对请求进行负载均衡，将请求分配到多个微服务实例上。这有助于提高系统的可伸缩性和可用性。</p><p>（4）聚合响应：对于需要多个微服务协同完成的请求，API网关可以并行调用这些服务，并聚合它们的响应返回给客户端。</p><p>（5）认证与授权：在请求到达微服务之前，API网关可以执行身份验证和授权，确保只有合法的请求才能通过。</p><p>（6）限流与熔断：通过限流和熔断机制，API网关可以保护微服务免受流量洪峰和故障的影响，提高系统的稳定性和可用性。</p><p>（7）协议转换：充当协议转换器的角色，将来自客户端的请求转换为微服务可以理解的协议，并将微服务的响应转换回客户端可以理解的协议。</p><p>（8）缓存：API网关可以对常见的请求进行缓存，减少对后端微服务的调用，提高系统的性能和响应速度。</p><p>（答出4个即满分）</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 499150,
    "question_title": "<p>【问题2】（10分）</p><p>请阐述DevOps和CI/CD流程在微服务架构中的作用以及如何加速开发和部署过程。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>DevOps是一种文化和方法的集合，旨在促进开发（Development）和运维（Operations）团队之间的紧密合作，通过自动化工具和技术，提高软件交付的速度和质量。CI/CD（持续集成/持续部署）是DevOps实践中的关键流程。</p><p>在微服务架构中，DevOps和CI/CD流程的应用可以加速开发和部署过程：</p><p>（1）自动化测试：通过持续集成，每次代码提交都会触发自动化测试，确保新代码不会破坏现有功能。</p><p>（2）快速反馈：自动化测试和构建过程能够迅速提供反馈，帮助开发团队及时发现和修复问题。</p><p>（3）频繁部署：微服务需要部署大量的服务，手工部署非常困难。自动化持续部署允许团队将经过测试的代码快速部署到生产环境，实现快速迭代。</p><p>（4）确保环境一致性：通过自动化部署，可以确保开发、测试和生产环境的一致性，减少因环境差异导致的问题。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 88,
      "belong_page": 1,
      "question_id": 499150,
      "question_title": "<p>【问题2】（10分）</p><p>请阐述DevOps和CI/CD流程在微服务架构中的作用以及如何加速开发和部署过程。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 499148,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web应用开发的描述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某在线教育平台计划开发一个全新的在线学习系统，该系统旨在提供高质量的在线课程、互动学习社区以及个性化学习推荐等功能。为了应对未来可能的高并发访问和快速迭代的需求，系统决定采用微服务架构进行开发。系统被划分为用户管理服务、课程管理服务、学习进度跟踪服务、社区互动服务、推荐算法服务等多个微服务。</p><p>在系统开发初期，团队遇到了如何有效管理微服务间通信和依赖的问题，以及如何在保证系统稳定性的同时，实现快速迭代和扩展。团队中的李工提出了使用API网关和服务发现机制来优化微服务架构，而赵工则建议引入DevOps和持续集成/持续部署（CI/CD）流程来加速开发和部署过程。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>DevOps是一种文化和方法的集合，旨在促进开发（Development）和运维（Operations）团队之间的紧密合作，通过自动化工具和技术，提高软件交付的速度和质量。CI/CD（持续集成/持续部署）是DevOps实践中的关键流程。</p><p>在微服务架构中，DevOps和CI/CD流程的应用可以加速开发和部署过程：</p><p>（1）自动化测试：通过持续集成，每次代码提交都会触发自动化测试，确保新代码不会破坏现有功能。</p><p>（2）快速反馈：自动化测试和构建过程能够迅速提供反馈，帮助开发团队及时发现和修复问题。</p><p>（3）频繁部署：微服务需要部署大量的服务，手工部署非常困难。自动化持续部署允许团队将经过测试的代码快速部署到生产环境，实现快速迭代。</p><p>（4）确保环境一致性：通过自动化部署，可以确保开发、测试和生产环境的一致性，减少因环境差异导致的问题。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 499151,
    "question_title": "<p>【问题3】（7分）</p><p>请分析微服务架构在在线教育平台开发中的优势和挑战。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>优势：</p><p>（1）独立开发与部署：每个微服务都可以独立开发和部署，因而可以聚焦在局部，提高了开发效率和灵活性。</p><p>（2）技术栈多样性：不同的微服务可以采用最适合其业务需求的技术栈，无需整个系统统一技术选型。</p><p>（3）故障隔离：单个微服务的故障不会影响到整个系统，提高了系统的稳定性和可用性。</p><p>（4）易于扩展：微服务架构支持水平扩展和垂直扩展，可以根据业务需求灵活调整资源分配。</p><p>挑战及应对策略：</p><p>（1）分布式复杂性：微服务间的通信和依赖管理变得复杂。应对策略包括使用API网关、服务发现机制和分布式事务解决方案。</p><p>（2）数据一致性：在分布式系统中保持数据一致性是一个挑战。应对策略包括采用最终一致性模型、分布式事务或补偿事务等机制。</p><p>（3）运维复杂性：微服务架构增加了系统的运维复杂度。应对策略包括引入DevOps和CI/CD流程，实现自动化运维和监控。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 89,
      "belong_page": 1,
      "question_id": 499151,
      "question_title": "<p>【问题3】（7分）</p><p>请分析微服务架构在在线教育平台开发中的优势和挑战。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 499148,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web应用开发的描述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某在线教育平台计划开发一个全新的在线学习系统，该系统旨在提供高质量的在线课程、互动学习社区以及个性化学习推荐等功能。为了应对未来可能的高并发访问和快速迭代的需求，系统决定采用微服务架构进行开发。系统被划分为用户管理服务、课程管理服务、学习进度跟踪服务、社区互动服务、推荐算法服务等多个微服务。</p><p>在系统开发初期，团队遇到了如何有效管理微服务间通信和依赖的问题，以及如何在保证系统稳定性的同时，实现快速迭代和扩展。团队中的李工提出了使用API网关和服务发现机制来优化微服务架构，而赵工则建议引入DevOps和持续集成/持续部署（CI/CD）流程来加速开发和部署过程。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>优势：</p><p>（1）独立开发与部署：每个微服务都可以独立开发和部署，因而可以聚焦在局部，提高了开发效率和灵活性。</p><p>（2）技术栈多样性：不同的微服务可以采用最适合其业务需求的技术栈，无需整个系统统一技术选型。</p><p>（3）故障隔离：单个微服务的故障不会影响到整个系统，提高了系统的稳定性和可用性。</p><p>（4）易于扩展：微服务架构支持水平扩展和垂直扩展，可以根据业务需求灵活调整资源分配。</p><p>挑战及应对策略：</p><p>（1）分布式复杂性：微服务间的通信和依赖管理变得复杂。应对策略包括使用API网关、服务发现机制和分布式事务解决方案。</p><p>（2）数据一致性：在分布式系统中保持数据一致性是一个挑战。应对策略包括采用最终一致性模型、分布式事务或补偿事务等机制。</p><p>（3）运维复杂性：微服务架构增加了系统的运维复杂度。应对策略包括引入DevOps和CI/CD流程，实现自动化运维和监控。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 500549,
    "question_title": "<p>【问题1】（9分）</p><p>请用200字以内文字说明获取构件的方法有哪几种?开发构件通常采用哪几种策略?并列举出两种主流构件标准。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>基于构件的软件开发中，可以通过不同的途径来获取构件，主要包括以下4种方法：</p><p>（1）从现有构件中获得符合要求的构件，直接使用或做适应性修改，得到可复用的构件；</p><p>（2）通过遗留工程（Legacy Engineering），将具有潜在复用价值的软件提取出来，得到可复用的构件；</p><p>（3）从市场上购买现成的商业构件，即COTS （Commercial Off-The-Shell）构件；</p><p>（4）开发新的符合要求的构件。</p><p>开发构件通常采取3种策略：</p><p>（1）分区（partitioning）：指的是将问题情景的空间分割成几乎可以独立研究的部分；</p><p>（2）抽象（abstraction）：是对在给定实践内执行指定计算的软/硬件单元的一种抽象；</p><p>（3）分割（segmentation）；是将结构引入构件的行为，支持对行为性质进行时序推理。</p><p>当前主流构件标准有：</p><p>（1）CORBA：由OMG（对象管理集团）制定；</p><p>（2）COM/DCOM：由Microsoft制定；</p><p>（3）EJB：由SUN的Java企业Bean制定。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 90,
      "belong_page": 1,
      "question_id": 500549,
      "question_title": "<p>【问题1】（9分）</p><p>请用200字以内文字说明获取构件的方法有哪几种?开发构件通常采用哪几种策略?并列举出两种主流构件标准。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 500548,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三（25分）</p><p>请详细阅读有关嵌入式构件设计方面的说明，回答下列问题。</p><p>【说明】</p><p>构件（component）也称为组件，是一个功能相对独立的具有可复用价值的软硬件单元。近年来，构件技术正在逐步应用于大型嵌入式系统的软件设计。某公司长期从事飞行器电子设备研制工作，已积累了大量成熟软件。但是，由于当初管理和设计等原因，公司的大量软件不能被复用，严重影响了公司后续发展。公司领导层高度重视软件复用问题，明确提出了要将本公司的成熟软件进行改造，建立公司可复用的软件构件库，以提升开发效率、降低成本。公司领导层决定将此项任务交给技术部门的王工程师负责组织实施。两个月后，王工程师经过调研、梳理和实验，提交了一份实施方案。此方案得到了公司领导层的肯定，但在实施过程中遇到了许多困难，主要表现在公司软件架构的变更和构件抽取的界面等方面。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>基于构件的软件开发中，可以通过不同的途径来获取构件，主要包括以下4种方法：</p><p>（1）从现有构件中获得符合要求的构件，直接使用或做适应性修改，得到可复用的构件；</p><p>（2）通过遗留工程（Legacy Engineering），将具有潜在复用价值的软件提取出来，得到可复用的构件；</p><p>（3）从市场上购买现成的商业构件，即COTS （Commercial Off-The-Shell）构件；</p><p>（4）开发新的符合要求的构件。</p><p>开发构件通常采取3种策略：</p><p>（1）分区（partitioning）：指的是将问题情景的空间分割成几乎可以独立研究的部分；</p><p>（2）抽象（abstraction）：是对在给定实践内执行指定计算的软/硬件单元的一种抽象；</p><p>（3）分割（segmentation）；是将结构引入构件的行为，支持对行为性质进行时序推理。</p><p>当前主流构件标准有：</p><p>（1）CORBA：由OMG（对象管理集团）制定；</p><p>（2）COM/DCOM：由Microsoft制定；</p><p>（3）EJB：由SUN的Java企业Bean制定。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 500550,
    "question_title": "<p>【问题2】（6分）</p><p>由于该公司已具备大量的成熟软件，王工程师此次的主要工作就是采用遗留工程（Legacy Engineering）方法，将具有潜在复用价值的软件提取出来，得到可复用的构件。因此，在设计软件时与原开发技术人员产生了重大意见分歧，主要分歧焦点在于大家对构件概念理解上的差异。请根据你对构件的理解，判断下表给出的有关构件的说法是否正确。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240903/1725315846436381.png\" title=\"1725315846436381.png\" alt=\"image.png\" width=\"585\" height=\"540\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）√ &nbsp;&nbsp;&nbsp;（2）× &nbsp;&nbsp;&nbsp;（3）× &nbsp;&nbsp;&nbsp;（4）√ &nbsp;&nbsp;&nbsp;（5）× &nbsp;&nbsp;&nbsp;（6）×</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 91,
      "belong_page": 1,
      "question_id": 500550,
      "question_title": "<p>【问题2】（6分）</p><p>由于该公司已具备大量的成熟软件，王工程师此次的主要工作就是采用遗留工程（Legacy Engineering）方法，将具有潜在复用价值的软件提取出来，得到可复用的构件。因此，在设计软件时与原开发技术人员产生了重大意见分歧，主要分歧焦点在于大家对构件概念理解上的差异。请根据你对构件的理解，判断下表给出的有关构件的说法是否正确。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240903/1725315846436381.png\" title=\"1725315846436381.png\" alt=\"image.png\" width=\"585\" height=\"540\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 500548,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三（25分）</p><p>请详细阅读有关嵌入式构件设计方面的说明，回答下列问题。</p><p>【说明】</p><p>构件（component）也称为组件，是一个功能相对独立的具有可复用价值的软硬件单元。近年来，构件技术正在逐步应用于大型嵌入式系统的软件设计。某公司长期从事飞行器电子设备研制工作，已积累了大量成熟软件。但是，由于当初管理和设计等原因，公司的大量软件不能被复用，严重影响了公司后续发展。公司领导层高度重视软件复用问题，明确提出了要将本公司的成熟软件进行改造，建立公司可复用的软件构件库，以提升开发效率、降低成本。公司领导层决定将此项任务交给技术部门的王工程师负责组织实施。两个月后，王工程师经过调研、梳理和实验，提交了一份实施方案。此方案得到了公司领导层的肯定，但在实施过程中遇到了许多困难，主要表现在公司软件架构的变更和构件抽取的界面等方面。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）√ &nbsp;&nbsp;&nbsp;（2）× &nbsp;&nbsp;&nbsp;（3）× &nbsp;&nbsp;&nbsp;（4）√ &nbsp;&nbsp;&nbsp;（5）× &nbsp;&nbsp;&nbsp;（6）×</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 500551,
    "question_title": "<p>【问题3】（10分）</p><p>王工程师的实施方案指出：本公司的大部分产品是为用户提供标准计算平台的，而此平台中的主要开发工作是为嵌入式操作系统研制板级支持软件（BSP）。为了提高BSP软件的复用，应首先开展BSP构件的开发，且构件架构应符合国外GENESYS规范定义的嵌入式系统架构风格。下图给出了架构风格定义的构件通用接口，其中：链接接口（LIF）是构件对外提供的功能服务接口；局部接口建立了构件和它的局部环境的连接，如传感器、作动器或人机接口；技术相关接口（TDI）提供了查看构件内部、观察构件的内部变量的手段，如诊断等；技术无关接口（TII）用来在运行时配置、复位、重启构件的接口。现需要针对BSP中常用的RS-232串行驱动程序设计一个可复用的软构件，请说明该软构件四类接口的具体功能。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240903/1725315888566961.png\" title=\"1725315888566961.png\" alt=\"image.png\" width=\"616\" height=\"430\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>RS-232驱动程序主要完成对RS-232芯片的初始化，实现RS-232数据发送、接收和控制等功能。依据GENESYS规范定义的构件接口含义，RS-232驱动程序构件的接口定义如下：</p><p>（1）链接接口</p><p>RS-232驱动构件的使用者是上层的操作系统或应用软件，本构件应该给他们提供串行接口的数据发送、数据接收服务。因此，链接接口至少包括以下功能服务：</p><p>●Send（）：处理机中的程序向RS-232芯片输出数据；</p><p>●Receive（）：处理机中的程序通过RS-232芯片从外部接收数据；</p><p>●Init232（）：初始化RS-232芯片。</p><p>（2）局部接口</p><p>RS-232驱动构件的局部接口应该是RS-232芯片为编程提供的各类寄存器和CPU对外围芯片的支持，此接口与硬件紧密相关。就RS-232芯片而言，局部接口至少包括以下功能服务：</p><p>●Intconnect（）：将RS-232芯片的外部中断向量连接到CPU；</p><p>●Read（）：从RS-232芯片中读取寄存器的内容（包括控制、状态类寄存器和数据输入寄存器）；</p><p>●Write（）：将控制信息或输出的数据写入RS-232芯片的相应寄存器。</p><p>（3）技术相关接口</p><p>RS-232驱动构件的技术相关接口应该是RS-232驱动构件为维护人员提供的芯片诊断接口，此接口与硬件和应用紧密相关。就RS-232芯片使用而言，技术相关接口至少包括以下诊断功能服务：</p><p>●Datacheck（）：诊断数据传输校验的错误。</p><p>（4）技术无关接口</p><p>RS-232驱动构件的技术无关接口应该是RS-232驱动构件为编程人员提供的芯片初始化或运行时的配置接口。技术无关接口至少包括以下功能服务：</p><p>●Reset（）：RS-232芯片或驱动构件复位；</p><p>●Restart（）：RS-232芯片或驱动构件重启动；</p><p>●Rateconfigure（）：配置、重新配置RS-232传输速率。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 92,
      "belong_page": 1,
      "question_id": 500551,
      "question_title": "<p>【问题3】（10分）</p><p>王工程师的实施方案指出：本公司的大部分产品是为用户提供标准计算平台的，而此平台中的主要开发工作是为嵌入式操作系统研制板级支持软件（BSP）。为了提高BSP软件的复用，应首先开展BSP构件的开发，且构件架构应符合国外GENESYS规范定义的嵌入式系统架构风格。下图给出了架构风格定义的构件通用接口，其中：链接接口（LIF）是构件对外提供的功能服务接口；局部接口建立了构件和它的局部环境的连接，如传感器、作动器或人机接口；技术相关接口（TDI）提供了查看构件内部、观察构件的内部变量的手段，如诊断等；技术无关接口（TII）用来在运行时配置、复位、重启构件的接口。现需要针对BSP中常用的RS-232串行驱动程序设计一个可复用的软构件，请说明该软构件四类接口的具体功能。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240903/1725315888566961.png\" title=\"1725315888566961.png\" alt=\"image.png\" width=\"616\" height=\"430\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 500548,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三（25分）</p><p>请详细阅读有关嵌入式构件设计方面的说明，回答下列问题。</p><p>【说明】</p><p>构件（component）也称为组件，是一个功能相对独立的具有可复用价值的软硬件单元。近年来，构件技术正在逐步应用于大型嵌入式系统的软件设计。某公司长期从事飞行器电子设备研制工作，已积累了大量成熟软件。但是，由于当初管理和设计等原因，公司的大量软件不能被复用，严重影响了公司后续发展。公司领导层高度重视软件复用问题，明确提出了要将本公司的成熟软件进行改造，建立公司可复用的软件构件库，以提升开发效率、降低成本。公司领导层决定将此项任务交给技术部门的王工程师负责组织实施。两个月后，王工程师经过调研、梳理和实验，提交了一份实施方案。此方案得到了公司领导层的肯定，但在实施过程中遇到了许多困难，主要表现在公司软件架构的变更和构件抽取的界面等方面。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>RS-232驱动程序主要完成对RS-232芯片的初始化，实现RS-232数据发送、接收和控制等功能。依据GENESYS规范定义的构件接口含义，RS-232驱动程序构件的接口定义如下：</p><p>（1）链接接口</p><p>RS-232驱动构件的使用者是上层的操作系统或应用软件，本构件应该给他们提供串行接口的数据发送、数据接收服务。因此，链接接口至少包括以下功能服务：</p><p>●Send（）：处理机中的程序向RS-232芯片输出数据；</p><p>●Receive（）：处理机中的程序通过RS-232芯片从外部接收数据；</p><p>●Init232（）：初始化RS-232芯片。</p><p>（2）局部接口</p><p>RS-232驱动构件的局部接口应该是RS-232芯片为编程提供的各类寄存器和CPU对外围芯片的支持，此接口与硬件紧密相关。就RS-232芯片而言，局部接口至少包括以下功能服务：</p><p>●Intconnect（）：将RS-232芯片的外部中断向量连接到CPU；</p><p>●Read（）：从RS-232芯片中读取寄存器的内容（包括控制、状态类寄存器和数据输入寄存器）；</p><p>●Write（）：将控制信息或输出的数据写入RS-232芯片的相应寄存器。</p><p>（3）技术相关接口</p><p>RS-232驱动构件的技术相关接口应该是RS-232驱动构件为维护人员提供的芯片诊断接口，此接口与硬件和应用紧密相关。就RS-232芯片使用而言，技术相关接口至少包括以下诊断功能服务：</p><p>●Datacheck（）：诊断数据传输校验的错误。</p><p>（4）技术无关接口</p><p>RS-232驱动构件的技术无关接口应该是RS-232驱动构件为编程人员提供的芯片初始化或运行时的配置接口。技术无关接口至少包括以下功能服务：</p><p>●Reset（）：RS-232芯片或驱动构件复位；</p><p>●Restart（）：RS-232芯片或驱动构件重启动；</p><p>●Rateconfigure（）：配置、重新配置RS-232传输速率。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 500554,
    "question_title": "<p>【问题1】（8分）</p><p>请从设计难度、数据冗余程度、数据架构、应用扩展性等4个方面对关系型数据库管理系统和文件系统两种数据存储方式进行比较，填写下表中(1)～(4)。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240903/1725315948164584.png\" title=\"1725315948164584.png\" alt=\"image.png\" width=\"571\" height=\"150\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）数据结构需要符合某些模式，设计难度较大</p><p>（2）可能在多个文件中复制相同的数据属性，数据冗余较大</p><p>（3）以应用系统为中心组织、管理数据</p><p>（4）数据独立于应用系统，很容易在不同的应用系统之间共享数据</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 93,
      "belong_page": 1,
      "question_id": 500554,
      "question_title": "<p>【问题1】（8分）</p><p>请从设计难度、数据冗余程度、数据架构、应用扩展性等4个方面对关系型数据库管理系统和文件系统两种数据存储方式进行比较，填写下表中(1)～(4)。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240903/1725315948164584.png\" title=\"1725315948164584.png\" alt=\"image.png\" width=\"571\" height=\"150\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 500553,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于应用系统数据架构的说明，回答下列问题。</p><p>【说明】</p><p>某软件公司计划开发一套全新的办公自动化系统，旨在提高企业运营效率。该系统将涵盖多个关键功能模块，包括但不限于公文办理、员工管理、考勤、报销审批等。通过自动化和智能化的方式，该系统将帮助企业简化日常办公流程，减少人工干预，并提高整体工作效率。此外，该系统还将提供易于使用的界面和强大的数据分析功能，以支持企业做出更明智的决策。随着企业规模的扩大和业务需求的增长，该系统也将能够进行无缝扩展和优化，以满足不断变化的市场需求。</p><p>在对系统进行数据架构设计时，公司项目组的架构师王工主张采用文件系统进行数据管理，原因是目前公司客户和商品数量不大，且系统功能较为简单，采用文件系统进行数据管理简单直观，开发周期短。架构师李工则建议采用数据库进行数据管理，原因在于公司目前正处在高速扩张期，虽然目前的客户和商品数量不大，但随着公司快速发展，需要管理的数据必然飞速膨胀，采用数据库作为数据存储层，系统的扩展性更强，并能够对未来可能增加的复杂业务提供有效支持。经过讨论，项目组初步采纳了李工的意见，决定采用数据库存储客户数据，并针对业务特征对系统性能进行优化。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）数据结构需要符合某些模式，设计难度较大</p><p>（2）可能在多个文件中复制相同的数据属性，数据冗余较大</p><p>（3）以应用系统为中心组织、管理数据</p><p>（4）数据独立于应用系统，很容易在不同的应用系统之间共享数据</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 500555,
    "question_title": "<p>【问题2】（8分）</p><p>对系统的核心业务需求进行认真分析后，公司的资深架构师张工提出采用文档数据库代替日常使用的关系数据库。请首先分析比较文档数据库和关系数据库在数据模型、读写性能、模式扩展性、数据一致性等方面的差异，填写下表4-2中(1)～(4)的空白。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240903/1725315975703459.png\" title=\"1725315975703459.png\" alt=\"image.png\" width=\"614\" height=\"173\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）文档模型</p><p>（2）性能相对较低，特别是关联查询多时</p><p>（3）模式自由，可以随时增加字段或者嵌套内部对象</p><p>（4）欠缺事务支持，数据一致性差</p><p>&nbsp;</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 94,
      "belong_page": 1,
      "question_id": 500555,
      "question_title": "<p>【问题2】（8分）</p><p>对系统的核心业务需求进行认真分析后，公司的资深架构师张工提出采用文档数据库代替日常使用的关系数据库。请首先分析比较文档数据库和关系数据库在数据模型、读写性能、模式扩展性、数据一致性等方面的差异，填写下表4-2中(1)～(4)的空白。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240903/1725315975703459.png\" title=\"1725315975703459.png\" alt=\"image.png\" width=\"614\" height=\"173\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 500553,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于应用系统数据架构的说明，回答下列问题。</p><p>【说明】</p><p>某软件公司计划开发一套全新的办公自动化系统，旨在提高企业运营效率。该系统将涵盖多个关键功能模块，包括但不限于公文办理、员工管理、考勤、报销审批等。通过自动化和智能化的方式，该系统将帮助企业简化日常办公流程，减少人工干预，并提高整体工作效率。此外，该系统还将提供易于使用的界面和强大的数据分析功能，以支持企业做出更明智的决策。随着企业规模的扩大和业务需求的增长，该系统也将能够进行无缝扩展和优化，以满足不断变化的市场需求。</p><p>在对系统进行数据架构设计时，公司项目组的架构师王工主张采用文件系统进行数据管理，原因是目前公司客户和商品数量不大，且系统功能较为简单，采用文件系统进行数据管理简单直观，开发周期短。架构师李工则建议采用数据库进行数据管理，原因在于公司目前正处在高速扩张期，虽然目前的客户和商品数量不大，但随着公司快速发展，需要管理的数据必然飞速膨胀，采用数据库作为数据存储层，系统的扩展性更强，并能够对未来可能增加的复杂业务提供有效支持。经过讨论，项目组初步采纳了李工的意见，决定采用数据库存储客户数据，并针对业务特征对系统性能进行优化。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）文档模型</p><p>（2）性能相对较低，特别是关联查询多时</p><p>（3）模式自由，可以随时增加字段或者嵌套内部对象</p><p>（4）欠缺事务支持，数据一致性差</p><p>&nbsp;</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 500556,
    "question_title": "<p>【问题3】（9分）</p><p>经过讨论，最终采用了MongoDB作为系统的数据库。MongoDB采用JSON格式来存储数据，请用300字以内的文字说明JSON在数据存储、修改和传输方面的优点。&nbsp;</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>JSON（JavaScript Object Notation）在数据存储、修改和传输方面具有显著的优势。首先，JSON的语法简洁明了，易于阅读和编写，降低了数据存储的复杂性。其次，JSON支持多种数据类型，包括字符串、数字、布尔值、数组和对象，这使得它可以灵活地表示复杂的数据结构。此外，JSON允许空值和可选字段，增加了数据的灵活性，缩小了空间占用。</p><p>在修改方面，由于基于文本的格式，JSON文档可以直接被程序解析和修改。JSON也支持使用文本编辑器进行查看和编辑，这对于开发调试非常有用。</p><p>在传输方面，JSON的格式紧凑，易于传输和存储。同时，JSON也支持跨平台和跨语言的数据交换，使得在不同的系统和编程语言之间进行数据传输变得简单。</p><p>&nbsp;</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 95,
      "belong_page": 1,
      "question_id": 500556,
      "question_title": "<p>【问题3】（9分）</p><p>经过讨论，最终采用了MongoDB作为系统的数据库。MongoDB采用JSON格式来存储数据，请用300字以内的文字说明JSON在数据存储、修改和传输方面的优点。&nbsp;</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 500553,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于应用系统数据架构的说明，回答下列问题。</p><p>【说明】</p><p>某软件公司计划开发一套全新的办公自动化系统，旨在提高企业运营效率。该系统将涵盖多个关键功能模块，包括但不限于公文办理、员工管理、考勤、报销审批等。通过自动化和智能化的方式，该系统将帮助企业简化日常办公流程，减少人工干预，并提高整体工作效率。此外，该系统还将提供易于使用的界面和强大的数据分析功能，以支持企业做出更明智的决策。随着企业规模的扩大和业务需求的增长，该系统也将能够进行无缝扩展和优化，以满足不断变化的市场需求。</p><p>在对系统进行数据架构设计时，公司项目组的架构师王工主张采用文件系统进行数据管理，原因是目前公司客户和商品数量不大，且系统功能较为简单，采用文件系统进行数据管理简单直观，开发周期短。架构师李工则建议采用数据库进行数据管理，原因在于公司目前正处在高速扩张期，虽然目前的客户和商品数量不大，但随着公司快速发展，需要管理的数据必然飞速膨胀，采用数据库作为数据存储层，系统的扩展性更强，并能够对未来可能增加的复杂业务提供有效支持。经过讨论，项目组初步采纳了李工的意见，决定采用数据库存储客户数据，并针对业务特征对系统性能进行优化。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>JSON（JavaScript Object Notation）在数据存储、修改和传输方面具有显著的优势。首先，JSON的语法简洁明了，易于阅读和编写，降低了数据存储的复杂性。其次，JSON支持多种数据类型，包括字符串、数字、布尔值、数组和对象，这使得它可以灵活地表示复杂的数据结构。此外，JSON允许空值和可选字段，增加了数据的灵活性，缩小了空间占用。</p><p>在修改方面，由于基于文本的格式，JSON文档可以直接被程序解析和修改。JSON也支持使用文本编辑器进行查看和编辑，这对于开发调试非常有用。</p><p>在传输方面，JSON的格式紧凑，易于传输和存储。同时，JSON也支持跨平台和跨语言的数据交换，使得在不同的系统和编程语言之间进行数据传输变得简单。</p><p>&nbsp;</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 500559,
    "question_title": "<p>【问题1】（5分）</p><p>请用300以内文字说明什么是数据持久层，使用数据持久层能够为项目开发带来哪些好处？</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>数据持久层是根据分层思想，通过建立逻辑数据操作接口，采取一定的对象/关系映射策略，隐藏数据库访问代码细节，向业务开发人员提供透明的对象持久化操作机制。</p><p>能够为项目开发带来的好处：</p><p>（1）分离业务逻辑层和数据层，降低两者之间的耦合；</p><p>（2）通过对象/关系映射向业务逻辑提供面向对象的数据访问；</p><p>（3）简化数据层访问，隐藏数据库链接、数据读写命令和事务管理细节。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 96,
      "belong_page": 1,
      "question_id": 500559,
      "question_title": "<p>【问题1】（5分）</p><p>请用300以内文字说明什么是数据持久层，使用数据持久层能够为项目开发带来哪些好处？</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 500558,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web系统架构的设计的叙述，回答下列问题。</p><p>【说明】</p><p>某信息技术公司计划开发一套在线投票系统，用于为市场调研、信息调查和销售反馈等业务提供服务。该系统计划通过大量宣传和奖品鼓励的方式快速积累用户，当用户规模扩大到一定程度时，开始联系相关企业提供信息服务，并按照信息服务种类和用户投票数量收取费用。</p><p>为了降低开发成本和提高开发效率，项目组经过讨论后决定采用轻量级Java EE开发框架设计系统应用架构。在应用架构设计中，除了满足系统主要功能需求，还需要考虑的因素包括：</p><p>1.项目开发采用Oracle数据库存储数据，但将来可能移植到其他数据库平台；</p><p>2.系统开发过程中尽可能降低或者消除SQL语句开发的工作量；</p><p>3.投票系统中数据之间的关系复杂，需要支持数据对象的聚合和继承等关系。</p><p>项目组基于MVC模式设计出了投票系统的架构，包括表示层、业务逻辑层、数据持久层和数据层。在具体讨论数据持久层采用哪种技术方案时，老王建议采用成熟的客户端库函数，小李则认为ORM更加灵活，更适合作为投票系统数据持久层开发技术。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>数据持久层是根据分层思想，通过建立逻辑数据操作接口，采取一定的对象/关系映射策略，隐藏数据库访问代码细节，向业务开发人员提供透明的对象持久化操作机制。</p><p>能够为项目开发带来的好处：</p><p>（1）分离业务逻辑层和数据层，降低两者之间的耦合；</p><p>（2）通过对象/关系映射向业务逻辑提供面向对象的数据访问；</p><p>（3）简化数据层访问，隐藏数据库链接、数据读写命令和事务管理细节。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 500560,
    "question_title": "<p>【问题2】（12分）</p><p>针对在线投票系统的实际应用需求和要求，项目组应选用哪种技术实现数据持久层?请用300字以内文字说明其采用两种技术的优缺点。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>项目组应该采用ORM。</p><p>Oracle客户端的库函数访问接口（Oracle Call Interface，OCI）的优缺点：</p><p>优点：</p><p>（1）直接与数据库交互，性能高；</p><p>（2）隐藏服务端配置，部署灵活；</p><p>（3）支持加密，安全性高。</p><p>缺点：</p><p>（1）需要深入了解数据库知识，学习成本高；</p><p>（2）硬编码，维护成本高；</p><p>（3）移植困难。</p><p>对象关系映射（Object Relational Mapping，ORM）技术的优缺点：</p><p>优点：</p><p>（1）易用性高，降低了程序员数据库知识的要求；</p><p>（2）抽象层，隐藏了数据库底层结构和SQL语句；</p><p>（3）易移植，支持多种数据库系统。</p><p>缺点：</p><p>（1）数据库访问有额外开销，性能低；</p><p>（2）支持复杂查询困难；</p><p>（3）程序员易产生依赖，忽视数据库底层知识。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 97,
      "belong_page": 1,
      "question_id": 500560,
      "question_title": "<p>【问题2】（12分）</p><p>针对在线投票系统的实际应用需求和要求，项目组应选用哪种技术实现数据持久层?请用300字以内文字说明其采用两种技术的优缺点。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 500558,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web系统架构的设计的叙述，回答下列问题。</p><p>【说明】</p><p>某信息技术公司计划开发一套在线投票系统，用于为市场调研、信息调查和销售反馈等业务提供服务。该系统计划通过大量宣传和奖品鼓励的方式快速积累用户，当用户规模扩大到一定程度时，开始联系相关企业提供信息服务，并按照信息服务种类和用户投票数量收取费用。</p><p>为了降低开发成本和提高开发效率，项目组经过讨论后决定采用轻量级Java EE开发框架设计系统应用架构。在应用架构设计中，除了满足系统主要功能需求，还需要考虑的因素包括：</p><p>1.项目开发采用Oracle数据库存储数据，但将来可能移植到其他数据库平台；</p><p>2.系统开发过程中尽可能降低或者消除SQL语句开发的工作量；</p><p>3.投票系统中数据之间的关系复杂，需要支持数据对象的聚合和继承等关系。</p><p>项目组基于MVC模式设计出了投票系统的架构，包括表示层、业务逻辑层、数据持久层和数据层。在具体讨论数据持久层采用哪种技术方案时，老王建议采用成熟的客户端库函数，小李则认为ORM更加灵活，更适合作为投票系统数据持久层开发技术。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>项目组应该采用ORM。</p><p>Oracle客户端的库函数访问接口（Oracle Call Interface，OCI）的优缺点：</p><p>优点：</p><p>（1）直接与数据库交互，性能高；</p><p>（2）隐藏服务端配置，部署灵活；</p><p>（3）支持加密，安全性高。</p><p>缺点：</p><p>（1）需要深入了解数据库知识，学习成本高；</p><p>（2）硬编码，维护成本高；</p><p>（3）移植困难。</p><p>对象关系映射（Object Relational Mapping，ORM）技术的优缺点：</p><p>优点：</p><p>（1）易用性高，降低了程序员数据库知识的要求；</p><p>（2）抽象层，隐藏了数据库底层结构和SQL语句；</p><p>（3）易移植，支持多种数据库系统。</p><p>缺点：</p><p>（1）数据库访问有额外开销，性能低；</p><p>（2）支持复杂查询困难；</p><p>（3）程序员易产生依赖，忽视数据库底层知识。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 500561,
    "question_title": "<p>【问题3】（8分）</p><p>ORM技术中，主流有Hibernate和MyBatis/MyBatis Plus，请用200以内文字说明他们的区别。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>①开发方面：Hibernate开发中，SQL语句已经被封装，直接可以使用；MyBatis属于半自动化，SQL需要手工完成。</p><p>②SQL优化方面：对复杂查询的SQL语句进行人工调优的时候，MyBatis更方便。</p><p>③可移植性方面：Hibernate使用时自动生成相应的SQL语句，因此具备良好的数据库移植性，而MyBatis中手动编写的SQL语句需要针对不同厂商的数据库进行修改。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 98,
      "belong_page": 1,
      "question_id": 500561,
      "question_title": "<p>【问题3】（8分）</p><p>ORM技术中，主流有Hibernate和MyBatis/MyBatis Plus，请用200以内文字说明他们的区别。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 500558,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web系统架构的设计的叙述，回答下列问题。</p><p>【说明】</p><p>某信息技术公司计划开发一套在线投票系统，用于为市场调研、信息调查和销售反馈等业务提供服务。该系统计划通过大量宣传和奖品鼓励的方式快速积累用户，当用户规模扩大到一定程度时，开始联系相关企业提供信息服务，并按照信息服务种类和用户投票数量收取费用。</p><p>为了降低开发成本和提高开发效率，项目组经过讨论后决定采用轻量级Java EE开发框架设计系统应用架构。在应用架构设计中，除了满足系统主要功能需求，还需要考虑的因素包括：</p><p>1.项目开发采用Oracle数据库存储数据，但将来可能移植到其他数据库平台；</p><p>2.系统开发过程中尽可能降低或者消除SQL语句开发的工作量；</p><p>3.投票系统中数据之间的关系复杂，需要支持数据对象的聚合和继承等关系。</p><p>项目组基于MVC模式设计出了投票系统的架构，包括表示层、业务逻辑层、数据持久层和数据层。在具体讨论数据持久层采用哪种技术方案时，老王建议采用成熟的客户端库函数，小李则认为ORM更加灵活，更适合作为投票系统数据持久层开发技术。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>①开发方面：Hibernate开发中，SQL语句已经被封装，直接可以使用；MyBatis属于半自动化，SQL需要手工完成。</p><p>②SQL优化方面：对复杂查询的SQL语句进行人工调优的时候，MyBatis更方便。</p><p>③可移植性方面：Hibernate使用时自动生成相应的SQL语句，因此具备良好的数据库移植性，而MyBatis中手动编写的SQL语句需要针对不同厂商的数据库进行修改。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 502557,
    "question_title": "<p>【问题1】（12分）</p><p>在架构评估过程中，质量属性效用树（utility tree）是对系统质量属性进行识别和优先级排序的重要工具。请给出合适的质量属性，填入下图中的（1）、（2）空白处。并选择题干描述的（a）～（k），填入（3）～（6）空白处，完成该系统的效用树。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240917/1726572870507088.png\" title=\"1726572870507088.png\" alt=\"image.png\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240917/1726572883325452.png\" title=\"1726572883325452.png\" alt=\"image.png\" width=\"545\" height=\"226\"/>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 99,
      "belong_page": 1,
      "question_id": 502557,
      "question_title": "<p>【问题1】（12分）</p><p>在架构评估过程中，质量属性效用树（utility tree）是对系统质量属性进行识别和优先级排序的重要工具。请给出合适的质量属性，填入下图中的（1）、（2）空白处。并选择题干描述的（a）～（k），填入（3）～（6）空白处，完成该系统的效用树。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240917/1726572870507088.png\" title=\"1726572870507088.png\" alt=\"image.png\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 502556,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件架构评估的说明，回答下列问题。</p><p>【说明】</p><p>某物流公司计划构建一套智能仓储系统，以提高货物分拣、存储和出库的效率与准确性。公司技术团队已经初步完成了系统架构设计，并召开了架构设计评估会议。会上，用户提出的需求、架构师识别的关键质量属性场景以及评估专家的意见等内容部分列举如下：</p><p>（a）系统需支持每分钟处理至少1000个货物分拣请求。</p><p>（b）如果不能解决货物存储位置定位问题，可能影响推广使用。</p><p>（c）系统单个节点故障不应影响整体服务。</p><p>（d）货物追踪信息需实时更新，延迟不超过1秒。</p><p>（e）系统需支持新增条形码和RFID扫描技术，以适应不同货物类型。</p><p>（f）所有货物进出库需经过双重验证。</p><p>（g）货物分拣的准确性需要保证，必要的时候可以降低速度。</p><p>（h）用户口令每90天必须更改。</p><p>（i）系统升级过程中需确保业务连续性，避免服务中断。</p><p>（j）公司如果增加新的仓库，可在2周内出现在驾驶舱。</p><p>（k）系统停机维护的时间对业务连续性影响很大。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240917/1726572883325452.png\" title=\"1726572883325452.png\" alt=\"image.png\" width=\"545\" height=\"226\"/>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 502558,
    "question_title": "<p>【问题2】（13分）</p><p>请阐述系统架构敏感点、权衡点、风险点和非风险点的定义，并从（a）～（k）中选择一个描述，分别代表系统架构的风险点、敏感点和权衡点。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>系统架构敏感点是为了实现某种特定质量属性，一个或多个系统组件所具有的特性；权衡点是影响多个质量属性，并对多个质量属性来说都是敏感点的系统属性。风险点是指架构设计中潜在并存在问题的架构决策所带来的隐患；非风险点是指架构设计中存在的问题造成的后果可以接受。</p><p>风险点代表：（b）；敏感点代表：（k）；权衡点代表：（g）。</p><p>&nbsp;</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 100,
      "belong_page": 1,
      "question_id": 502558,
      "question_title": "<p>【问题2】（13分）</p><p>请阐述系统架构敏感点、权衡点、风险点和非风险点的定义，并从（a）～（k）中选择一个描述，分别代表系统架构的风险点、敏感点和权衡点。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 502556,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件架构评估的说明，回答下列问题。</p><p>【说明】</p><p>某物流公司计划构建一套智能仓储系统，以提高货物分拣、存储和出库的效率与准确性。公司技术团队已经初步完成了系统架构设计，并召开了架构设计评估会议。会上，用户提出的需求、架构师识别的关键质量属性场景以及评估专家的意见等内容部分列举如下：</p><p>（a）系统需支持每分钟处理至少1000个货物分拣请求。</p><p>（b）如果不能解决货物存储位置定位问题，可能影响推广使用。</p><p>（c）系统单个节点故障不应影响整体服务。</p><p>（d）货物追踪信息需实时更新，延迟不超过1秒。</p><p>（e）系统需支持新增条形码和RFID扫描技术，以适应不同货物类型。</p><p>（f）所有货物进出库需经过双重验证。</p><p>（g）货物分拣的准确性需要保证，必要的时候可以降低速度。</p><p>（h）用户口令每90天必须更改。</p><p>（i）系统升级过程中需确保业务连续性，避免服务中断。</p><p>（j）公司如果增加新的仓库，可在2周内出现在驾驶舱。</p><p>（k）系统停机维护的时间对业务连续性影响很大。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>系统架构敏感点是为了实现某种特定质量属性，一个或多个系统组件所具有的特性；权衡点是影响多个质量属性，并对多个质量属性来说都是敏感点的系统属性。风险点是指架构设计中潜在并存在问题的架构决策所带来的隐患；非风险点是指架构设计中存在的问题造成的后果可以接受。</p><p>风险点代表：（b）；敏感点代表：（k）；权衡点代表：（g）。</p><p>&nbsp;</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 502560,
    "question_title": "<p>【问题1】（10分）</p><p>请根据题目所述需求，说明图书管理系统中有哪些参与者。并列举项目中使用的所有实体类。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>参与者有：读者、图书馆管理员、系统时间。</p><p>实体类有：图书、借阅记录、借阅报告、图书分类、读者账户、图书信息、违约记录。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 101,
      "belong_page": 1,
      "question_id": 502560,
      "question_title": "<p>【问题1】（10分）</p><p>请根据题目所述需求，说明图书管理系统中有哪些参与者。并列举项目中使用的所有实体类。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 502559,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于软件系统建模的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>一家图书馆计划开发一套图书管理系统，以提高图书借阅和管理的效率。该图书管理系统基本的需求包括：</p><p>(1) 读者需通过身份验证登录系统，才能借阅图书；</p><p>(2) 图书馆管理员管理图书的入库、出库、归还和分类；</p><p>(3) 读者可以搜索图书信息，查看图书详情，预约图书，并查看借阅历史；</p><p>(4) 系统自动记录图书的借阅情况，并定期生成借阅报告；</p><p>(5) 图书馆管理员可以批量导入图书信息，并管理读者账户；</p><p>(6) 系统支持读者在线续借图书；</p><p>(7) 系统在图书归还时自动检查是否超时，如超时则记录违约情况。</p><p>项目组决定采用UML进行系统建模。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>参与者有：读者、图书馆管理员、系统时间。</p><p>实体类有：图书、借阅记录、借阅报告、图书分类、读者账户、图书信息、违约记录。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 502561,
    "question_title": "<p>【问题2】（7分）</p><p>在UML建模中，顺序图用于描述对象之间交互的顺序。请指出在UML建模中，顺序图中的消息有哪些类型？对题目所述图书管理系统的需求建模时，“读者借阅图书”场景中的消息类型可能包括哪些？</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>顺序图中的消息类型包括：同步消息（Synchronous Message）、异步消息（Asynchronous Message）、返回消息（Return Message）和自关联消息（Self-Message）。</p><p>“读者借阅图书”场景中的消息类型可能包括：同步消息（如读者提交借阅请求，系统响应借阅成功或失败）、异步消息（如读者提交预约图书请求）、返回消息（如系统返回图书的详情）。</p><p>&nbsp;</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 102,
      "belong_page": 1,
      "question_id": 502561,
      "question_title": "<p>【问题2】（7分）</p><p>在UML建模中，顺序图用于描述对象之间交互的顺序。请指出在UML建模中，顺序图中的消息有哪些类型？对题目所述图书管理系统的需求建模时，“读者借阅图书”场景中的消息类型可能包括哪些？</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 502559,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于软件系统建模的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>一家图书馆计划开发一套图书管理系统，以提高图书借阅和管理的效率。该图书管理系统基本的需求包括：</p><p>(1) 读者需通过身份验证登录系统，才能借阅图书；</p><p>(2) 图书馆管理员管理图书的入库、出库、归还和分类；</p><p>(3) 读者可以搜索图书信息，查看图书详情，预约图书，并查看借阅历史；</p><p>(4) 系统自动记录图书的借阅情况，并定期生成借阅报告；</p><p>(5) 图书馆管理员可以批量导入图书信息，并管理读者账户；</p><p>(6) 系统支持读者在线续借图书；</p><p>(7) 系统在图书归还时自动检查是否超时，如超时则记录违约情况。</p><p>项目组决定采用UML进行系统建模。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>顺序图中的消息类型包括：同步消息（Synchronous Message）、异步消息（Asynchronous Message）、返回消息（Return Message）和自关联消息（Self-Message）。</p><p>“读者借阅图书”场景中的消息类型可能包括：同步消息（如读者提交借阅请求，系统响应借阅成功或失败）、异步消息（如读者提交预约图书请求）、返回消息（如系统返回图书的详情）。</p><p>&nbsp;</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 502562,
    "question_title": "<p>【问题3】（8分）</p><p>请列举顺序图中常见的几种元素。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）对象（Object），对象是系统中具有特定职责和行为的实体。</p><p>（2）生命线（Lifeline），生命线表示对象在交互过程中存在的时间线。</p><p>（3）激活（Activation）/ 控制焦点（Focus of Control），激活表示对象正在执行某个动作或处于活动状态的时间段。</p><p>（4）消息（Message），消息是对象之间传递的信息，用于触发接收对象的动作或状态变化。</p><p>（5）交互片段（Interaction Fragment），交互片段用于表示顺序图中的一组特殊交互，如循环、条件分支等。</p><p>（答出4种即满分）</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 103,
      "belong_page": 1,
      "question_id": 502562,
      "question_title": "<p>【问题3】（8分）</p><p>请列举顺序图中常见的几种元素。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 502559,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于软件系统建模的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>一家图书馆计划开发一套图书管理系统，以提高图书借阅和管理的效率。该图书管理系统基本的需求包括：</p><p>(1) 读者需通过身份验证登录系统，才能借阅图书；</p><p>(2) 图书馆管理员管理图书的入库、出库、归还和分类；</p><p>(3) 读者可以搜索图书信息，查看图书详情，预约图书，并查看借阅历史；</p><p>(4) 系统自动记录图书的借阅情况，并定期生成借阅报告；</p><p>(5) 图书馆管理员可以批量导入图书信息，并管理读者账户；</p><p>(6) 系统支持读者在线续借图书；</p><p>(7) 系统在图书归还时自动检查是否超时，如超时则记录违约情况。</p><p>项目组决定采用UML进行系统建模。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）对象（Object），对象是系统中具有特定职责和行为的实体。</p><p>（2）生命线（Lifeline），生命线表示对象在交互过程中存在的时间线。</p><p>（3）激活（Activation）/ 控制焦点（Focus of Control），激活表示对象正在执行某个动作或处于活动状态的时间段。</p><p>（4）消息（Message），消息是对象之间传递的信息，用于触发接收对象的动作或状态变化。</p><p>（5）交互片段（Interaction Fragment），交互片段用于表示顺序图中的一组特殊交互，如循环、条件分支等。</p><p>（答出4种即满分）</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 502569,
    "question_title": "<p>【问题1】（13分）</p><p>请简述分布式数据库缓存的主要作用，并比较ElastiCache与自建Redis集群在成本、灵活性和扩展性方面的差异。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>分布式数据库缓存的主要作用是减少数据库访问压力，提高数据访问速度，从而提升系统整体性能。ElastiCache与自建Redis集群的差异在于：</p><p>（1）成本：ElastiCache提供按需付费的云服务，初期成本较低，但业务增长后长期成本可能较高；自建Redis集群需要自行承担硬件和维护成本，但长期成本可控。</p><p>（2）灵活性：ElastiCache提供多种配置选项，但可能受限于云服务提供商的设定；自建Redis集群可以根据业务需求自由配置和优化。</p><p>（3）扩展性：ElastiCache支持自动扩展，但可能受限于云服务提供商的扩展策略；自建Redis集群可以通过增加节点和重新分片来灵活扩展。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 104,
      "belong_page": 1,
      "question_id": 502569,
      "question_title": "<p>【问题1】（13分）</p><p>请简述分布式数据库缓存的主要作用，并比较ElastiCache与自建Redis集群在成本、灵活性和扩展性方面的差异。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 502568,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于分布式数据库缓存设计的叙述，在答题纸上回答问题1至问题2。</p><p>【说明】</p><p>一家金融科技公司为了提升交易系统的处理能力和响应速度，决定引入分布式缓存系统。王工提出使用ElastiCache（基于Amazon的Redis或Memcached服务）作为缓存解决方案，而赵工则倾向于使用自建的Redis集群。考虑到金融数据的敏感性和一致性要求，技术团队决定采用Redis集群作为缓存解决方案，并计划实施严格的数据同步和一致性控制策略。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>分布式数据库缓存的主要作用是减少数据库访问压力，提高数据访问速度，从而提升系统整体性能。ElastiCache与自建Redis集群的差异在于：</p><p>（1）成本：ElastiCache提供按需付费的云服务，初期成本较低，但业务增长后长期成本可能较高；自建Redis集群需要自行承担硬件和维护成本，但长期成本可控。</p><p>（2）灵活性：ElastiCache提供多种配置选项，但可能受限于云服务提供商的设定；自建Redis集群可以根据业务需求自由配置和优化。</p><p>（3）扩展性：ElastiCache支持自动扩展，但可能受限于云服务提供商的扩展策略；自建Redis集群可以通过增加节点和重新分片来灵活扩展。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 502570,
    "question_title": "<p>【问题2】（12分）</p><p>列举Redis集群的三种模式并比较其优缺点。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>Redis集群的三种主要模式包括主从模式、哨兵（Sentinel）模式和集群（Cluster）模式，每种方式都有其独特的优缺点。以下是对这三种方式的详细比较：</p><p>（1）主从模式</p><p>优点：读写分离、同步非阻塞服务、负载均衡。</p><p>缺点：容错性差、数据一致性差、在线扩容困难。</p><p>（2）哨兵模式</p><p>优点：自动故障转移、监控与通知、简化运维管理。</p><p>缺点：部署复杂、网络通信频繁、在线扩容困难。</p><p>（3）集群模式</p><p>优点：无中心架构、可用性好、伸缩性较好、降低运维成本。</p><p>缺点：配置复杂、数据一致性差、客户端实现复杂、资源隔离性差。</p><p>（每个答出4点即可满分）</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 105,
      "belong_page": 1,
      "question_id": 502570,
      "question_title": "<p>【问题2】（12分）</p><p>列举Redis集群的三种模式并比较其优缺点。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 502568,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于分布式数据库缓存设计的叙述，在答题纸上回答问题1至问题2。</p><p>【说明】</p><p>一家金融科技公司为了提升交易系统的处理能力和响应速度，决定引入分布式缓存系统。王工提出使用ElastiCache（基于Amazon的Redis或Memcached服务）作为缓存解决方案，而赵工则倾向于使用自建的Redis集群。考虑到金融数据的敏感性和一致性要求，技术团队决定采用Redis集群作为缓存解决方案，并计划实施严格的数据同步和一致性控制策略。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>Redis集群的三种主要模式包括主从模式、哨兵（Sentinel）模式和集群（Cluster）模式，每种方式都有其独特的优缺点。以下是对这三种方式的详细比较：</p><p>（1）主从模式</p><p>优点：读写分离、同步非阻塞服务、负载均衡。</p><p>缺点：容错性差、数据一致性差、在线扩容困难。</p><p>（2）哨兵模式</p><p>优点：自动故障转移、监控与通知、简化运维管理。</p><p>缺点：部署复杂、网络通信频繁、在线扩容困难。</p><p>（3）集群模式</p><p>优点：无中心架构、可用性好、伸缩性较好、降低运维成本。</p><p>缺点：配置复杂、数据一致性差、客户端实现复杂、资源隔离性差。</p><p>（每个答出4点即可满分）</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 502572,
    "question_title": "<p>【问题1】（5分）</p><p>简述微服务架构相较于传统单体架构的主要优势。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>微服务架构相较于传统单体架构的主要优势包括：</p><p>(1)&nbsp;高可伸缩性：微服务架构允许独立地伸缩各个服务，根据业务需求灵活调整资源，而不需要对整个应用进行调整。</p><p>(2)&nbsp;技术栈灵活性：每个微服务可以使用最适合其需求的技术栈进行开发，无需受限于整个应用的技术选择。</p><p>(3)&nbsp;快速迭代和部署：由于服务之间的解耦，团队可以并行开发、测试和部署不同的服务，从而加快产品迭代速度。</p><p>(4)&nbsp;故障隔离：单个服务的故障不会影响到整个系统，提高了系统的稳定性和可靠性。</p><p>(5)&nbsp;更好的团队协作：微服务架构促进了小型、自治的团队形成，每个团队可以专注于自己的服务，提高了开发效率和代码质量。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 106,
      "belong_page": 1,
      "question_id": 502572,
      "question_title": "<p>【问题1】（5分）</p><p>简述微服务架构相较于传统单体架构的主要优势。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 502571,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web电商平台架构设计的描述，回答下列问题。</p><p>【说明】</p><p>某电商平台计划开发一个面向全球消费者的在线购物系统，该系统需支持多语言、多货币及多地区配送。为应对未来用户量激增及高并发交易的需求，系统需具备高度可扩展性和高可用性。项目团队决定采用微服务架构进行系统设计，并计划使用Docker容器化技术部署服务。</p><p>在架构设计过程中，需考虑以下关键因素：</p><p>(1)&nbsp;系统需支持分布式事务处理，确保数据一致性；</p><p>(2)&nbsp;采用微服务架构后，服务间的通信和数据共享需高效且安全；</p><p>(3)&nbsp;系统需集成多种支付方式，并符合不同地区的支付法规；</p><p>(4)&nbsp;考虑到全球访问，需部署CDN以优化用户体验。</p><p>团队初步规划了用户服务、商品服务、订单服务、支付服务等几个核心微服务，并讨论了服务间的调用机制及数据同步方案。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>微服务架构相较于传统单体架构的主要优势包括：</p><p>(1)&nbsp;高可伸缩性：微服务架构允许独立地伸缩各个服务，根据业务需求灵活调整资源，而不需要对整个应用进行调整。</p><p>(2)&nbsp;技术栈灵活性：每个微服务可以使用最适合其需求的技术栈进行开发，无需受限于整个应用的技术选择。</p><p>(3)&nbsp;快速迭代和部署：由于服务之间的解耦，团队可以并行开发、测试和部署不同的服务，从而加快产品迭代速度。</p><p>(4)&nbsp;故障隔离：单个服务的故障不会影响到整个系统，提高了系统的稳定性和可靠性。</p><p>(5)&nbsp;更好的团队协作：微服务架构促进了小型、自治的团队形成，每个团队可以专注于自己的服务，提高了开发效率和代码质量。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 502573,
    "question_title": "<p>【问题2】（12分）</p><p>在微服务架构下，服务间的通信和数据共享是核心问题之一。请比较常见的服务间通信方式RESTful API和gRPC，并基于电商平台的需求，推荐一种合适的通信方式并说明选择原因。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>RESTful API和gRPC的区别如下：</p><p>（1）RESTful API：基于HTTP协议，使用JSON或XML等格式进行数据传输，具有良好的跨平台性和易用性。它支持丰富的HTTP方法（如GET、POST、PUT、DELETE等），便于实现资源的CRUD操作。对于电商平台而言，RESTful API因其简单性和广泛的支持度，是一个很好的选择。它允许前端、移动应用和其他服务通过统一的接口与后端服务进行交互。</p><p>（2）gRPC：由Google开发，基于HTTP/2协议，支持多种语言，并使用Protocol Buffers作为接口定义语言（IDL）。gRPC在性能上略优于RESTful API，特别是在需要低延迟和高吞吐量的场景下。然而不如RESTful API那样易于学习和使用，且对客户端的支持不如RESTful API广泛。</p><p>基于电商平台的需求，推荐采用RESTful API作为服务间的通信方式。原因包括：</p><p>（1）电商平台通常需要与多种客户端（如Web前端、移动应用、第三方服务等）进行交互，RESTful API的广泛支持度使其成为理想选择。</p><p>（2）RESTful API的易用性和简单性有助于降低开发成本和提高开发效率。</p><p>（3）常见电商平台对实时性要求不是特别高，因此RESTful API的性能足以满足需求。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 107,
      "belong_page": 1,
      "question_id": 502573,
      "question_title": "<p>【问题2】（12分）</p><p>在微服务架构下，服务间的通信和数据共享是核心问题之一。请比较常见的服务间通信方式RESTful API和gRPC，并基于电商平台的需求，推荐一种合适的通信方式并说明选择原因。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 502571,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web电商平台架构设计的描述，回答下列问题。</p><p>【说明】</p><p>某电商平台计划开发一个面向全球消费者的在线购物系统，该系统需支持多语言、多货币及多地区配送。为应对未来用户量激增及高并发交易的需求，系统需具备高度可扩展性和高可用性。项目团队决定采用微服务架构进行系统设计，并计划使用Docker容器化技术部署服务。</p><p>在架构设计过程中，需考虑以下关键因素：</p><p>(1)&nbsp;系统需支持分布式事务处理，确保数据一致性；</p><p>(2)&nbsp;采用微服务架构后，服务间的通信和数据共享需高效且安全；</p><p>(3)&nbsp;系统需集成多种支付方式，并符合不同地区的支付法规；</p><p>(4)&nbsp;考虑到全球访问，需部署CDN以优化用户体验。</p><p>团队初步规划了用户服务、商品服务、订单服务、支付服务等几个核心微服务，并讨论了服务间的调用机制及数据同步方案。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>RESTful API和gRPC的区别如下：</p><p>（1）RESTful API：基于HTTP协议，使用JSON或XML等格式进行数据传输，具有良好的跨平台性和易用性。它支持丰富的HTTP方法（如GET、POST、PUT、DELETE等），便于实现资源的CRUD操作。对于电商平台而言，RESTful API因其简单性和广泛的支持度，是一个很好的选择。它允许前端、移动应用和其他服务通过统一的接口与后端服务进行交互。</p><p>（2）gRPC：由Google开发，基于HTTP/2协议，支持多种语言，并使用Protocol Buffers作为接口定义语言（IDL）。gRPC在性能上略优于RESTful API，特别是在需要低延迟和高吞吐量的场景下。然而不如RESTful API那样易于学习和使用，且对客户端的支持不如RESTful API广泛。</p><p>基于电商平台的需求，推荐采用RESTful API作为服务间的通信方式。原因包括：</p><p>（1）电商平台通常需要与多种客户端（如Web前端、移动应用、第三方服务等）进行交互，RESTful API的广泛支持度使其成为理想选择。</p><p>（2）RESTful API的易用性和简单性有助于降低开发成本和提高开发效率。</p><p>（3）常见电商平台对实时性要求不是特别高，因此RESTful API的性能足以满足需求。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 502574,
    "question_title": "<p>【问题3】（8分）</p><p>在微服务架构下，如何确保各个微服务之间的数据一致性和服务的高可用性？请列举几种常见的策略或技术。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>(1)&nbsp;分布式事务：使用两阶段提交（2PC）、三阶段提交（3PC）或基于SAGA模式等分布式事务解决方案，确保跨多个服务的数据一致性。然而，分布式事务可能会引入额外的复杂性和性能开销，因此需要谨慎使用。</p><p>(2)&nbsp;最终一致性：在不需要强一致性的场景下，可以采用最终一致性模型。通过事件驱动架构（EDA）或消息队列等方式，异步地更新数据，并在一段时间后达到一致状态。这种方式可以提高系统的可用性和性能。</p><p>(3)&nbsp;服务熔断与降级：为了防止某个服务的故障影响到整个系统，可以实施服务熔断机制。当服务调用失败率达到一定阈值时，自动熔断该服务，防止进一步的失败扩散。同时，可以实施服务降级策略，在资源不足或系统负载过高时，提供简化的服务响应。</p><p>(4)&nbsp;服务注册与发现：使用服务注册中心（如Eureka、Consul等）来管理服务的注册和发现。服务实例在启动时向注册中心注册自己，并在关闭时注销。其他服务通过注册中心来发现需要调用的服务实例，从而实现服务的动态发现和负载均衡。</p><p>(5)&nbsp;数据复制与缓存：通过数据复制和缓存技术，提高数据的可用性和访问速度。例如，可以使用数据库的主从复制来确保数据的高可用性，并使用缓存（如Redis、Memcached等）来减少数据库的访问压力和提高数据访问速度。</p><p>(6)&nbsp;API网关：在微服务架构中，API网关作为所有客户端请求的入口点，负责路由、过滤、认证、限流等职责。通过API网关，可以集中管理跨服务的通信和数据共享，提高系统的安全性和可维护性。</p><p>（答出4条即可）</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 108,
      "belong_page": 1,
      "question_id": 502574,
      "question_title": "<p>【问题3】（8分）</p><p>在微服务架构下，如何确保各个微服务之间的数据一致性和服务的高可用性？请列举几种常见的策略或技术。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 502571,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web电商平台架构设计的描述，回答下列问题。</p><p>【说明】</p><p>某电商平台计划开发一个面向全球消费者的在线购物系统，该系统需支持多语言、多货币及多地区配送。为应对未来用户量激增及高并发交易的需求，系统需具备高度可扩展性和高可用性。项目团队决定采用微服务架构进行系统设计，并计划使用Docker容器化技术部署服务。</p><p>在架构设计过程中，需考虑以下关键因素：</p><p>(1)&nbsp;系统需支持分布式事务处理，确保数据一致性；</p><p>(2)&nbsp;采用微服务架构后，服务间的通信和数据共享需高效且安全；</p><p>(3)&nbsp;系统需集成多种支付方式，并符合不同地区的支付法规；</p><p>(4)&nbsp;考虑到全球访问，需部署CDN以优化用户体验。</p><p>团队初步规划了用户服务、商品服务、订单服务、支付服务等几个核心微服务，并讨论了服务间的调用机制及数据同步方案。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>(1)&nbsp;分布式事务：使用两阶段提交（2PC）、三阶段提交（3PC）或基于SAGA模式等分布式事务解决方案，确保跨多个服务的数据一致性。然而，分布式事务可能会引入额外的复杂性和性能开销，因此需要谨慎使用。</p><p>(2)&nbsp;最终一致性：在不需要强一致性的场景下，可以采用最终一致性模型。通过事件驱动架构（EDA）或消息队列等方式，异步地更新数据，并在一段时间后达到一致状态。这种方式可以提高系统的可用性和性能。</p><p>(3)&nbsp;服务熔断与降级：为了防止某个服务的故障影响到整个系统，可以实施服务熔断机制。当服务调用失败率达到一定阈值时，自动熔断该服务，防止进一步的失败扩散。同时，可以实施服务降级策略，在资源不足或系统负载过高时，提供简化的服务响应。</p><p>(4)&nbsp;服务注册与发现：使用服务注册中心（如Eureka、Consul等）来管理服务的注册和发现。服务实例在启动时向注册中心注册自己，并在关闭时注销。其他服务通过注册中心来发现需要调用的服务实例，从而实现服务的动态发现和负载均衡。</p><p>(5)&nbsp;数据复制与缓存：通过数据复制和缓存技术，提高数据的可用性和访问速度。例如，可以使用数据库的主从复制来确保数据的高可用性，并使用缓存（如Redis、Memcached等）来减少数据库的访问压力和提高数据访问速度。</p><p>(6)&nbsp;API网关：在微服务架构中，API网关作为所有客户端请求的入口点，负责路由、过滤、认证、限流等职责。通过API网关，可以集中管理跨服务的通信和数据共享，提高系统的安全性和可维护性。</p><p>（答出4条即可）</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 503117,
    "question_title": "1、微服务的介绍，并说明微服务的优缺点。(7分）",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>1、微服务的介绍，并说明微服务的优缺点。(7分）</p><p>微服务是一种架构风格，将单体应用划分成一组小的服务，服务之间相互协作，实现业务功能每个服务运行在独立的进程中，服务间采用轻量级的通信机制协作(通常是HTTP/JSON)，每个服务围绕业务能力进行构建，并且能够通过自动化机制独立地部署。</p><p>与单体式架构相比，微服务有以下优势：</p><p>（1）通过分解巨大单体式应用为多个服务方法解决了复杂性问题。它把庞大的单一模块应用分解为一系列的服务，同时保持总体功能不变，但整体并发却得到极大提升。</p><p>（2）让每个服务能够独立开发，开发者能够自由选择可行的技术，提供API服务。</p><p>（3）微服务架构模式是每个微服务独立的部署。开发者不再需要协调其他服务部署对本服务的影响。这种改变可以加快部署速度。</p><p>（4）微服务使得每个服务独立扩展。你可以根据每个服务的规模来部署满足需求的规模。甚至可以使用更适合于服务资源需求的硬件。</p><p>微服务架构带来的挑战如下：</p><p>（1）并非所有的系统都能转成微服务。</p><p>（2）部署较单体架构更加复杂：系统由众多微服务搭建，每个微服务需要单独部署，从而增加部署的复杂度，容器技术能够解决这一问题。</p><p>（3）性能问题：由于微服务注重独立性，互相通信时只能通过标准接口，可能产生延迟或调用出错。</p><p>（4）数据一致性问题：作为分布式部署的微服务，在保持数据一致性方面需要比传统架构更加困难。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 109,
      "belong_page": 1,
      "question_id": 503117,
      "question_title": "1、微服务的介绍，并说明微服务的优缺点。(7分）",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 503116,
      "score_rule": "",
      "material_text": "<p>第1题 &nbsp;软件架构设计与评估（真题回忆版-暂无题干）</p><p><br/></p><p>微服务模式<br/><img src=\"https://s2.51cto.com/images/20240924/1727127089272646.png\" title=\"1727127089272646.png\" alt=\"image.png\"/></p><p>SOA与微服务</p><p><img src=\"https://s2.51cto.com/images/20240924/1727127079568828.png\" title=\"1727127079568828.png\" alt=\"image.png\"/><br/><img src=\"https://s2.51cto.com/images/20240924/1727127099227088.png\" title=\"1727127099227088.png\" alt=\"image.png\"/></p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>1、微服务的介绍，并说明微服务的优缺点。(7分）</p><p>微服务是一种架构风格，将单体应用划分成一组小的服务，服务之间相互协作，实现业务功能每个服务运行在独立的进程中，服务间采用轻量级的通信机制协作(通常是HTTP/JSON)，每个服务围绕业务能力进行构建，并且能够通过自动化机制独立地部署。</p><p>与单体式架构相比，微服务有以下优势：</p><p>（1）通过分解巨大单体式应用为多个服务方法解决了复杂性问题。它把庞大的单一模块应用分解为一系列的服务，同时保持总体功能不变，但整体并发却得到极大提升。</p><p>（2）让每个服务能够独立开发，开发者能够自由选择可行的技术，提供API服务。</p><p>（3）微服务架构模式是每个微服务独立的部署。开发者不再需要协调其他服务部署对本服务的影响。这种改变可以加快部署速度。</p><p>（4）微服务使得每个服务独立扩展。你可以根据每个服务的规模来部署满足需求的规模。甚至可以使用更适合于服务资源需求的硬件。</p><p>微服务架构带来的挑战如下：</p><p>（1）并非所有的系统都能转成微服务。</p><p>（2）部署较单体架构更加复杂：系统由众多微服务搭建，每个微服务需要单独部署，从而增加部署的复杂度，容器技术能够解决这一问题。</p><p>（3）性能问题：由于微服务注重独立性，互相通信时只能通过标准接口，可能产生延迟或调用出错。</p><p>（4）数据一致性问题：作为分布式部署的微服务，在保持数据一致性方面需要比传统架构更加困难。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 503118,
    "question_title": "2、质量效用树，填空。(6分）",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>2、质量效用树，填空。(6分）</p><p>这题答案比较简单，属于常考的题型，</p><p>填入哪些属于可用性，安全性，可修改性等。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240924/1727127221930536.png\" title=\"1727127221930536.png\" alt=\"image.png\"/>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 110,
      "belong_page": 1,
      "question_id": 503118,
      "question_title": "2、质量效用树，填空。(6分）",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 503116,
      "score_rule": "",
      "material_text": "<p>第1题 &nbsp;软件架构设计与评估（真题回忆版-暂无题干）</p><p><br/></p><p>微服务模式<br/><img src=\"https://s2.51cto.com/images/20240924/1727127089272646.png\" title=\"1727127089272646.png\" alt=\"image.png\"/></p><p>SOA与微服务</p><p><img src=\"https://s2.51cto.com/images/20240924/1727127079568828.png\" title=\"1727127079568828.png\" alt=\"image.png\"/><br/><img src=\"https://s2.51cto.com/images/20240924/1727127099227088.png\" title=\"1727127099227088.png\" alt=\"image.png\"/></p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>2、质量效用树，填空。(6分）</p><p>这题答案比较简单，属于常考的题型，</p><p>填入哪些属于可用性，安全性，可修改性等。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240924/1727127221930536.png\" title=\"1727127221930536.png\" alt=\"image.png\"/>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 503119,
    "question_title": "3、质量属性场景中，使用六元素来描述题目中可用性的两个场景。(12分）",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>3、质量属性场景中，使用六元素来描述题目中可用性的两个场景。(12分）</p><p>六元素：</p><p>刺激源：某个生成该刺激的实体（人，计算机，其它任何刺激器）；</p><p>刺激：指当刺激达到系统时需要考虑的条件；</p><p>环境：指该刺激在某些条件哪发生；</p><p>制品：某个制品被激励，可能是整个系统，也可能是系统的一部分；</p><p>响应：指在激励达到后所采取的行动；</p><p>响应度量：当响应发生时，应当能够以某种方式对其进行度量。</p><img style=\"max-width:100%;height:auto\"  class=\"loadingclass\" id=\"loading_m1fiytst\" src=\"https://static2.51cto.com/edu/exam/ueditor1.4.3/themes/default/images/spacer.gif\" title=\"正在上传...\"/>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 111,
      "belong_page": 1,
      "question_id": 503119,
      "question_title": "3、质量属性场景中，使用六元素来描述题目中可用性的两个场景。(12分）",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 503116,
      "score_rule": "",
      "material_text": "<p>第1题 &nbsp;软件架构设计与评估（真题回忆版-暂无题干）</p><p><br/></p><p>微服务模式<br/><img src=\"https://s2.51cto.com/images/20240924/1727127089272646.png\" title=\"1727127089272646.png\" alt=\"image.png\"/></p><p>SOA与微服务</p><p><img src=\"https://s2.51cto.com/images/20240924/1727127079568828.png\" title=\"1727127079568828.png\" alt=\"image.png\"/><br/><img src=\"https://s2.51cto.com/images/20240924/1727127099227088.png\" title=\"1727127099227088.png\" alt=\"image.png\"/></p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>3、质量属性场景中，使用六元素来描述题目中可用性的两个场景。(12分）</p><p>六元素：</p><p>刺激源：某个生成该刺激的实体（人，计算机，其它任何刺激器）；</p><p>刺激：指当刺激达到系统时需要考虑的条件；</p><p>环境：指该刺激在某些条件哪发生；</p><p>制品：某个制品被激励，可能是整个系统，也可能是系统的一部分；</p><p>响应：指在激励达到后所采取的行动；</p><p>响应度量：当响应发生时，应当能够以某种方式对其进行度量。</p><img style=\"max-width:100%;height:auto\"  class=\"loadingclass\" id=\"loading_m1fiytst\" src=\"https://static2.51cto.com/edu/exam/ueditor1.4.3/themes/default/images/spacer.gif\" title=\"正在上传...\"/>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 503121,
    "question_title": "<p>1、UML时序图的三种消息及其概念</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>1、UML时序图的三种消息及其概念</p><p>同步消息：消息的发送者把控制传递给消息的接收者，然后停止活动，等待消息的接收者放弃或者返回控制。用来表示同步的意义。</p><p>异步消息：消息发送者通过消息把信号传递给消息的接收者，然后继续自己的活动，不等待接受者返回消息或者控制。异步消息的接收者和发送者是并发工作的。</p><p>返回消息：返回消息表示从过程调用返回。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 112,
      "belong_page": 1,
      "question_id": 503121,
      "question_title": "<p>1、UML时序图的三种消息及其概念</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 503120,
      "score_rule": "",
      "material_text": "<p>第2题 &nbsp;系统设计与建模</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>1、UML时序图的三种消息及其概念</p><p>同步消息：消息的发送者把控制传递给消息的接收者，然后停止活动，等待消息的接收者放弃或者返回控制。用来表示同步的意义。</p><p>异步消息：消息发送者通过消息把信号传递给消息的接收者，然后继续自己的活动，不等待接受者返回消息或者控制。异步消息的接收者和发送者是并发工作的。</p><p>返回消息：返回消息表示从过程调用返回。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 503122,
    "question_title": "2、系统分析设计过程中时序图和协作图两种交互图的选取原则",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>2、系统分析设计过程中时序图和协作图两种交互图的选取原则</p><p>时序图的选取原则：</p><p>强调时间顺序：适用于展示对象之间消息传递的时间顺序和动态行为，描述系统中的事件发生顺序。</p><p>展示交互的时间线：清晰展示用例或场景中各对象在不同时间点的状态变化，帮助理解系统的时间维度行为。</p><p>描述复杂的交互场景：适用于多个对象和复杂交互的场景，通过时间线展示消息传递的先后顺序，使复杂交互过程易于理解。</p><p>协作图的选取原则：</p><p>强调对象间的关系：展示对象之间的链接和关系结构，适用于静态连接和通信路径的展示。</p><p>展示对象的结构关系：描述对象如何协作完成任务，强调对象之间的静态结构和协作方式。</p><p>突出对象间的通信：适用于展示对象间的通信和交互，而不是时间顺序，清晰展示对象之间的消息传递和关联关系。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 113,
      "belong_page": 1,
      "question_id": 503122,
      "question_title": "2、系统分析设计过程中时序图和协作图两种交互图的选取原则",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 503120,
      "score_rule": "",
      "material_text": "<p>第2题 &nbsp;系统设计与建模</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>2、系统分析设计过程中时序图和协作图两种交互图的选取原则</p><p>时序图的选取原则：</p><p>强调时间顺序：适用于展示对象之间消息传递的时间顺序和动态行为，描述系统中的事件发生顺序。</p><p>展示交互的时间线：清晰展示用例或场景中各对象在不同时间点的状态变化，帮助理解系统的时间维度行为。</p><p>描述复杂的交互场景：适用于多个对象和复杂交互的场景，通过时间线展示消息传递的先后顺序，使复杂交互过程易于理解。</p><p>协作图的选取原则：</p><p>强调对象间的关系：展示对象之间的链接和关系结构，适用于静态连接和通信路径的展示。</p><p>展示对象的结构关系：描述对象如何协作完成任务，强调对象之间的静态结构和协作方式。</p><p>突出对象间的通信：适用于展示对象间的通信和交互，而不是时间顺序，清晰展示对象之间的消息传递和关联关系。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 503123,
    "question_title": "<p>3、UML时序图表示条件分支序列片段有哪些？</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240924/1727127417807700.png\" title=\"1727127417807700.png\" alt=\"image.png\"/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240924/1727127367878699.png\" title=\"1727127367878699.png\" alt=\"image.png\"/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240924/1727127337220493.png\" title=\"1727127337220493.png\" alt=\"image.png\"/><p>时序图，又名序列图、顺序图，是一种UML交互图。它通过描述对象之间发送消息的时间顺序显示多个对象之间的动态协作。时序图的元素包括：</p><p>1、角色(Actor)：可以是人或者其他系统，子系统，以一个小人图标表示；</p><p>2、对象(Object)：对象位于时序图的顶部，以一个矩形表示；</p><p>3、生命线(LifeLine)：每个对象和底部中心都有一条垂直的虚线(对象的时间线)；</p><p>4、控制焦点(Activation)：对象时间线上某段时期执行的操作，以一个很窄的矩形表示；</p><p>5、消息(Message)：角色与对象之间发送的信息；</p><p>6、自关联消息：表示方法的自身调用或者一个对象内的一个方法调用另外一个方法。以一个半闭合的长方形+下方实心剪头表示。</p><p>时序图中，消息分为四种类型：</p><p>1、同步消息：消息的发送者把控制传递给消息的接收者，然后停止活动，等待消息的接收者放弃或者返回控制。用来表示同步的意义。以一条实线+实心箭头表示。</p><p>&nbsp;</p><p>2、异步消息：消息发送者通过消息把信号传递给消息的接收者，然后继续自己的活动，不等待接受者返回消息或者控制。异步消息的接收者和发送者是并发工作的。以一条实线+大于号表示。</p><p>&nbsp;</p><p>3、返回消息：返回消息表示从过程调用返回。以小于号+虚线表示。</p><p>&nbsp;</p><p>4、自关联消息：表示方法的自身调用或者一个对象内的一个方法调用另外一个方法。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240924/1727127351595000.png\" title=\"1727127351595000.png\" alt=\"image.png\"/><br/><p>组合片段： 用来解决交互执行的条件及方式。</p><p>它允许在序列图中直接表示逻辑组件，用于通过指定条件或子进程的应用区域，为任何生命线的任何部分定义特殊条件和子进程。</p><p>&nbsp;</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240924/1727127376589088.png\" title=\"1727127376589088.png\" alt=\"image.png\"/><br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240924/1727127384888804.png\" title=\"1727127384888804.png\" alt=\"image.png\"/><br/><p>UML协作图，又称为通信图，是UML的一种交互图，用于描述对象之间的交互以及它们之间的协作关系。它主要展示对象如何通过消息进行交互，来实现某一特定的功能或行为。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240924/1727127402285249.png\" title=\"1727127402285249.png\" alt=\"image.png\"/><br/><p>协作图和时序图都来自UML元模型的相同信息，因此它们的语义是等价的，二者可以相互转换。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240924/1727127434945986.png\" title=\"1727127434945986.png\" alt=\"image.png\"/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240924/1727127440367328.png\" title=\"1727127440367328.png\" alt=\"image.png\"/></p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>UML时序图表示条件分支序列片段有哪些？</p><p>可选片段：关键字为 opt，表示一种单条件分支。</p><p>条件片段：关键宇为 alt，表示一种多条件分支。</p><p>并行片段：关键字为 par，表示片段内有两个或更多的并行子片段。</p><p>循环片段：关键字为loop，表示一个循环。</p><p>中断片段：关键字为break，表示一个含有监护条件的子片段。</p><p><br/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 114,
      "belong_page": 1,
      "question_id": 503123,
      "question_title": "<p>3、UML时序图表示条件分支序列片段有哪些？</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240924/1727127417807700.png\" title=\"1727127417807700.png\" alt=\"image.png\"/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240924/1727127367878699.png\" title=\"1727127367878699.png\" alt=\"image.png\"/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240924/1727127337220493.png\" title=\"1727127337220493.png\" alt=\"image.png\"/><p>时序图，又名序列图、顺序图，是一种UML交互图。它通过描述对象之间发送消息的时间顺序显示多个对象之间的动态协作。时序图的元素包括：</p><p>1、角色(Actor)：可以是人或者其他系统，子系统，以一个小人图标表示；</p><p>2、对象(Object)：对象位于时序图的顶部，以一个矩形表示；</p><p>3、生命线(LifeLine)：每个对象和底部中心都有一条垂直的虚线(对象的时间线)；</p><p>4、控制焦点(Activation)：对象时间线上某段时期执行的操作，以一个很窄的矩形表示；</p><p>5、消息(Message)：角色与对象之间发送的信息；</p><p>6、自关联消息：表示方法的自身调用或者一个对象内的一个方法调用另外一个方法。以一个半闭合的长方形+下方实心剪头表示。</p><p>时序图中，消息分为四种类型：</p><p>1、同步消息：消息的发送者把控制传递给消息的接收者，然后停止活动，等待消息的接收者放弃或者返回控制。用来表示同步的意义。以一条实线+实心箭头表示。</p><p>&nbsp;</p><p>2、异步消息：消息发送者通过消息把信号传递给消息的接收者，然后继续自己的活动，不等待接受者返回消息或者控制。异步消息的接收者和发送者是并发工作的。以一条实线+大于号表示。</p><p>&nbsp;</p><p>3、返回消息：返回消息表示从过程调用返回。以小于号+虚线表示。</p><p>&nbsp;</p><p>4、自关联消息：表示方法的自身调用或者一个对象内的一个方法调用另外一个方法。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240924/1727127351595000.png\" title=\"1727127351595000.png\" alt=\"image.png\"/><br/><p>组合片段： 用来解决交互执行的条件及方式。</p><p>它允许在序列图中直接表示逻辑组件，用于通过指定条件或子进程的应用区域，为任何生命线的任何部分定义特殊条件和子进程。</p><p>&nbsp;</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240924/1727127376589088.png\" title=\"1727127376589088.png\" alt=\"image.png\"/><br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240924/1727127384888804.png\" title=\"1727127384888804.png\" alt=\"image.png\"/><br/><p>UML协作图，又称为通信图，是UML的一种交互图，用于描述对象之间的交互以及它们之间的协作关系。它主要展示对象如何通过消息进行交互，来实现某一特定的功能或行为。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240924/1727127402285249.png\" title=\"1727127402285249.png\" alt=\"image.png\"/><br/><p>协作图和时序图都来自UML元模型的相同信息，因此它们的语义是等价的，二者可以相互转换。<br/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240924/1727127434945986.png\" title=\"1727127434945986.png\" alt=\"image.png\"/><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240924/1727127440367328.png\" title=\"1727127440367328.png\" alt=\"image.png\"/></p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 503120,
      "score_rule": "",
      "material_text": "<p>第2题 &nbsp;系统设计与建模</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>UML时序图表示条件分支序列片段有哪些？</p><p>可选片段：关键字为 opt，表示一种单条件分支。</p><p>条件片段：关键宇为 alt，表示一种多条件分支。</p><p>并行片段：关键字为 par，表示片段内有两个或更多的并行子片段。</p><p>循环片段：关键字为loop，表示一个循环。</p><p>中断片段：关键字为break，表示一个含有监护条件的子片段。</p><p><br/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 503125,
    "question_title": "<p>1、数据库类型选择，从下列选择中填入（1）到（7）。(11分)</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240924/1727127821757301.png\" title=\"1727127821757301.png\" alt=\"image.png\"/><p>选项如下：</p><p>（A）处理层</p><p>（B）接口层</p><p>（C）存储层</p><p>（D）HBase</p><p>（E）HDFS</p><p>（F）ES</p><p>（G）MySQL</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250316/1742056394439566.png\" title=\"1742056394439566.png\" alt=\"image.png\"/>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 115,
      "belong_page": 1,
      "question_id": 503125,
      "question_title": "<p>1、数据库类型选择，从下列选择中填入（1）到（7）。(11分)</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20240924/1727127821757301.png\" title=\"1727127821757301.png\" alt=\"image.png\"/><p>选项如下：</p><p>（A）处理层</p><p>（B）接口层</p><p>（C）存储层</p><p>（D）HBase</p><p>（E）HDFS</p><p>（F）ES</p><p>（G）MySQL</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 503124,
      "score_rule": "",
      "material_text": "<p>第5题 &nbsp;Web架构</p><p><br/></p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250316/1742056394439566.png\" title=\"1742056394439566.png\" alt=\"image.png\"/>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 503126,
    "question_title": "<p>2、MongoDB特点(10分)</p><p>2.1 说明MongoDB如何实现空间矢量化存储的。</p><p>2.2 说明MongoDB对于存储非关系型数据的优势。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>2、MongoDB特点(10分)</p><p>2.1 说明MongoDB如何实现空间矢量化存储的。</p><p>MongoDB作为一个文档型数据库，非结构性数据以文档的形式进行存储。MongoDB可以通过GeoJSON格式来存储空间矢量数据，这是一种基于JSON的地理空间数据交换格式。在MongoDB中，可以使用geometry字段来存储几何形状，使用coordinates字段来存储几何形状的坐标。</p><p>2.2 说明MongoDB对于存储非关系型数据的优势。</p><p>采用分布式文件系统和空间索引，提高了矢量空间数据的存储和处理效率</p><p>支持多种空间分析和查询操作,可对数据进行深度分析和挖掘</p><p>扩展性好，可以根据业务需要增加字段，可以表达丰富的地理信息</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 116,
      "belong_page": 1,
      "question_id": 503126,
      "question_title": "<p>2、MongoDB特点(10分)</p><p>2.1 说明MongoDB如何实现空间矢量化存储的。</p><p>2.2 说明MongoDB对于存储非关系型数据的优势。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 503124,
      "score_rule": "",
      "material_text": "<p>第5题 &nbsp;Web架构</p><p><br/></p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>2、MongoDB特点(10分)</p><p>2.1 说明MongoDB如何实现空间矢量化存储的。</p><p>MongoDB作为一个文档型数据库，非结构性数据以文档的形式进行存储。MongoDB可以通过GeoJSON格式来存储空间矢量数据，这是一种基于JSON的地理空间数据交换格式。在MongoDB中，可以使用geometry字段来存储几何形状，使用coordinates字段来存储几何形状的坐标。</p><p>2.2 说明MongoDB对于存储非关系型数据的优势。</p><p>采用分布式文件系统和空间索引，提高了矢量空间数据的存储和处理效率</p><p>支持多种空间分析和查询操作,可对数据进行深度分析和挖掘</p><p>扩展性好，可以根据业务需要增加字段，可以表达丰富的地理信息</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 503127,
    "question_title": "<p>3、冷热数据(4分)</p><p>请说明HDFS使用热数据、温数据和冷数据存储的原因。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>3、冷热数据(4分)</p><p>请说明HDFS使用热数据、温数据和冷数据存储的原因。</p><p>HDFS允许将不活跃的数据分配到比较便宜的存储上，用于归档或冷存储。可以设置存储策略，将较旧的数据从昂贵的高性能存储上转移到性价比较低(较便宜)的存储设备上。对冷数据采取容量大，读写性能不高的存储介质如机械硬盘，对于热数据，可使用SSD硬盘存储。在读写效率上性能差距大。异构特性允许我们对不同文件选择不同的存储介质进行保存，以实现机器性能的最大化。</p><p>硬盘有SSD、SAS、SATA三种，可以分别对应 热、温、冷 数据。</p><p>1)&quot;热&quot;数据：一般新产生的数据被应用程序大量使用，应该采用SSD存储；</p><p>2)&quot;温&quot;数据：随着时间的推移，数据访问频率逐渐降低，则可以采用SAS盘存储；</p><p>3)&quot;冷&quot;数据：当数据使用率下降得更多，应采用容量大而便宜的SATA盘存储。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 117,
      "belong_page": 1,
      "question_id": 503127,
      "question_title": "<p>3、冷热数据(4分)</p><p>请说明HDFS使用热数据、温数据和冷数据存储的原因。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 503124,
      "score_rule": "",
      "material_text": "<p>第5题 &nbsp;Web架构</p><p><br/></p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>3、冷热数据(4分)</p><p>请说明HDFS使用热数据、温数据和冷数据存储的原因。</p><p>HDFS允许将不活跃的数据分配到比较便宜的存储上，用于归档或冷存储。可以设置存储策略，将较旧的数据从昂贵的高性能存储上转移到性价比较低(较便宜)的存储设备上。对冷数据采取容量大，读写性能不高的存储介质如机械硬盘，对于热数据，可使用SSD硬盘存储。在读写效率上性能差距大。异构特性允许我们对不同文件选择不同的存储介质进行保存，以实现机器性能的最大化。</p><p>硬盘有SSD、SAS、SATA三种，可以分别对应 热、温、冷 数据。</p><p>1)&quot;热&quot;数据：一般新产生的数据被应用程序大量使用，应该采用SSD存储；</p><p>2)&quot;温&quot;数据：随着时间的推移，数据访问频率逐渐降低，则可以采用SAS盘存储；</p><p>3)&quot;冷&quot;数据：当数据使用率下降得更多，应采用容量大而便宜的SATA盘存储。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 503608,
    "question_title": "<p>【问题1】（8分）</p><p>请将上述非功能性需求（a）～（h）归类到性能、安全性、可用性、易用性这四类非功能性需求。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>性能: （a）、（b）、（f）</p><p>安全性: （e）</p><p>可用性: （c）、（g）</p><p>易用性: （d）、（h）</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 118,
      "belong_page": 1,
      "question_id": 503608,
      "question_title": "<p>【问题1】（8分）</p><p>请将上述非功能性需求（a）～（h）归类到性能、安全性、可用性、易用性这四类非功能性需求。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 503607,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件分析与设计的说明，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某在线教育平台计划开发一个在线课程管理系统，该系统需支持课程发布、视频播放、在线测试、学员管理、学习进度追踪、教师评价等功能。其非功能性需求如下：</p><p>（a）系统应能支持至少1000个并发用户同时在线学习；</p><p>（b）视频播放应流畅，缓冲时间不超过2秒；</p><p>（c）系统需保证99.9%的服务可用性；</p><p>（d）界面设计应直观易用，便于各年龄段用户操作；</p><p>（e）系统需具备防DDoS攻击能力；</p><p>（f）在线测试提交后的响应时间不超过2秒；</p><p>（g）数据备份恢复时间不超过30分钟；</p><p>（h）系统应提供多语言支持。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>性能: （a）、（b）、（f）</p><p>安全性: （e）</p><p>可用性: （c）、（g）</p><p>易用性: （d）、（h）</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 503609,
    "question_title": "<p>【问题2】（7分）</p><p>软件需求可以分为3个不同的层次，请以200字以内的文字分别介绍，并说明“观看学习视频可以随时暂停、重放或调整播放速度”属于哪个层次的需求。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>软件需求可以分为3个不同的层次：</p><p>（1）业务需求(business requirement)反映了组织机构或客户对系统、产品高层次的目标要求。</p><p>（2）用户需求(user requirement)描述了用户使用产品必须要完成的任务，是用户对该软件产品的期望。这两种构成了用户原始需求文档的内容。</p><p>（3）功能需求(functional requirement),也包括非功能需求，定义了开发人员必须实现的软件功能，使得用户能完成他们的任务，从而满足业务需求。</p><p>“观看学习视频可以随时暂停、重放或调整播放速度”属于用户需求层次。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 119,
      "belong_page": 1,
      "question_id": 503609,
      "question_title": "<p>【问题2】（7分）</p><p>软件需求可以分为3个不同的层次，请以200字以内的文字分别介绍，并说明“观看学习视频可以随时暂停、重放或调整播放速度”属于哪个层次的需求。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 503607,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件分析与设计的说明，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某在线教育平台计划开发一个在线课程管理系统，该系统需支持课程发布、视频播放、在线测试、学员管理、学习进度追踪、教师评价等功能。其非功能性需求如下：</p><p>（a）系统应能支持至少1000个并发用户同时在线学习；</p><p>（b）视频播放应流畅，缓冲时间不超过2秒；</p><p>（c）系统需保证99.9%的服务可用性；</p><p>（d）界面设计应直观易用，便于各年龄段用户操作；</p><p>（e）系统需具备防DDoS攻击能力；</p><p>（f）在线测试提交后的响应时间不超过2秒；</p><p>（g）数据备份恢复时间不超过30分钟；</p><p>（h）系统应提供多语言支持。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>软件需求可以分为3个不同的层次：</p><p>（1）业务需求(business requirement)反映了组织机构或客户对系统、产品高层次的目标要求。</p><p>（2）用户需求(user requirement)描述了用户使用产品必须要完成的任务，是用户对该软件产品的期望。这两种构成了用户原始需求文档的内容。</p><p>（3）功能需求(functional requirement),也包括非功能需求，定义了开发人员必须实现的软件功能，使得用户能完成他们的任务，从而满足业务需求。</p><p>“观看学习视频可以随时暂停、重放或调整播放速度”属于用户需求层次。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 503610,
    "question_title": "<p>【问题3】（10分）</p><p>请以200字以内的文字介绍信息安全的五个要素及其含义。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>信息安全包括5个基本要素：机密性、完整性、可用性、可控性与可审查性。</p><p>(1)机密性：确保信息不暴露给未授权的实体或进程。</p><p>(2)完整性：只有得到允许的人才能修改数据，并且能够判别出数据是否已被篡改。</p><p>(3)可用性：得到授权的实体在需要时可访问数据，即攻击者不能占用所有的资源而阻碍授权者的工作。</p><p>(4)可控性：可以控制授权范围内的信息流向及行为方式。</p><p>(5)可审查性：对出现的信息安全问题提供调查的依据和手段。</p><p>&nbsp;</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 120,
      "belong_page": 1,
      "question_id": 503610,
      "question_title": "<p>【问题3】（10分）</p><p>请以200字以内的文字介绍信息安全的五个要素及其含义。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 503607,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件分析与设计的说明，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某在线教育平台计划开发一个在线课程管理系统，该系统需支持课程发布、视频播放、在线测试、学员管理、学习进度追踪、教师评价等功能。其非功能性需求如下：</p><p>（a）系统应能支持至少1000个并发用户同时在线学习；</p><p>（b）视频播放应流畅，缓冲时间不超过2秒；</p><p>（c）系统需保证99.9%的服务可用性；</p><p>（d）界面设计应直观易用，便于各年龄段用户操作；</p><p>（e）系统需具备防DDoS攻击能力；</p><p>（f）在线测试提交后的响应时间不超过2秒；</p><p>（g）数据备份恢复时间不超过30分钟；</p><p>（h）系统应提供多语言支持。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>信息安全包括5个基本要素：机密性、完整性、可用性、可控性与可审查性。</p><p>(1)机密性：确保信息不暴露给未授权的实体或进程。</p><p>(2)完整性：只有得到允许的人才能修改数据，并且能够判别出数据是否已被篡改。</p><p>(3)可用性：得到授权的实体在需要时可访问数据，即攻击者不能占用所有的资源而阻碍授权者的工作。</p><p>(4)可控性：可以控制授权范围内的信息流向及行为方式。</p><p>(5)可审查性：对出现的信息安全问题提供调查的依据和手段。</p><p>&nbsp;</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 503612,
    "question_title": "<p>【问题1】（10分）</p><p>项目组准备绘制ERD，请帮忙找出3个强实体和2个弱实体。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>强实体是有唯一主键的独立实体，包括医生、护士、患者、药房人员、就诊历史、处方、药品、库存、费用结算单、发票、消息等等。</p><p>弱实体是依赖于强实体存在的实体，它们没有自己的主键，或者其主键部分地依赖于强实体的主键。包括床位分配、主管医生、开药信息等。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 121,
      "belong_page": 1,
      "question_id": 503612,
      "question_title": "<p>【问题1】（10分）</p><p>项目组准备绘制ERD，请帮忙找出3个强实体和2个弱实体。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 503611,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于医院管理信息系统的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>一家医院计划开发一套管理信息系统，以提高医疗服务的效率和质量。该系统的基本需求包括：</p><p>(1) 医生需通过身份验证登录系统，才能查看患者信息和开处方；</p><p>(2) 护士可以管理患者的住院信息，如床位分配、主管医生等；</p><p>(3) 患者可以通过系统预约挂号，查看检查结果和费用明细；</p><p>(4) 系统自动记录患者的就诊历史，并支持医生查看患者的历史病历；</p><p>(5) 药房人员根据处方中的开药信息配药，并管理药品库存；</p><p>(6) 财务部门管理患者的费用结算和发票打印；</p><p>(7) 系统支持医生、护士和患者之间的消息通知功能。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>强实体是有唯一主键的独立实体，包括医生、护士、患者、药房人员、就诊历史、处方、药品、库存、费用结算单、发票、消息等等。</p><p>弱实体是依赖于强实体存在的实体，它们没有自己的主键，或者其主键部分地依赖于强实体的主键。包括床位分配、主管医生、开药信息等。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 503613,
    "question_title": "<p>【问题2】（8分）</p><p>项目组采用数据流图来实现功能建模，请举出数据流图中可能存在的4种以上常见异常的情况。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>在数据流图中，可能存在的常见异常情况包括：</p><p>（1）黑洞：只有输入没有输出的处理步骤；</p><p>（2）奇迹/白洞：只有输出没有输入的处理步骤；</p><p>（3）灰洞：输入不足以产生输出的处理步骤；</p><p>（4）父图与子图不匹配：父图中的加工的输入和输出数据流与子图中的相应部分不一致；</p><p>（5）数据存储之间的直接数据流；</p><p>（6）外部实体之间的直接数据流；</p><p>（7）外部实体与数据存储之间的直接数据流。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 122,
      "belong_page": 1,
      "question_id": 503613,
      "question_title": "<p>【问题2】（8分）</p><p>项目组采用数据流图来实现功能建模，请举出数据流图中可能存在的4种以上常见异常的情况。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 503611,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于医院管理信息系统的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>一家医院计划开发一套管理信息系统，以提高医疗服务的效率和质量。该系统的基本需求包括：</p><p>(1) 医生需通过身份验证登录系统，才能查看患者信息和开处方；</p><p>(2) 护士可以管理患者的住院信息，如床位分配、主管医生等；</p><p>(3) 患者可以通过系统预约挂号，查看检查结果和费用明细；</p><p>(4) 系统自动记录患者的就诊历史，并支持医生查看患者的历史病历；</p><p>(5) 药房人员根据处方中的开药信息配药，并管理药品库存；</p><p>(6) 财务部门管理患者的费用结算和发票打印；</p><p>(7) 系统支持医生、护士和患者之间的消息通知功能。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>在数据流图中，可能存在的常见异常情况包括：</p><p>（1）黑洞：只有输入没有输出的处理步骤；</p><p>（2）奇迹/白洞：只有输出没有输入的处理步骤；</p><p>（3）灰洞：输入不足以产生输出的处理步骤；</p><p>（4）父图与子图不匹配：父图中的加工的输入和输出数据流与子图中的相应部分不一致；</p><p>（5）数据存储之间的直接数据流；</p><p>（6）外部实体之间的直接数据流；</p><p>（7）外部实体与数据存储之间的直接数据流。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 503614,
    "question_title": "<p>【问题3】（7分）</p><p>在UML建模中，类图用于描述系统中的类和它们之间的关系。请指出在UML建模中，类图的主要关系有哪些。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>类图的主要关系包括：继承（Generalization）、实现（Realization）、关联（Association）、聚合（Aggregation）、组合（Composition）、依赖（Dependency）等。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 123,
      "belong_page": 1,
      "question_id": 503614,
      "question_title": "<p>【问题3】（7分）</p><p>在UML建模中，类图用于描述系统中的类和它们之间的关系。请指出在UML建模中，类图的主要关系有哪些。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 503611,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于医院管理信息系统的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>一家医院计划开发一套管理信息系统，以提高医疗服务的效率和质量。该系统的基本需求包括：</p><p>(1) 医生需通过身份验证登录系统，才能查看患者信息和开处方；</p><p>(2) 护士可以管理患者的住院信息，如床位分配、主管医生等；</p><p>(3) 患者可以通过系统预约挂号，查看检查结果和费用明细；</p><p>(4) 系统自动记录患者的就诊历史，并支持医生查看患者的历史病历；</p><p>(5) 药房人员根据处方中的开药信息配药，并管理药品库存；</p><p>(6) 财务部门管理患者的费用结算和发票打印；</p><p>(7) 系统支持医生、护士和患者之间的消息通知功能。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>类图的主要关系包括：继承（Generalization）、实现（Realization）、关联（Association）、聚合（Aggregation）、组合（Composition）、依赖（Dependency）等。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 503621,
    "question_title": "<p>【问题1】（8分）</p><p>请从高可用性、可伸缩性、数据一致性和事务支持四个方面对分布式数据库和集中式数据库进行比较，填写下表中(1)～(4)。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20241004/1728056675621657.png\" title=\"1728056675621657.png\" alt=\"image.png\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）好</p><p>（2）较差</p><p>（3）强</p><p>（4）好</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 124,
      "belong_page": 1,
      "question_id": 503621,
      "question_title": "<p>【问题1】（8分）</p><p>请从高可用性、可伸缩性、数据一致性和事务支持四个方面对分布式数据库和集中式数据库进行比较，填写下表中(1)～(4)。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20241004/1728056675621657.png\" title=\"1728056675621657.png\" alt=\"image.png\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 503620,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于电商平台数据架构的说明，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>一家电商平台计划构建一个支持多商家入驻的在线购物平台，该平台将提供商品展示、购物车、订单管理、支付结算、物流跟踪等功能。平台需要处理大量的商品信息、用户数据、订单数据以及交易记录。此外，平台还需要支持高并发访问，尤其是在促销活动期间。</p><p>在数据架构设计中，面对高可用性、可伸缩性、数据一致性和事务处理的需求，团队面临两个主要选择：使用分布式数据库和集中式数据库。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）好</p><p>（2）较差</p><p>（3）强</p><p>（4）好</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 503622,
    "question_title": "<p>【问题2】（9分）</p><p>请以300字以内的文字说明分布式数据库有哪些模式，并简要解释。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p></p><p>（1）全局外模式。全局外模式是全局应用的用户视图，是全局概念模式的子集，该层直接与用户(或应用程序)交互。</p><p>（2）全局概念模式。全局概念模式定义分布式数据库中数据的整体逻辑结构，数据就如同根本没有分布一样，可用传统的集中式数据库中所采用的方法进行定义。</p><p>（3）分片模式。将一个关系模式分解成为几个数据片。</p><p>（4）分布模式。分布式数据库的本质特性就是数据分布在不同的物理位置。分布模式的主要职责是定义数据片段(即分片模式的处理结果的存放节点。</p><p>（5）局部概念模式。局部概念模式是局部数据库的概念模式。</p><p>（6）局部内模式。局部内模式是局部数据库的内模式。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 125,
      "belong_page": 1,
      "question_id": 503622,
      "question_title": "<p>【问题2】（9分）</p><p>请以300字以内的文字说明分布式数据库有哪些模式，并简要解释。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 503620,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于电商平台数据架构的说明，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>一家电商平台计划构建一个支持多商家入驻的在线购物平台，该平台将提供商品展示、购物车、订单管理、支付结算、物流跟踪等功能。平台需要处理大量的商品信息、用户数据、订单数据以及交易记录。此外，平台还需要支持高并发访问，尤其是在促销活动期间。</p><p>在数据架构设计中，面对高可用性、可伸缩性、数据一致性和事务处理的需求，团队面临两个主要选择：使用分布式数据库和集中式数据库。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p></p><p>（1）全局外模式。全局外模式是全局应用的用户视图，是全局概念模式的子集，该层直接与用户(或应用程序)交互。</p><p>（2）全局概念模式。全局概念模式定义分布式数据库中数据的整体逻辑结构，数据就如同根本没有分布一样，可用传统的集中式数据库中所采用的方法进行定义。</p><p>（3）分片模式。将一个关系模式分解成为几个数据片。</p><p>（4）分布模式。分布式数据库的本质特性就是数据分布在不同的物理位置。分布模式的主要职责是定义数据片段(即分片模式的处理结果的存放节点。</p><p>（5）局部概念模式。局部概念模式是局部数据库的概念模式。</p><p>（6）局部内模式。局部内模式是局部数据库的内模式。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 503623,
    "question_title": "<p>【问题3】（8分）</p><p>电商平台需要处理大量的交易记录，这些记录对于后续的数据分析和审计非常重要。请说明为什么使用列式数据库（如HBase）来存储交易记录是一个合适的选择，并用300字以内的文字进行解释。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>使用列式数据库来存储交易记录是一个合适的选择，因为列式数据库针对大规模数据的分析和查询进行了优化。</p><p>（1）列式数据库将数据存储为列族，这使得对于特定列的查询能够更快地定位到数据，提高了查询效率。</p><p>（2）列式数据库支持分布式存储和并行处理，能够处理PB级别的数据量，并且具有良好的扩展性。</p><p>（3）列式数据库还提供了高效的数据压缩和存储机制，降低了存储成本。</p><p>（4）列式数据库能够与Hadoop等大数据处理平台无缝集成，系统复杂度低。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 126,
      "belong_page": 1,
      "question_id": 503623,
      "question_title": "<p>【问题3】（8分）</p><p>电商平台需要处理大量的交易记录，这些记录对于后续的数据分析和审计非常重要。请说明为什么使用列式数据库（如HBase）来存储交易记录是一个合适的选择，并用300字以内的文字进行解释。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 503620,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于电商平台数据架构的说明，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>一家电商平台计划构建一个支持多商家入驻的在线购物平台，该平台将提供商品展示、购物车、订单管理、支付结算、物流跟踪等功能。平台需要处理大量的商品信息、用户数据、订单数据以及交易记录。此外，平台还需要支持高并发访问，尤其是在促销活动期间。</p><p>在数据架构设计中，面对高可用性、可伸缩性、数据一致性和事务处理的需求，团队面临两个主要选择：使用分布式数据库和集中式数据库。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>使用列式数据库来存储交易记录是一个合适的选择，因为列式数据库针对大规模数据的分析和查询进行了优化。</p><p>（1）列式数据库将数据存储为列族，这使得对于特定列的查询能够更快地定位到数据，提高了查询效率。</p><p>（2）列式数据库支持分布式存储和并行处理，能够处理PB级别的数据量，并且具有良好的扩展性。</p><p>（3）列式数据库还提供了高效的数据压缩和存储机制，降低了存储成本。</p><p>（4）列式数据库能够与Hadoop等大数据处理平台无缝集成，系统复杂度低。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 503625,
    "question_title": "<p>【问题1】（5分）</p><p>项目组决定采用ORM开发框架访问数据库，请简要概述其优点。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p></p><p>（1）简化开发流程；</p><p>（2）接口丰富，提高开发效率；</p><p>（3）面向对象，增强代码可读性和可维护性；</p><p>（4）支持多种数据库和跨数据库操作；</p><p>（5）隐藏数据库底层细节。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 127,
      "belong_page": 1,
      "question_id": 503625,
      "question_title": "<p>【问题1】（5分）</p><p>项目组决定采用ORM开发框架访问数据库，请简要概述其优点。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 503624,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于在线金融交易系统的系统架构设计叙述，回答下列问题。</p><p>【说明】</p><p>某金融科技公司计划开发一个在线金融交易系统，用于支持股票、债券、基金等多种金融产品的交易。系统需具备高并发处理能力、数据安全性和交易实时性。</p><p>在系统架构设计中，团队考虑了以下因素：</p><p>（1）使用分布式缓存提高数据访问速度；</p><p>（2）采用消息队列实现异步交易处理，以提高系统吞吐量；</p><p>（3）为了保障交易数据的安全性和完整性，采用区块链技术记录交易信息；</p><p>（4）使用高性能数据库存储交易数据，确保交易实时性。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p></p><p>（1）简化开发流程；</p><p>（2）接口丰富，提高开发效率；</p><p>（3）面向对象，增强代码可读性和可维护性；</p><p>（4）支持多种数据库和跨数据库操作；</p><p>（5）隐藏数据库底层细节。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 503626,
    "question_title": "<p>【问题2】（12分）</p><p>在在线金融交易系统中，为什么采用消息队列实现异步交易处理？请分析消息队列的优势及可能带来的挑战。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>原因：金融交易系统需要处理大量的交易请求，如果每个请求都同步处理，会导致系统响应时间变长，吞吐量下降。采用消息队列实现异步交易处理，可以将交易请求先放入队列中，然后由后台服务异步处理，从而提高系统吞吐量。</p><p>优势：</p><p>（1）解耦服务，提高系统的可扩展性和灵活性；</p><p>（2）削峰填谷，平衡系统负载；</p><p>（3）实现消息的订阅和选择性传递。</p><p>挑战：</p><p>（1）消息队列的设计和管理较为复杂；</p><p>（2）可能出现消息丢失、重复或乱序等问题；</p><p>（3）需要处理消息队列的延迟和吞吐量瓶颈。</p><p>&nbsp;</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 128,
      "belong_page": 1,
      "question_id": 503626,
      "question_title": "<p>【问题2】（12分）</p><p>在在线金融交易系统中，为什么采用消息队列实现异步交易处理？请分析消息队列的优势及可能带来的挑战。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 503624,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于在线金融交易系统的系统架构设计叙述，回答下列问题。</p><p>【说明】</p><p>某金融科技公司计划开发一个在线金融交易系统，用于支持股票、债券、基金等多种金融产品的交易。系统需具备高并发处理能力、数据安全性和交易实时性。</p><p>在系统架构设计中，团队考虑了以下因素：</p><p>（1）使用分布式缓存提高数据访问速度；</p><p>（2）采用消息队列实现异步交易处理，以提高系统吞吐量；</p><p>（3）为了保障交易数据的安全性和完整性，采用区块链技术记录交易信息；</p><p>（4）使用高性能数据库存储交易数据，确保交易实时性。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>原因：金融交易系统需要处理大量的交易请求，如果每个请求都同步处理，会导致系统响应时间变长，吞吐量下降。采用消息队列实现异步交易处理，可以将交易请求先放入队列中，然后由后台服务异步处理，从而提高系统吞吐量。</p><p>优势：</p><p>（1）解耦服务，提高系统的可扩展性和灵活性；</p><p>（2）削峰填谷，平衡系统负载；</p><p>（3）实现消息的订阅和选择性传递。</p><p>挑战：</p><p>（1）消息队列的设计和管理较为复杂；</p><p>（2）可能出现消息丢失、重复或乱序等问题；</p><p>（3）需要处理消息队列的延迟和吞吐量瓶颈。</p><p>&nbsp;</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 503627,
    "question_title": "<p>【问题3】（8分）</p><p>在在线金融交易系统中，区块链技术如何保障交易数据的安全性和完整性？请简述其基本原理。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>区块链技术通过以下方式保障交易数据的安全性和完整性：</p><p>（1）去中心化：区块链中的每个节点都保存着完整的交易记录，没有中心化的数据管理机构，避免了单点故障和数据篡改的风险。</p><p>（2）加密技术：区块链中的交易数据通过加密算法进行加密，确保数据在传输和存储过程中的安全性。</p><p>（3）共识机制：区块链中的每个新交易都需要经过网络中多个节点的验证和共识，确保交易的真实性和合法性。</p><p>（4）不可篡改性：一旦交易被记录在区块链上，就无法被修改或删除，保证了交易数据的完整性和历史可追溯性。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 129,
      "belong_page": 1,
      "question_id": 503627,
      "question_title": "<p>【问题3】（8分）</p><p>在在线金融交易系统中，区块链技术如何保障交易数据的安全性和完整性？请简述其基本原理。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 503624,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于在线金融交易系统的系统架构设计叙述，回答下列问题。</p><p>【说明】</p><p>某金融科技公司计划开发一个在线金融交易系统，用于支持股票、债券、基金等多种金融产品的交易。系统需具备高并发处理能力、数据安全性和交易实时性。</p><p>在系统架构设计中，团队考虑了以下因素：</p><p>（1）使用分布式缓存提高数据访问速度；</p><p>（2）采用消息队列实现异步交易处理，以提高系统吞吐量；</p><p>（3）为了保障交易数据的安全性和完整性，采用区块链技术记录交易信息；</p><p>（4）使用高性能数据库存储交易数据，确保交易实时性。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>区块链技术通过以下方式保障交易数据的安全性和完整性：</p><p>（1）去中心化：区块链中的每个节点都保存着完整的交易记录，没有中心化的数据管理机构，避免了单点故障和数据篡改的风险。</p><p>（2）加密技术：区块链中的交易数据通过加密算法进行加密，确保数据在传输和存储过程中的安全性。</p><p>（3）共识机制：区块链中的每个新交易都需要经过网络中多个节点的验证和共识，确保交易的真实性和合法性。</p><p>（4）不可篡改性：一旦交易被记录在区块链上，就无法被修改或删除，保证了交易数据的完整性和历史可追溯性。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510562,
    "question_title": "<p>【问题1】（12分）</p><p>在架构评估过程中，质量属性效用树（utility tree）是对系统质量属性进行识别和优先级排序的重要工具。请给出合适的质量属性，填入下图中的（1）、（2）空白处。并选择题干描述的（a）～（k），填入（3）～（6）空白处，完成该系统的效用树。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250325/1742834266472186.png\" title=\"1742834266472186.png\" alt=\"image.png\" width=\"403\" height=\"432\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250325/1742834279740652.png\" title=\"1742834279740652.png\" alt=\"image.png\" width=\"539\" height=\"251\"/>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 130,
      "belong_page": 1,
      "question_id": 510562,
      "question_title": "<p>【问题1】（12分）</p><p>在架构评估过程中，质量属性效用树（utility tree）是对系统质量属性进行识别和优先级排序的重要工具。请给出合适的质量属性，填入下图中的（1）、（2）空白处。并选择题干描述的（a）～（k），填入（3）～（6）空白处，完成该系统的效用树。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250325/1742834266472186.png\" title=\"1742834266472186.png\" alt=\"image.png\" width=\"403\" height=\"432\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510561,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件架构评估的说明，回答下列问题。</p><p>【说明】</p><p>某物流公司计划构建一套智能仓储系统，以提高货物分拣、存储和出库的效率与准确性。公司技术团队已经初步完成了系统架构设计，并召开了架构设计评估会议。会上，用户提出的需求、架构师识别的关键质量属性场景以及评估专家的意见等内容部分列举如下：</p><p>（a）系统需支持每分钟处理至少1000个货物分拣请求。</p><p>（b）如果不能解决货物存储位置定位问题，可能影响推广使用。</p><p>（c）系统单个节点故障不应影响整体服务。</p><p>（d）货物追踪信息需实时更新，延迟不超过1秒。</p><p>（e）系统需支持新增条形码和RFID扫描技术，以适应不同货物类型。</p><p>（f）所有货物进出库需经过双重验证。</p><p>（g）货物分拣的准确性需要保证，必要的时候可以降低速度。</p><p>（h）用户口令每90天必须更改。</p><p>（i）系统升级过程中需确保业务连续性，避免服务中断。</p><p>（j）公司如果增加新的仓库，可在2周内出现在驾驶舱。</p><p>（k）系统停机维护的时间对业务连续性影响很大。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250325/1742834279740652.png\" title=\"1742834279740652.png\" alt=\"image.png\" width=\"539\" height=\"251\"/>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510563,
    "question_title": "<p>【问题2】（13分）</p><p>请阐述系统架构敏感点、权衡点、风险点和非风险点的定义，并从（a）～（k）中选择一个描述，分别代表系统架构的风险点、敏感点和权衡点。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>系统架构敏感点是为了实现某种特定质量属性，一个或多个系统组件所具有的特性；权衡点是影响多个质量属性，并对多个质量属性来说都是敏感点的系统属性。风险点是指架构设计中潜在并存在问题的架构决策所带来的隐患；非风险点是指架构设计中存在的问题造成的后果可以接受。</p><p>风险点代表：（b）；敏感点代表：（k）；权衡点代表：（g）。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 131,
      "belong_page": 1,
      "question_id": 510563,
      "question_title": "<p>【问题2】（13分）</p><p>请阐述系统架构敏感点、权衡点、风险点和非风险点的定义，并从（a）～（k）中选择一个描述，分别代表系统架构的风险点、敏感点和权衡点。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510561,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件架构评估的说明，回答下列问题。</p><p>【说明】</p><p>某物流公司计划构建一套智能仓储系统，以提高货物分拣、存储和出库的效率与准确性。公司技术团队已经初步完成了系统架构设计，并召开了架构设计评估会议。会上，用户提出的需求、架构师识别的关键质量属性场景以及评估专家的意见等内容部分列举如下：</p><p>（a）系统需支持每分钟处理至少1000个货物分拣请求。</p><p>（b）如果不能解决货物存储位置定位问题，可能影响推广使用。</p><p>（c）系统单个节点故障不应影响整体服务。</p><p>（d）货物追踪信息需实时更新，延迟不超过1秒。</p><p>（e）系统需支持新增条形码和RFID扫描技术，以适应不同货物类型。</p><p>（f）所有货物进出库需经过双重验证。</p><p>（g）货物分拣的准确性需要保证，必要的时候可以降低速度。</p><p>（h）用户口令每90天必须更改。</p><p>（i）系统升级过程中需确保业务连续性，避免服务中断。</p><p>（j）公司如果增加新的仓库，可在2周内出现在驾驶舱。</p><p>（k）系统停机维护的时间对业务连续性影响很大。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>系统架构敏感点是为了实现某种特定质量属性，一个或多个系统组件所具有的特性；权衡点是影响多个质量属性，并对多个质量属性来说都是敏感点的系统属性。风险点是指架构设计中潜在并存在问题的架构决策所带来的隐患；非风险点是指架构设计中存在的问题造成的后果可以接受。</p><p>风险点代表：（b）；敏感点代表：（k）；权衡点代表：（g）。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510565,
    "question_title": "<p>【问题1】（10分）</p><p>项目组准备绘制ERD，请帮忙找出3个强实体和2个弱实体。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>强实体是有唯一主键的独立实体，包括医生、护士、患者、药房人员、就诊历史、处方、药品、库存、费用结算单、发票、消息等等。</p><p>弱实体是依赖于强实体存在的实体，它们没有自己的主键，或者其主键部分地依赖于强实体的主键。包括床位分配、主管医生、开药信息等。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 132,
      "belong_page": 1,
      "question_id": 510565,
      "question_title": "<p>【问题1】（10分）</p><p>项目组准备绘制ERD，请帮忙找出3个强实体和2个弱实体。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510564,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于医院管理信息系统的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>一家医院计划开发一套管理信息系统，以提高医疗服务的效率和质量。该系统的基本需求包括：</p><p>(1) 医生需通过身份验证登录系统，才能查看患者信息和开处方；</p><p>(2) 护士可以管理患者的住院信息，如床位分配、主管医生等；</p><p>(3) 患者可以通过系统预约挂号，查看检查结果和费用明细；</p><p>(4) 系统自动记录患者的就诊历史，并支持医生查看患者的历史病历；</p><p>(5) 药房人员根据处方中的开药信息配药，并管理药品库存；</p><p>(6) 财务部门管理患者的费用结算和发票打印；</p><p>(7) 系统支持医生、护士和患者之间的消息通知功能。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>强实体是有唯一主键的独立实体，包括医生、护士、患者、药房人员、就诊历史、处方、药品、库存、费用结算单、发票、消息等等。</p><p>弱实体是依赖于强实体存在的实体，它们没有自己的主键，或者其主键部分地依赖于强实体的主键。包括床位分配、主管医生、开药信息等。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510566,
    "question_title": "<p>【问题2】（8分）</p><p>项目组采用数据流图来实现功能建模，请举出数据流图中可能存在的4种以上常见异常的情况。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>在数据流图中，可能存在的常见异常情况包括：</p><p>（1）黑洞：只有输入没有输出的处理步骤；</p><p>（2）奇迹/白洞：只有输出没有输入的处理步骤；</p><p>（3）灰洞：输入不足以产生输出的处理步骤；</p><p>（4）父图与子图不匹配：父图中的加工的输入和输出数据流与子图中的相应部分不一致；</p><p>（5）数据存储之间的直接数据流；</p><p>（6）外部实体之间的直接数据流；</p><p>外部实体与数据存储之间的直接数据流。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 133,
      "belong_page": 1,
      "question_id": 510566,
      "question_title": "<p>【问题2】（8分）</p><p>项目组采用数据流图来实现功能建模，请举出数据流图中可能存在的4种以上常见异常的情况。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510564,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于医院管理信息系统的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>一家医院计划开发一套管理信息系统，以提高医疗服务的效率和质量。该系统的基本需求包括：</p><p>(1) 医生需通过身份验证登录系统，才能查看患者信息和开处方；</p><p>(2) 护士可以管理患者的住院信息，如床位分配、主管医生等；</p><p>(3) 患者可以通过系统预约挂号，查看检查结果和费用明细；</p><p>(4) 系统自动记录患者的就诊历史，并支持医生查看患者的历史病历；</p><p>(5) 药房人员根据处方中的开药信息配药，并管理药品库存；</p><p>(6) 财务部门管理患者的费用结算和发票打印；</p><p>(7) 系统支持医生、护士和患者之间的消息通知功能。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>在数据流图中，可能存在的常见异常情况包括：</p><p>（1）黑洞：只有输入没有输出的处理步骤；</p><p>（2）奇迹/白洞：只有输出没有输入的处理步骤；</p><p>（3）灰洞：输入不足以产生输出的处理步骤；</p><p>（4）父图与子图不匹配：父图中的加工的输入和输出数据流与子图中的相应部分不一致；</p><p>（5）数据存储之间的直接数据流；</p><p>（6）外部实体之间的直接数据流；</p><p>外部实体与数据存储之间的直接数据流。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510567,
    "question_title": "<p>【问题3】（7分）</p><p>在UML建模中，类图用于描述系统中的类和它们之间的关系。请指出在UML建模中，类图的主要关系有哪些。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>类图的主要关系包括：继承（Generalization）、实现（Realization）、关联（Association）、聚合（Aggregation）、组合（Composition）、依赖（Dependency）等。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 134,
      "belong_page": 1,
      "question_id": 510567,
      "question_title": "<p>【问题3】（7分）</p><p>在UML建模中，类图用于描述系统中的类和它们之间的关系。请指出在UML建模中，类图的主要关系有哪些。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510564,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于医院管理信息系统的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>一家医院计划开发一套管理信息系统，以提高医疗服务的效率和质量。该系统的基本需求包括：</p><p>(1) 医生需通过身份验证登录系统，才能查看患者信息和开处方；</p><p>(2) 护士可以管理患者的住院信息，如床位分配、主管医生等；</p><p>(3) 患者可以通过系统预约挂号，查看检查结果和费用明细；</p><p>(4) 系统自动记录患者的就诊历史，并支持医生查看患者的历史病历；</p><p>(5) 药房人员根据处方中的开药信息配药，并管理药品库存；</p><p>(6) 财务部门管理患者的费用结算和发票打印；</p><p>(7) 系统支持医生、护士和患者之间的消息通知功能。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>类图的主要关系包括：继承（Generalization）、实现（Realization）、关联（Association）、聚合（Aggregation）、组合（Composition）、依赖（Dependency）等。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510569,
    "question_title": "<p>【问题1】（9分）</p><p>请用200字以内的文字说明嵌入式实时操作系统的定义及其包含的3个核心特性，并简要指出提高系统实时性的关键技术。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>嵌入式实时操作系统RTOS是当外界事件或数据产生时，能够接受并以足够快的速度予以处理，其处理的结果又能在规定的时间之内来控制生产过程或对处理系统作出快速响应，并控制所有实时任务协调一致运行的嵌入式操作系统。</p><p>核心特性：</p><p>(1)&nbsp;确定性（Determinism）：任务执行时间可预测；</p><p>(2)&nbsp;快速中断响应：中断延迟一般低于1μs；</p><p>(3)&nbsp;多任务调度：支持任务优先级和抢占式调度。</p><p>提高实时性的关键技术 ：</p><p>(1)&nbsp;抢占式调度：高优先级任务可中断低优先级任务；</p><p>(2)&nbsp;减少上下文切换开销：优化任务切换代码；</p><p>(3)&nbsp;优先级继承协议：避免优先级反转；</p><p>硬件加速：使用专用中断控制器降低延迟。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 135,
      "belong_page": 1,
      "question_id": 510569,
      "question_title": "<p>【问题1】（9分）</p><p>请用200字以内的文字说明嵌入式实时操作系统的定义及其包含的3个核心特性，并简要指出提高系统实时性的关键技术。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510568,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三（25分）</p><p>阅读以下关于嵌入式实时系统设计的描述，回答下列问题。</p><p>【说明】</p><p>某工业自动化公司正在开发一款基于嵌入式实时操作系统的智能控制设备，用于工厂生产线的高精度机械臂控制。系统需要满足以下要求：</p><p>(1)&nbsp;机械臂的运动控制任务需在10ms内响应外部传感器信号；</p><p>(2)&nbsp;系统需同时管理30个任务，包括高优先级的电机控制、中优先级的数据采集和低优先级的日志记录；</p><p>(3)&nbsp;系统内存资源有限，需合理分配任务的堆栈空间以避免溢出。</p><p>开发团队在任务调度和资源管理方案上产生分歧：张工主张采用轮询调度（Round-Robin） ，认为其简单易实现；李工认为应采用基于优先级的抢占式调度（Priority-based Preemptive Scheduling） ，以保障高实时性任务。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>嵌入式实时操作系统RTOS是当外界事件或数据产生时，能够接受并以足够快的速度予以处理，其处理的结果又能在规定的时间之内来控制生产过程或对处理系统作出快速响应，并控制所有实时任务协调一致运行的嵌入式操作系统。</p><p>核心特性：</p><p>(1)&nbsp;确定性（Determinism）：任务执行时间可预测；</p><p>(2)&nbsp;快速中断响应：中断延迟一般低于1μs；</p><p>(3)&nbsp;多任务调度：支持任务优先级和抢占式调度。</p><p>提高实时性的关键技术 ：</p><p>(1)&nbsp;抢占式调度：高优先级任务可中断低优先级任务；</p><p>(2)&nbsp;减少上下文切换开销：优化任务切换代码；</p><p>(3)&nbsp;优先级继承协议：避免优先级反转；</p><p>硬件加速：使用专用中断控制器降低延迟。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510570,
    "question_title": "<p>【问题2】（8分）</p><p>请根据任务调度机制的特点，完成下表中轮询调度与抢占式调度的对比。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250325/1742834395512468.png\" title=\"1742834395512468.png\" alt=\"image.png\" width=\"585\" height=\"168\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）好</p><p>（2）不支持</p><p>（3）中到高</p><p>（4）低</p><p>&nbsp;</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 136,
      "belong_page": 1,
      "question_id": 510570,
      "question_title": "<p>【问题2】（8分）</p><p>请根据任务调度机制的特点，完成下表中轮询调度与抢占式调度的对比。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250325/1742834395512468.png\" title=\"1742834395512468.png\" alt=\"image.png\" width=\"585\" height=\"168\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510568,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三（25分）</p><p>阅读以下关于嵌入式实时系统设计的描述，回答下列问题。</p><p>【说明】</p><p>某工业自动化公司正在开发一款基于嵌入式实时操作系统的智能控制设备，用于工厂生产线的高精度机械臂控制。系统需要满足以下要求：</p><p>(1)&nbsp;机械臂的运动控制任务需在10ms内响应外部传感器信号；</p><p>(2)&nbsp;系统需同时管理30个任务，包括高优先级的电机控制、中优先级的数据采集和低优先级的日志记录；</p><p>(3)&nbsp;系统内存资源有限，需合理分配任务的堆栈空间以避免溢出。</p><p>开发团队在任务调度和资源管理方案上产生分歧：张工主张采用轮询调度（Round-Robin） ，认为其简单易实现；李工认为应采用基于优先级的抢占式调度（Priority-based Preemptive Scheduling） ，以保障高实时性任务。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）好</p><p>（2）不支持</p><p>（3）中到高</p><p>（4）低</p><p>&nbsp;</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510571,
    "question_title": "<p>【问题3】（8分）</p><p>为解决内存资源受限的问题，团队提出了两种堆栈管理策略：静态堆栈分配：为每个任务预先分配固定大小的内存；动态堆栈扩展：根据任务实际需求动态分配内存。请以300字以内的文字介绍两种分配策略各自的优缺点。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>静态堆栈分配的优缺点：</p><p>优点：</p><p>(1)&nbsp;内存占用确定，避免动态分配的碎片化；</p><p>(2)&nbsp;可预测堆栈使用，降低堆栈溢出风险。</p><p>缺点：</p><p>(1)&nbsp;内存浪费（任务实际使用可能远小于分配空间）；</p><p>(2)&nbsp;灵活性差，难以适应任务运行时变化的需求。</p><p>动态堆栈扩展的优缺点：</p><p>优点：</p><p>(1)&nbsp;内存利用率高，按需分配；</p><p>(2)&nbsp;适应任务执行时的动态需求。</p><p>缺点：</p><p>(1)&nbsp;可能引发堆栈碎片化或溢出（需复杂管理机制）；</p><p>(2)&nbsp;调度开销增加，影响实时性。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 137,
      "belong_page": 1,
      "question_id": 510571,
      "question_title": "<p>【问题3】（8分）</p><p>为解决内存资源受限的问题，团队提出了两种堆栈管理策略：静态堆栈分配：为每个任务预先分配固定大小的内存；动态堆栈扩展：根据任务实际需求动态分配内存。请以300字以内的文字介绍两种分配策略各自的优缺点。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510568,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题三（25分）</p><p>阅读以下关于嵌入式实时系统设计的描述，回答下列问题。</p><p>【说明】</p><p>某工业自动化公司正在开发一款基于嵌入式实时操作系统的智能控制设备，用于工厂生产线的高精度机械臂控制。系统需要满足以下要求：</p><p>(1)&nbsp;机械臂的运动控制任务需在10ms内响应外部传感器信号；</p><p>(2)&nbsp;系统需同时管理30个任务，包括高优先级的电机控制、中优先级的数据采集和低优先级的日志记录；</p><p>(3)&nbsp;系统内存资源有限，需合理分配任务的堆栈空间以避免溢出。</p><p>开发团队在任务调度和资源管理方案上产生分歧：张工主张采用轮询调度（Round-Robin） ，认为其简单易实现；李工认为应采用基于优先级的抢占式调度（Priority-based Preemptive Scheduling） ，以保障高实时性任务。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>静态堆栈分配的优缺点：</p><p>优点：</p><p>(1)&nbsp;内存占用确定，避免动态分配的碎片化；</p><p>(2)&nbsp;可预测堆栈使用，降低堆栈溢出风险。</p><p>缺点：</p><p>(1)&nbsp;内存浪费（任务实际使用可能远小于分配空间）；</p><p>(2)&nbsp;灵活性差，难以适应任务运行时变化的需求。</p><p>动态堆栈扩展的优缺点：</p><p>优点：</p><p>(1)&nbsp;内存利用率高，按需分配；</p><p>(2)&nbsp;适应任务执行时的动态需求。</p><p>缺点：</p><p>(1)&nbsp;可能引发堆栈碎片化或溢出（需复杂管理机制）；</p><p>(2)&nbsp;调度开销增加，影响实时性。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510573,
    "question_title": "<p>【问题1】（8分）</p><p>请分析并比较MySQL与Cassandra在数据模型、可扩展性、一致性模型及适用场景方面的差异，并填写下表。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250325/1742834448957135.png\" title=\"1742834448957135.png\" alt=\"image.png\" width=\"648\" height=\"164\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）列式存储，灵活可扩展的数据模型</p><p>（2）垂直和有限水平扩展</p><p>（3）弱一致性（或者最终一致性）</p><p>（4）复杂查询、事务处理</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 138,
      "belong_page": 1,
      "question_id": 510573,
      "question_title": "<p>【问题1】（8分）</p><p>请分析并比较MySQL与Cassandra在数据模型、可扩展性、一致性模型及适用场景方面的差异，并填写下表。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250325/1742834448957135.png\" title=\"1742834448957135.png\" alt=\"image.png\" width=\"648\" height=\"164\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510572,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于某电商平台数据架构的说明，回答下列问题。</p><p>【说明】</p><p>某电商平台计划升级其现有的数据存储系统，以支持日益增长的商品数据、用户信息及交易记录。该平台的目标是提高数据查询效率、增强数据安全性、以及实现数据的灵活扩展，以适应未来业务发展的需求。当前，平台主要使用MySQL关系型数据库存储结构化数据，但面临着查询性能瓶颈、数据备份恢复复杂度高以及难以高效处理大规模非结构化数据（如商品图片、用户评价等）的问题。</p><p>项目团队经过调研，决定引入NoSQL数据库（如Cassandra）和分布式文件系统（如HDFS）来优化数据存储架构。Cassandra因其高可用性、线性扩展性和低延迟读写性能被选为处理高并发用户数据和商品信息的数据库，而HDFS则用于存储和处理大规模非结构化数据。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）列式存储，灵活可扩展的数据模型</p><p>（2）垂直和有限水平扩展</p><p>（3）弱一致性（或者最终一致性）</p><p>（4）复杂查询、事务处理</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510574,
    "question_title": "<p>【问题2】（6分）</p><p>在引入HDFS作为非结构化数据存储解决方案时，请阐述HDFS在数据可靠性、伸缩性和性能方面的优势，并说明HDFS是如何实现这些优势的。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>HDFS在数据可靠性、伸缩性和性能方面具有显著优势。</p><p>（1）在数据可靠性方面，HDFS通过数据冗余存储（默认为三副本）和自动容错机制（如数据块复制、心跳检测和数据块扫描等）来确保数据的高可靠性。</p><p>（2）HDFS具有良好的伸缩性，通过添加更多的节点来线性扩展存储容量，能够支持PB级数据的存储。</p><p>（3）在性能方面，HDFS通过数据本地化、优化读写路径以及利用硬件特性（如磁盘并行读写）来提高数据传输和处理效率。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 139,
      "belong_page": 1,
      "question_id": 510574,
      "question_title": "<p>【问题2】（6分）</p><p>在引入HDFS作为非结构化数据存储解决方案时，请阐述HDFS在数据可靠性、伸缩性和性能方面的优势，并说明HDFS是如何实现这些优势的。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510572,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于某电商平台数据架构的说明，回答下列问题。</p><p>【说明】</p><p>某电商平台计划升级其现有的数据存储系统，以支持日益增长的商品数据、用户信息及交易记录。该平台的目标是提高数据查询效率、增强数据安全性、以及实现数据的灵活扩展，以适应未来业务发展的需求。当前，平台主要使用MySQL关系型数据库存储结构化数据，但面临着查询性能瓶颈、数据备份恢复复杂度高以及难以高效处理大规模非结构化数据（如商品图片、用户评价等）的问题。</p><p>项目团队经过调研，决定引入NoSQL数据库（如Cassandra）和分布式文件系统（如HDFS）来优化数据存储架构。Cassandra因其高可用性、线性扩展性和低延迟读写性能被选为处理高并发用户数据和商品信息的数据库，而HDFS则用于存储和处理大规模非结构化数据。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>HDFS在数据可靠性、伸缩性和性能方面具有显著优势。</p><p>（1）在数据可靠性方面，HDFS通过数据冗余存储（默认为三副本）和自动容错机制（如数据块复制、心跳检测和数据块扫描等）来确保数据的高可靠性。</p><p>（2）HDFS具有良好的伸缩性，通过添加更多的节点来线性扩展存储容量，能够支持PB级数据的存储。</p><p>（3）在性能方面，HDFS通过数据本地化、优化读写路径以及利用硬件特性（如磁盘并行读写）来提高数据传输和处理效率。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510575,
    "question_title": "<p>【问题3】（11分）</p><p>考虑到电商平台对实时数据分析的需求，团队计划将部分实时数据从Cassandra同步到Kafka中，以支持实时数据流处理和分析。请说明为何选择Kafka作为实时数据流处理的中间件。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）兼容性：Kafka能够收集和处理来自Cassandra的实时数据流。</p><p>（2）可伸缩性：Kafka的分布式架构支持通过增加节点来线性伸缩，适应不断增长的数据量。</p><p>（3）容错性：Kafka通过数据复制和分区机制提供强大的容错能力。</p><p>（4）高吞吐量：支持高吞吐量的数据处理，也能够削峰填谷。</p><p>（5）低延迟：Kafka能够满足电商平台对实时数据处理的需求。</p><p>（6）发布-订阅模式：Kafka的发布-订阅模型允许不同的消费者（如实时分析引擎、数据仓库等）独立地消费数据，互不影响。</p><p>（7）持久化：Kafka的数据持久化机制允许用户根据需要调整数据的保留策略和副本因子，以适应不同的业务场景。</p><p>（8）生态系统支持：Kafka拥有丰富的API和强大的生态系统支持，可以无缝集成到现有的数据处理和分析框架中。</p><p>（答出6个即满分）</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 140,
      "belong_page": 1,
      "question_id": 510575,
      "question_title": "<p>【问题3】（11分）</p><p>考虑到电商平台对实时数据分析的需求，团队计划将部分实时数据从Cassandra同步到Kafka中，以支持实时数据流处理和分析。请说明为何选择Kafka作为实时数据流处理的中间件。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510572,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于某电商平台数据架构的说明，回答下列问题。</p><p>【说明】</p><p>某电商平台计划升级其现有的数据存储系统，以支持日益增长的商品数据、用户信息及交易记录。该平台的目标是提高数据查询效率、增强数据安全性、以及实现数据的灵活扩展，以适应未来业务发展的需求。当前，平台主要使用MySQL关系型数据库存储结构化数据，但面临着查询性能瓶颈、数据备份恢复复杂度高以及难以高效处理大规模非结构化数据（如商品图片、用户评价等）的问题。</p><p>项目团队经过调研，决定引入NoSQL数据库（如Cassandra）和分布式文件系统（如HDFS）来优化数据存储架构。Cassandra因其高可用性、线性扩展性和低延迟读写性能被选为处理高并发用户数据和商品信息的数据库，而HDFS则用于存储和处理大规模非结构化数据。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）兼容性：Kafka能够收集和处理来自Cassandra的实时数据流。</p><p>（2）可伸缩性：Kafka的分布式架构支持通过增加节点来线性伸缩，适应不断增长的数据量。</p><p>（3）容错性：Kafka通过数据复制和分区机制提供强大的容错能力。</p><p>（4）高吞吐量：支持高吞吐量的数据处理，也能够削峰填谷。</p><p>（5）低延迟：Kafka能够满足电商平台对实时数据处理的需求。</p><p>（6）发布-订阅模式：Kafka的发布-订阅模型允许不同的消费者（如实时分析引擎、数据仓库等）独立地消费数据，互不影响。</p><p>（7）持久化：Kafka的数据持久化机制允许用户根据需要调整数据的保留策略和副本因子，以适应不同的业务场景。</p><p>（8）生态系统支持：Kafka拥有丰富的API和强大的生态系统支持，可以无缝集成到现有的数据处理和分析框架中。</p><p>（答出6个即满分）</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510577,
    "question_title": "<p>【问题1】（5分）</p><p>简述微服务架构相较于传统单体架构的主要优势。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>微服务架构相较于传统单体架构的主要优势包括：</p><p>(1)&nbsp;高可伸缩性：微服务架构允许独立地伸缩各个服务，根据业务需求灵活调整资源，而不需要对整个应用进行调整。</p><p>(2)&nbsp;技术栈灵活性：每个微服务可以使用最适合其需求的技术栈进行开发，无需受限于整个应用的技术选择。</p><p>(3)&nbsp;快速迭代和部署：由于服务之间的解耦，团队可以并行开发、测试和部署不同的服务，从而加快产品迭代速度。</p><p>(4)&nbsp;故障隔离：单个服务的故障不会影响到整个系统，提高了系统的稳定性和可靠性。</p><p>(5)&nbsp;更好的团队协作：微服务架构促进了小型、自治的团队形成，每个团队可以专注于自己的服务，提高了开发效率和代码质量。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 141,
      "belong_page": 1,
      "question_id": 510577,
      "question_title": "<p>【问题1】（5分）</p><p>简述微服务架构相较于传统单体架构的主要优势。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510576,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web电商平台架构设计的描述，回答下列问题。</p><p>【说明】</p><p>某电商平台计划开发一个面向全球消费者的在线购物系统，该系统需支持多语言、多货币及多地区配送。为应对未来用户量激增及高并发交易的需求，系统需具备高度可扩展性和高可用性。项目团队决定采用微服务架构进行系统设计，并计划使用Docker容器化技术部署服务。</p><p>在架构设计过程中，需考虑以下关键因素：</p><p>(1)&nbsp;系统需支持分布式事务处理，确保数据一致性；</p><p>(2)&nbsp;采用微服务架构后，服务间的通信和数据共享需高效且安全；</p><p>(3)&nbsp;系统需集成多种支付方式，并符合不同地区的支付法规；</p><p>(4)&nbsp;考虑到全球访问，需部署CDN以优化用户体验。</p><p>团队初步规划了用户服务、商品服务、订单服务、支付服务等几个核心微服务，并讨论了服务间的调用机制及数据同步方案。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>微服务架构相较于传统单体架构的主要优势包括：</p><p>(1)&nbsp;高可伸缩性：微服务架构允许独立地伸缩各个服务，根据业务需求灵活调整资源，而不需要对整个应用进行调整。</p><p>(2)&nbsp;技术栈灵活性：每个微服务可以使用最适合其需求的技术栈进行开发，无需受限于整个应用的技术选择。</p><p>(3)&nbsp;快速迭代和部署：由于服务之间的解耦，团队可以并行开发、测试和部署不同的服务，从而加快产品迭代速度。</p><p>(4)&nbsp;故障隔离：单个服务的故障不会影响到整个系统，提高了系统的稳定性和可靠性。</p><p>(5)&nbsp;更好的团队协作：微服务架构促进了小型、自治的团队形成，每个团队可以专注于自己的服务，提高了开发效率和代码质量。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510578,
    "question_title": "<p>【问题2】（12分）</p><p>在微服务架构下，服务间的通信和数据共享是核心问题之一。请比较常见的服务间通信方式RESTful API和gRPC，并基于电商平台的需求，推荐一种合适的通信方式并说明选择原因。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>RESTful API和gRPC的区别如下：</p><p>（1）RESTful API：基于HTTP协议，使用JSON或XML等格式进行数据传输，具有良好的跨平台性和易用性。它支持丰富的HTTP方法（如GET、POST、PUT、DELETE等），便于实现资源的CRUD操作。对于电商平台而言，RESTful API因其简单性和广泛的支持度，是一个很好的选择。它允许前端、移动应用和其他服务通过统一的接口与后端服务进行交互。</p><p>（2）gRPC：由Google开发，基于HTTP/2协议，支持多种语言，并使用Protocol Buffers作为接口定义语言（IDL）。gRPC在性能上略优于RESTful API，特别是在需要低延迟和高吞吐量的场景下。然而不如RESTful API那样易于学习和使用，且对客户端的支持不如RESTful API广泛。</p><p>基于电商平台的需求，推荐采用RESTful API作为服务间的通信方式。原因包括：</p><p>（1）电商平台通常需要与多种客户端（如Web前端、移动应用、第三方服务等）进行交互，RESTful API的广泛支持度使其成为理想选择。</p><p>（2）RESTful API的易用性和简单性有助于降低开发成本和提高开发效率。</p><p>（3）常见电商平台对实时性要求不是特别高，因此RESTful API的性能足以满足需求。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 142,
      "belong_page": 1,
      "question_id": 510578,
      "question_title": "<p>【问题2】（12分）</p><p>在微服务架构下，服务间的通信和数据共享是核心问题之一。请比较常见的服务间通信方式RESTful API和gRPC，并基于电商平台的需求，推荐一种合适的通信方式并说明选择原因。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510576,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web电商平台架构设计的描述，回答下列问题。</p><p>【说明】</p><p>某电商平台计划开发一个面向全球消费者的在线购物系统，该系统需支持多语言、多货币及多地区配送。为应对未来用户量激增及高并发交易的需求，系统需具备高度可扩展性和高可用性。项目团队决定采用微服务架构进行系统设计，并计划使用Docker容器化技术部署服务。</p><p>在架构设计过程中，需考虑以下关键因素：</p><p>(1)&nbsp;系统需支持分布式事务处理，确保数据一致性；</p><p>(2)&nbsp;采用微服务架构后，服务间的通信和数据共享需高效且安全；</p><p>(3)&nbsp;系统需集成多种支付方式，并符合不同地区的支付法规；</p><p>(4)&nbsp;考虑到全球访问，需部署CDN以优化用户体验。</p><p>团队初步规划了用户服务、商品服务、订单服务、支付服务等几个核心微服务，并讨论了服务间的调用机制及数据同步方案。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>RESTful API和gRPC的区别如下：</p><p>（1）RESTful API：基于HTTP协议，使用JSON或XML等格式进行数据传输，具有良好的跨平台性和易用性。它支持丰富的HTTP方法（如GET、POST、PUT、DELETE等），便于实现资源的CRUD操作。对于电商平台而言，RESTful API因其简单性和广泛的支持度，是一个很好的选择。它允许前端、移动应用和其他服务通过统一的接口与后端服务进行交互。</p><p>（2）gRPC：由Google开发，基于HTTP/2协议，支持多种语言，并使用Protocol Buffers作为接口定义语言（IDL）。gRPC在性能上略优于RESTful API，特别是在需要低延迟和高吞吐量的场景下。然而不如RESTful API那样易于学习和使用，且对客户端的支持不如RESTful API广泛。</p><p>基于电商平台的需求，推荐采用RESTful API作为服务间的通信方式。原因包括：</p><p>（1）电商平台通常需要与多种客户端（如Web前端、移动应用、第三方服务等）进行交互，RESTful API的广泛支持度使其成为理想选择。</p><p>（2）RESTful API的易用性和简单性有助于降低开发成本和提高开发效率。</p><p>（3）常见电商平台对实时性要求不是特别高，因此RESTful API的性能足以满足需求。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510579,
    "question_title": "<p>【问题3】（8分）</p><p>在微服务架构下，如何确保各个微服务之间的数据一致性和服务的高可用性？请列举几种常见的策略或技术。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>(1)&nbsp;分布式事务：使用两阶段提交（2PC）、三阶段提交（3PC）或基于SAGA模式等分布式事务解决方案，确保跨多个服务的数据一致性。然而，分布式事务可能会引入额外的复杂性和性能开销，因此需要谨慎使用。</p><p>(2)&nbsp;最终一致性：在不需要强一致性的场景下，可以采用最终一致性模型。通过事件驱动架构（EDA）或消息队列等方式，异步地更新数据，并在一段时间后达到一致状态。这种方式可以提高系统的可用性和性能。</p><p>(3)&nbsp;服务熔断与降级：为了防止某个服务的故障影响到整个系统，可以实施服务熔断机制。当服务调用失败率达到一定阈值时，自动熔断该服务，防止进一步的失败扩散。同时，可以实施服务降级策略，在资源不足或系统负载过高时，提供简化的服务响应。</p><p>(4)&nbsp;服务注册与发现：使用服务注册中心（如Eureka、Consul等）来管理服务的注册和发现。服务实例在启动时向注册中心注册自己，并在关闭时注销。其他服务通过注册中心来发现需要调用的服务实例，从而实现服务的动态发现和负载均衡。</p><p>(5)&nbsp;数据复制与缓存：通过数据复制和缓存技术，提高数据的可用性和访问速度。例如，可以使用数据库的主从复制来确保数据的高可用性，并使用缓存（如Redis、Memcached等）来减少数据库的访问压力和提高数据访问速度。</p><p>(6)&nbsp;API网关：在微服务架构中，API网关作为所有客户端请求的入口点，负责路由、过滤、认证、限流等职责。通过API网关，可以集中管理跨服务的通信和数据共享，提高系统的安全性和可维护性。</p><p>（答出4条即可）</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 143,
      "belong_page": 1,
      "question_id": 510579,
      "question_title": "<p>【问题3】（8分）</p><p>在微服务架构下，如何确保各个微服务之间的数据一致性和服务的高可用性？请列举几种常见的策略或技术。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510576,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web电商平台架构设计的描述，回答下列问题。</p><p>【说明】</p><p>某电商平台计划开发一个面向全球消费者的在线购物系统，该系统需支持多语言、多货币及多地区配送。为应对未来用户量激增及高并发交易的需求，系统需具备高度可扩展性和高可用性。项目团队决定采用微服务架构进行系统设计，并计划使用Docker容器化技术部署服务。</p><p>在架构设计过程中，需考虑以下关键因素：</p><p>(1)&nbsp;系统需支持分布式事务处理，确保数据一致性；</p><p>(2)&nbsp;采用微服务架构后，服务间的通信和数据共享需高效且安全；</p><p>(3)&nbsp;系统需集成多种支付方式，并符合不同地区的支付法规；</p><p>(4)&nbsp;考虑到全球访问，需部署CDN以优化用户体验。</p><p>团队初步规划了用户服务、商品服务、订单服务、支付服务等几个核心微服务，并讨论了服务间的调用机制及数据同步方案。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>(1)&nbsp;分布式事务：使用两阶段提交（2PC）、三阶段提交（3PC）或基于SAGA模式等分布式事务解决方案，确保跨多个服务的数据一致性。然而，分布式事务可能会引入额外的复杂性和性能开销，因此需要谨慎使用。</p><p>(2)&nbsp;最终一致性：在不需要强一致性的场景下，可以采用最终一致性模型。通过事件驱动架构（EDA）或消息队列等方式，异步地更新数据，并在一段时间后达到一致状态。这种方式可以提高系统的可用性和性能。</p><p>(3)&nbsp;服务熔断与降级：为了防止某个服务的故障影响到整个系统，可以实施服务熔断机制。当服务调用失败率达到一定阈值时，自动熔断该服务，防止进一步的失败扩散。同时，可以实施服务降级策略，在资源不足或系统负载过高时，提供简化的服务响应。</p><p>(4)&nbsp;服务注册与发现：使用服务注册中心（如Eureka、Consul等）来管理服务的注册和发现。服务实例在启动时向注册中心注册自己，并在关闭时注销。其他服务通过注册中心来发现需要调用的服务实例，从而实现服务的动态发现和负载均衡。</p><p>(5)&nbsp;数据复制与缓存：通过数据复制和缓存技术，提高数据的可用性和访问速度。例如，可以使用数据库的主从复制来确保数据的高可用性，并使用缓存（如Redis、Memcached等）来减少数据库的访问压力和提高数据访问速度。</p><p>(6)&nbsp;API网关：在微服务架构中，API网关作为所有客户端请求的入口点，负责路由、过滤、认证、限流等职责。通过API网关，可以集中管理跨服务的通信和数据共享，提高系统的安全性和可维护性。</p><p>（答出4条即可）</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510671,
    "question_title": "<p>【问题1】（12分）</p><p>在架构评估过程中，质量属性效用树(utility tree)是对系统质量属性进行识别和优先级排序的重要工具。请给出合适的质量属性，填入图1中(1)、(2)空白处；并选择题干描述中的(a)～(h)，将恰当的序号填入(3)～(6)空白处，完成该系统的效用树。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250325/1742838588328510.png\" title=\"1742838588328510.png\" alt=\"image.png\" width=\"538\" height=\"375\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250331/1743387884692366.png\" title=\"1743387884692366.png\" alt=\"image.png\"/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 144,
      "belong_page": 1,
      "question_id": 510671,
      "question_title": "<p>【问题1】（12分）</p><p>在架构评估过程中，质量属性效用树(utility tree)是对系统质量属性进行识别和优先级排序的重要工具。请给出合适的质量属性，填入图1中(1)、(2)空白处；并选择题干描述中的(a)～(h)，将恰当的序号填入(3)～(6)空白处，完成该系统的效用树。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250325/1742838588328510.png\" title=\"1742838588328510.png\" alt=\"image.png\" width=\"538\" height=\"375\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510670,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件架构评估的说明，回答下列问题。</p><p>【说明】</p><p>某大型矿山企业计划开发一套全面的矿山管理软件，旨在提高生产效率，加强安全管理，并确保数据的准确性和完整性。在系统需求分析与架构设计阶段，用户提出的部分需求和关键质量属性场景如下：</p><p>(a)系统核心部件应与互联网隔离，防止被入侵；</p><p>(b)系统需增加支持矿山设备的远程故障诊断与修复，该功能需在一个季度内完成开发；</p><p>(c)所有敏感数据，如设备数据、人员信息和生产数据，必须进行加密存储和传输；</p><p>(d)当主服务器出现故障时，系统需自动切换至备用服务器，确保业务连续性，切换时间不超过3分钟；</p><p>(e)系统需支持未来新增矿区和设备的无缝集成；</p><p>(f)系统应实时展示各作业终端的状态，延时不超过3秒；</p><p>(g)系统应确保在个别设备故障时仍能提供服务，且更换故障设备时间不超过1小时；</p><p>(h)支持至少1000个矿山作业终端和200个管理终端的并发访问。</p><p>在此基础上开发部门目前正在组织系统开发的相关人员对系统架构进行评估。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250331/1743387884692366.png\" title=\"1743387884692366.png\" alt=\"image.png\"/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510672,
    "question_title": "<p>【问题2】（4分）</p><p>评估人员采用了ATAM（Architecture Tradeoff Analysis Method）方法，请列出其包含的四个阶段。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）需求收集；（2）架构视图描述；（3）属性模型构造和分析；（4）架构决策与折中。</p><p>或者</p><p>（1）演示；（2）调查和分析；（3）测试；（4）报告。</p><p>以上二者任何一种均可。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 145,
      "belong_page": 1,
      "question_id": 510672,
      "question_title": "<p>【问题2】（4分）</p><p>评估人员采用了ATAM（Architecture Tradeoff Analysis Method）方法，请列出其包含的四个阶段。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510670,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件架构评估的说明，回答下列问题。</p><p>【说明】</p><p>某大型矿山企业计划开发一套全面的矿山管理软件，旨在提高生产效率，加强安全管理，并确保数据的准确性和完整性。在系统需求分析与架构设计阶段，用户提出的部分需求和关键质量属性场景如下：</p><p>(a)系统核心部件应与互联网隔离，防止被入侵；</p><p>(b)系统需增加支持矿山设备的远程故障诊断与修复，该功能需在一个季度内完成开发；</p><p>(c)所有敏感数据，如设备数据、人员信息和生产数据，必须进行加密存储和传输；</p><p>(d)当主服务器出现故障时，系统需自动切换至备用服务器，确保业务连续性，切换时间不超过3分钟；</p><p>(e)系统需支持未来新增矿区和设备的无缝集成；</p><p>(f)系统应实时展示各作业终端的状态，延时不超过3秒；</p><p>(g)系统应确保在个别设备故障时仍能提供服务，且更换故障设备时间不超过1小时；</p><p>(h)支持至少1000个矿山作业终端和200个管理终端的并发访问。</p><p>在此基础上开发部门目前正在组织系统开发的相关人员对系统架构进行评估。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）需求收集；（2）架构视图描述；（3）属性模型构造和分析；（4）架构决策与折中。</p><p>或者</p><p>（1）演示；（2）调查和分析；（3）测试；（4）报告。</p><p>以上二者任何一种均可。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510673,
    "question_title": "<p>【问题3】（9分）</p><p>系统应实时展示各作业终端的状态，张工提出采用管道-过滤器风格，李工提议采用事件驱动风格。请选择一种更适合的架构风格，并以300字以内的文字从实时性、可维护性、安全性方面说明理由。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>针对系统应实时展示各作业终端状态的需求，更适合采用的架构风格是事件驱动风格。</p><p>（1）实时性：事件驱动风格基于事件的消息传递机制，能够迅速响应系统内部或外部发生的事件。当作业终端状态发生变化时，可以立即触发相应的事件，并由处理该事件的服务进行状态更新和展示。而管道-过滤器风格通过多个管道和过滤器进行数据传递和处理，增加了延迟。</p><p>（2）可维护性：在事件驱动架构中，事件的生产者和消费者是解耦的，作业终端状态的变化（事件生产者）与状态展示逻辑（事件消费者）之间不需要直接通信或依赖，可维护性高。而管道-过滤器风格可能需要修改多级构件。</p><p>（3）安全性：在事件驱动架构中，事件的生产者和消费者可以处在不同的安全级别彼此隔离。而管道-过滤器风格需要各级紧密耦合，容易造成安全隐患。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 146,
      "belong_page": 1,
      "question_id": 510673,
      "question_title": "<p>【问题3】（9分）</p><p>系统应实时展示各作业终端的状态，张工提出采用管道-过滤器风格，李工提议采用事件驱动风格。请选择一种更适合的架构风格，并以300字以内的文字从实时性、可维护性、安全性方面说明理由。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510670,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件架构评估的说明，回答下列问题。</p><p>【说明】</p><p>某大型矿山企业计划开发一套全面的矿山管理软件，旨在提高生产效率，加强安全管理，并确保数据的准确性和完整性。在系统需求分析与架构设计阶段，用户提出的部分需求和关键质量属性场景如下：</p><p>(a)系统核心部件应与互联网隔离，防止被入侵；</p><p>(b)系统需增加支持矿山设备的远程故障诊断与修复，该功能需在一个季度内完成开发；</p><p>(c)所有敏感数据，如设备数据、人员信息和生产数据，必须进行加密存储和传输；</p><p>(d)当主服务器出现故障时，系统需自动切换至备用服务器，确保业务连续性，切换时间不超过3分钟；</p><p>(e)系统需支持未来新增矿区和设备的无缝集成；</p><p>(f)系统应实时展示各作业终端的状态，延时不超过3秒；</p><p>(g)系统应确保在个别设备故障时仍能提供服务，且更换故障设备时间不超过1小时；</p><p>(h)支持至少1000个矿山作业终端和200个管理终端的并发访问。</p><p>在此基础上开发部门目前正在组织系统开发的相关人员对系统架构进行评估。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>针对系统应实时展示各作业终端状态的需求，更适合采用的架构风格是事件驱动风格。</p><p>（1）实时性：事件驱动风格基于事件的消息传递机制，能够迅速响应系统内部或外部发生的事件。当作业终端状态发生变化时，可以立即触发相应的事件，并由处理该事件的服务进行状态更新和展示。而管道-过滤器风格通过多个管道和过滤器进行数据传递和处理，增加了延迟。</p><p>（2）可维护性：在事件驱动架构中，事件的生产者和消费者是解耦的，作业终端状态的变化（事件生产者）与状态展示逻辑（事件消费者）之间不需要直接通信或依赖，可维护性高。而管道-过滤器风格可能需要修改多级构件。</p><p>（3）安全性：在事件驱动架构中，事件的生产者和消费者可以处在不同的安全级别彼此隔离。而管道-过滤器风格需要各级紧密耦合，容易造成安全隐患。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510675,
    "question_title": "<p>【问题1】（10分）</p><p>在设计银行自助服务系统的核心组件时，王工提议采用面向对象的设计（OOD）方法，并绘制了类图的一部分。其中包括客户类、账户类、储蓄账户类、信用卡账户类、交易记录类、自助机类、自助机服务类、身份验证类等。请根据以上信息填空（1）~（5）。</p><p>其中属于基类的是（1），属于控制类的是（2），属于边界类的是（3），自助机服务类与身份验证类之间的关系是（4），账户类与交易记录类之间的关系是（5）。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）账户类。</p><p>（2）自助机服务类、身份验证类。</p><p>（3）自助机类。</p><p>（4）依赖关系。</p><p>（5）关联关系。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 147,
      "belong_page": 1,
      "question_id": 510675,
      "question_title": "<p>【问题1】（10分）</p><p>在设计银行自助服务系统的核心组件时，王工提议采用面向对象的设计（OOD）方法，并绘制了类图的一部分。其中包括客户类、账户类、储蓄账户类、信用卡账户类、交易记录类、自助机类、自助机服务类、身份验证类等。请根据以上信息填空（1）~（5）。</p><p>其中属于基类的是（1），属于控制类的是（2），属于边界类的是（3），自助机服务类与身份验证类之间的关系是（4），账户类与交易记录类之间的关系是（5）。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510674,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于系统设计的说明，回答下列问题。</p><p>【说明】</p><p>某银行计划开发一套自助服务系统，旨在提高客户服务效率和满意度。该系统将支持账户查询、转账、存款、取款等多种功能。在设计阶段，团队成员对于系统核心组件的设计、系统的可靠性保障以及特定功能实现的方式存在分歧。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）账户类。</p><p>（2）自助机服务类、身份验证类。</p><p>（3）自助机类。</p><p>（4）依赖关系。</p><p>（5）关联关系。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510676,
    "question_title": "<p>【问题2】（10分）</p><p>请以300字以内的文字说明在设计银行自助服务系统时，如何确保系统的可靠性。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>在设计银行自助服务系统时，为确保系统的可靠性，可以采取以下措施：</p><p>（1）故障检测与恢复：建立故障检测机制，实时监测系统的运行状态，一旦发现故障立即启动恢复机制，减少故障对系统的影响。</p><p>（2）冗余设计：采用双机热备、负载均衡等技术，确保在系统出现故障时能够迅速切换到备用设备，保证服务的连续性。</p><p>（3）软件容错：在软件设计中考虑容错机制，如异常处理、事务回滚等，确保系统在异常情况下仍能正确运行。</p><p>（4）降低复杂度设计：提升模块的内聚，降低模块间的耦合，通过数据抽象和封装，隐藏复杂的数据处理逻辑。</p><p>（5）采用成熟的构件：选用经过市场或者项目验证的成熟构件，减少自研风险，提升系统可靠性。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 148,
      "belong_page": 1,
      "question_id": 510676,
      "question_title": "<p>【问题2】（10分）</p><p>请以300字以内的文字说明在设计银行自助服务系统时，如何确保系统的可靠性。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510674,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于系统设计的说明，回答下列问题。</p><p>【说明】</p><p>某银行计划开发一套自助服务系统，旨在提高客户服务效率和满意度。该系统将支持账户查询、转账、存款、取款等多种功能。在设计阶段，团队成员对于系统核心组件的设计、系统的可靠性保障以及特定功能实现的方式存在分歧。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>在设计银行自助服务系统时，为确保系统的可靠性，可以采取以下措施：</p><p>（1）故障检测与恢复：建立故障检测机制，实时监测系统的运行状态，一旦发现故障立即启动恢复机制，减少故障对系统的影响。</p><p>（2）冗余设计：采用双机热备、负载均衡等技术，确保在系统出现故障时能够迅速切换到备用设备，保证服务的连续性。</p><p>（3）软件容错：在软件设计中考虑容错机制，如异常处理、事务回滚等，确保系统在异常情况下仍能正确运行。</p><p>（4）降低复杂度设计：提升模块的内聚，降低模块间的耦合，通过数据抽象和封装，隐藏复杂的数据处理逻辑。</p><p>（5）采用成熟的构件：选用经过市场或者项目验证的成熟构件，减少自研风险，提升系统可靠性。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510677,
    "question_title": "<p>【问题3】（5分）</p><p>在设计银行自助服务系统的转账功能时，王工提议采用中介者模式，请说明为什么中介者模式适合用于实现转账功能，并给出300字以内的文字解释。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>中介者模式适合用于实现银行自助服务系统的转账功能，原因如下：</p><p>（1）降低对象间耦合度：在转账过程中，涉及多个账户对象之间的交互。中介者模式将这些对象间的直接交互转变为通过中介者对象进行间接交互，从而降低了对象间的耦合度。</p><p>（2）减少代码：中介者集中管理对象间的交互，避免了对象间复杂的调用关系，从而减少了代码量，提高了代码的可读性。</p><p>（3）集中控制交互流程：中介者对象负责管理和协调转账过程中各个账户对象之间的交互流程，确保转账操作的安全性和一致性。</p><p>（4）易于扩展和维护：随着系统功能的增加和变化，可能需要引入新的账户类型或转账规则。中介者模式使得这些变化可以集中在中介者对象中进行处理，而无需修改各个账户对象的代码，从而降低了系统的维护成本和扩展难度。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 149,
      "belong_page": 1,
      "question_id": 510677,
      "question_title": "<p>【问题3】（5分）</p><p>在设计银行自助服务系统的转账功能时，王工提议采用中介者模式，请说明为什么中介者模式适合用于实现转账功能，并给出300字以内的文字解释。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510674,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于系统设计的说明，回答下列问题。</p><p>【说明】</p><p>某银行计划开发一套自助服务系统，旨在提高客户服务效率和满意度。该系统将支持账户查询、转账、存款、取款等多种功能。在设计阶段，团队成员对于系统核心组件的设计、系统的可靠性保障以及特定功能实现的方式存在分歧。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>中介者模式适合用于实现银行自助服务系统的转账功能，原因如下：</p><p>（1）降低对象间耦合度：在转账过程中，涉及多个账户对象之间的交互。中介者模式将这些对象间的直接交互转变为通过中介者对象进行间接交互，从而降低了对象间的耦合度。</p><p>（2）减少代码：中介者集中管理对象间的交互，避免了对象间复杂的调用关系，从而减少了代码量，提高了代码的可读性。</p><p>（3）集中控制交互流程：中介者对象负责管理和协调转账过程中各个账户对象之间的交互流程，确保转账操作的安全性和一致性。</p><p>（4）易于扩展和维护：随着系统功能的增加和变化，可能需要引入新的账户类型或转账规则。中介者模式使得这些变化可以集中在中介者对象中进行处理，而无需修改各个账户对象的代码，从而降低了系统的维护成本和扩展难度。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510679,
    "question_title": "<p>【问题1】（10分）</p><p>请分析并比较MySQL与Elasticsearch在搜索引擎原理、索引机制、数据模型及适用场景方面的差异，并填写下表。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250325/1742838771316051.png\" title=\"1742838771316051.png\" alt=\"image.png\" width=\"551\" height=\"222\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）基于SQL的查询引擎</p><p>（2）分词、建立倒排索引</p><p>（3）面向文档为主的灵活的数据模型</p><p>（4）默认是单机模式，需要额外配置主从等高可用模式</p><p>（5）小规模数据的在线事务处理和查询</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 150,
      "belong_page": 1,
      "question_id": 510679,
      "question_title": "<p>【问题1】（10分）</p><p>请分析并比较MySQL与Elasticsearch在搜索引擎原理、索引机制、数据模型及适用场景方面的差异，并填写下表。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250325/1742838771316051.png\" title=\"1742838771316051.png\" alt=\"image.png\" width=\"551\" height=\"222\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510678,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于某在线教育平台数据架构升级的说明，回答下列问题。</p><p>【说明】</p><p>某在线教育平台正面临数据量的快速增长，特别是课程视频、用户学习记录及互动评论等非结构化数据的激增。为了提升数据检索效率、加强数据安全性，并实现数据的实时分析与个性化推荐，平台计划对其数据架构进行全面升级。当前，平台主要依赖MySQL存储结构化数据，Elasticsearch用于全文搜索，但存在搜索性能瓶颈、数据同步延迟及非结构化数据处理能力不足的问题。</p><p>项目团队经过研究，决定引入Apache HBase作为高性能NoSQL数据库，用于存储大规模的结构化和半结构化数据，同时优化Elasticsearch集群，并结合Apache Kafka实现数据的实时同步与处理。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）基于SQL的查询引擎</p><p>（2）分词、建立倒排索引</p><p>（3）面向文档为主的灵活的数据模型</p><p>（4）默认是单机模式，需要额外配置主从等高可用模式</p><p>（5）小规模数据的在线事务处理和查询</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510680,
    "question_title": "<p>【问题2】（5分）</p><p>Elasticsearch在处理中文文本搜索时，需要依赖有效的分词机制。请阐述Elasticsearch中的分词原理，并说明如何实现自定义分词器以满足在线教育的特定业务需求。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）Elasticsearch中的分词原理是将输入的文本字符串切分成独立的词汇单元（Token），以便在索引和查询时进行有效的匹配。分词过程通常包括字符过滤（如去除标点符号、停用词等）、词汇切分和词汇归一化（如转换为小写）等步骤。</p><p>（2）为实现自定义分词器以满足特定业务需求，可以通过Elasticsearch的插件机制或配置自定义分析器来实现。自定义分析器可以包括自定义的字符过滤器、分词器和词汇过滤器。例如，针对在线教育这个特定领域的专业术语，可以创建自定义词汇表，并在分词过程中优先匹配这些术语，以确保搜索结果的准确性。此外，还可以根据业务需求调整分词策略，如基于统计的分词方法或基于规则的分词方法。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 151,
      "belong_page": 1,
      "question_id": 510680,
      "question_title": "<p>【问题2】（5分）</p><p>Elasticsearch在处理中文文本搜索时，需要依赖有效的分词机制。请阐述Elasticsearch中的分词原理，并说明如何实现自定义分词器以满足在线教育的特定业务需求。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510678,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于某在线教育平台数据架构升级的说明，回答下列问题。</p><p>【说明】</p><p>某在线教育平台正面临数据量的快速增长，特别是课程视频、用户学习记录及互动评论等非结构化数据的激增。为了提升数据检索效率、加强数据安全性，并实现数据的实时分析与个性化推荐，平台计划对其数据架构进行全面升级。当前，平台主要依赖MySQL存储结构化数据，Elasticsearch用于全文搜索，但存在搜索性能瓶颈、数据同步延迟及非结构化数据处理能力不足的问题。</p><p>项目团队经过研究，决定引入Apache HBase作为高性能NoSQL数据库，用于存储大规模的结构化和半结构化数据，同时优化Elasticsearch集群，并结合Apache Kafka实现数据的实时同步与处理。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）Elasticsearch中的分词原理是将输入的文本字符串切分成独立的词汇单元（Token），以便在索引和查询时进行有效的匹配。分词过程通常包括字符过滤（如去除标点符号、停用词等）、词汇切分和词汇归一化（如转换为小写）等步骤。</p><p>（2）为实现自定义分词器以满足特定业务需求，可以通过Elasticsearch的插件机制或配置自定义分析器来实现。自定义分析器可以包括自定义的字符过滤器、分词器和词汇过滤器。例如，针对在线教育这个特定领域的专业术语，可以创建自定义词汇表，并在分词过程中优先匹配这些术语，以确保搜索结果的准确性。此外，还可以根据业务需求调整分词策略，如基于统计的分词方法或基于规则的分词方法。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510681,
    "question_title": "<p>【问题3】（10分）</p><p>考虑到在线教育平台需要更新用户学习进度和课程互动数据，团队计划将MySQL中的数据同步到Elasticsearch中，以支持搜索和数据分析。请说明数据从MySQL到Elasticsearch的同步方法有哪些。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）基于binlog的数据同步方法。这种方法的优点是灵活性高，可以精确地控制需要同步的数据。常见的工具如Logstash、Canal等都可以利用这种方式实现MySQL到Elasticsearch的数据同步。</p><p>（2）基于MySQL的插件同步方法。一些插件能够直接在MySQL中捕获数据变更，并将其同步到Elasticsearch。如go-mysql-elasticsearch。</p><p>（3）同步双写方法。在MySQL中进行数据修改操作时，同时将这些修改写入Elasticsearch。</p><p>（4）异步双写方法。在MySQL中进行数据修改操作时，把修改操作先写入MQ等消息中间件，再从MQ中写入Elasticsearch。</p><p>（5）定时任务同步方法。通过定时任务（如Cron Job）结合SQL查询与批量导入的方式实现数据的定期同步。</p><p>（答出方法即可得分，不需要.解释）</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 152,
      "belong_page": 1,
      "question_id": 510681,
      "question_title": "<p>【问题3】（10分）</p><p>考虑到在线教育平台需要更新用户学习进度和课程互动数据，团队计划将MySQL中的数据同步到Elasticsearch中，以支持搜索和数据分析。请说明数据从MySQL到Elasticsearch的同步方法有哪些。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510678,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于某在线教育平台数据架构升级的说明，回答下列问题。</p><p>【说明】</p><p>某在线教育平台正面临数据量的快速增长，特别是课程视频、用户学习记录及互动评论等非结构化数据的激增。为了提升数据检索效率、加强数据安全性，并实现数据的实时分析与个性化推荐，平台计划对其数据架构进行全面升级。当前，平台主要依赖MySQL存储结构化数据，Elasticsearch用于全文搜索，但存在搜索性能瓶颈、数据同步延迟及非结构化数据处理能力不足的问题。</p><p>项目团队经过研究，决定引入Apache HBase作为高性能NoSQL数据库，用于存储大规模的结构化和半结构化数据，同时优化Elasticsearch集群，并结合Apache Kafka实现数据的实时同步与处理。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）基于binlog的数据同步方法。这种方法的优点是灵活性高，可以精确地控制需要同步的数据。常见的工具如Logstash、Canal等都可以利用这种方式实现MySQL到Elasticsearch的数据同步。</p><p>（2）基于MySQL的插件同步方法。一些插件能够直接在MySQL中捕获数据变更，并将其同步到Elasticsearch。如go-mysql-elasticsearch。</p><p>（3）同步双写方法。在MySQL中进行数据修改操作时，同时将这些修改写入Elasticsearch。</p><p>（4）异步双写方法。在MySQL中进行数据修改操作时，把修改操作先写入MQ等消息中间件，再从MQ中写入Elasticsearch。</p><p>（5）定时任务同步方法。通过定时任务（如Cron Job）结合SQL查询与批量导入的方式实现数据的定期同步。</p><p>（答出方法即可得分，不需要.解释）</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510683,
    "question_title": "<p>【问题1】（10分）</p><p>请以200字以内的文字说明在微服务架构中RESTful API的优势。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）提供了标准的通信方式，使得微服务间可以基于HTTP协议进行通信，简化了服务间的集成。</p><p>（2）使用统一的资源标识和操作方法（如GET、POST、PUT、DELETE），使得服务间的交互更加直观和易于理解。</p><p>（3）支持无状态通信，每个请求都包含足够的信息供服务器处理，无需在多个请求间维护状态。</p><p>（4）支持缓存，通过HTTP头信息可以控制缓存行为，提高系统性能。</p><p>（5）易于扩展，可以随着业务的发展轻松添加新的资源和方法。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 153,
      "belong_page": 1,
      "question_id": 510683,
      "question_title": "<p>【问题1】（10分）</p><p>请以200字以内的文字说明在微服务架构中RESTful API的优势。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510682,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web应用开发的描述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某大型电商平台计划开发一个全新的在线购物系统，该系统旨在提供丰富的商品选择、便捷的购物流程、智能的推荐系统以及高效的物流跟踪等功能。为了应对高并发访问、海量数据处理和快速业务变化的需求，系统决定采用微服务架构进行开发。系统被划分为用户中心服务、商品管理服务、订单处理服务、支付服务、物流跟踪服务、推荐系统服务等多个微服务。</p><p>在系统开发过程中，团队遇到了如何有效管理微服务间的通信和数据一致性，以及如何在保证系统高性能的同时，实现业务的快速迭代和扩展。团队中的王工提出了使用RESTful API进行微服务间通信，并结合分布式缓存技术来优化系统性能，而张工则建议引入服务治理框架和容器化技术来增强系统的稳定性和可扩展性。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）提供了标准的通信方式，使得微服务间可以基于HTTP协议进行通信，简化了服务间的集成。</p><p>（2）使用统一的资源标识和操作方法（如GET、POST、PUT、DELETE），使得服务间的交互更加直观和易于理解。</p><p>（3）支持无状态通信，每个请求都包含足够的信息供服务器处理，无需在多个请求间维护状态。</p><p>（4）支持缓存，通过HTTP头信息可以控制缓存行为，提高系统性能。</p><p>（5）易于扩展，可以随着业务的发展轻松添加新的资源和方法。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510684,
    "question_title": "<p>【问题2】（10分）</p><p>请以300字以内的文字阐述容器化技术在微服务架构中的作用。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）环境一致性：容器化技术能够将微服务及其所有依赖项打包成一个独立的运行单元，确保在不同环境中（开发、测试、生产等）运行的一致性。</p><p>（2）资源隔离：通过容器化，每个微服务都被封装在自己的容器中，实现了资源（如CPU、内存、网络等）的隔离，避免了微服务之间的资源竞争和冲突。</p><p>（3）快速部署与伸缩：容器化技术使得微服务的部署和扩展变得更加简单和高效。通过使用容器编排工具，可以实现自动化的部署、伸缩和管理。</p><p>（4）简化运维：容器化技术简化了运维工作。通过容器编排工具，可以轻松地监控服务、重启服务、日志收集、故障排查等，提高了运维效率。</p><p>提升效率：相比于物理主机和虚拟主机，容器化技术通过减少资源开销和优化资源利用，提升了微服务的效率。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 154,
      "belong_page": 1,
      "question_id": 510684,
      "question_title": "<p>【问题2】（10分）</p><p>请以300字以内的文字阐述容器化技术在微服务架构中的作用。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510682,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web应用开发的描述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某大型电商平台计划开发一个全新的在线购物系统，该系统旨在提供丰富的商品选择、便捷的购物流程、智能的推荐系统以及高效的物流跟踪等功能。为了应对高并发访问、海量数据处理和快速业务变化的需求，系统决定采用微服务架构进行开发。系统被划分为用户中心服务、商品管理服务、订单处理服务、支付服务、物流跟踪服务、推荐系统服务等多个微服务。</p><p>在系统开发过程中，团队遇到了如何有效管理微服务间的通信和数据一致性，以及如何在保证系统高性能的同时，实现业务的快速迭代和扩展。团队中的王工提出了使用RESTful API进行微服务间通信，并结合分布式缓存技术来优化系统性能，而张工则建议引入服务治理框架和容器化技术来增强系统的稳定性和可扩展性。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）环境一致性：容器化技术能够将微服务及其所有依赖项打包成一个独立的运行单元，确保在不同环境中（开发、测试、生产等）运行的一致性。</p><p>（2）资源隔离：通过容器化，每个微服务都被封装在自己的容器中，实现了资源（如CPU、内存、网络等）的隔离，避免了微服务之间的资源竞争和冲突。</p><p>（3）快速部署与伸缩：容器化技术使得微服务的部署和扩展变得更加简单和高效。通过使用容器编排工具，可以实现自动化的部署、伸缩和管理。</p><p>（4）简化运维：容器化技术简化了运维工作。通过容器编排工具，可以轻松地监控服务、重启服务、日志收集、故障排查等，提高了运维效率。</p><p>提升效率：相比于物理主机和虚拟主机，容器化技术通过减少资源开销和优化资源利用，提升了微服务的效率。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 510685,
    "question_title": "<p>【问题3】（5分）</p><p>请比较服务网格技术（Service Mesh）与企业服务总线（Enterprise Service Bus，ESB）的差异，并填写下表。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250325/1742838945791828.png\" title=\"1742838945791828.png\" alt=\"image.png\" width=\"505\" height=\"201\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "（1）轻量级的基础设施层<p>（2）剥离并确保微服务间的通信、安全、监控和治理</p><p>（3）服务注册与管理、负载均衡、容错等</p><p>（4）指定的调用接口</p><p>（5）服务数量众多、通信复杂且需要高可靠性和安全性的云应用</p><p>&nbsp;</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 155,
      "belong_page": 1,
      "question_id": 510685,
      "question_title": "<p>【问题3】（5分）</p><p>请比较服务网格技术（Service Mesh）与企业服务总线（Enterprise Service Bus，ESB）的差异，并填写下表。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250325/1742838945791828.png\" title=\"1742838945791828.png\" alt=\"image.png\" width=\"505\" height=\"201\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 510682,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web应用开发的描述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某大型电商平台计划开发一个全新的在线购物系统，该系统旨在提供丰富的商品选择、便捷的购物流程、智能的推荐系统以及高效的物流跟踪等功能。为了应对高并发访问、海量数据处理和快速业务变化的需求，系统决定采用微服务架构进行开发。系统被划分为用户中心服务、商品管理服务、订单处理服务、支付服务、物流跟踪服务、推荐系统服务等多个微服务。</p><p>在系统开发过程中，团队遇到了如何有效管理微服务间的通信和数据一致性，以及如何在保证系统高性能的同时，实现业务的快速迭代和扩展。团队中的王工提出了使用RESTful API进行微服务间通信，并结合分布式缓存技术来优化系统性能，而张工则建议引入服务治理框架和容器化技术来增强系统的稳定性和可扩展性。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "（1）轻量级的基础设施层<p>（2）剥离并确保微服务间的通信、安全、监控和治理</p><p>（3）服务注册与管理、负载均衡、容错等</p><p>（4）指定的调用接口</p><p>（5）服务数量众多、通信复杂且需要高可靠性和安全性的云应用</p><p>&nbsp;</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 512973,
    "question_title": "<p>【问题1】（12分）</p><p>在架构评估过程中，质量属性效用树(utility tree)是对系统质量属性进行识别和优先级排序的重要工具。请给出合适的质量属性，填入图1中(1)、(2)空白处；并选择题干描述中的(a)～(h)，将恰当的序号填入(3)～(6)空白处，完成该系统的效用树。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250421/1745191242757601.png\" title=\"1745191242757601.png\" alt=\"image.png\" width=\"522\" height=\"503\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250421/1745191262441754.png\" title=\"1745191262441754.png\" alt=\"image.png\" width=\"585\" height=\"221\"/>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 156,
      "belong_page": 1,
      "question_id": 512973,
      "question_title": "<p>【问题1】（12分）</p><p>在架构评估过程中，质量属性效用树(utility tree)是对系统质量属性进行识别和优先级排序的重要工具。请给出合适的质量属性，填入图1中(1)、(2)空白处；并选择题干描述中的(a)～(h)，将恰当的序号填入(3)～(6)空白处，完成该系统的效用树。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250421/1745191242757601.png\" title=\"1745191242757601.png\" alt=\"image.png\" width=\"522\" height=\"503\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 512972,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件架构评估的说明，回答下列问题。</p><p>【说明】</p><p>某三甲医院计划开发一套医疗信息管理系统（MIS），用于整合患者电子病历、预约挂号、诊疗记录、药品管理等功能，以提升医疗服务效率和数据安全性。在系统需求分析与架构设计阶段，用户提出的部分需求和关键质量属性场景如下：</p><p>(a) 系统需与医院内部网络隔离，防止外部攻击；</p><p>(b) 新增远程医疗咨询功能需在三个月内开发完成；</p><p>(c) 患者隐私数据（如病历、用药记录）必须加密存储和传输；</p><p>(d) 主数据库故障时，需在5分钟内切换到备用系统，确保服务连续性；</p><p>(e) 支持未来新增分院和科室的无缝集成；</p><p>(f) 实时显示所有诊室和设备状态，延迟不超过2秒；</p><p>(g) 单个服务器故障不影响整体服务，且修复时间不超过30分钟；</p><p>(h) 支持同时处理1000个患者终端和50个医生工作站的访问。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250421/1745191262441754.png\" title=\"1745191262441754.png\" alt=\"image.png\" width=\"585\" height=\"221\"/>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 512974,
    "question_title": "<p>【问题2】（8分）</p><p>在系统架构设计中，安全性设计非常关键，请从（a）～（h）中选择一个描述，分别代表系统架构中的数据安全和网络安全。同时，说明在智能医疗系统中，如何通过技术手段实现这些安全性需求。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>数据安全：(c)</p><p>(1)&nbsp;加密存储，对敏感字段（如病历、用药记录）使用AES-256等加密算法存储；</p><p>(2)&nbsp;加密传输，采用TLS/SSL协议 （如HTTPS）加密网络通信，防止中间人攻击；</p><p>(3)&nbsp;访问控制，基于用户角色（如病人、医生、护士、管理员）加业务的双重访问控制；</p><p>(4)&nbsp;数据脱敏，非必要场景下显示脱敏数据（如患者姓名仅显示姓氏+星号）；</p><p>(5)&nbsp;数据备份，实施数据备份和灾难恢复计划，确保数据的可用性。</p><p>网络安全：(a)</p><p>(1)&nbsp;网络隔离，通过物理隔离（网闸）或者防火墙将内网与外部网络隔断；</p><p>(2)&nbsp;网络分段，通过逻辑隔离（如VLAN）将不同用户或者系统逻辑分隔，限制横向移动攻击；</p><p>(3)&nbsp;边界防护，部署入侵检测系统（IDS）和入侵防御系统（IPS），实时监控或者阻断外部攻击；</p><p>(4)&nbsp;零信任架构，采用“永不信任，始终验证”原则，要求所有访问（包括内部设备）需通过认证；</p><p>(5)&nbsp;安全协议强化，使用TLS 1.3 加密所有通信；</p><p>(6)&nbsp;网络沙箱，对可疑流量或文件进行隔离分析（如检测恶意软件附件）。</p><p>（以上两个知识点答出选项各1分，每个知识点答出3条即可得3分，答出名词即可，无需解释）</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 157,
      "belong_page": 1,
      "question_id": 512974,
      "question_title": "<p>【问题2】（8分）</p><p>在系统架构设计中，安全性设计非常关键，请从（a）～（h）中选择一个描述，分别代表系统架构中的数据安全和网络安全。同时，说明在智能医疗系统中，如何通过技术手段实现这些安全性需求。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 512972,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件架构评估的说明，回答下列问题。</p><p>【说明】</p><p>某三甲医院计划开发一套医疗信息管理系统（MIS），用于整合患者电子病历、预约挂号、诊疗记录、药品管理等功能，以提升医疗服务效率和数据安全性。在系统需求分析与架构设计阶段，用户提出的部分需求和关键质量属性场景如下：</p><p>(a) 系统需与医院内部网络隔离，防止外部攻击；</p><p>(b) 新增远程医疗咨询功能需在三个月内开发完成；</p><p>(c) 患者隐私数据（如病历、用药记录）必须加密存储和传输；</p><p>(d) 主数据库故障时，需在5分钟内切换到备用系统，确保服务连续性；</p><p>(e) 支持未来新增分院和科室的无缝集成；</p><p>(f) 实时显示所有诊室和设备状态，延迟不超过2秒；</p><p>(g) 单个服务器故障不影响整体服务，且修复时间不超过30分钟；</p><p>(h) 支持同时处理1000个患者终端和50个医生工作站的访问。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>数据安全：(c)</p><p>(1)&nbsp;加密存储，对敏感字段（如病历、用药记录）使用AES-256等加密算法存储；</p><p>(2)&nbsp;加密传输，采用TLS/SSL协议 （如HTTPS）加密网络通信，防止中间人攻击；</p><p>(3)&nbsp;访问控制，基于用户角色（如病人、医生、护士、管理员）加业务的双重访问控制；</p><p>(4)&nbsp;数据脱敏，非必要场景下显示脱敏数据（如患者姓名仅显示姓氏+星号）；</p><p>(5)&nbsp;数据备份，实施数据备份和灾难恢复计划，确保数据的可用性。</p><p>网络安全：(a)</p><p>(1)&nbsp;网络隔离，通过物理隔离（网闸）或者防火墙将内网与外部网络隔断；</p><p>(2)&nbsp;网络分段，通过逻辑隔离（如VLAN）将不同用户或者系统逻辑分隔，限制横向移动攻击；</p><p>(3)&nbsp;边界防护，部署入侵检测系统（IDS）和入侵防御系统（IPS），实时监控或者阻断外部攻击；</p><p>(4)&nbsp;零信任架构，采用“永不信任，始终验证”原则，要求所有访问（包括内部设备）需通过认证；</p><p>(5)&nbsp;安全协议强化，使用TLS 1.3 加密所有通信；</p><p>(6)&nbsp;网络沙箱，对可疑流量或文件进行隔离分析（如检测恶意软件附件）。</p><p>（以上两个知识点答出选项各1分，每个知识点答出3条即可得3分，答出名词即可，无需解释）</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 512975,
    "question_title": "<p>【问题3】（5分）</p><p>请根据各个关键质量属性场景的描述，补充完成以下空格（A）~（E）。</p><p>（1）单个服务器故障不影响整体服务，且修复时间不超过30分钟：</p><p>刺激源：（A）</p><p>刺激：故障</p><p>环境：正常操作</p><p>制品：服务器集群</p><p>响应：（B）</p><p>响应度量：（C）</p><p>（2）支持同时处理1000个患者终端和50个医生工作站的访问：</p><p>刺激源：患者终端和医生工作站</p><p>刺激：（D）</p><p>环境：（E）</p><p>制品：MIS系统的Web服务器</p><p>响应：快速分配资源并处理请求</p><p>响应度量：支持≥1000患者终端和≥50医生工作站的并发访问</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（A）单个服务器</p><p>（B）将流量重定向到其他正常服务器，并通知管理员修复故障</p><p>（C）服务无中断，修复时间≤30分钟</p><p>（D）系统同时处理大量用户访问</p><p>（E）挂号高峰期或诊疗高峰期</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 158,
      "belong_page": 1,
      "question_id": 512975,
      "question_title": "<p>【问题3】（5分）</p><p>请根据各个关键质量属性场景的描述，补充完成以下空格（A）~（E）。</p><p>（1）单个服务器故障不影响整体服务，且修复时间不超过30分钟：</p><p>刺激源：（A）</p><p>刺激：故障</p><p>环境：正常操作</p><p>制品：服务器集群</p><p>响应：（B）</p><p>响应度量：（C）</p><p>（2）支持同时处理1000个患者终端和50个医生工作站的访问：</p><p>刺激源：患者终端和医生工作站</p><p>刺激：（D）</p><p>环境：（E）</p><p>制品：MIS系统的Web服务器</p><p>响应：快速分配资源并处理请求</p><p>响应度量：支持≥1000患者终端和≥50医生工作站的并发访问</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 512972,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件架构评估的说明，回答下列问题。</p><p>【说明】</p><p>某三甲医院计划开发一套医疗信息管理系统（MIS），用于整合患者电子病历、预约挂号、诊疗记录、药品管理等功能，以提升医疗服务效率和数据安全性。在系统需求分析与架构设计阶段，用户提出的部分需求和关键质量属性场景如下：</p><p>(a) 系统需与医院内部网络隔离，防止外部攻击；</p><p>(b) 新增远程医疗咨询功能需在三个月内开发完成；</p><p>(c) 患者隐私数据（如病历、用药记录）必须加密存储和传输；</p><p>(d) 主数据库故障时，需在5分钟内切换到备用系统，确保服务连续性；</p><p>(e) 支持未来新增分院和科室的无缝集成；</p><p>(f) 实时显示所有诊室和设备状态，延迟不超过2秒；</p><p>(g) 单个服务器故障不影响整体服务，且修复时间不超过30分钟；</p><p>(h) 支持同时处理1000个患者终端和50个医生工作站的访问。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（A）单个服务器</p><p>（B）将流量重定向到其他正常服务器，并通知管理员修复故障</p><p>（C）服务无中断，修复时间≤30分钟</p><p>（D）系统同时处理大量用户访问</p><p>（E）挂号高峰期或诊疗高峰期</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 512977,
    "question_title": "<p>【问题1】（10分）</p><p>项目团队分析系统需求后，共得到订单的11种状态，请根据题目所述需求，填写空白。</p><p>(1)&nbsp;已创建（Created）：用户创建订单但尚未提交付款。</p><p>(2)&nbsp;待付款（Pending Payment）：（a）。</p><p>(3)&nbsp;已付款（Paid）：用户支付成功，系统进入查询库存和订单处理流程。</p><p>(4)&nbsp;处理中（Processing）：（b）。</p><p>(5)&nbsp;已发货（Shipped）：物流信息已录入，系统通知用户。</p><p>(6)&nbsp;已收货（Received）：（c）。</p><p>(7)&nbsp;已完成（Completed）：用户收货并完成评价。</p><p>(8)&nbsp;已取消（Cancelled）：（d）。</p><p>(9)&nbsp;已退款（Refunded）：用户申请退款且系统完成退款流程（隐含需求，如异常订单处理）。</p><p>(10)&nbsp;库存不足（Out of Stock）：（e）。</p><p>(11)&nbsp;超时关闭（Timed Out）：用户未在规定时间内支付导致订单自动关闭。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（a）用户提交订单后，尚未完成支付；</p><p>（b）库存管理员确认库存并准备发货；</p><p>（c）用户确认收货，订单进入评价环节；</p><p>（d）用户或管理员主动取消订单；</p><p>&nbsp; (e)订单因库存不足被暂停。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 159,
      "belong_page": 1,
      "question_id": 512977,
      "question_title": "<p>【问题1】（10分）</p><p>项目团队分析系统需求后，共得到订单的11种状态，请根据题目所述需求，填写空白。</p><p>(1)&nbsp;已创建（Created）：用户创建订单但尚未提交付款。</p><p>(2)&nbsp;待付款（Pending Payment）：（a）。</p><p>(3)&nbsp;已付款（Paid）：用户支付成功，系统进入查询库存和订单处理流程。</p><p>(4)&nbsp;处理中（Processing）：（b）。</p><p>(5)&nbsp;已发货（Shipped）：物流信息已录入，系统通知用户。</p><p>(6)&nbsp;已收货（Received）：（c）。</p><p>(7)&nbsp;已完成（Completed）：用户收货并完成评价。</p><p>(8)&nbsp;已取消（Cancelled）：（d）。</p><p>(9)&nbsp;已退款（Refunded）：用户申请退款且系统完成退款流程（隐含需求，如异常订单处理）。</p><p>(10)&nbsp;库存不足（Out of Stock）：（e）。</p><p>(11)&nbsp;超时关闭（Timed Out）：用户未在规定时间内支付导致订单自动关闭。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 512976,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于软件系统建模的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某电商平台计划开发一套订单管理系统 ，支持商品销售、库存管理、用户评价和优惠券发放。系统需求包括：</p><p>(1)&nbsp;用户登录后才能下单或查看订单；&nbsp;</p><p>(2)&nbsp;库存管理员可调整商品库存，并监控库存预警；</p><p>(3)&nbsp;系统自动生成订单状态变化通知；</p><p>(4)&nbsp;用户可提交商品评价，评价需关联到具体商品和订单；</p><p>(5)&nbsp;系统支持优惠券的发放和定期核销；</p><p>(6)&nbsp;管理员可批量导入商品信息，并打印销售报表。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（a）用户提交订单后，尚未完成支付；</p><p>（b）库存管理员确认库存并准备发货；</p><p>（c）用户确认收货，订单进入评价环节；</p><p>（d）用户或管理员主动取消订单；</p><p>&nbsp; (e)订单因库存不足被暂停。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 512978,
    "question_title": "<p>【问题2】（5分）</p><p>项目团队决定采用状态图来描述订单状态及变化条件，请回答状态图有哪些常见元素。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>状态图中常见的元素有：状态、转换、事件、动作、初始状态、终止状态、守护条件等。</p><p>（答出5个即满分）</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 160,
      "belong_page": 1,
      "question_id": 512978,
      "question_title": "<p>【问题2】（5分）</p><p>项目团队决定采用状态图来描述订单状态及变化条件，请回答状态图有哪些常见元素。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 512976,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于软件系统建模的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某电商平台计划开发一套订单管理系统 ，支持商品销售、库存管理、用户评价和优惠券发放。系统需求包括：</p><p>(1)&nbsp;用户登录后才能下单或查看订单；&nbsp;</p><p>(2)&nbsp;库存管理员可调整商品库存，并监控库存预警；</p><p>(3)&nbsp;系统自动生成订单状态变化通知；</p><p>(4)&nbsp;用户可提交商品评价，评价需关联到具体商品和订单；</p><p>(5)&nbsp;系统支持优惠券的发放和定期核销；</p><p>(6)&nbsp;管理员可批量导入商品信息，并打印销售报表。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>状态图中常见的元素有：状态、转换、事件、动作、初始状态、终止状态、守护条件等。</p><p>（答出5个即满分）</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 512979,
    "question_title": "<p>【问题3】（10分）</p><p>请从题目中找出所有的参与者并至少列出关联的一个用例。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>系统中的参与者及关联用例有：</p><p>(1)&nbsp;用户，提交订单、查看订单状态、提交商品评价、申请退款等；</p><p>(2)&nbsp;库存管理员，调整商品库存、监控库存预警；</p><p>(3)&nbsp;管理员，批量导入商品信息、打印销售报表；</p><p>(4)&nbsp;时间，定期核销优惠券、超时关闭订单；</p><p>(5)&nbsp;打印机，打印销售报表。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 161,
      "belong_page": 1,
      "question_id": 512979,
      "question_title": "<p>【问题3】（10分）</p><p>请从题目中找出所有的参与者并至少列出关联的一个用例。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 512976,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题二（25分）</p><p>阅读以下关于软件系统建模的叙述，在答题纸上回答问题1至问题3。</p><p>【说明】</p><p>某电商平台计划开发一套订单管理系统 ，支持商品销售、库存管理、用户评价和优惠券发放。系统需求包括：</p><p>(1)&nbsp;用户登录后才能下单或查看订单；&nbsp;</p><p>(2)&nbsp;库存管理员可调整商品库存，并监控库存预警；</p><p>(3)&nbsp;系统自动生成订单状态变化通知；</p><p>(4)&nbsp;用户可提交商品评价，评价需关联到具体商品和订单；</p><p>(5)&nbsp;系统支持优惠券的发放和定期核销；</p><p>(6)&nbsp;管理员可批量导入商品信息，并打印销售报表。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>系统中的参与者及关联用例有：</p><p>(1)&nbsp;用户，提交订单、查看订单状态、提交商品评价、申请退款等；</p><p>(2)&nbsp;库存管理员，调整商品库存、监控库存预警；</p><p>(3)&nbsp;管理员，批量导入商品信息、打印销售报表；</p><p>(4)&nbsp;时间，定期核销优惠券、超时关闭订单；</p><p>(5)&nbsp;打印机，打印销售报表。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 512986,
    "question_title": "<p><br/></p><p>【问题1】（8分）</p><p>请比较MySQL与Neo4j在以下方面的差异，并填写表格：</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250424/1745461892204063.png\" title=\"1745461892204063.png\" alt=\"image.png\"/></p><p><br/></p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）图模型（节点-边结构）</p><p>（2）高（多表JOIN）</p><p>（3）弱一致性（或者最终一致性）</p><p>（4）多对多关系分析、社交网络查询</p><p><br/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 162,
      "belong_page": 1,
      "question_id": 512986,
      "question_title": "<p><br/></p><p>【问题1】（8分）</p><p>请比较MySQL与Neo4j在以下方面的差异，并填写表格：</p><p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250424/1745461892204063.png\" title=\"1745461892204063.png\" alt=\"image.png\"/></p><p><br/></p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 512985,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于某医疗系统患者关系分析系统数据架构的说明，回答下列问题。</p><p>【说明】</p><p>某三甲医院计划构建一个患者关系分析系统 ，用于追踪患者亲属、主治医生及转诊记录，以优化医疗资源分配。当前系统使用MySQL 存储结构化数据，但面临以下挑战：</p><p>(1)&nbsp;查询效率低：无法高效查询跨科室的患者关联网络；</p><p>(2)&nbsp;数据类型复杂：需存储非结构化病历扫描件和多对多关系（如患者-医生-科室）。</p><p>团队考虑引入图数据库（如Neo4j）和分布式对象存储（如MinIO）。</p><p><br/></p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）图模型（节点-边结构）</p><p>（2）高（多表JOIN）</p><p>（3）弱一致性（或者最终一致性）</p><p>（4）多对多关系分析、社交网络查询</p><p><br/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 512987,
    "question_title": "<p>【问题2】（6分）</p><p>在引入MinIO存储病历扫描件时，请说明其在数据可靠性、伸缩性、性能方面的优势，并简要解释实现原理。<br/></p><p><br/></p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>MinIO在数据可靠性、伸缩性和性能方面具有显著优势。</p><p>（1）在数据可靠性方面，MinIO通过数据冗余（多副本）和自动修复机制（如检测副本一致性）。</p><p>（2）在伸缩性方面，MinIO支持水平扩展存储容量，支持PB级非结构化数据（如PDF、DICOM影像）。</p><p>（3）在性能方面，MinIO支持分布式存储加速读写，支持多线程访问。</p><p><br/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 163,
      "belong_page": 1,
      "question_id": 512987,
      "question_title": "<p>【问题2】（6分）</p><p>在引入MinIO存储病历扫描件时，请说明其在数据可靠性、伸缩性、性能方面的优势，并简要解释实现原理。<br/></p><p><br/></p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 512985,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于某医疗系统患者关系分析系统数据架构的说明，回答下列问题。</p><p>【说明】</p><p>某三甲医院计划构建一个患者关系分析系统 ，用于追踪患者亲属、主治医生及转诊记录，以优化医疗资源分配。当前系统使用MySQL 存储结构化数据，但面临以下挑战：</p><p>(1)&nbsp;查询效率低：无法高效查询跨科室的患者关联网络；</p><p>(2)&nbsp;数据类型复杂：需存储非结构化病历扫描件和多对多关系（如患者-医生-科室）。</p><p>团队考虑引入图数据库（如Neo4j）和分布式对象存储（如MinIO）。</p><p><br/></p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>MinIO在数据可靠性、伸缩性和性能方面具有显著优势。</p><p>（1）在数据可靠性方面，MinIO通过数据冗余（多副本）和自动修复机制（如检测副本一致性）。</p><p>（2）在伸缩性方面，MinIO支持水平扩展存储容量，支持PB级非结构化数据（如PDF、DICOM影像）。</p><p>（3）在性能方面，MinIO支持分布式存储加速读写，支持多线程访问。</p><p><br/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 512988,
    "question_title": "<p>【问题3】（11分）</p><p>对比MySQL主从复制、主主复制（Master-Master）集群的优缺点，以及适用场景。</p><p><br/></p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）主从复制集群，</p><p>优点是：</p><p>①&nbsp;部署简单；</p><p>②&nbsp;读写分离；</p><p>③&nbsp;数据备份；</p><p>④&nbsp;高可用。</p><p>缺点是：主库崩溃后从库不会自动升为主库，需要人工干预。</p><p>适用场景：读多写少、数据备份。</p><p>（2）主主复制集群，</p><p>优点是</p><p>①&nbsp;双主可写；</p><p>②&nbsp;故障自动切换。</p><p>缺点是：</p><p>①&nbsp;数据冲突风险；</p><p>②&nbsp;需应用层处理冲突。</p><p>适用场景：双向同步、小规模高可靠。</p><p><br/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 164,
      "belong_page": 1,
      "question_id": 512988,
      "question_title": "<p>【问题3】（11分）</p><p>对比MySQL主从复制、主主复制（Master-Master）集群的优缺点，以及适用场景。</p><p><br/></p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 512985,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于某医疗系统患者关系分析系统数据架构的说明，回答下列问题。</p><p>【说明】</p><p>某三甲医院计划构建一个患者关系分析系统 ，用于追踪患者亲属、主治医生及转诊记录，以优化医疗资源分配。当前系统使用MySQL 存储结构化数据，但面临以下挑战：</p><p>(1)&nbsp;查询效率低：无法高效查询跨科室的患者关联网络；</p><p>(2)&nbsp;数据类型复杂：需存储非结构化病历扫描件和多对多关系（如患者-医生-科室）。</p><p>团队考虑引入图数据库（如Neo4j）和分布式对象存储（如MinIO）。</p><p><br/></p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）主从复制集群，</p><p>优点是：</p><p>①&nbsp;部署简单；</p><p>②&nbsp;读写分离；</p><p>③&nbsp;数据备份；</p><p>④&nbsp;高可用。</p><p>缺点是：主库崩溃后从库不会自动升为主库，需要人工干预。</p><p>适用场景：读多写少、数据备份。</p><p>（2）主主复制集群，</p><p>优点是</p><p>①&nbsp;双主可写；</p><p>②&nbsp;故障自动切换。</p><p>缺点是：</p><p>①&nbsp;数据冲突风险；</p><p>②&nbsp;需应用层处理冲突。</p><p>适用场景：双向同步、小规模高可靠。</p><p><br/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 512990,
    "question_title": "<p>【问题1】（10分）</p><p>以300字以内的文字简述微服务架构相较于传统单体架构的主要优势。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）复杂应用解耦。将单体应用拆分为独立的小型服务，每个服务专注单一业务功能，降低系统内部依赖，简化开发与维护。</p><p>（2）独立部署与伸缩。各服务可独立部署、升级和伸缩，无需重启整个系统。例如，仅对高负载的服务进行横向伸缩，提升资源利用率。</p><p>（3）技术选型灵活。每个服务可根据需求选择最适合的技术栈，避免单体架构中“一选绑定全局”的限制。</p><p>（4）容错性高。单个服务故障不会导致系统崩溃，可通过熔断、降级等机制隔离故障，保障核心服务可用性。</p><p>（5）松耦合，易扩展。服务间通过接口通信（如API、消息队列），耦合度低，新增或修改功能时影响范围小，系统可快速适应业务变化。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 165,
      "belong_page": 1,
      "question_id": 512990,
      "question_title": "<p>【问题1】（10分）</p><p>以300字以内的文字简述微服务架构相较于传统单体架构的主要优势。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 512989,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web物流配送系统的架构设计描述，回答问题1至问题3。</p><p>【说明】</p><p>某物流平台计划开发一个支持全球多区域仓库的智能配送系统，需处理订单分拣、路径优化、实时追踪及动态库存管理。系统需应对每秒万级订单量、跨区域数据同步和高可用性需求，计划使用消息队列和分布式数据库。关键设计因素包括：</p><p>(1) 订单状态需实时同步至多个仓库系统；</p><p>(2) 路径优化需结合实时交通数据和天气信息；</p><p>(3) 系统需支持故障自动切换和数据一致性。</p><p>项目团队经过讨论，决定采用微服务架构。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）复杂应用解耦。将单体应用拆分为独立的小型服务，每个服务专注单一业务功能，降低系统内部依赖，简化开发与维护。</p><p>（2）独立部署与伸缩。各服务可独立部署、升级和伸缩，无需重启整个系统。例如，仅对高负载的服务进行横向伸缩，提升资源利用率。</p><p>（3）技术选型灵活。每个服务可根据需求选择最适合的技术栈，避免单体架构中“一选绑定全局”的限制。</p><p>（4）容错性高。单个服务故障不会导致系统崩溃，可通过熔断、降级等机制隔离故障，保障核心服务可用性。</p><p>（5）松耦合，易扩展。服务间通过接口通信（如API、消息队列），耦合度低，新增或修改功能时影响范围小，系统可快速适应业务变化。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 512991,
    "question_title": "<p>【问题2】（7分）</p><p>在订单状态同步场景中，需选择一种数据同步方案。请比较消息队列（如Kafka）和数据库触发器（如MySQL的触发器）的优缺点，并推荐一种方案。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）消息队列（Kafka）：</p><p>优点：异步解耦，支持高吞吐量，可保证消息顺序，易于扩展。</p><p>缺点：需额外维护消息队列集群，可能引入延迟。</p><p>（2）数据库触发器：</p><p>优点：实时同步，无需额外组件。</p><p>缺点：强耦合，高并发时可能阻塞主数据库，降低系统性能。</p><p>推荐方案：消息队列（Kafka）更适合高并发订单场景。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 166,
      "belong_page": 1,
      "question_id": 512991,
      "question_title": "<p>【问题2】（7分）</p><p>在订单状态同步场景中，需选择一种数据同步方案。请比较消息队列（如Kafka）和数据库触发器（如MySQL的触发器）的优缺点，并推荐一种方案。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 512989,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web物流配送系统的架构设计描述，回答问题1至问题3。</p><p>【说明】</p><p>某物流平台计划开发一个支持全球多区域仓库的智能配送系统，需处理订单分拣、路径优化、实时追踪及动态库存管理。系统需应对每秒万级订单量、跨区域数据同步和高可用性需求，计划使用消息队列和分布式数据库。关键设计因素包括：</p><p>(1) 订单状态需实时同步至多个仓库系统；</p><p>(2) 路径优化需结合实时交通数据和天气信息；</p><p>(3) 系统需支持故障自动切换和数据一致性。</p><p>项目团队经过讨论，决定采用微服务架构。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）消息队列（Kafka）：</p><p>优点：异步解耦，支持高吞吐量，可保证消息顺序，易于扩展。</p><p>缺点：需额外维护消息队列集群，可能引入延迟。</p><p>（2）数据库触发器：</p><p>优点：实时同步，无需额外组件。</p><p>缺点：强耦合，高并发时可能阻塞主数据库，降低系统性能。</p><p>推荐方案：消息队列（Kafka）更适合高并发订单场景。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 512992,
    "question_title": "<p>【问题3】（8分）</p><p>为确保路径优化服务的实时性和准确性，请列举至少4种技术策略。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）边缘计算：在仓库区域部署轻量级计算节点，减少数据传输延迟。</p><p>（2）缓存热数据：将高频访问的交通、天气数据缓存至Redis，加速查询。</p><p>（3）分布式计算框架：使用Spark或Flink处理实时数据流，动态更新路径。</p><p>（4）负载均衡与自动扩缩容：根据请求量动态调整计算节点数量。</p><p>（5）服务熔断与降级：对其他非关键服务设置熔断与降级的阈值，全力保障路径优化服务。</p><p>（答出4条即可）</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 167,
      "belong_page": 1,
      "question_id": 512992,
      "question_title": "<p>【问题3】（8分）</p><p>为确保路径优化服务的实时性和准确性，请列举至少4种技术策略。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 512989,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于Web物流配送系统的架构设计描述，回答问题1至问题3。</p><p>【说明】</p><p>某物流平台计划开发一个支持全球多区域仓库的智能配送系统，需处理订单分拣、路径优化、实时追踪及动态库存管理。系统需应对每秒万级订单量、跨区域数据同步和高可用性需求，计划使用消息队列和分布式数据库。关键设计因素包括：</p><p>(1) 订单状态需实时同步至多个仓库系统；</p><p>(2) 路径优化需结合实时交通数据和天气信息；</p><p>(3) 系统需支持故障自动切换和数据一致性。</p><p>项目团队经过讨论，决定采用微服务架构。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）边缘计算：在仓库区域部署轻量级计算节点，减少数据传输延迟。</p><p>（2）缓存热数据：将高频访问的交通、天气数据缓存至Redis，加速查询。</p><p>（3）分布式计算框架：使用Spark或Flink处理实时数据流，动态更新路径。</p><p>（4）负载均衡与自动扩缩容：根据请求量动态调整计算节点数量。</p><p>（5）服务熔断与降级：对其他非关键服务设置熔断与降级的阈值，全力保障路径优化服务。</p><p>（答出4条即可）</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 513359,
    "question_title": "<p>【问题1】（12分）</p><p>在架构评估过程中，质量属性效用树(utility tree)是对系统质量属性进行识别和优先级排序的重要工具。请给出合适的质量属性，填入图1中(1)、(2)空白处；并选择题干描述中的(a)～(k)，将恰当的序号填入(3)～(6)空白处，完成该系统的效用树。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250426/1745647197197754.png\" title=\"1745647197197754.png\" alt=\"image.png\" width=\"557\" height=\"361\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250426/1745647214555467.png\" title=\"1745647214555467.png\" alt=\"image.png\" width=\"570\" height=\"171\"/>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 168,
      "belong_page": 1,
      "question_id": 513359,
      "question_title": "<p>【问题1】（12分）</p><p>在架构评估过程中，质量属性效用树(utility tree)是对系统质量属性进行识别和优先级排序的重要工具。请给出合适的质量属性，填入图1中(1)、(2)空白处；并选择题干描述中的(a)～(k)，将恰当的序号填入(3)～(6)空白处，完成该系统的效用树。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250426/1745647197197754.png\" title=\"1745647197197754.png\" alt=\"image.png\" width=\"557\" height=\"361\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 513358,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件架构评估的说明，回答下列问题。</p><p>【说明】</p><p>某城市交通管理部门计划开发一套智慧交通信号控制系统 ，用于实时优化路口信号灯配时，提升道路通行效率并减少拥堵。在系统需求分析与架构设计阶段，用户提出的部分需求和关键质量属性场景如下：</p><p>(a) 信号灯转换的响应时间必须低于1秒，以确保实时性；</p><p>(b) 系统需支持未来扩展至全市500个路口，无需重大架构修改；</p><p>(c) 系统需具备防DDoS攻击能力，保障通信安全；</p><p>(d) 系统停机收缩表空间期间无法响应用户请求，但是维护之后响应时间会缩短；</p><p>(e) 新增交通摄像头或传感器需在1周内集成到系统中；</p><p>(f) 标准传感器相互兼容，更换型号不会影响开发适配；</p><p>(g) 单个传感器节点故障不应导致整个路口信号灯失效；</p><p>(h) 系统需支持每秒处理至少500个路口的实时车流量数据；</p><p>(i) 如果不加密存储交通数据有可能发生泄露；</p><p>(j) 系统升级时需保证业务连续性，避免信号灯全城熄灭；</p><p>(k) 用户（如交通管理员）的登录密码需每30天强制更换。</p><p>开发团队正在组织架构评估会议，需对系统设计进行质量属性分析。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250426/1745647214555467.png\" title=\"1745647214555467.png\" alt=\"image.png\" width=\"570\" height=\"171\"/>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 513360,
    "question_title": "<p>【问题2】（13分）</p><p>在架构评估中，需识别系统的关键敏感点、权衡点、风险点、非风险点。从题干需求（a）～（k）中选择一个，分别作为权衡点、风险点和非风险点的示例，并以300字以内的文字说明理由。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）权衡点：d。系统停机维护期间无法响应用户请求（可用性下降），但维护后响应时间缩短（性能提升）。需在可用性 （维护期间的服务中断）和性能 （维护后的效率提升）之间权衡。</p><p>（2）风险点：i。若不加密存储交通数据，可能导致敏感信息泄露（如车辆轨迹、用户隐私数据），引发法律风险和信任危机，属于高风险问题。</p><p>（3）非风险点：f。传感器兼容性设计确保更换型号无需额外开发适配，属于架构设计已解决的问题，风险已被消除或可控 ，因此属于非风险点。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 169,
      "belong_page": 1,
      "question_id": 513360,
      "question_title": "<p>【问题2】（13分）</p><p>在架构评估中，需识别系统的关键敏感点、权衡点、风险点、非风险点。从题干需求（a）～（k）中选择一个，分别作为权衡点、风险点和非风险点的示例，并以300字以内的文字说明理由。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 513358,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题一（25分）</p><p>阅读以下关于软件架构评估的说明，回答下列问题。</p><p>【说明】</p><p>某城市交通管理部门计划开发一套智慧交通信号控制系统 ，用于实时优化路口信号灯配时，提升道路通行效率并减少拥堵。在系统需求分析与架构设计阶段，用户提出的部分需求和关键质量属性场景如下：</p><p>(a) 信号灯转换的响应时间必须低于1秒，以确保实时性；</p><p>(b) 系统需支持未来扩展至全市500个路口，无需重大架构修改；</p><p>(c) 系统需具备防DDoS攻击能力，保障通信安全；</p><p>(d) 系统停机收缩表空间期间无法响应用户请求，但是维护之后响应时间会缩短；</p><p>(e) 新增交通摄像头或传感器需在1周内集成到系统中；</p><p>(f) 标准传感器相互兼容，更换型号不会影响开发适配；</p><p>(g) 单个传感器节点故障不应导致整个路口信号灯失效；</p><p>(h) 系统需支持每秒处理至少500个路口的实时车流量数据；</p><p>(i) 如果不加密存储交通数据有可能发生泄露；</p><p>(j) 系统升级时需保证业务连续性，避免信号灯全城熄灭；</p><p>(k) 用户（如交通管理员）的登录密码需每30天强制更换。</p><p>开发团队正在组织架构评估会议，需对系统设计进行质量属性分析。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）权衡点：d。系统停机维护期间无法响应用户请求（可用性下降），但维护后响应时间缩短（性能提升）。需在可用性 （维护期间的服务中断）和性能 （维护后的效率提升）之间权衡。</p><p>（2）风险点：i。若不加密存储交通数据，可能导致敏感信息泄露（如车辆轨迹、用户隐私数据），引发法律风险和信任危机，属于高风险问题。</p><p>（3）非风险点：f。传感器兼容性设计确保更换型号无需额外开发适配，属于架构设计已解决的问题，风险已被消除或可控 ，因此属于非风险点。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 513371,
    "question_title": "<p>【问题1】（8分）</p><p>请比较数据仓库与数据湖在以下方面的差异，并填写表格：</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250426/1745647513850468.png\" title=\"1745647513850468.png\" alt=\"image.png\" width=\"602\" height=\"102\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）结构化/半结构化/非结构化数据类型</p><p>（2）ETL（提前清洗）</p><p>（3）高</p><p>（4）固定报表与分析</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 170,
      "belong_page": 1,
      "question_id": 513371,
      "question_title": "<p>【问题1】（8分）</p><p>请比较数据仓库与数据湖在以下方面的差异，并填写表格：</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250426/1745647513850468.png\" title=\"1745647513850468.png\" alt=\"image.png\" width=\"602\" height=\"102\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 513370,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于某社交媒体平台数据架构的说明，回答下列问题。</p><p>【说明】</p><p>某社交媒体公司需优化用户行为分析系统，支持每日PB级的用户点击流、评论和点赞数据。当前系统使用Oracle做数据库和数据仓库，但面临以下问题：&nbsp;</p><p>(1)&nbsp;存储成本高：非结构化评论文本需占用大量结构化存储空间；</p><p>(2)&nbsp;数据延迟：用户行为分析需等待ETL完成，无法实时响应。</p><p>团队计划采用数据湖（如Delta Lake或者直接采用HDFS）和图数据库（如Neo4j）来替代关系数据库Oracle。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）结构化/半结构化/非结构化数据类型</p><p>（2）ETL（提前清洗）</p><p>（3）高</p><p>（4）固定报表与分析</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 513372,
    "question_title": "<p>【问题2】（5分）</p><p>在数据湖方案中，请说明Delta Lake相比传统HDFS哪个占有优势，并简单解释。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>Delta Lake是开源的数据湖产品，在数据湖应用上相比传统HDFS更优，主要有：</p><p>（1）事务支持，支持ACID事务，避免数据不一致。</p><p>（2）优化查询，内置元数据管理，加速格式数据查询。</p><p>（3）时间旅行（Time Travel），通过版本回滚恢复误删数据。</p><p>（4）流批一体，同时支持批处理和流数据写入。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 171,
      "belong_page": 1,
      "question_id": 513372,
      "question_title": "<p>【问题2】（5分）</p><p>在数据湖方案中，请说明Delta Lake相比传统HDFS哪个占有优势，并简单解释。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 513370,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于某社交媒体平台数据架构的说明，回答下列问题。</p><p>【说明】</p><p>某社交媒体公司需优化用户行为分析系统，支持每日PB级的用户点击流、评论和点赞数据。当前系统使用Oracle做数据库和数据仓库，但面临以下问题：&nbsp;</p><p>(1)&nbsp;存储成本高：非结构化评论文本需占用大量结构化存储空间；</p><p>(2)&nbsp;数据延迟：用户行为分析需等待ETL完成，无法实时响应。</p><p>团队计划采用数据湖（如Delta Lake或者直接采用HDFS）和图数据库（如Neo4j）来替代关系数据库Oracle。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>Delta Lake是开源的数据湖产品，在数据湖应用上相比传统HDFS更优，主要有：</p><p>（1）事务支持，支持ACID事务，避免数据不一致。</p><p>（2）优化查询，内置元数据管理，加速格式数据查询。</p><p>（3）时间旅行（Time Travel），通过版本回滚恢复误删数据。</p><p>（4）流批一体，同时支持批处理和流数据写入。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 513373,
    "question_title": "<p>【问题3】（12分）</p><p>团队计划将用户社交关系数据从Oracle迁移至Neo4j。请说明为何选择图数据库。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "（1）嵌套关系查询：快速查找“用户A的朋友的朋友”等嵌套关系，而Oracle面对这种查询性能非常低。<p>（2）路径查询：原生支持路径查询（如“推荐共同好友关注的帖子”），低查询延迟。</p><p>（3）动态模式：无需预定义schema，支持新增关系类型（如“关注”“屏蔽”）。</p><p>（4）社交网络分析：易于计算用户影响力、社区发现等。</p><p>（5）实时更新：支持用户关系的实时变更（如好友添加）。</p><p>（6）可视化支持：通过Cypher查询直接生成社交关系图谱。</p><p>（7）轻量级存储：仅存储必要关系，减少冗余。</p><p>（答出6个即满分）&nbsp;</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 172,
      "belong_page": 1,
      "question_id": 513373,
      "question_title": "<p>【问题3】（12分）</p><p>团队计划将用户社交关系数据从Oracle迁移至Neo4j。请说明为何选择图数据库。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 513370,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题四（25分）</p><p>阅读以下关于某社交媒体平台数据架构的说明，回答下列问题。</p><p>【说明】</p><p>某社交媒体公司需优化用户行为分析系统，支持每日PB级的用户点击流、评论和点赞数据。当前系统使用Oracle做数据库和数据仓库，但面临以下问题：&nbsp;</p><p>(1)&nbsp;存储成本高：非结构化评论文本需占用大量结构化存储空间；</p><p>(2)&nbsp;数据延迟：用户行为分析需等待ETL完成，无法实时响应。</p><p>团队计划采用数据湖（如Delta Lake或者直接采用HDFS）和图数据库（如Neo4j）来替代关系数据库Oracle。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "（1）嵌套关系查询：快速查找“用户A的朋友的朋友”等嵌套关系，而Oracle面对这种查询性能非常低。<p>（2）路径查询：原生支持路径查询（如“推荐共同好友关注的帖子”），低查询延迟。</p><p>（3）动态模式：无需预定义schema，支持新增关系类型（如“关注”“屏蔽”）。</p><p>（4）社交网络分析：易于计算用户影响力、社区发现等。</p><p>（5）实时更新：支持用户关系的实时变更（如好友添加）。</p><p>（6）可视化支持：通过Cypher查询直接生成社交关系图谱。</p><p>（7）轻量级存储：仅存储必要关系，减少冗余。</p><p>（答出6个即满分）&nbsp;</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 513375,
    "question_title": "<p>【问题1】（12分）</p><p>请以300字以内的文字简述边云协同包括哪些内容。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）资源协同：边缘节点提供本地计算、存储及网络资源管理，同时接受云端统一调度，实现资源动态分配。</p><p>（2）数据协同：边缘节点采集并初步处理终端数据，按规则筛选后上传至云端，云端负责长期存储与深度分析，形成分层数据流转路径，降低传输成本。</p><p>（3）智能协同：边缘执行AI模型推理，云端进行模型训练并更新边缘端，形成分布式智能闭环。</p><p>（4）应用管理协同：边缘节点部署应用并管理其运行，云端提供开发、测试及全局应用生命周期管理。</p><p>（5）业务管理协同：边缘承载模块化应用或数字孪生实例，云端按需编排跨边缘-云的业务流程。</p><p>服务协同：基于ECSaaS与SaaS服务，边缘按云端策略提供部分服务，云端统筹服务分布策略与核心能力，实现按需服务供给。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 173,
      "belong_page": 1,
      "question_id": 513375,
      "question_title": "<p>【问题1】（12分）</p><p>请以300字以内的文字简述边云协同包括哪些内容。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 513374,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于物联网设备管理平台Web架构设计的描述，回答下列问题。</p><p>【说明】</p><p>某智能家居公司计划构建一个全球化的设备管理平台，支持百万级传感器和智能设备的实时数据采集与控制。系统需满足：&nbsp;</p><p>(1)&nbsp;低延迟：设备指令响应时间≤1秒；</p><p>(2)&nbsp;高可用性：设备控制不可中断；</p><p>(3)&nbsp;本地化计算：部分数据处理需在本地完成。</p><p>团队考虑采用边缘计算节点+中心云架构，并使用MQTT协议实现设备通信。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）资源协同：边缘节点提供本地计算、存储及网络资源管理，同时接受云端统一调度，实现资源动态分配。</p><p>（2）数据协同：边缘节点采集并初步处理终端数据，按规则筛选后上传至云端，云端负责长期存储与深度分析，形成分层数据流转路径，降低传输成本。</p><p>（3）智能协同：边缘执行AI模型推理，云端进行模型训练并更新边缘端，形成分布式智能闭环。</p><p>（4）应用管理协同：边缘节点部署应用并管理其运行，云端提供开发、测试及全局应用生命周期管理。</p><p>（5）业务管理协同：边缘承载模块化应用或数字孪生实例，云端按需编排跨边缘-云的业务流程。</p><p>服务协同：基于ECSaaS与SaaS服务，边缘按云端策略提供部分服务，云端统筹服务分布策略与核心能力，实现按需服务供给。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 513376,
    "question_title": "<p>【问题2】（8分）</p><p>比较MQTT协议与HTTP协议在物联网设备通信中的优缺点，并填写表格：<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250426/1745647633259138.png\" title=\"1745647633259138.png\" alt=\"image.png\" width=\"567\" height=\"135\"/></p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）轻量级发布-订阅协议</p><p>（2）较高（需频繁建立TCP连接）</p><p>（3）基于轮询，延迟高</p><p>（4）设备状态监控、传感器数据上报</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 174,
      "belong_page": 1,
      "question_id": 513376,
      "question_title": "<p>【问题2】（8分）</p><p>比较MQTT协议与HTTP协议在物联网设备通信中的优缺点，并填写表格：<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250426/1745647633259138.png\" title=\"1745647633259138.png\" alt=\"image.png\" width=\"567\" height=\"135\"/></p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 513374,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于物联网设备管理平台Web架构设计的描述，回答下列问题。</p><p>【说明】</p><p>某智能家居公司计划构建一个全球化的设备管理平台，支持百万级传感器和智能设备的实时数据采集与控制。系统需满足：&nbsp;</p><p>(1)&nbsp;低延迟：设备指令响应时间≤1秒；</p><p>(2)&nbsp;高可用性：设备控制不可中断；</p><p>(3)&nbsp;本地化计算：部分数据处理需在本地完成。</p><p>团队考虑采用边缘计算节点+中心云架构，并使用MQTT协议实现设备通信。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）轻量级发布-订阅协议</p><p>（2）较高（需频繁建立TCP连接）</p><p>（3）基于轮询，延迟高</p><p>（4）设备状态监控、传感器数据上报</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 513377,
    "question_title": "<p>【问题3】（5分）</p><p>如何确保物联网设备的身份认证与指令安全性？</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）X.509证书：设备与边缘节点双向认证；</p><p>（2）OAuth 2.0：中心云通过Token验证设备身份；</p><p>（3）TLS加密：传输层加密指令数据；</p><p>（4）指令签名：使用HMAC或数字签名验证指令来源；</p><p>（5）黑白名单机制：限制设备仅访问特定API端点。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 175,
      "belong_page": 1,
      "question_id": 513377,
      "question_title": "<p>【问题3】（5分）</p><p>如何确保物联网设备的身份认证与指令安全性？</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 513374,
      "score_rule": "",
      "material_text": "<p style=\"text-indent:32px\">试题五（25分）</p><p>阅读以下关于物联网设备管理平台Web架构设计的描述，回答下列问题。</p><p>【说明】</p><p>某智能家居公司计划构建一个全球化的设备管理平台，支持百万级传感器和智能设备的实时数据采集与控制。系统需满足：&nbsp;</p><p>(1)&nbsp;低延迟：设备指令响应时间≤1秒；</p><p>(2)&nbsp;高可用性：设备控制不可中断；</p><p>(3)&nbsp;本地化计算：部分数据处理需在本地完成。</p><p>团队考虑采用边缘计算节点+中心云架构，并使用MQTT协议实现设备通信。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）X.509证书：设备与边缘节点双向认证；</p><p>（2）OAuth 2.0：中心云通过Token验证设备身份；</p><p>（3）TLS加密：传输层加密指令数据；</p><p>（4）指令签名：使用HMAC或数字签名验证指令来源；</p><p>（5）黑白名单机制：限制设备仅访问特定API端点。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 523311,
    "question_title": "<p>【问题1】(12分)列举了所有需求列表，请填写对应的质量属性。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>a-可用性</p><p>b-安全性</p><p>c-易用性</p><p>d-性能</p><p>e-安全性</p><p>f-性能</p><p>g-易用性</p><p>h-可用性</p><p>i-可测试性</p><p>j-可修改性</p><p>k-可用性</p><p>l-易用性</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 176,
      "belong_page": 1,
      "question_id": 523311,
      "question_title": "<p>【问题1】(12分)列举了所有需求列表，请填写对应的质量属性。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 523310,
      "score_rule": "",
      "material_text": "<p>试题一(共25分)</p><p>阅读以下关于系统架构设计的叙述，回答问题1至问题3。&nbsp;</p><p>某公司开发一个在线大模型训练平台，支持Python代码编写、模型训练和部署，用户通过 Python编写模型代码，将代码交给系统进行模型代码的解析，最终由系统匹配相应的计算机资源进行输出，用户不需要关心底层硬件平台。公司的系统架构师李工提出，该平台适合用解释器风格架构。在项目之初公司的系统分析师对该平台开发环境的需求进行了调研，具体描述如下:</p><p>a.系统发生错误时，异常请求能够不影响用户正常工作，并发送一个消息通知系统管理员。</p><p>b.平台应保护用户隐私，防止未授权访问。</p><p>c.系统界面能调整屏幕，适配用户提供的屏幕尺寸比例。</p><p>d.用户提交训练任务时应该在一分钟内提供硬件和资源，启动训练。</p><p>e.支持远程修改，供远程用户进行连接操作，仅提供给系统注册用户使用。</p><p>f.在训练时，应对请求5秒钟提供队列信息。</p><p>g.支持多语音界面，操作指南和文档。</p><p>h.发生故障时应在15秒钟内定位故障、解决故障。</p><p>i.系统发生故障时，要能提供操作日志。</p><p>j.具备扩展能力，能够3天内完成新功能部署。</p><p>k. 数据库发生故障后，自动切换到备用数据库，保证训练不中断 。</p><p>l.符合用户习惯默认的快捷键设置。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>a-可用性</p><p>b-安全性</p><p>c-易用性</p><p>d-性能</p><p>e-安全性</p><p>f-性能</p><p>g-易用性</p><p>h-可用性</p><p>i-可测试性</p><p>j-可修改性</p><p>k-可用性</p><p>l-易用性</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 523312,
    "question_title": "<p>【问题2】(6分)请补充完整下列解释器风格架构。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250713/1752370274651408.png\" title=\"1752370274651408.png\" alt=\"image.png\" width=\"556\" height=\"341\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）程序执行的当前状态。</p><p>（2）解释器引擎的内部状态。</p><p>（3）解释器引擎。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 177,
      "belong_page": 1,
      "question_id": 523312,
      "question_title": "<p>【问题2】(6分)请补充完整下列解释器风格架构。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250713/1752370274651408.png\" title=\"1752370274651408.png\" alt=\"image.png\" width=\"556\" height=\"341\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 523310,
      "score_rule": "",
      "material_text": "<p>试题一(共25分)</p><p>阅读以下关于系统架构设计的叙述，回答问题1至问题3。&nbsp;</p><p>某公司开发一个在线大模型训练平台，支持Python代码编写、模型训练和部署，用户通过 Python编写模型代码，将代码交给系统进行模型代码的解析，最终由系统匹配相应的计算机资源进行输出，用户不需要关心底层硬件平台。公司的系统架构师李工提出，该平台适合用解释器风格架构。在项目之初公司的系统分析师对该平台开发环境的需求进行了调研，具体描述如下:</p><p>a.系统发生错误时，异常请求能够不影响用户正常工作，并发送一个消息通知系统管理员。</p><p>b.平台应保护用户隐私，防止未授权访问。</p><p>c.系统界面能调整屏幕，适配用户提供的屏幕尺寸比例。</p><p>d.用户提交训练任务时应该在一分钟内提供硬件和资源，启动训练。</p><p>e.支持远程修改，供远程用户进行连接操作，仅提供给系统注册用户使用。</p><p>f.在训练时，应对请求5秒钟提供队列信息。</p><p>g.支持多语音界面，操作指南和文档。</p><p>h.发生故障时应在15秒钟内定位故障、解决故障。</p><p>i.系统发生故障时，要能提供操作日志。</p><p>j.具备扩展能力，能够3天内完成新功能部署。</p><p>k. 数据库发生故障后，自动切换到备用数据库，保证训练不中断 。</p><p>l.符合用户习惯默认的快捷键设置。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）程序执行的当前状态。</p><p>（2）解释器引擎的内部状态。</p><p>（3）解释器引擎。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 523313,
    "question_title": "<p>【问题3】(7分)请解释为什么该模型平台适合解释器风格。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>1、动态代码解析：解释器风格的核心是接收用户输入的代码（如Python脚本），动态解析并执行。系统可直接调用解释器或自定义解析引擎，将用户代码转化为可执行逻辑，无需编译为底层硬件指令。满足用户无需关心硬件平台的需求。</p><p>2、资源动态匹配：解释器架构可集成资源调度模块（如Kubernetes），在解析用户代码后动态分配GPU/CPU资源。由于解释器无需编译步骤，代码可直接执行，缩短了任务启动时间。</p><p>3、扩展性好：解释器风格可通过插件机制扩展功能（如添加新机器学习框架的支持）。新功能以模块形式集成到解释器中，无需重构核心架构，满足快速迭代需求。<br/></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 178,
      "belong_page": 1,
      "question_id": 523313,
      "question_title": "<p>【问题3】(7分)请解释为什么该模型平台适合解释器风格。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 523310,
      "score_rule": "",
      "material_text": "<p>试题一(共25分)</p><p>阅读以下关于系统架构设计的叙述，回答问题1至问题3。&nbsp;</p><p>某公司开发一个在线大模型训练平台，支持Python代码编写、模型训练和部署，用户通过 Python编写模型代码，将代码交给系统进行模型代码的解析，最终由系统匹配相应的计算机资源进行输出，用户不需要关心底层硬件平台。公司的系统架构师李工提出，该平台适合用解释器风格架构。在项目之初公司的系统分析师对该平台开发环境的需求进行了调研，具体描述如下:</p><p>a.系统发生错误时，异常请求能够不影响用户正常工作，并发送一个消息通知系统管理员。</p><p>b.平台应保护用户隐私，防止未授权访问。</p><p>c.系统界面能调整屏幕，适配用户提供的屏幕尺寸比例。</p><p>d.用户提交训练任务时应该在一分钟内提供硬件和资源，启动训练。</p><p>e.支持远程修改，供远程用户进行连接操作，仅提供给系统注册用户使用。</p><p>f.在训练时，应对请求5秒钟提供队列信息。</p><p>g.支持多语音界面，操作指南和文档。</p><p>h.发生故障时应在15秒钟内定位故障、解决故障。</p><p>i.系统发生故障时，要能提供操作日志。</p><p>j.具备扩展能力，能够3天内完成新功能部署。</p><p>k. 数据库发生故障后，自动切换到备用数据库，保证训练不中断 。</p><p>l.符合用户习惯默认的快捷键设置。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>1、动态代码解析：解释器风格的核心是接收用户输入的代码（如Python脚本），动态解析并执行。系统可直接调用解释器或自定义解析引擎，将用户代码转化为可执行逻辑，无需编译为底层硬件指令。满足用户无需关心硬件平台的需求。</p><p>2、资源动态匹配：解释器架构可集成资源调度模块（如Kubernetes），在解析用户代码后动态分配GPU/CPU资源。由于解释器无需编译步骤，代码可直接执行，缩短了任务启动时间。</p><p>3、扩展性好：解释器风格可通过插件机制扩展功能（如添加新机器学习框架的支持）。新功能以模块形式集成到解释器中，无需重构核心架构，满足快速迭代需求。<br/></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 523315,
    "question_title": "<p>【问题1】（10分）图1展示了基于知识图谱的医药领域智能问答系统的架构设计方案，请从给出的(a)～(p)中选择，补充完善图1中(1)～(10)空处的内容。</p><p>【可选项：(a)网络层、(b)数据层 、(c)业务层、(d)知识层、(e)网页数据、(f) 结构化数据、(g）数据采集、(h)知识获取、(i)知识清洗、(j)数据清洗、(k)知识管理、(l)实体获取、(m)关系获取、(n)意图识别、 (o)语句解析、(p)知识检索。</p><p>图1 基于知识图谱的医药领域智能问答系统的架构设计方案</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250713/1752370399272032.png\" title=\"1752370399272032.png\" alt=\"image.png\"/><p>【可选项】：(a)网络层、(b)数据层 、(c)业务层、(d)知识层、(e)网页数据、(f) 结构化数据、(g）数据采集、(h)知识获取、(i)知识清洗、(j)数据清洗、(k)知识管理、(l)实体获取、(m)关系获取、(n)意图识别、 (o)语句解析、(p)知识检索。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "（1）：（c）业务层<p>（2）：（b）数据层</p><p>（3）：（f）结构化数据</p><p>（4）：（g）数据采集</p><p>（5）：（j）数据清洗</p><p>（6）：（h）知识获取</p><p>（7）：（k）知识管理</p><p>（8）：（l）意图识别</p><p>（9）：（p）知识检索</p><p>（10）：（n）语句解析</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 179,
      "belong_page": 1,
      "question_id": 523315,
      "question_title": "<p>【问题1】（10分）图1展示了基于知识图谱的医药领域智能问答系统的架构设计方案，请从给出的(a)～(p)中选择，补充完善图1中(1)～(10)空处的内容。</p><p>【可选项：(a)网络层、(b)数据层 、(c)业务层、(d)知识层、(e)网页数据、(f) 结构化数据、(g）数据采集、(h)知识获取、(i)知识清洗、(j)数据清洗、(k)知识管理、(l)实体获取、(m)关系获取、(n)意图识别、 (o)语句解析、(p)知识检索。</p><p>图1 基于知识图谱的医药领域智能问答系统的架构设计方案</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250713/1752370399272032.png\" title=\"1752370399272032.png\" alt=\"image.png\"/><p>【可选项】：(a)网络层、(b)数据层 、(c)业务层、(d)知识层、(e)网页数据、(f) 结构化数据、(g）数据采集、(h)知识获取、(i)知识清洗、(j)数据清洗、(k)知识管理、(l)实体获取、(m)关系获取、(n)意图识别、 (o)语句解析、(p)知识检索。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 523314,
      "score_rule": "",
      "material_text": "<p>&nbsp;试题二(共25分)</p><p>阅读以下关于系统架构设计的叙述，回答问题1至问题3。&nbsp;</p><p>公司想要建设一个医院的智能问答系统，建立医院知识图谱，某工认为互联网的关键字检索无法满足大量的数据需求，建议建立知识图谱，采用爬虫技术。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "（1）：（c）业务层<p>（2）：（b）数据层</p><p>（3）：（f）结构化数据</p><p>（4）：（g）数据采集</p><p>（5）：（j）数据清洗</p><p>（6）：（h）知识获取</p><p>（7）：（k）知识管理</p><p>（8）：（l）意图识别</p><p>（9）：（p）知识检索</p><p>（10）：（n）语句解析</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 523316,
    "question_title": "<p>【问题2】（6分）构建医药领域知识图谱的数据源为各种医药信息网站，项目组采用Scrapy框架快速抓取网页信息，Scrapy框架的异步I/0机制能够高效地处理多任务爬取。请补充完善图2中(1)～(3)的空白处，完成Scrapy框架架构示意图。并用200字以内的文字简要说明什么是异步I/O。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250713/1752370439626683.png\" title=\"1752370439626683.png\" alt=\"image.png\" width=\"599\" height=\"503\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "(1)Scrapy Scrapy 或引擎<p>(2)Item Pipeline或管道</p><p>(3)Scheduler调度器或调度器</p><p>异步I/O是一种非阻塞的输入输出处理方式，程序在发起I/O操作后无需等待完成，可继续执行其他任务，通过回调、事件或通知机制获取结果。这种方式能充分利用系统资源，避免线程阻塞，显著提升高并发场景下的吞吐量和响应速度，常见于网络服务、实时应用及异步编程框架中。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 180,
      "belong_page": 1,
      "question_id": 523316,
      "question_title": "<p>【问题2】（6分）构建医药领域知识图谱的数据源为各种医药信息网站，项目组采用Scrapy框架快速抓取网页信息，Scrapy框架的异步I/0机制能够高效地处理多任务爬取。请补充完善图2中(1)～(3)的空白处，完成Scrapy框架架构示意图。并用200字以内的文字简要说明什么是异步I/O。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250713/1752370439626683.png\" title=\"1752370439626683.png\" alt=\"image.png\" width=\"599\" height=\"503\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 523314,
      "score_rule": "",
      "material_text": "<p>&nbsp;试题二(共25分)</p><p>阅读以下关于系统架构设计的叙述，回答问题1至问题3。&nbsp;</p><p>公司想要建设一个医院的智能问答系统，建立医院知识图谱，某工认为互联网的关键字检索无法满足大量的数据需求，建议建立知识图谱，采用爬虫技术。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "(1)Scrapy Scrapy 或引擎<p>(2)Item Pipeline或管道</p><p>(3)Scheduler调度器或调度器</p><p>异步I/O是一种非阻塞的输入输出处理方式，程序在发起I/O操作后无需等待完成，可继续执行其他任务，通过回调、事件或通知机制获取结果。这种方式能充分利用系统资源，避免线程阻塞，显著提升高并发场景下的吞吐量和响应速度，常见于网络服务、实时应用及异步编程框架中。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 523317,
    "question_title": "<p>【问题3】（9分）医药领域信息繁杂、数据量大，请用300字以内的文字简要说明该系统构建的医药领域知识图谱应采用何种方式进行知识存储，并说明原因。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>医药领域知识图谱应采用图数据库存储方式，原因如下：</p><p>（1）适配复杂关系建模：医药知识涉及疾病、药品、检查、科室等多类型实体，彼此间存在 “病因 - 疾病”“药品 - 适应症” 等复杂关联。图数据库以 “节点 - 边 - 属性” 模型存储，可直观表达实体间多维度关系（如三甲医院与科室的所属关系、药物与副作用的关联关系），满足知识图谱的语义网络构建需求。</p><p>（2）支持高效检索与推理：图数据库通过图遍历算法（如最短路径查询）可快速响应 “糖尿病常用检查项目有哪些” 等关联查询，避免传统关系型数据库多表连接的性能瓶颈。同时，其支持深度推理能力，可辅助挖掘隐含知识（如药物禁忌症关联），提升问答系统的语义理解深度。</p><p>（3）应对数据动态扩展：医药领域知识更新频繁（如新疗法、新药审批），图数据库的“无模式”特性（无需预先定义严格的数据结构）允许灵活新增实体类型或关系，适配知识图谱的持续迭代需求。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 181,
      "belong_page": 1,
      "question_id": 523317,
      "question_title": "<p>【问题3】（9分）医药领域信息繁杂、数据量大，请用300字以内的文字简要说明该系统构建的医药领域知识图谱应采用何种方式进行知识存储，并说明原因。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 523314,
      "score_rule": "",
      "material_text": "<p>&nbsp;试题二(共25分)</p><p>阅读以下关于系统架构设计的叙述，回答问题1至问题3。&nbsp;</p><p>公司想要建设一个医院的智能问答系统，建立医院知识图谱，某工认为互联网的关键字检索无法满足大量的数据需求，建议建立知识图谱，采用爬虫技术。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>医药领域知识图谱应采用图数据库存储方式，原因如下：</p><p>（1）适配复杂关系建模：医药知识涉及疾病、药品、检查、科室等多类型实体，彼此间存在 “病因 - 疾病”“药品 - 适应症” 等复杂关联。图数据库以 “节点 - 边 - 属性” 模型存储，可直观表达实体间多维度关系（如三甲医院与科室的所属关系、药物与副作用的关联关系），满足知识图谱的语义网络构建需求。</p><p>（2）支持高效检索与推理：图数据库通过图遍历算法（如最短路径查询）可快速响应 “糖尿病常用检查项目有哪些” 等关联查询，避免传统关系型数据库多表连接的性能瓶颈。同时，其支持深度推理能力，可辅助挖掘隐含知识（如药物禁忌症关联），提升问答系统的语义理解深度。</p><p>（3）应对数据动态扩展：医药领域知识更新频繁（如新疗法、新药审批），图数据库的“无模式”特性（无需预先定义严格的数据结构）允许灵活新增实体类型或关系，适配知识图谱的持续迭代需求。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 523319,
    "question_title": "<p>【问题1】（6分）说明云端AI和端侧AI的定义以及端侧AI相比云端AI的优势是什么。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>1、云端AI指人工智能模型的训练和推理过程主要在远程数据中心（云端服务器）上运行。终端设备（如手机App、网页浏览器）主要负责收集数据、通过网络传输到云端、接收并展示云端返回的处理结果。</p><p>2、端侧AI指将人工智能模型的推理过程直接在终端设备上运行，无需依赖网络连接将数据传输到远程服务器进行处理。</p><p>&nbsp;&nbsp;端侧AI的兴起主要是为了解决云端AI模式的一些固有局限，它在特定场景下具有显著优势：</p><p>①　低延迟 / 实时性：数据处理直接在设备上完成，消除了网络传输的往返时间。这对于需要即时响应的应用至关重要。</p><p>②　隐私保护与数据安全：敏感数据（如个人照片、语音录音、健康信息、地理位置、文档内容等）无需离开用户的设备。这大大降低了数据在传输过程中被截获或在云端存储时被泄露、滥用或遭受攻击的风险。</p><p>③　网络独立性 / 离线可用性：即使设备处于无网络或网络信号差（如飞机上、偏远地区、地下室）的环境下，AI功能依然可以正常工作。</p><p>④　节省带宽与降低云端成本：无需将大量原始数据（尤其是高分辨率图片、视频、音频流）上传到云端，节省了用户的移动数据流量和带宽消耗。</p><p>⑤　可扩展性与可靠性：AI能力直接部署在每一个终端设备上，意味着服务能力随着设备数量的增加而天然线性扩展，无需无限扩容云端服务器。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 182,
      "belong_page": 1,
      "question_id": 523319,
      "question_title": "<p>【问题1】（6分）说明云端AI和端侧AI的定义以及端侧AI相比云端AI的优势是什么。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 523318,
      "score_rule": "",
      "material_text": "<p>试题三(共25分)</p><p>阅读以下关于嵌入式系统架构设计的叙述，回答问题1至问题3。</p><p>近年来，AI技术得到快速发展，其技术促使了智能终端软硬架构的全面升级。云端AI和端侧AI最大差别在于算力是在云侧，还是端侧计算的问题。某装备研制企业为了适应产品的智能化升级换代，要求研发部门开展端侧AI技术的研究工作，王工主要承担了智能终端的资源池化设计工作并就资源池的架构设计提出了自己的见解。在研发部门组织的讨论会上，王工的独到见解得到技术主管的认可。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>1、云端AI指人工智能模型的训练和推理过程主要在远程数据中心（云端服务器）上运行。终端设备（如手机App、网页浏览器）主要负责收集数据、通过网络传输到云端、接收并展示云端返回的处理结果。</p><p>2、端侧AI指将人工智能模型的推理过程直接在终端设备上运行，无需依赖网络连接将数据传输到远程服务器进行处理。</p><p>&nbsp;&nbsp;端侧AI的兴起主要是为了解决云端AI模式的一些固有局限，它在特定场景下具有显著优势：</p><p>①　低延迟 / 实时性：数据处理直接在设备上完成，消除了网络传输的往返时间。这对于需要即时响应的应用至关重要。</p><p>②　隐私保护与数据安全：敏感数据（如个人照片、语音录音、健康信息、地理位置、文档内容等）无需离开用户的设备。这大大降低了数据在传输过程中被截获或在云端存储时被泄露、滥用或遭受攻击的风险。</p><p>③　网络独立性 / 离线可用性：即使设备处于无网络或网络信号差（如飞机上、偏远地区、地下室）的环境下，AI功能依然可以正常工作。</p><p>④　节省带宽与降低云端成本：无需将大量原始数据（尤其是高分辨率图片、视频、音频流）上传到云端，节省了用户的移动数据流量和带宽消耗。</p><p>⑤　可扩展性与可靠性：AI能力直接部署在每一个终端设备上，意味着服务能力随着设备数量的增加而天然线性扩展，无需无限扩容云端服务器。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 523320,
    "question_title": "<p>【问题2】（7分）针对智能终端端侧AI的需求，王工在讨论会上提出，应开展资源池架构设计工作。资源池可高效管理和分配计算、存储和网络等资源，其核心目标是通过集中化管理、动态调度和自动化运维提升资源利用率、弹性和可靠性。资源池架构设计除需要兼顾计算、存储、网络等资源的动态管理与优化外，同时应满足低延迟、高能效和隐私安全等核心需求。资源池的核心架构设计需要考虑(a)资源抽象与异构计算、(b)动态调度与能效优化、(c)安全与隔离机制等三个方面。表1给出了七种资源池架构设计方法，请根据你所掌握的相关知识，判断这些设计方法属于(a)～(c)的哪一类，并补充完善表1(1)～(7)的空白。请将（a）（b）（c）填入对应的描述后面的（1）-（7）空。</p><p>（a）资源抽象与异构计算</p><p>（b）动态调整与能效优化</p><p>（c）安全和隔离机制</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250713/1752370539318042.png\" title=\"1752370539318042.png\" alt=\"image.png\" width=\"678\" height=\"273\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）：（b）</p><p>（2）：（c）</p><p>（3）：（a）</p><p>（4）：（c）</p><p>（5）：（b）</p><p>（6）：（b）</p><p>（7）：（b）</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 183,
      "belong_page": 1,
      "question_id": 523320,
      "question_title": "<p>【问题2】（7分）针对智能终端端侧AI的需求，王工在讨论会上提出，应开展资源池架构设计工作。资源池可高效管理和分配计算、存储和网络等资源，其核心目标是通过集中化管理、动态调度和自动化运维提升资源利用率、弹性和可靠性。资源池架构设计除需要兼顾计算、存储、网络等资源的动态管理与优化外，同时应满足低延迟、高能效和隐私安全等核心需求。资源池的核心架构设计需要考虑(a)资源抽象与异构计算、(b)动态调度与能效优化、(c)安全与隔离机制等三个方面。表1给出了七种资源池架构设计方法，请根据你所掌握的相关知识，判断这些设计方法属于(a)～(c)的哪一类，并补充完善表1(1)～(7)的空白。请将（a）（b）（c）填入对应的描述后面的（1）-（7）空。</p><p>（a）资源抽象与异构计算</p><p>（b）动态调整与能效优化</p><p>（c）安全和隔离机制</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250713/1752370539318042.png\" title=\"1752370539318042.png\" alt=\"image.png\" width=\"678\" height=\"273\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 523318,
      "score_rule": "",
      "material_text": "<p>试题三(共25分)</p><p>阅读以下关于嵌入式系统架构设计的叙述，回答问题1至问题3。</p><p>近年来，AI技术得到快速发展，其技术促使了智能终端软硬架构的全面升级。云端AI和端侧AI最大差别在于算力是在云侧，还是端侧计算的问题。某装备研制企业为了适应产品的智能化升级换代，要求研发部门开展端侧AI技术的研究工作，王工主要承担了智能终端的资源池化设计工作并就资源池的架构设计提出了自己的见解。在研发部门组织的讨论会上，王工的独到见解得到技术主管的认可。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）：（b）</p><p>（2）：（c）</p><p>（3）：（a）</p><p>（4）：（c）</p><p>（5）：（b）</p><p>（6）：（b）</p><p>（7）：（b）</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 523321,
    "question_title": "<p>【问题3】（12分）</p><p>对比集中式资源池、分布式资源池、混合云资源池，补充完整下列表格。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250713/1752370573566187.png\" title=\"1752370573566187.png\" alt=\"image.png\" width=\"632\" height=\"272\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250713/1752370592936079.png\" title=\"1752370592936079.png\" alt=\"image.png\" width=\"601\" height=\"282\"/>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 184,
      "belong_page": 1,
      "question_id": 523321,
      "question_title": "<p>【问题3】（12分）</p><p>对比集中式资源池、分布式资源池、混合云资源池，补充完整下列表格。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250713/1752370573566187.png\" title=\"1752370573566187.png\" alt=\"image.png\" width=\"632\" height=\"272\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 523318,
      "score_rule": "",
      "material_text": "<p>试题三(共25分)</p><p>阅读以下关于嵌入式系统架构设计的叙述，回答问题1至问题3。</p><p>近年来，AI技术得到快速发展，其技术促使了智能终端软硬架构的全面升级。云端AI和端侧AI最大差别在于算力是在云侧，还是端侧计算的问题。某装备研制企业为了适应产品的智能化升级换代，要求研发部门开展端侧AI技术的研究工作，王工主要承担了智能终端的资源池化设计工作并就资源池的架构设计提出了自己的见解。在研发部门组织的讨论会上，王工的独到见解得到技术主管的认可。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250713/1752370592936079.png\" title=\"1752370592936079.png\" alt=\"image.png\" width=\"601\" height=\"282\"/>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 523323,
    "question_title": "<p>【问题1】（10分）</p><p>按要求填空，写出redis 主从同步，首次全量从库同步主库过程。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250713/1752370802100544.png\" title=\"1752370802100544.png\" alt=\"image.png\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）从库发起同步请求</p><p>（2）决定全量同步</p><p>（3）执行BGSAVE并开启缓冲区</p><p>（4）发送RDB文件</p><p>（5）发送增量命令</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 185,
      "belong_page": 1,
      "question_id": 523323,
      "question_title": "<p>【问题1】（10分）</p><p>按要求填空，写出redis 主从同步，首次全量从库同步主库过程。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250713/1752370802100544.png\" title=\"1752370802100544.png\" alt=\"image.png\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 523322,
      "score_rule": "",
      "material_text": "<p>&nbsp;试题四(共25分)</p><p>阅读以下关于数据库设计的叙述，回答问题1至问题3。</p><p>Redis，全称为Remote Dictionary Server，是一个开源的内存数据结构存储系统，支持多种数据结构，如字符串、哈希、列表、集合、有序集合等。Redis将数据存储于内存，读写速度达微秒级，完美适配高并发场景。同时采用持久化方案与集群模式部署，支持高可用场景及企业级扩展能力，成为现代应用性能优化的关键组件。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）从库发起同步请求</p><p>（2）决定全量同步</p><p>（3）执行BGSAVE并开启缓冲区</p><p>（4）发送RDB文件</p><p>（5）发送增量命令</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 523324,
    "question_title": "<p>【问题2】（6分）按要求填空，写出redis 主从同步，增量主从库同步过程。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250713/1752370828606286.png\" title=\"1752370828606286.png\" alt=\"image.png\"/>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>（1）主库执行写操作</p><p>（2）传播写命令到从库</p><p>（3）执行命令</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 186,
      "belong_page": 1,
      "question_id": 523324,
      "question_title": "<p>【问题2】（6分）按要求填空，写出redis 主从同步，增量主从库同步过程。</p><img style=\"max-width:100%;height:auto\"  src=\"https://s2.51cto.com/images/20250713/1752370828606286.png\" title=\"1752370828606286.png\" alt=\"image.png\"/>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 523322,
      "score_rule": "",
      "material_text": "<p>&nbsp;试题四(共25分)</p><p>阅读以下关于数据库设计的叙述，回答问题1至问题3。</p><p>Redis，全称为Remote Dictionary Server，是一个开源的内存数据结构存储系统，支持多种数据结构，如字符串、哈希、列表、集合、有序集合等。Redis将数据存储于内存，读写速度达微秒级，完美适配高并发场景。同时采用持久化方案与集群模式部署，支持高可用场景及企业级扩展能力，成为现代应用性能优化的关键组件。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>（1）主库执行写操作</p><p>（2）传播写命令到从库</p><p>（3）执行命令</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 523325,
    "question_title": "<p>【问题3】给出redis数据库的两种持久化的方式，并说明两种持久化方式的优缺点（9分）</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>1、 RDB（Redis Database）方式定期生成快照并保存到磁盘，这种方式的优点：</p><p>①　高性能：在触发快照时利用子进程进行持久化，不影响主进程性能。</p><p>②　恢复快：持久化后的文件小，重启加载速度显著快于 AOF。</p><p>③　节省空间：紧凑二进制格式的文件适合备份、灾难恢复。</p><p>缺点：</p><p>①　数据易丢失：若在两次快照期间系统宕机，可能丢失最新数据。</p><p>②　系统开销：频繁创建子进程可能导致主进程的短暂阻塞。</p><p>2、AOF（Append Only File）方式使用日志记录所有写操作命令进行持久化。AOF方式的优点：</p><p>①　数据安全性高：可以配置不同的持久化策略，系统宕机时最多丢1秒数据。而RDB</p><p>方式下数据丢失可能达到分钟级。</p><p>②　精准故障恢复能力：持久化粒度较细，可精准恢复任意时间点状态。</p><p>AOF的缺点：</p><p>①　文件体积大：记录所有写命令，文件增长速度快于 RDB。</p><p>②　性能开销大：如果每次写操作后记录日志，需要频繁落盘，对系统性能影响较大。</p><p>③　恢复速度较慢：需逐条执行命令回放以恢复数据，比 RDB方式慢 2-10 倍。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 187,
      "belong_page": 1,
      "question_id": 523325,
      "question_title": "<p>【问题3】给出redis数据库的两种持久化的方式，并说明两种持久化方式的优缺点（9分）</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 523322,
      "score_rule": "",
      "material_text": "<p>&nbsp;试题四(共25分)</p><p>阅读以下关于数据库设计的叙述，回答问题1至问题3。</p><p>Redis，全称为Remote Dictionary Server，是一个开源的内存数据结构存储系统，支持多种数据结构，如字符串、哈希、列表、集合、有序集合等。Redis将数据存储于内存，读写速度达微秒级，完美适配高并发场景。同时采用持久化方案与集群模式部署，支持高可用场景及企业级扩展能力，成为现代应用性能优化的关键组件。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>1、 RDB（Redis Database）方式定期生成快照并保存到磁盘，这种方式的优点：</p><p>①　高性能：在触发快照时利用子进程进行持久化，不影响主进程性能。</p><p>②　恢复快：持久化后的文件小，重启加载速度显著快于 AOF。</p><p>③　节省空间：紧凑二进制格式的文件适合备份、灾难恢复。</p><p>缺点：</p><p>①　数据易丢失：若在两次快照期间系统宕机，可能丢失最新数据。</p><p>②　系统开销：频繁创建子进程可能导致主进程的短暂阻塞。</p><p>2、AOF（Append Only File）方式使用日志记录所有写操作命令进行持久化。AOF方式的优点：</p><p>①　数据安全性高：可以配置不同的持久化策略，系统宕机时最多丢1秒数据。而RDB</p><p>方式下数据丢失可能达到分钟级。</p><p>②　精准故障恢复能力：持久化粒度较细，可精准恢复任意时间点状态。</p><p>AOF的缺点：</p><p>①　文件体积大：记录所有写命令，文件增长速度快于 RDB。</p><p>②　性能开销大：如果每次写操作后记录日志，需要频繁落盘，对系统性能影响较大。</p><p>③　恢复速度较慢：需逐条执行命令回放以恢复数据，比 RDB方式慢 2-10 倍。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 523327,
    "question_title": "<p>【问题1】（12分）</p><p>区块链的分为哪些层，每一层的主要功能和作用是什么。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>区块链分为以下几个层次：</p><p>1、数据层：负责区块链数据的存储与基础加密，构建区块链的底层数据基础，确保数据的完整性、安全性和可追溯性。</p><p>2、网络层：实现节点间的通信与数据传播，维持去中心化网络结构，保障数据的高可用性和抗攻击能力。</p><p>3、共识层：确保各个节点对区块链数据达成一致，解决分布式系统中的信任问题，防止双花攻击，即利用区块链确认机制的延迟或漏洞，实现同一笔资金的重复使用。从而保障网络安全性。</p><p>4、激励层：通过经济激励促进节点参与维护。在公有链中激励节点诚实参与，惩罚恶意行为，维持系统良性循环。</p><p>5、合约层：支持智能合约的编写与执行。实现区块链的可编程性，支持去中心化应用的开发，如自动化金融交易、供应链管理等。</p><p>6、应用层：封装区块链的实际应用场景。将区块链技术落地到具体行业，推动数字化转型。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 188,
      "belong_page": 1,
      "question_id": 523327,
      "question_title": "<p>【问题1】（12分）</p><p>区块链的分为哪些层，每一层的主要功能和作用是什么。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 523326,
      "score_rule": "",
      "material_text": "<p>试题五(共25分)</p><p>阅读以下关于WEB系统架构设计的叙述，回答问题1至问题3。</p><p>在农产品质量安全监管中应用区块链技术，建立了一套基于区块链的农产品检验流程管理系统，以解决传统检验流程中数据易篡改、责任难追溯的问题，确保检验数据的真实性、完整性和不可抵赖性。为满足高并发和实时响应的性能要求，设计团队在区块链系统中采用轻量级节点集群的方式，将高频访问的数据（如存证编号和哈希值）缓存在内存中，而完整交易记录和IPFS凭证则存储在分布式数据库系统。</p><p>该系统涉及三个关键角色：数据录入人、核对人和审核人，通过智能合约和分布式账本实现全流程自动化管理。系统的基本处理流程：当启动农产品检验流程时，区块链系统通过智能合约对上传至IPFS分布式存储系统中的农产品基础数据等关键信息上链并对数据进行完整性验证。相关工作人员对已验证的数据包进行二级加密签名，根据区块链操作日志发起数据修改记录复核请求，经过系统最终确认后使该批次数据进入只读状态。随后系统颁发可验证数字凭证并同步至农业监管链节点。整个流程中，所有操作痕迹均通过非对称加密永久上链，确保数据的防抵赖性和可审计性，响应时间控制在毫秒级以满足实时监管需求。</p>",
      "sort_son": "1",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>区块链分为以下几个层次：</p><p>1、数据层：负责区块链数据的存储与基础加密，构建区块链的底层数据基础，确保数据的完整性、安全性和可追溯性。</p><p>2、网络层：实现节点间的通信与数据传播，维持去中心化网络结构，保障数据的高可用性和抗攻击能力。</p><p>3、共识层：确保各个节点对区块链数据达成一致，解决分布式系统中的信任问题，防止双花攻击，即利用区块链确认机制的延迟或漏洞，实现同一笔资金的重复使用。从而保障网络安全性。</p><p>4、激励层：通过经济激励促进节点参与维护。在公有链中激励节点诚实参与，惩罚恶意行为，维持系统良性循环。</p><p>5、合约层：支持智能合约的编写与执行。实现区块链的可编程性，支持去中心化应用的开发，如自动化金融交易、供应链管理等。</p><p>6、应用层：封装区块链的实际应用场景。将区块链技术落地到具体行业，推动数字化转型。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 523328,
    "question_title": "<p>【问题2】（9分）</p><p>&nbsp;&nbsp;&nbsp;区块链应用在农产品的检验流程中，有三个角色，数据录入人，核对人和审核人，请说明三个角色在上链过程基本工作流程。</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>1.信息填写人员</p><p>①登录区块链系统录入农产品基础数据（批次、产地、检测报告等）；②上传原始凭证（如检测机构盖章文件）至IPFS分布式存储；③调用智能合约生成初始哈希值将关键信息上链；④系统自动生成带时间戳的区块链存证编号。</p><p>2.核对人员</p><p>对已验证验的数据包进行二级加密签名，触发智能合约进入审核队列。</p><p>3.审核人员</p><p>① 调取前两级操作的全流程区块链日志；② 发起数据修改记录复核请求；③ 最终确认时触发时间锁功能，使该批次数据进入只读状态。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 189,
      "belong_page": 1,
      "question_id": 523328,
      "question_title": "<p>【问题2】（9分）</p><p>&nbsp;&nbsp;&nbsp;区块链应用在农产品的检验流程中，有三个角色，数据录入人，核对人和审核人，请说明三个角色在上链过程基本工作流程。</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 523326,
      "score_rule": "",
      "material_text": "<p>试题五(共25分)</p><p>阅读以下关于WEB系统架构设计的叙述，回答问题1至问题3。</p><p>在农产品质量安全监管中应用区块链技术，建立了一套基于区块链的农产品检验流程管理系统，以解决传统检验流程中数据易篡改、责任难追溯的问题，确保检验数据的真实性、完整性和不可抵赖性。为满足高并发和实时响应的性能要求，设计团队在区块链系统中采用轻量级节点集群的方式，将高频访问的数据（如存证编号和哈希值）缓存在内存中，而完整交易记录和IPFS凭证则存储在分布式数据库系统。</p><p>该系统涉及三个关键角色：数据录入人、核对人和审核人，通过智能合约和分布式账本实现全流程自动化管理。系统的基本处理流程：当启动农产品检验流程时，区块链系统通过智能合约对上传至IPFS分布式存储系统中的农产品基础数据等关键信息上链并对数据进行完整性验证。相关工作人员对已验证的数据包进行二级加密签名，根据区块链操作日志发起数据修改记录复核请求，经过系统最终确认后使该批次数据进入只读状态。随后系统颁发可验证数字凭证并同步至农业监管链节点。整个流程中，所有操作痕迹均通过非对称加密永久上链，确保数据的防抵赖性和可审计性，响应时间控制在毫秒级以满足实时监管需求。</p>",
      "sort_son": "2",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>1.信息填写人员</p><p>①登录区块链系统录入农产品基础数据（批次、产地、检测报告等）；②上传原始凭证（如检测机构盖章文件）至IPFS分布式存储；③调用智能合约生成初始哈希值将关键信息上链；④系统自动生成带时间戳的区块链存证编号。</p><p>2.核对人员</p><p>对已验证验的数据包进行二级加密签名，触发智能合约进入审核队列。</p><p>3.审核人员</p><p>① 调取前两级操作的全流程区块链日志；② 发起数据修改记录复核请求；③ 最终确认时触发时间锁功能，使该批次数据进入只读状态。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1669",
    "section_name": "案例分析 - 案例分析",
    "question_id": 523329,
    "question_title": "<p>&nbsp;【问题3】（4分）</p><p>智能合约在区块链中的主要作用主要体现在哪三个方面？</p>",
    "question_type": 14,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>智能合约的本质是“自动执行的数字协议”，其核心在于用代码取代法律条文，在区块链上构建不可篡改的自动化规则。</p><p>智能合约的主要作用包含以下三方面：</p><p>1、自治性</p><p>智能合约可以在满足预设条件时自动执行交易或协议，减少人工干预和信任成本。例如，本项目中核对人签名后，系统自动推送数据至审核队列，规避人为拖延或遗漏。</p><p>2、防篡改性</p><p>通过密码学与规则代码化杜绝人为干预。例如，当信息填写人员录入基础信息后，智能合约自动调用区块链底层密码学函数（如SHA-256），计算该数据的哈希值并写入区块链账本。当有人企图修改数据时，智能合约会重新计算当前数据哈希值，并与链上存储的原始哈希值比对，若不一致则拒绝执行修改操作，从而实现数据防篡改。</p><p>&nbsp;&nbsp;&nbsp;3、去中心化</p><p>&nbsp;&nbsp;&nbsp;数据和操作的真实性由全网节点共同验证，而非信任单一中心机构，避免数据篡改和单点故障。例如，题干中所有操作痕迹（如数据修改记录、签名、复核结果）通过智能合约自动记录到区块链分布式账本中，并需经网络中多个节点验证共识。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 190,
      "belong_page": 1,
      "question_id": 523329,
      "question_title": "<p>&nbsp;【问题3】（4分）</p><p>智能合约在区块链中的主要作用主要体现在哪三个方面？</p>",
      "question_type": 14,
      "answer_type": 5,
      "show_type_name": "[材料型]问答题",
      "new_parent_id": 523326,
      "score_rule": "",
      "material_text": "<p>试题五(共25分)</p><p>阅读以下关于WEB系统架构设计的叙述，回答问题1至问题3。</p><p>在农产品质量安全监管中应用区块链技术，建立了一套基于区块链的农产品检验流程管理系统，以解决传统检验流程中数据易篡改、责任难追溯的问题，确保检验数据的真实性、完整性和不可抵赖性。为满足高并发和实时响应的性能要求，设计团队在区块链系统中采用轻量级节点集群的方式，将高频访问的数据（如存证编号和哈希值）缓存在内存中，而完整交易记录和IPFS凭证则存储在分布式数据库系统。</p><p>该系统涉及三个关键角色：数据录入人、核对人和审核人，通过智能合约和分布式账本实现全流程自动化管理。系统的基本处理流程：当启动农产品检验流程时，区块链系统通过智能合约对上传至IPFS分布式存储系统中的农产品基础数据等关键信息上链并对数据进行完整性验证。相关工作人员对已验证的数据包进行二级加密签名，根据区块链操作日志发起数据修改记录复核请求，经过系统最终确认后使该批次数据进入只读状态。随后系统颁发可验证数字凭证并同步至农业监管链节点。整个流程中，所有操作痕迹均通过非对称加密永久上链，确保数据的防抵赖性和可审计性，响应时间控制在毫秒级以满足实时监管需求。</p>",
      "sort_son": "3",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>智能合约的本质是“自动执行的数字协议”，其核心在于用代码取代法律条文，在区块链上构建不可篡改的自动化规则。</p><p>智能合约的主要作用包含以下三方面：</p><p>1、自治性</p><p>智能合约可以在满足预设条件时自动执行交易或协议，减少人工干预和信任成本。例如，本项目中核对人签名后，系统自动推送数据至审核队列，规避人为拖延或遗漏。</p><p>2、防篡改性</p><p>通过密码学与规则代码化杜绝人为干预。例如，当信息填写人员录入基础信息后，智能合约自动调用区块链底层密码学函数（如SHA-256），计算该数据的哈希值并写入区块链账本。当有人企图修改数据时，智能合约会重新计算当前数据哈希值，并与链上存储的原始哈希值比对，若不一致则拒绝执行修改操作，从而实现数据防篡改。</p><p>&nbsp;&nbsp;&nbsp;3、去中心化</p><p>&nbsp;&nbsp;&nbsp;数据和操作的真实性由全网节点共同验证，而非信任单一中心机构，避免数据篡改和单点故障。例如，题干中所有操作痕迹（如数据修改记录、签名、复核结果）通过智能合约自动记录到区块链分布式账本中，并需经网络中多个节点验证共识。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176916.8408117
  },
  {
    "section_id": "1791",
    "section_name": "论文 - 论文",
    "question_id": 85179,
    "question_title": "<p><span style=\"text-decoration: none;\">系统架构设计师——</span><span style=\"text-decoration: underline;\">论文提交注意事项</span></p><p>1、在进行论文写作（电子版本）练习时，建议先在word上完成并保存好，然后将其复制粘贴至以下答案处；</p><p>2、进行单次提交论文内容时，论文篇数控制在一篇至两篇（不要连续提交，两篇放在一起，不然上一次提交的内容将会被覆盖）；</p><p>3、字体格式要求：宋体--五号；</p><p>4、论文题目范围：十大知识领域，建议大家针对十大知识领域练习一遍；</p><p>5、介于学员较多，且论文篇幅较长，讲师仔细审阅一篇论文需要十几分钟，建议在正式提交之前，请先进行自检自查，例如论文思路、结构等内容是否合理，自检通过后再进行论文提交，重复提交会更新提交时间，所以尽量一次提交成功，再耐心等候讲师批改完毕哦。</p><p>6、考虑到经常出现在一天内需要讲师进行批阅的论文高达几十篇，因此论文提交后，可能无法第一时间得到回复，讲师会尽量在48小时内进行批阅（节假日回复时间可能会顺延），敬请谅解。</p>7、请复制粘贴在答案空白处，不要以附件形式提交，不要以附件形式提交，不要以附件形式提交；<p><br/><span style=\"text-decoration: underline;\">论文写作要点</span></p><p>一片完整的论文主要包含三个部分：摘要+正文+结尾；在字数限制的情况下，合理对内容进行合理分配，如下：</p><p>&nbsp;</p><p>摘要——论文写作章节分布建议&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>摘要组成部分：项目背景+论文主题</p><p>摘要字数：300字（项目背景250字+论文主题50字）</p><p>项目背景组成部分：项目起止时间+项目投资+个人职责（建议以项目经理的角度进行论文写作）+项目甲乙双方（项目其他干系人——如有，例如设计单位、质量监督机构等）+项目建设任务+项目建设目标/目的+其他补充（结合字数限制自行控制）</p><p>论文主题组成部分：论文主题涉及某某知识领域+该领域具体管理过程+项目效果+业主评价</p><p>摘要字数上限：330字（含标点符号）</p><p>&nbsp;</p><p>正文——论文写作章节分布建议&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>正文组成部分：项目背景+管理过程</p><p>正文字数：2500字（项目背景500字+论文主题2000字）</p><p>项目背景组成部分：项目起止时间+项目投资+个人职责（建议以项目经理的角度进行论文写作）+项目甲乙双方（项目其他干系人——如有，例如设计单位、质量监督机构等）+项目建设任务+项目建设目标/目的+其他补充（结合字数限制自行控制）</p><p>【正文---项目背景：在“摘要---项目背景”的基础上进一步细化、详细。】</p><p>&nbsp;</p><p>管理过程组成部分：论文主题涉及某某知识领域+该领域具体管理过程</p><p>（举例：该知识领域一共涉及5个管理过程/步骤）---2000字</p><p>过程/步骤1：阐述该阶段工作主要依据、方法技术、成果---400字</p><p>过程/步骤2：同上---400字</p><p>过程/步骤3：同上---400字</p><p>过程/步骤4：同上---400字</p><p>过程/步骤5：同上---400字</p><p>&nbsp;</p><p>结尾——论文写作章节分布建议&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>正结尾成部分：项目主要成果+个人目标</p><p>结尾字数：250字（项目主要成果200字+论文主题50字）</p><p>项目背景组成部分：项目起止时间+项目目前状态+项目建设主要成效+其他补充（结合字数限制自行控制）</p><p>个人目标：50字（自由发挥）</p><p><br/></p><p><span style=\"text-decoration: underline;\">论文提交模板：</span></p><p>论文题目（居中 黑体加粗 2号字 ）</p><p>摘要</p><p>1、要求：首行缩进两字符，采用“宋体--5号”</p><p>2、段落行距：1.5倍</p><p>3、摘要字数：300字为最佳，字数上限：330字</p><p>&nbsp;</p><p>正文</p><p>1、要求：首行缩进两字符，采用“宋体--5号”</p><p>2、段落行距：1.5倍</p><p>3、摘要字数：2400字为最佳，字数上限：2500字</p><p>&nbsp;</p><p>结尾</p><p>1、要求：首行缩进两字符，采用“宋体--5号”</p><p>2、段落行距：1.5倍</p><p>3、摘要字数：200字为最佳，字数上限：250字</p><p><br/><br/>论文手写版：（请自行打印群文件里的论文答题纸，进行手写练习，再将清晰的照片复制或上传在此）</p><br/>PS:不是二选一哦，文字和手写版要一起提交哦！",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>略</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 1,
      "belong_page": 1,
      "question_id": 85179,
      "question_title": "<p><span style=\"text-decoration: none;\">系统架构设计师——</span><span style=\"text-decoration: underline;\">论文提交注意事项</span></p><p>1、在进行论文写作（电子版本）练习时，建议先在word上完成并保存好，然后将其复制粘贴至以下答案处；</p><p>2、进行单次提交论文内容时，论文篇数控制在一篇至两篇（不要连续提交，两篇放在一起，不然上一次提交的内容将会被覆盖）；</p><p>3、字体格式要求：宋体--五号；</p><p>4、论文题目范围：十大知识领域，建议大家针对十大知识领域练习一遍；</p><p>5、介于学员较多，且论文篇幅较长，讲师仔细审阅一篇论文需要十几分钟，建议在正式提交之前，请先进行自检自查，例如论文思路、结构等内容是否合理，自检通过后再进行论文提交，重复提交会更新提交时间，所以尽量一次提交成功，再耐心等候讲师批改完毕哦。</p><p>6、考虑到经常出现在一天内需要讲师进行批阅的论文高达几十篇，因此论文提交后，可能无法第一时间得到回复，讲师会尽量在48小时内进行批阅（节假日回复时间可能会顺延），敬请谅解。</p>7、请复制粘贴在答案空白处，不要以附件形式提交，不要以附件形式提交，不要以附件形式提交；<p><br/><span style=\"text-decoration: underline;\">论文写作要点</span></p><p>一片完整的论文主要包含三个部分：摘要+正文+结尾；在字数限制的情况下，合理对内容进行合理分配，如下：</p><p>&nbsp;</p><p>摘要——论文写作章节分布建议&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>摘要组成部分：项目背景+论文主题</p><p>摘要字数：300字（项目背景250字+论文主题50字）</p><p>项目背景组成部分：项目起止时间+项目投资+个人职责（建议以项目经理的角度进行论文写作）+项目甲乙双方（项目其他干系人——如有，例如设计单位、质量监督机构等）+项目建设任务+项目建设目标/目的+其他补充（结合字数限制自行控制）</p><p>论文主题组成部分：论文主题涉及某某知识领域+该领域具体管理过程+项目效果+业主评价</p><p>摘要字数上限：330字（含标点符号）</p><p>&nbsp;</p><p>正文——论文写作章节分布建议&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>正文组成部分：项目背景+管理过程</p><p>正文字数：2500字（项目背景500字+论文主题2000字）</p><p>项目背景组成部分：项目起止时间+项目投资+个人职责（建议以项目经理的角度进行论文写作）+项目甲乙双方（项目其他干系人——如有，例如设计单位、质量监督机构等）+项目建设任务+项目建设目标/目的+其他补充（结合字数限制自行控制）</p><p>【正文---项目背景：在“摘要---项目背景”的基础上进一步细化、详细。】</p><p>&nbsp;</p><p>管理过程组成部分：论文主题涉及某某知识领域+该领域具体管理过程</p><p>（举例：该知识领域一共涉及5个管理过程/步骤）---2000字</p><p>过程/步骤1：阐述该阶段工作主要依据、方法技术、成果---400字</p><p>过程/步骤2：同上---400字</p><p>过程/步骤3：同上---400字</p><p>过程/步骤4：同上---400字</p><p>过程/步骤5：同上---400字</p><p>&nbsp;</p><p>结尾——论文写作章节分布建议&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>正结尾成部分：项目主要成果+个人目标</p><p>结尾字数：250字（项目主要成果200字+论文主题50字）</p><p>项目背景组成部分：项目起止时间+项目目前状态+项目建设主要成效+其他补充（结合字数限制自行控制）</p><p>个人目标：50字（自由发挥）</p><p><br/></p><p><span style=\"text-decoration: underline;\">论文提交模板：</span></p><p>论文题目（居中 黑体加粗 2号字 ）</p><p>摘要</p><p>1、要求：首行缩进两字符，采用“宋体--5号”</p><p>2、段落行距：1.5倍</p><p>3、摘要字数：300字为最佳，字数上限：330字</p><p>&nbsp;</p><p>正文</p><p>1、要求：首行缩进两字符，采用“宋体--5号”</p><p>2、段落行距：1.5倍</p><p>3、摘要字数：2400字为最佳，字数上限：2500字</p><p>&nbsp;</p><p>结尾</p><p>1、要求：首行缩进两字符，采用“宋体--5号”</p><p>2、段落行距：1.5倍</p><p>3、摘要字数：200字为最佳，字数上限：250字</p><p><br/><br/>论文手写版：（请自行打印群文件里的论文答题纸，进行手写练习，再将清晰的照片复制或上传在此）</p><br/>PS:不是二选一哦，文字和手写版要一起提交哦！",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 85179,
      "score_rule": "",
      "material_text": null,
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>略</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176918.1303875
  },
  {
    "section_id": "1791",
    "section_name": "论文 - 论文",
    "question_id": 208622,
    "question_title": "<p>论企业应用系统的数据持久层架构设计</p><p>数据持久层(Data Persistence Layer)通常位于企业应用系统的业务逻辑层和数据源层之间，为整个项目提供一个高层、统一、安全、并发的数据持久机制，完成对各种数据进行持久化的编程工作，并为系统业务逻辑层提供服务。它能够使程序员避免手工编写访问数据源的方法，使其专注于业务逻辑的开发，并且能够在不同项目中重用本框架，这大大简化了数据的增加、删除、修改、查询功能的开发过程，同时又不丧失多层结构的天然优势，继承延续应用系统架构的可伸缩性和可扩展性。当运用关系型数据库作为数据存储机制时，在业务层与数据源间加入数据持久层，能够解决对象与关系的“阻抗不匹配”问题，将对象的状态持久化存储到关系型数据库中。</p><p>请围绕“企业应用系统的数据持久层架构设计”论题，依次从以下三方面进行论述。</p><p>1．概要叙述你参与分析和设计的企业应用系统开发项目以及你所担任的主要工作。</p><p>2．分析在企业应用系统的数据持久层架构设计中有哪些数据访问模式，并详细阐述每种数据访问模式的主要内容。</p><p>3．数据持久层架构设计的好坏决定着应用程序性能的优劣，请结合实际说明在数据持久层架构设计中需要考虑哪些问题。<span style=\"font-size: 16px;\"></span></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "请看解析"
    ],
    "analysis": "",
    "raw_data": {
      "index": 2,
      "belong_page": 1,
      "question_id": 208622,
      "question_title": "<p>论企业应用系统的数据持久层架构设计</p><p>数据持久层(Data Persistence Layer)通常位于企业应用系统的业务逻辑层和数据源层之间，为整个项目提供一个高层、统一、安全、并发的数据持久机制，完成对各种数据进行持久化的编程工作，并为系统业务逻辑层提供服务。它能够使程序员避免手工编写访问数据源的方法，使其专注于业务逻辑的开发，并且能够在不同项目中重用本框架，这大大简化了数据的增加、删除、修改、查询功能的开发过程，同时又不丧失多层结构的天然优势，继承延续应用系统架构的可伸缩性和可扩展性。当运用关系型数据库作为数据存储机制时，在业务层与数据源间加入数据持久层，能够解决对象与关系的“阻抗不匹配”问题，将对象的状态持久化存储到关系型数据库中。</p><p>请围绕“企业应用系统的数据持久层架构设计”论题，依次从以下三方面进行论述。</p><p>1．概要叙述你参与分析和设计的企业应用系统开发项目以及你所担任的主要工作。</p><p>2．分析在企业应用系统的数据持久层架构设计中有哪些数据访问模式，并详细阐述每种数据访问模式的主要内容。</p><p>3．数据持久层架构设计的好坏决定着应用程序性能的优劣，请结合实际说明在数据持久层架构设计中需要考虑哪些问题。<span style=\"font-size: 16px;\"></span></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 208622,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "请看解析"
      ],
      "option": null
    },
    "crawl_time": 1753176918.1303875
  },
  {
    "section_id": "1791",
    "section_name": "论文 - 论文",
    "question_id": 208624,
    "question_title": "<p>论企业信息化规划的实施与应用</p><p>企业信息化建设是一项长期而艰巨的任务，不可能在短时间内完成。信息化规划是企业信息化建设的纲领和向导，是信息系统设计和实施的前提和依据。信息化规划以整个企业的发展目标和战略、企业各部门的目标与功能为基础，同时结合行业信息化方面的实践和对信息技术发展趋势的掌握，制定出企业信息化远景、目标和发展战略，从而达到全面、系统地指导企业信息化建设的目的。</p><p>请围绕“企业信息化规划的实施与应用”论题，依次从以下三个方面进行论述。</p><p>1．概要叙述你参与的企业信息化规划项目以及你在其中所担任的主要工作。</p><p>2．简要叙述企业信息化规划的主要内容。结合你参与的项目的实际情况，详细分析有关企业的信息化规划目标及规划的具体内容。</p><p>3．说明你所参与实施的企业信息化规划的步骤及效果，介绍其是否达到了预期的目标并分析原因。<span style=\"font-size: 16px;\"></span></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "请看解析"
    ],
    "analysis": "",
    "raw_data": {
      "index": 3,
      "belong_page": 1,
      "question_id": 208624,
      "question_title": "<p>论企业信息化规划的实施与应用</p><p>企业信息化建设是一项长期而艰巨的任务，不可能在短时间内完成。信息化规划是企业信息化建设的纲领和向导，是信息系统设计和实施的前提和依据。信息化规划以整个企业的发展目标和战略、企业各部门的目标与功能为基础，同时结合行业信息化方面的实践和对信息技术发展趋势的掌握，制定出企业信息化远景、目标和发展战略，从而达到全面、系统地指导企业信息化建设的目的。</p><p>请围绕“企业信息化规划的实施与应用”论题，依次从以下三个方面进行论述。</p><p>1．概要叙述你参与的企业信息化规划项目以及你在其中所担任的主要工作。</p><p>2．简要叙述企业信息化规划的主要内容。结合你参与的项目的实际情况，详细分析有关企业的信息化规划目标及规划的具体内容。</p><p>3．说明你所参与实施的企业信息化规划的步骤及效果，介绍其是否达到了预期的目标并分析原因。<span style=\"font-size: 16px;\"></span></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 208624,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "请看解析"
      ],
      "option": null
    },
    "crawl_time": 1753176918.1303875
  },
  {
    "section_id": "1791",
    "section_name": "论文 - 论文",
    "question_id": 208631,
    "question_title": "<p>论企业应用系统的分层架构风格</p><p>软件架构风格是描述一类特定应用领域中系统组织方式的惯用模式，反映了领域中诸多系统所共有的结构特征和语义特征，并指导如何将各个模块和子系统有效组织成一个完整的系统。分层架构是一种常见的软件架构风格，能够有效简化设计，使得设计的系统结构清晰，便于提高复用能力和产品维护能力。</p><p>由于大量企业应用系统都由界面呈现、业务逻辑、数据存储三类功能构成，因此广泛采用分层架构风格进行系统设计。</p><p>请围绕“企业应用系统的分层架构风格”论题，依次从以下三个方面进行论述。</p><p>1．概要叙述你参与管理和开发的企业应用系统建设项目以及你在其中所承担的主要工作。</p><p>2．请结合项目实际情况，指出应用系统都有哪些层次以及每个层次的主要功能。</p><p>3．请结合项目实际情况，指出设计每个层次时需要注意的问题及相应的解决方案。<span style=\"font-size: 16px;\"></span></p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "请看解析<p></p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 4,
      "belong_page": 1,
      "question_id": 208631,
      "question_title": "<p>论企业应用系统的分层架构风格</p><p>软件架构风格是描述一类特定应用领域中系统组织方式的惯用模式，反映了领域中诸多系统所共有的结构特征和语义特征，并指导如何将各个模块和子系统有效组织成一个完整的系统。分层架构是一种常见的软件架构风格，能够有效简化设计，使得设计的系统结构清晰，便于提高复用能力和产品维护能力。</p><p>由于大量企业应用系统都由界面呈现、业务逻辑、数据存储三类功能构成，因此广泛采用分层架构风格进行系统设计。</p><p>请围绕“企业应用系统的分层架构风格”论题，依次从以下三个方面进行论述。</p><p>1．概要叙述你参与管理和开发的企业应用系统建设项目以及你在其中所承担的主要工作。</p><p>2．请结合项目实际情况，指出应用系统都有哪些层次以及每个层次的主要功能。</p><p>3．请结合项目实际情况，指出设计每个层次时需要注意的问题及相应的解决方案。<span style=\"font-size: 16px;\"></span></p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 208631,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "请看解析<p></p>"
      ],
      "option": null
    },
    "crawl_time": 1753176918.1303875
  },
  {
    "section_id": "1791",
    "section_name": "论文 - 论文",
    "question_id": 208633,
    "question_title": "<p>论分布式存储系统架构设计</p><p>分布式存储系统(Distributed Storage System)通常将数据分散存储在多台独立的设备上。传统的网络存储系统采用集中的存储服务器存放所有数据，存储服务器成为系统性能的瓶颈，也是可靠性和安全性的焦点，不能满足大规模存储应用的需要。分布式存储系统采用可扩展的系统结构，利用多台存储服务器分担存储负荷，利用位置服务器定位存储信息，它不但提高了系统的可靠性、可用性和存取效率，还易于扩展。</p><p>请围绕“分布式存储系统架构设计”论题，依次从以下三个方面进行论述。</p><p>1．概要叙述你参与分析和开发的分布式存储系统项目以及你所承担的主要工作。</p><p>2．简要说明在分布式存储系统架构设计中所使用的分布式存储技术及其实现机制，详细叙述你在具体项目中选用了哪种分布式存储技术，说明其原因和实施效果。</p><p>3．冗余是提高分布式存储系统可靠性的主要方法，通常在分布式存储系统设计中可采用哪些冗余技术来提升系统的可靠性?你在具体项目中选用了哪种冗余技术?说明其原因和实施效果。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "请看解析"
    ],
    "analysis": "",
    "raw_data": {
      "index": 5,
      "belong_page": 1,
      "question_id": 208633,
      "question_title": "<p>论分布式存储系统架构设计</p><p>分布式存储系统(Distributed Storage System)通常将数据分散存储在多台独立的设备上。传统的网络存储系统采用集中的存储服务器存放所有数据，存储服务器成为系统性能的瓶颈，也是可靠性和安全性的焦点，不能满足大规模存储应用的需要。分布式存储系统采用可扩展的系统结构，利用多台存储服务器分担存储负荷，利用位置服务器定位存储信息，它不但提高了系统的可靠性、可用性和存取效率，还易于扩展。</p><p>请围绕“分布式存储系统架构设计”论题，依次从以下三个方面进行论述。</p><p>1．概要叙述你参与分析和开发的分布式存储系统项目以及你所承担的主要工作。</p><p>2．简要说明在分布式存储系统架构设计中所使用的分布式存储技术及其实现机制，详细叙述你在具体项目中选用了哪种分布式存储技术，说明其原因和实施效果。</p><p>3．冗余是提高分布式存储系统可靠性的主要方法，通常在分布式存储系统设计中可采用哪些冗余技术来提升系统的可靠性?你在具体项目中选用了哪种冗余技术?说明其原因和实施效果。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 208633,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "请看解析"
      ],
      "option": null
    },
    "crawl_time": 1753176918.1303875
  },
  {
    "section_id": "1791",
    "section_name": "论文 - 论文",
    "question_id": 286362,
    "question_title": "<p>论云原生架构及其应用论题，依次从以下三个方面进行论述</p><p>1.&nbsp;概要叙述你参与管理和开发的软件项目以及承担的主要工作</p><p>2.&nbsp;服务化，强性，可观测任性和自动化是云原生架构重复的四类设计原则，请简要对这四类设计原则的内涵进行阐述。</p><p>3.&nbsp;具体阐述你参与管理和开发的项目是如何向采用云原生架构的，并且围绕上述四类设计原则详细论述在项目设计与实现过程中遇到了哪些实际问题。是如何解决的</p><p>&nbsp;</p><p>大纲：近年来，随着数字化转型不断深入，科技创新与业务不断融合，各行各业正在从大工业时代以容器和微服务架构为代表的云原生技术作为云计算服务的新模式已经逐渐成为企业持续发展的主流选择。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>略</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 6,
      "belong_page": 1,
      "question_id": 286362,
      "question_title": "<p>论云原生架构及其应用论题，依次从以下三个方面进行论述</p><p>1.&nbsp;概要叙述你参与管理和开发的软件项目以及承担的主要工作</p><p>2.&nbsp;服务化，强性，可观测任性和自动化是云原生架构重复的四类设计原则，请简要对这四类设计原则的内涵进行阐述。</p><p>3.&nbsp;具体阐述你参与管理和开发的项目是如何向采用云原生架构的，并且围绕上述四类设计原则详细论述在项目设计与实现过程中遇到了哪些实际问题。是如何解决的</p><p>&nbsp;</p><p>大纲：近年来，随着数字化转型不断深入，科技创新与业务不断融合，各行各业正在从大工业时代以容器和微服务架构为代表的云原生技术作为云计算服务的新模式已经逐渐成为企业持续发展的主流选择。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 286362,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>略</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176918.1303875
  },
  {
    "section_id": "1791",
    "section_name": "论文 - 论文",
    "question_id": 286364,
    "question_title": "<p>围绕“论企业集成架构设计及应用”为题</p><p>1.概要叙述你参与的软件开发项目的及承担的主要工作</p><p>2.说详细说明三类企业集成架构设计技术分列要解决的问题及其含义，并阐述每种技术具体包含了哪些集成架构</p><p>3.根据你所参与的项目，说明用了哪些企业集成架构设计技术，其实施效果如何.</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>略</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 7,
      "belong_page": 1,
      "question_id": 286364,
      "question_title": "<p>围绕“论企业集成架构设计及应用”为题</p><p>1.概要叙述你参与的软件开发项目的及承担的主要工作</p><p>2.说详细说明三类企业集成架构设计技术分列要解决的问题及其含义，并阐述每种技术具体包含了哪些集成架构</p><p>3.根据你所参与的项目，说明用了哪些企业集成架构设计技术，其实施效果如何.</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 286364,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>略</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176918.1303875
  },
  {
    "section_id": "1791",
    "section_name": "论文 - 论文",
    "question_id": 303761,
    "question_title": "<p>试题三 &nbsp;论数据湖技术及其应用</p><p>近年来，随着移动互联网、物联网、工业互联网等技术的不断发展，企业级应用面临的数据规模不断增大，数据类型异常复杂。针对这一问题，业界提出“数据湖（Data Lake)”这一新型的企业数据管理技术。数据湖是一个存储企业各种原始数据的大型仓库，支持对任意规模的结构化、半结构化和非结构化数据进行集中式存储，数据按照原有结构进行存储，无须进行结构化处理；数据湖中的数据可供存取、处理、分析及传输，支撑大数据处理、实时分析、机器学习、数据可视化等多种应用，最终支持企业的智能决策过程。</p><p>&nbsp;</p><p>请围绕“数据湖技术及其应用”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你所参与管理或开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.详细阐述数据湖技术，并从主要数据来源、数据模式（Schema）转换时机、数据存储成本、数据质量、面对用户和主要支撑应用类型等5个方面详细论述数据湖技术与数据仓库技术的差异。</p><p>3.详细说明你所参与的软件开发项目中，如何采用数据湖技术进行企业数据管理，并说明具体实施过程及应用效果。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>【试题三：论数据湖技术及其应用】写作要点</p><p>1．简要叙述所参与的大数据或数据湖系统项目，并明确指出在其中承担的职务和主要工作。</p><p>2．分析并阐述数据湖技术：</p><p>1)&nbsp;大数据的由来和表现。</p><p>2) 大数据5V特性</p><p>3) 大数据与数据仓库</p><p>4) 数据仓库的4个特性</p><p>3. 分析并阐述数据湖技术：</p><p>1) 数据仓库的缺点</p><p>2) 数据湖的技术特点</p><p>3) 数据湖的概念</p><p>4) 数据库的特性</p><p>4. 分析并对比数据湖(Data Lake, DL)与数据仓库(Data Warehouse, DW)</p><p>1) 数据来源</p><p>DW：从外部数据源获取</p><p>DL：既可从外部数据源获取，也可从外部应用或外部存储获取</p><p>1)&nbsp;数据模式（Schema）转换时机</p><p>DW：采用ETL</p><p>DL：既支持ETL，也支持ELT</p><p>2)&nbsp;数据存储成本</p><p>DW：通常采用ODS-DWD-DW-DM-ST五层架构，存储成本高</p><p>DL：通常采用原始数据和流计算，存储成本低</p><p>3)&nbsp;数据质量</p><p>DW：依赖数据治理规范，ELT过程损失数据准确度和精度，质量较低</p><p>DL：存储原始数据，不损失数据准确度和精度，质量高</p><p>5)&nbsp;面对用户和主要支撑应用类型</p><p>DW：联机分析(OLAP)和决策支持(DSS)</p><p>DL：物联网、人工智能和以智能制造、智慧城市等为代表的智能赋能应用</p><p>5．结合自身参与项目的实际状况，阐述数据湖技术在实际项目中的实施过程和应用效果。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 8,
      "belong_page": 1,
      "question_id": 303761,
      "question_title": "<p>试题三 &nbsp;论数据湖技术及其应用</p><p>近年来，随着移动互联网、物联网、工业互联网等技术的不断发展，企业级应用面临的数据规模不断增大，数据类型异常复杂。针对这一问题，业界提出“数据湖（Data Lake)”这一新型的企业数据管理技术。数据湖是一个存储企业各种原始数据的大型仓库，支持对任意规模的结构化、半结构化和非结构化数据进行集中式存储，数据按照原有结构进行存储，无须进行结构化处理；数据湖中的数据可供存取、处理、分析及传输，支撑大数据处理、实时分析、机器学习、数据可视化等多种应用，最终支持企业的智能决策过程。</p><p>&nbsp;</p><p>请围绕“数据湖技术及其应用”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你所参与管理或开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.详细阐述数据湖技术，并从主要数据来源、数据模式（Schema）转换时机、数据存储成本、数据质量、面对用户和主要支撑应用类型等5个方面详细论述数据湖技术与数据仓库技术的差异。</p><p>3.详细说明你所参与的软件开发项目中，如何采用数据湖技术进行企业数据管理，并说明具体实施过程及应用效果。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 303761,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>【试题三：论数据湖技术及其应用】写作要点</p><p>1．简要叙述所参与的大数据或数据湖系统项目，并明确指出在其中承担的职务和主要工作。</p><p>2．分析并阐述数据湖技术：</p><p>1)&nbsp;大数据的由来和表现。</p><p>2) 大数据5V特性</p><p>3) 大数据与数据仓库</p><p>4) 数据仓库的4个特性</p><p>3. 分析并阐述数据湖技术：</p><p>1) 数据仓库的缺点</p><p>2) 数据湖的技术特点</p><p>3) 数据湖的概念</p><p>4) 数据库的特性</p><p>4. 分析并对比数据湖(Data Lake, DL)与数据仓库(Data Warehouse, DW)</p><p>1) 数据来源</p><p>DW：从外部数据源获取</p><p>DL：既可从外部数据源获取，也可从外部应用或外部存储获取</p><p>1)&nbsp;数据模式（Schema）转换时机</p><p>DW：采用ETL</p><p>DL：既支持ETL，也支持ELT</p><p>2)&nbsp;数据存储成本</p><p>DW：通常采用ODS-DWD-DW-DM-ST五层架构，存储成本高</p><p>DL：通常采用原始数据和流计算，存储成本低</p><p>3)&nbsp;数据质量</p><p>DW：依赖数据治理规范，ELT过程损失数据准确度和精度，质量较低</p><p>DL：存储原始数据，不损失数据准确度和精度，质量高</p><p>5)&nbsp;面对用户和主要支撑应用类型</p><p>DW：联机分析(OLAP)和决策支持(DSS)</p><p>DL：物联网、人工智能和以智能制造、智慧城市等为代表的智能赋能应用</p><p>5．结合自身参与项目的实际状况，阐述数据湖技术在实际项目中的实施过程和应用效果。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176918.1303875
  },
  {
    "section_id": "1791",
    "section_name": "论文 - 论文",
    "question_id": 314783,
    "question_title": "<p>试题二 论系统安全架构设计及其应用</p><p><br/>随着社会信息化进程的加快，计算机及网络已经被各行各业广泛应用，信息安全问题也变得愈来愈重要。它具有机密性、完整性、可用性、可控性和不可抵赖性等特征。信息系统的安全保障是以风险和策略为基础，在信息系统的整个生命周期中提供包括技术、管理、人员和工程过程的整体安全，以保障信息的安全特征。</p><p><br/>请围绕“系统安全架构设计及其应用”论题，依次从以下三个方面进行论述。</p><p><br/>1.概要叙述你参与管理和开发的涉及安全架构设计的软件项目以及承担的主要工作。</p><p>2.请详细论述安全架构设计中鉴别框架和访问控制框架设计的内容，并论述鉴别和访问控制所面临的主要威胁有哪些，说明其危害。</p><p>3.请简要说明在你所参与项目的开发过程中，在鉴别框架和访问控制框架设计中存在的实际问题，以及是如何解决这些问题的。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "无"
    ],
    "analysis": "",
    "raw_data": {
      "index": 9,
      "belong_page": 1,
      "question_id": 314783,
      "question_title": "<p>试题二 论系统安全架构设计及其应用</p><p><br/>随着社会信息化进程的加快，计算机及网络已经被各行各业广泛应用，信息安全问题也变得愈来愈重要。它具有机密性、完整性、可用性、可控性和不可抵赖性等特征。信息系统的安全保障是以风险和策略为基础，在信息系统的整个生命周期中提供包括技术、管理、人员和工程过程的整体安全，以保障信息的安全特征。</p><p><br/>请围绕“系统安全架构设计及其应用”论题，依次从以下三个方面进行论述。</p><p><br/>1.概要叙述你参与管理和开发的涉及安全架构设计的软件项目以及承担的主要工作。</p><p>2.请详细论述安全架构设计中鉴别框架和访问控制框架设计的内容，并论述鉴别和访问控制所面临的主要威胁有哪些，说明其危害。</p><p>3.请简要说明在你所参与项目的开发过程中，在鉴别框架和访问控制框架设计中存在的实际问题，以及是如何解决这些问题的。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 314783,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "无"
      ],
      "option": null
    },
    "crawl_time": 1753176918.1303875
  },
  {
    "section_id": "1791",
    "section_name": "论文 - 论文",
    "question_id": 314786,
    "question_title": "<p>试题三 论企业集成平台的理解与应用</p><p><br/>企业集成平台（Enterprise Imtcgation Plaform,EIP)是支特企业信息集成的像环境，其主要功能是为企业中的数据、系统和应用等多种对象的协同行提供各种公共服务及运行时的支撑环境。企业集成平台能够根据业务模型的变化快速地进行信息系统的配置和调整，保证不同系统、应用、服务或操作人员之同顺畅地相互操作，进而提高企业适应市场变化的能力，使企业能够在复杂多变的市场环境中生存。</p><p><br/>请围绕“企业集成平台的理解与应用”论题，依次从以下三个方阅进行论述。</p><p><br/>1.概要叙述你参与管理和开发的、采用企业集成平台进行企业信息集成的软件项目以及你在其中所承担的主要工作。</p><p>2.请给出至少4种企业集成平台应具有的基本功能，并对这4种功能的内涵进行简要阐述。</p><p>3.具体阐述你参与管理和开发的项目是如何使用企业集成平台进行企业信息集成的，并围绕上述4种功能，详细论述在集成过程中遇到了哪些实际问题，是如何解决的。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>无</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 10,
      "belong_page": 1,
      "question_id": 314786,
      "question_title": "<p>试题三 论企业集成平台的理解与应用</p><p><br/>企业集成平台（Enterprise Imtcgation Plaform,EIP)是支特企业信息集成的像环境，其主要功能是为企业中的数据、系统和应用等多种对象的协同行提供各种公共服务及运行时的支撑环境。企业集成平台能够根据业务模型的变化快速地进行信息系统的配置和调整，保证不同系统、应用、服务或操作人员之同顺畅地相互操作，进而提高企业适应市场变化的能力，使企业能够在复杂多变的市场环境中生存。</p><p><br/>请围绕“企业集成平台的理解与应用”论题，依次从以下三个方阅进行论述。</p><p><br/>1.概要叙述你参与管理和开发的、采用企业集成平台进行企业信息集成的软件项目以及你在其中所承担的主要工作。</p><p>2.请给出至少4种企业集成平台应具有的基本功能，并对这4种功能的内涵进行简要阐述。</p><p>3.具体阐述你参与管理和开发的项目是如何使用企业集成平台进行企业信息集成的，并围绕上述4种功能，详细论述在集成过程中遇到了哪些实际问题，是如何解决的。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 314786,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>无</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176918.1303875
  },
  {
    "section_id": "1791",
    "section_name": "论文 - 论文",
    "question_id": 347290,
    "question_title": "论文提交注意事项：<p><br/></p><p>1、在进行论文写作（电子版本）练习时，建议先在word上完成并保存好，然后将其复制粘贴至以下作答框；</p><p>2、提交论文内容时，下列论文题目二选一，论文篇数控制在一篇（不要一次性提交多篇）。若提交多篇仅批阅第一篇；</p><p>3、介于学员较多，且论文篇幅较长，讲师仔细审阅一篇论文需要十几分钟，建议在正式提交之前，请先进行自检自查，例如论文思路、结构等内容是否合理，自检通过后再进行论文提交，所以尽量准备好再提交，再耐心等候讲师批改完毕；</p><p>4、考虑到经常出现在一天内需要讲师进行批阅的论文高达几十篇，因此论文提交后，可能无法第一时间得到回复，讲师会尽量在24小时内进行批阅（节假日回复时间可能会顺延），敬请谅解；</p><p>5、请复制粘贴在答案空白处，不要以附件形式提交，不要以附件形式提交，不要以附件形式提交；</p><p>6、论文题目注意不要超过限定的120分钟做题时间，避免误操作导致提交空卷！</p><p><br/></p><p>论文提交模板（直接在以下答题框作答，不要上传附件！！！提交附件不予批改！！！）：</p><p><br/></p><p>论文题目（居中 ）</p><p><br/></p><p>正文</p><p><br/></p><p>首行缩进两字符，区分段落</p><p><br/>字数：2500字左右</p><p>论文手写版（不作强制要求）：一定要将内容写在答题框里，再上传照片</p><p>PS：论文手写版主要用于老师检查字迹，附在答题框编辑好的论文内容后面即可，论文答题纸在“班内共享”里自行下载</p><br/><br/><p style=\"margin-top:20px\">试题一 论敏捷软件开发方法及其应用</p><p>&nbsp;</p><p>敏捷软件开发又称敏捷开发，是一种从1990年代开始逐渐引起广泛关注的一些新型软件开发方法，是一种应对快速变化的需求的一种软件开发能力。相对于“非敏捷”，更强调程序员团队与业务专家之间的紧密协作、面对面的沟通（认为比书面的文档更有效）、频繁交付新的软件版本、紧凑而自我组织型的团队、能够很好地适应需求变化的代码编写和团队组织方法，也更注重软件开发中人的作用。</p><p>请围绕“论敏捷软件开发方法及其应用”论题，依次从以下三个方面进行论述。</p><p>1. 概要叙述你所参与管理或开发的软件项目，以及你在其中所承担的主要工作。</p><p>2. 叙述敏捷开发的特点。</p><p>3. 阐述你在软件开发过程中遇到的问题、解决方法以及取得的应用效果。</p><p>&nbsp;</p><br/><p style=\"margin-top:20px\">试题二 论分布式架构设计及其实现</p><p>&nbsp;</p><p>相对于传统的集中式计算或集中式存储，分布式架构是将数据存储能力和计算能力分布到不同的服务器上，作为一个整体对外提供服务。分布式架构能解决集中式架构单点故障导致的服务中断，提高系统的可靠性和可用性，是互联网大厂普遍采用的一种架构模式。</p><p>请围绕“论分布式架构设计及其实现”论题，依次从以下三个方面进行论述。</p><p>1. 概要叙述你所参与管理或开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.&nbsp;阐述至少4种以上常见分布式技术，并对它们的内涵和适用范围进行简述。</p><p>3. 结合项目，具体阐述如何基于分布式架构进行软件设计和实现。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>无</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 11,
      "belong_page": 1,
      "question_id": 347290,
      "question_title": "论文提交注意事项：<p><br/></p><p>1、在进行论文写作（电子版本）练习时，建议先在word上完成并保存好，然后将其复制粘贴至以下作答框；</p><p>2、提交论文内容时，下列论文题目二选一，论文篇数控制在一篇（不要一次性提交多篇）。若提交多篇仅批阅第一篇；</p><p>3、介于学员较多，且论文篇幅较长，讲师仔细审阅一篇论文需要十几分钟，建议在正式提交之前，请先进行自检自查，例如论文思路、结构等内容是否合理，自检通过后再进行论文提交，所以尽量准备好再提交，再耐心等候讲师批改完毕；</p><p>4、考虑到经常出现在一天内需要讲师进行批阅的论文高达几十篇，因此论文提交后，可能无法第一时间得到回复，讲师会尽量在24小时内进行批阅（节假日回复时间可能会顺延），敬请谅解；</p><p>5、请复制粘贴在答案空白处，不要以附件形式提交，不要以附件形式提交，不要以附件形式提交；</p><p>6、论文题目注意不要超过限定的120分钟做题时间，避免误操作导致提交空卷！</p><p><br/></p><p>论文提交模板（直接在以下答题框作答，不要上传附件！！！提交附件不予批改！！！）：</p><p><br/></p><p>论文题目（居中 ）</p><p><br/></p><p>正文</p><p><br/></p><p>首行缩进两字符，区分段落</p><p><br/>字数：2500字左右</p><p>论文手写版（不作强制要求）：一定要将内容写在答题框里，再上传照片</p><p>PS：论文手写版主要用于老师检查字迹，附在答题框编辑好的论文内容后面即可，论文答题纸在“班内共享”里自行下载</p><br/><br/><p style=\"margin-top:20px\">试题一 论敏捷软件开发方法及其应用</p><p>&nbsp;</p><p>敏捷软件开发又称敏捷开发，是一种从1990年代开始逐渐引起广泛关注的一些新型软件开发方法，是一种应对快速变化的需求的一种软件开发能力。相对于“非敏捷”，更强调程序员团队与业务专家之间的紧密协作、面对面的沟通（认为比书面的文档更有效）、频繁交付新的软件版本、紧凑而自我组织型的团队、能够很好地适应需求变化的代码编写和团队组织方法，也更注重软件开发中人的作用。</p><p>请围绕“论敏捷软件开发方法及其应用”论题，依次从以下三个方面进行论述。</p><p>1. 概要叙述你所参与管理或开发的软件项目，以及你在其中所承担的主要工作。</p><p>2. 叙述敏捷开发的特点。</p><p>3. 阐述你在软件开发过程中遇到的问题、解决方法以及取得的应用效果。</p><p>&nbsp;</p><br/><p style=\"margin-top:20px\">试题二 论分布式架构设计及其实现</p><p>&nbsp;</p><p>相对于传统的集中式计算或集中式存储，分布式架构是将数据存储能力和计算能力分布到不同的服务器上，作为一个整体对外提供服务。分布式架构能解决集中式架构单点故障导致的服务中断，提高系统的可靠性和可用性，是互联网大厂普遍采用的一种架构模式。</p><p>请围绕“论分布式架构设计及其实现”论题，依次从以下三个方面进行论述。</p><p>1. 概要叙述你所参与管理或开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.&nbsp;阐述至少4种以上常见分布式技术，并对它们的内涵和适用范围进行简述。</p><p>3. 结合项目，具体阐述如何基于分布式架构进行软件设计和实现。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 347290,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>无</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176918.1303875
  },
  {
    "section_id": "1791",
    "section_name": "论文 - 论文",
    "question_id": 353006,
    "question_title": "论文提交注意事项：<p><br/></p><p>1、在进行论文写作（电子版本）练习时，建议先在word上完成并保存好，然后将其复制粘贴至以下作答框；</p><p>2、提交论文内容时，下列论文题目二选一，论文篇数控制在一篇（不要一次性提交多篇）。若提交多篇仅批阅第一篇；</p><p>3、介于学员较多，且论文篇幅较长，讲师仔细审阅一篇论文需要十几分钟，建议在正式提交之前，请先进行自检自查，例如论文思路、结构等内容是否合理，自检通过后再进行论文提交，所以尽量准备好再提交，再耐心等候讲师批改完毕；</p><p>4、考虑到经常出现在一天内需要讲师进行批阅的论文高达几十篇，因此论文提交后，可能无法第一时间得到回复，讲师会尽量在24小时内进行批阅（节假日回复时间可能会顺延），敬请谅解；</p><p>5、请复制粘贴在答案空白处，不要以附件形式提交，不要以附件形式提交，不要以附件形式提交；</p><p>6、论文题目注意不要超过限定的120分钟做题时间，避免误操作导致提交空卷！</p><p><br/></p><p>论文提交模板（直接在以下答题框作答，不要上传附件！！！提交附件不予批改！！！）：</p><p><br/></p><p>论文题目（居中 ）</p><p><br/></p><p>正文</p><p><br/></p><p>首行缩进两字符，区分段落</p><p><br/>字数：2500字左右</p><p>论文手写版（不作强制要求）：一定要将内容写在答题框里，再上传照片</p><p>PS：论文手写版主要用于老师检查字迹，附在答题框编辑好的论文内容后面即可，论文答题纸在“班内共享”里自行下载<br/><br/></p><p>下午试题II&nbsp;论文</p><p style=\"margin-top:20px\">试题一 论基于架构的软件设计方法及应用</p><p>基于架构的软件设计(Architecture-Based Software Design，ABSD.方法以构成软件架构的商业、质量和功能需求等要素来驱动整个软件开发过程。ABSD是一个自顶向下，递归细化的软件开发方法，它以软件系统功能的分解为基础，通过选择架构风格实现质量和商业需求，并强调在架构设计过程中使用软件架构模板。采用ABSD方法，设计活动可以从项目总体功能框架明确后就开始，因此该方法特别适用于开发一些不能预先决定所有需求的软件系统，如软件产品线系统或长生命周期系统等，也可为需求不能在短时间内明确的软件项目提供指导。</p><p>请围绕“基于架构的软件开发方法及应用”论题，依次从以下三个方面进行论述。</p><p>1．概要叙述你参与开发的、采用ABSD方法的软件项目以及你在其中所承担的主要工作。</p><p>2．结合项目实际，详细说明采用ABSD方法进行软件开发时，需要经历哪些开发阶段?每个阶段包括哪些主要活动?</p><p>3．阐述你在软件开发的过程中都遇到了哪些实际问题及解决方法。</p><p>&nbsp;</p><p style=\"margin-top:20px\">试题二&nbsp;论软件的高并发设计</p><p>随着互联网的蓬勃发展，互联网用户数量增长迅速，随着互联网Web2.0网站的兴起,传统系统设计在应对Web2.0网站，特别是超大规模和高并发的Web2.0纯动态SNS网站上已经显得力不从心，暴露了很多难以克服的问题。通过高并发的软件设计技术，可以保证系统能同时并行处理很多请求，有效地缓解以上问题，提供良好的业务服务能力。</p><p>请围绕“论软件的高并发设计”论题，依次从以下三个方面进行论述。</p><p>1．概要叙述你参与管理和开发的软件项目以及你在其中所担任的主要工作。</p><p>2．详细论述常见的高并发设计技术及其所包含的主要内容，并说明各自的主要适用场景。</p><p>3．结合你具体参与管理和开发的实际项目，说明具体采用哪些高并发设计技术并说明设计过程及其应用效果。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>详见老师评语</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 12,
      "belong_page": 1,
      "question_id": 353006,
      "question_title": "论文提交注意事项：<p><br/></p><p>1、在进行论文写作（电子版本）练习时，建议先在word上完成并保存好，然后将其复制粘贴至以下作答框；</p><p>2、提交论文内容时，下列论文题目二选一，论文篇数控制在一篇（不要一次性提交多篇）。若提交多篇仅批阅第一篇；</p><p>3、介于学员较多，且论文篇幅较长，讲师仔细审阅一篇论文需要十几分钟，建议在正式提交之前，请先进行自检自查，例如论文思路、结构等内容是否合理，自检通过后再进行论文提交，所以尽量准备好再提交，再耐心等候讲师批改完毕；</p><p>4、考虑到经常出现在一天内需要讲师进行批阅的论文高达几十篇，因此论文提交后，可能无法第一时间得到回复，讲师会尽量在24小时内进行批阅（节假日回复时间可能会顺延），敬请谅解；</p><p>5、请复制粘贴在答案空白处，不要以附件形式提交，不要以附件形式提交，不要以附件形式提交；</p><p>6、论文题目注意不要超过限定的120分钟做题时间，避免误操作导致提交空卷！</p><p><br/></p><p>论文提交模板（直接在以下答题框作答，不要上传附件！！！提交附件不予批改！！！）：</p><p><br/></p><p>论文题目（居中 ）</p><p><br/></p><p>正文</p><p><br/></p><p>首行缩进两字符，区分段落</p><p><br/>字数：2500字左右</p><p>论文手写版（不作强制要求）：一定要将内容写在答题框里，再上传照片</p><p>PS：论文手写版主要用于老师检查字迹，附在答题框编辑好的论文内容后面即可，论文答题纸在“班内共享”里自行下载<br/><br/></p><p>下午试题II&nbsp;论文</p><p style=\"margin-top:20px\">试题一 论基于架构的软件设计方法及应用</p><p>基于架构的软件设计(Architecture-Based Software Design，ABSD.方法以构成软件架构的商业、质量和功能需求等要素来驱动整个软件开发过程。ABSD是一个自顶向下，递归细化的软件开发方法，它以软件系统功能的分解为基础，通过选择架构风格实现质量和商业需求，并强调在架构设计过程中使用软件架构模板。采用ABSD方法，设计活动可以从项目总体功能框架明确后就开始，因此该方法特别适用于开发一些不能预先决定所有需求的软件系统，如软件产品线系统或长生命周期系统等，也可为需求不能在短时间内明确的软件项目提供指导。</p><p>请围绕“基于架构的软件开发方法及应用”论题，依次从以下三个方面进行论述。</p><p>1．概要叙述你参与开发的、采用ABSD方法的软件项目以及你在其中所承担的主要工作。</p><p>2．结合项目实际，详细说明采用ABSD方法进行软件开发时，需要经历哪些开发阶段?每个阶段包括哪些主要活动?</p><p>3．阐述你在软件开发的过程中都遇到了哪些实际问题及解决方法。</p><p>&nbsp;</p><p style=\"margin-top:20px\">试题二&nbsp;论软件的高并发设计</p><p>随着互联网的蓬勃发展，互联网用户数量增长迅速，随着互联网Web2.0网站的兴起,传统系统设计在应对Web2.0网站，特别是超大规模和高并发的Web2.0纯动态SNS网站上已经显得力不从心，暴露了很多难以克服的问题。通过高并发的软件设计技术，可以保证系统能同时并行处理很多请求，有效地缓解以上问题，提供良好的业务服务能力。</p><p>请围绕“论软件的高并发设计”论题，依次从以下三个方面进行论述。</p><p>1．概要叙述你参与管理和开发的软件项目以及你在其中所担任的主要工作。</p><p>2．详细论述常见的高并发设计技术及其所包含的主要内容，并说明各自的主要适用场景。</p><p>3．结合你具体参与管理和开发的实际项目，说明具体采用哪些高并发设计技术并说明设计过程及其应用效果。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 353006,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>详见老师评语</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176918.1303875
  },
  {
    "section_id": "1791",
    "section_name": "论文 - 论文",
    "question_id": 369117,
    "question_title": "<p style=\"text-align: left;\">论文提交注意事项：<br/><br/>1、在进行论文写作（电子版本）练习时，<span style=\"text-decoration: underline;\">建议先在word上完成并保存好，然后将其复制粘贴至以下作答框</span>；<br/><br/>2、提交论文内容时，论文篇数控制在一篇（不要一次性提交多篇）。<span style=\"text-decoration: underline;\">若提交多篇仅批阅第一篇</span>；<br/><br/>3、介于学员较多，且论文篇幅较长，讲师仔细审阅一篇论文需要十几分钟，建议在正式提交之前，请先进行自检自查，例如论文思路、结构等内容是否合理，自检通过后再进行论文提交，所以尽量准备好再提交，<span style=\"text-decoration: underline;\">再耐心等候讲师批改完毕</span>；<br/><br/>4、考虑到经常出现在一天内需要讲师进行批阅的论文高达几十篇，因此论文提交后，可能无法第一时间得到回复，讲师会尽量在48小时内进行批阅（节假日回复时间可能会顺延），敬请谅解；<br/><br/>5、请复制粘贴在答案空白处，<span style=\"text-decoration: underline;\">不要以附件形式提交，不要以附件形式提交，不要以附件形式提交</span>；<br/><br/><br/>论文提交模板（直接在以下答题框作答，不要上传附件！！！提交附件不予批改！！！）：<br/><br/>论文题目（居中&nbsp;）<br/><br/>正文<br/><br/>首行缩进两字符，区分段落<br/><br/><span style=\"text-decoration: underline;\">字数：2500字左右</span><br/><br/><br/><span style=\"text-decoration: underline;\">题目一：信息系统安全体系设计</span></p><p>信息安全是指保护信息系统、信息资源和信息用户的安全，防止信息被窃取、篡改、破坏或丢失的一系列措施和技术。信息安全的重要性在当今数字化时代变得越来越突出，随着信息技术的快速发展，信息安全问题日益严重，已经成为社会发展和经济发展的重要因素。当前，信息安全的现状已经呈现出安全威胁日益复杂，安全防护手段相对薄弱，安全意识需要加强，信息安全标准亟待完善，网络空间安全治理需要加强几个方面的特点。信息安全面临着严峻的挑战，需要采取综合的措施来保障信息系统的安全，加强安全防护技术研究和开发，提高用户安全意识，完善信息安全标准体系，加强网络空间安全治理，维护信息安全和网络空间的和平与稳定。<br/></p><p>&nbsp;</p><p>请围绕“信息系统安全体系设计”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你参与管理和开发的软件项目以及你在其中承担的主要工作，并阐述软件系统安全架构原因。</p><p>2.请阐述信息安全体系架构的分析和设计包含哪些方面。</p><p>3.请结合项目实际，具体阐述你在项目中设计实践，具体运用了哪些实现手段。<br/><br/><br/></p><p><span style=\"text-decoration: underline;\">题目二：论软件开发模型及应用</span></p><p>软件开发模型（Software Development Model）是指软件开发全部过程、活动和任务的结构框架。软件开发过程包括需求、设计、编码和测试等阶段，有时也包括维护阶段。软件开发模型能清晰、直观地表达软件开发全过程，明确规定了要完成的主要任务和活动，用来作为软件项目工作的基础。对于不同的软件项目，针对应用需求、项目复杂程度、规模等不同要求，可以采用不同的开发模型，并采用相应的人员组织策略、管理方法、工具和环境。<br/><br/>请围绕“软件开发模型及应用”论题，依次从以下三个方面进行论述。</p><p>1．简要叙述你参与的软件开发项目以及你所承担的主要工作。</p><p>2．列举你的项目使用的软件开发模型，并概要论述它（或它们）的特点。</p><p>3．根据你所参与的项目中使用的软件开发模型，具体阐述使用方法和实施效果。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>无</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 13,
      "belong_page": 1,
      "question_id": 369117,
      "question_title": "<p style=\"text-align: left;\">论文提交注意事项：<br/><br/>1、在进行论文写作（电子版本）练习时，<span style=\"text-decoration: underline;\">建议先在word上完成并保存好，然后将其复制粘贴至以下作答框</span>；<br/><br/>2、提交论文内容时，论文篇数控制在一篇（不要一次性提交多篇）。<span style=\"text-decoration: underline;\">若提交多篇仅批阅第一篇</span>；<br/><br/>3、介于学员较多，且论文篇幅较长，讲师仔细审阅一篇论文需要十几分钟，建议在正式提交之前，请先进行自检自查，例如论文思路、结构等内容是否合理，自检通过后再进行论文提交，所以尽量准备好再提交，<span style=\"text-decoration: underline;\">再耐心等候讲师批改完毕</span>；<br/><br/>4、考虑到经常出现在一天内需要讲师进行批阅的论文高达几十篇，因此论文提交后，可能无法第一时间得到回复，讲师会尽量在48小时内进行批阅（节假日回复时间可能会顺延），敬请谅解；<br/><br/>5、请复制粘贴在答案空白处，<span style=\"text-decoration: underline;\">不要以附件形式提交，不要以附件形式提交，不要以附件形式提交</span>；<br/><br/><br/>论文提交模板（直接在以下答题框作答，不要上传附件！！！提交附件不予批改！！！）：<br/><br/>论文题目（居中&nbsp;）<br/><br/>正文<br/><br/>首行缩进两字符，区分段落<br/><br/><span style=\"text-decoration: underline;\">字数：2500字左右</span><br/><br/><br/><span style=\"text-decoration: underline;\">题目一：信息系统安全体系设计</span></p><p>信息安全是指保护信息系统、信息资源和信息用户的安全，防止信息被窃取、篡改、破坏或丢失的一系列措施和技术。信息安全的重要性在当今数字化时代变得越来越突出，随着信息技术的快速发展，信息安全问题日益严重，已经成为社会发展和经济发展的重要因素。当前，信息安全的现状已经呈现出安全威胁日益复杂，安全防护手段相对薄弱，安全意识需要加强，信息安全标准亟待完善，网络空间安全治理需要加强几个方面的特点。信息安全面临着严峻的挑战，需要采取综合的措施来保障信息系统的安全，加强安全防护技术研究和开发，提高用户安全意识，完善信息安全标准体系，加强网络空间安全治理，维护信息安全和网络空间的和平与稳定。<br/></p><p>&nbsp;</p><p>请围绕“信息系统安全体系设计”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你参与管理和开发的软件项目以及你在其中承担的主要工作，并阐述软件系统安全架构原因。</p><p>2.请阐述信息安全体系架构的分析和设计包含哪些方面。</p><p>3.请结合项目实际，具体阐述你在项目中设计实践，具体运用了哪些实现手段。<br/><br/><br/></p><p><span style=\"text-decoration: underline;\">题目二：论软件开发模型及应用</span></p><p>软件开发模型（Software Development Model）是指软件开发全部过程、活动和任务的结构框架。软件开发过程包括需求、设计、编码和测试等阶段，有时也包括维护阶段。软件开发模型能清晰、直观地表达软件开发全过程，明确规定了要完成的主要任务和活动，用来作为软件项目工作的基础。对于不同的软件项目，针对应用需求、项目复杂程度、规模等不同要求，可以采用不同的开发模型，并采用相应的人员组织策略、管理方法、工具和环境。<br/><br/>请围绕“软件开发模型及应用”论题，依次从以下三个方面进行论述。</p><p>1．简要叙述你参与的软件开发项目以及你所承担的主要工作。</p><p>2．列举你的项目使用的软件开发模型，并概要论述它（或它们）的特点。</p><p>3．根据你所参与的项目中使用的软件开发模型，具体阐述使用方法和实施效果。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 369117,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>无</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176918.1303875
  },
  {
    "section_id": "1791",
    "section_name": "论文 - 论文",
    "question_id": 523330,
    "question_title": "<p style=\"margin-top:17px;margin-bottom:17px;line-height:173%\">试题一 论负载均衡设计</p><p>负载均衡设计是构建高可用、可扩展和高性能分布式系统的核心要素。其核心目标是将网络流量或计算任务智能地分发到多个后端服务器（或资源）上，避免单点过载，最大化资源利用率，提升用户体验和系统容错能力。</p><p>请围绕“论负载均衡设计”论题，依次从以下三个方面进行论述。</p><p>1.&nbsp;概要叙述你参与管理和开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.&nbsp;负载均衡设计包括静态负载均衡，动态负载均衡和基于场景的负载均衡，详细说明每一种负载均衡技术的特点。</p><p>3.&nbsp;结合你具体参与管理和开发的实际项目，说明采用了什么类型的负载均衡设计以及如何实现的，写出具体的过程。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>1、静态负载均衡：分配决策在系统运行前就已经确定，不依赖于系统当前的实时状态。静态负载均衡实现简单，请求分发模式是确定的，易于理解和调试，同时不需要持续收集服务器状态信息（CPU、内存、连接数等）。也因此对服务器性能波动（如CPU飙升、内存不足）、故障、网络拥塞、请求类型变化（如计算密集型还是I/O密集型）或流量突发完全不敏感。如果预设权重或规则与实际运行时状态不符（如某台服务器变慢或故障），静态负载均衡会导致负载分布不均，性能下降。</p><p>&nbsp;&nbsp;&nbsp;常见的静态负载均衡算法有：</p><p>①随机法:将请求随机分配到各个节点。由概率统计理论得知，随着客户端调用服务端的次数增多，其实际效果越来越接近于平均分配，也就是轮询的结果。在随机算法中还可以使用加权随机算法，即当一个新的客户端请求到达负载均衡器时，算法会根据预先为每台服务器配置的权重值，按权重比例随机地选择一台服务器。权重高的服务器被选中的概率更大。</p><p>②轮询法：将请求按顺序轮流地分配到每个节点上，不关心每个节点实际的连接数和当前的系统负载。在轮询算法上也可以增加权重，权重代表了该服务器的相对处理能力，让高权重的服务器在一个循环周期内被分配更多次请求。</p><p>③源地址哈希法：根据客户端的IP地址，通过哈希函数计算得到一个数值，用该数值对服务器节点数进行取模，得到的结果便是要访问节点序号。采用源地址哈希法进行负载均衡，同一IP地址的客户端，当后端服务器列表不变时，它每次都会落到到同一台服务器进行访问。但是如果某个节点出现故障，会导致这个节点上的客户端无法使用，并且当某一用户成为热点用户，那么会有巨大的流量涌向这个节点，起不到负载均衡的作用。</p><p>④目标地址哈希算法：对请求的目标地址（如URL或域名）哈希，相同目标请求固定分配到同一服务器。<br/>⑤一致性哈希算法：构建虚拟哈希环，将服务器和请求进行哈希值计算，得到的结果映射到环上，将请求分配给环上顺时针遇到的最近服务器的节点上。一致性哈希算法的服务器节点哈希后可能集中在环的某一段，导致负载倾斜。例如，大部分请求顺时针都找到同一个节点，该节点压力巨大，其他节点则处于空闲状态。为了解决这个问题，可以采用带虚节点的一致性哈希算法。该算法的原理是不再将一台物理服务器映射到环上的一个点，而是为每台物理服务器创建多个副本（例如 100 个，1000 个，具体可配置），这些副本称为虚拟节点。每个虚拟节点拥有自己的唯一标识（如 &quot;ServerA-V1&quot;, &quot;ServerA-V2&quot;, ..., &quot;ServerB-V1&quot;, ...），并对这些标识进行哈希计算，将它们分布到哈希环上。物理服务器负责处理映射到其所有虚拟节点上的请求。就等于是这些虚拟节点在环上“铺开”，可以达到请求的均匀分配。</p><p>2、动态负载均衡：基于系统当前的实时状态信息与收集到的指标动态调整请求的分配规则。动态负载均衡能自动感知并响应服务器性能变化、故障、网络波动和流量变化，理论上可以将请求更智能地导向当前最合适的（负载最轻、响应最快、最健康）服务器，优化资源利用和用户体验。动态负载均衡实现更复杂，需要在负载均衡器和服务器（或监控代理）之间建立机制来持续收集、传输和处理状态信息。</p><p>&nbsp;&nbsp;&nbsp;常用的动态负载均衡算法有：</p><p>①最小连接数法:根据每个节点当前的连接情况，动态地选取其中当前积压连接数最少的一个节点处理当前请求，尽可能地提高后端服务的利用效率，将请求合理地分流到每一台服务器。</p><p>②响应时间算法：根据请求的响应时间，来动态调整每个节点的权重，将响应速度快的服务节点分配更多的请求，响应速度慢的服务节点分配更少的请求，俗称能者多劳，扶贫救弱。</p><p>③基于资源利用率的动态加权算法：综合多项服务器指标（ CPU、内存、网络I/O、连接数等）动态计算权重，按权重分配请求。</p><p>④资源利用率最低优先算法：选择综合资源利用率最低（CPU+内存+I/O等）的服务器分配请求。</p><p>3、基于场景的负载均衡：根据预先定义的、可识别的特定场景或条件，切换使用不同的负载均衡策略（可能是静态的或动态的）。它是在静态或动态策略之上增加了一层策略选择逻辑。比如，时间（工作日/周末、白天/夜晚）、流量特征（请求类型：登录、支付、查询；流量来源：移动端/Web端/API客户端；地理位置）、业务活动（促销活动、秒杀）、系统事件（服务器维护窗口、故障转移状态）、性能指标阈值（整体CPU超过80%）等场景识别因子，将每个场景关联一个最适合该场景的负载均衡策略。基于场景的负载均衡能够针对不同的业务或技术场景应用最优的负载均衡策略，实现更精细化的优化。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 14,
      "belong_page": 1,
      "question_id": 523330,
      "question_title": "<p style=\"margin-top:17px;margin-bottom:17px;line-height:173%\">试题一 论负载均衡设计</p><p>负载均衡设计是构建高可用、可扩展和高性能分布式系统的核心要素。其核心目标是将网络流量或计算任务智能地分发到多个后端服务器（或资源）上，避免单点过载，最大化资源利用率，提升用户体验和系统容错能力。</p><p>请围绕“论负载均衡设计”论题，依次从以下三个方面进行论述。</p><p>1.&nbsp;概要叙述你参与管理和开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.&nbsp;负载均衡设计包括静态负载均衡，动态负载均衡和基于场景的负载均衡，详细说明每一种负载均衡技术的特点。</p><p>3.&nbsp;结合你具体参与管理和开发的实际项目，说明采用了什么类型的负载均衡设计以及如何实现的，写出具体的过程。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 523330,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>1、静态负载均衡：分配决策在系统运行前就已经确定，不依赖于系统当前的实时状态。静态负载均衡实现简单，请求分发模式是确定的，易于理解和调试，同时不需要持续收集服务器状态信息（CPU、内存、连接数等）。也因此对服务器性能波动（如CPU飙升、内存不足）、故障、网络拥塞、请求类型变化（如计算密集型还是I/O密集型）或流量突发完全不敏感。如果预设权重或规则与实际运行时状态不符（如某台服务器变慢或故障），静态负载均衡会导致负载分布不均，性能下降。</p><p>&nbsp;&nbsp;&nbsp;常见的静态负载均衡算法有：</p><p>①随机法:将请求随机分配到各个节点。由概率统计理论得知，随着客户端调用服务端的次数增多，其实际效果越来越接近于平均分配，也就是轮询的结果。在随机算法中还可以使用加权随机算法，即当一个新的客户端请求到达负载均衡器时，算法会根据预先为每台服务器配置的权重值，按权重比例随机地选择一台服务器。权重高的服务器被选中的概率更大。</p><p>②轮询法：将请求按顺序轮流地分配到每个节点上，不关心每个节点实际的连接数和当前的系统负载。在轮询算法上也可以增加权重，权重代表了该服务器的相对处理能力，让高权重的服务器在一个循环周期内被分配更多次请求。</p><p>③源地址哈希法：根据客户端的IP地址，通过哈希函数计算得到一个数值，用该数值对服务器节点数进行取模，得到的结果便是要访问节点序号。采用源地址哈希法进行负载均衡，同一IP地址的客户端，当后端服务器列表不变时，它每次都会落到到同一台服务器进行访问。但是如果某个节点出现故障，会导致这个节点上的客户端无法使用，并且当某一用户成为热点用户，那么会有巨大的流量涌向这个节点，起不到负载均衡的作用。</p><p>④目标地址哈希算法：对请求的目标地址（如URL或域名）哈希，相同目标请求固定分配到同一服务器。<br/>⑤一致性哈希算法：构建虚拟哈希环，将服务器和请求进行哈希值计算，得到的结果映射到环上，将请求分配给环上顺时针遇到的最近服务器的节点上。一致性哈希算法的服务器节点哈希后可能集中在环的某一段，导致负载倾斜。例如，大部分请求顺时针都找到同一个节点，该节点压力巨大，其他节点则处于空闲状态。为了解决这个问题，可以采用带虚节点的一致性哈希算法。该算法的原理是不再将一台物理服务器映射到环上的一个点，而是为每台物理服务器创建多个副本（例如 100 个，1000 个，具体可配置），这些副本称为虚拟节点。每个虚拟节点拥有自己的唯一标识（如 &quot;ServerA-V1&quot;, &quot;ServerA-V2&quot;, ..., &quot;ServerB-V1&quot;, ...），并对这些标识进行哈希计算，将它们分布到哈希环上。物理服务器负责处理映射到其所有虚拟节点上的请求。就等于是这些虚拟节点在环上“铺开”，可以达到请求的均匀分配。</p><p>2、动态负载均衡：基于系统当前的实时状态信息与收集到的指标动态调整请求的分配规则。动态负载均衡能自动感知并响应服务器性能变化、故障、网络波动和流量变化，理论上可以将请求更智能地导向当前最合适的（负载最轻、响应最快、最健康）服务器，优化资源利用和用户体验。动态负载均衡实现更复杂，需要在负载均衡器和服务器（或监控代理）之间建立机制来持续收集、传输和处理状态信息。</p><p>&nbsp;&nbsp;&nbsp;常用的动态负载均衡算法有：</p><p>①最小连接数法:根据每个节点当前的连接情况，动态地选取其中当前积压连接数最少的一个节点处理当前请求，尽可能地提高后端服务的利用效率，将请求合理地分流到每一台服务器。</p><p>②响应时间算法：根据请求的响应时间，来动态调整每个节点的权重，将响应速度快的服务节点分配更多的请求，响应速度慢的服务节点分配更少的请求，俗称能者多劳，扶贫救弱。</p><p>③基于资源利用率的动态加权算法：综合多项服务器指标（ CPU、内存、网络I/O、连接数等）动态计算权重，按权重分配请求。</p><p>④资源利用率最低优先算法：选择综合资源利用率最低（CPU+内存+I/O等）的服务器分配请求。</p><p>3、基于场景的负载均衡：根据预先定义的、可识别的特定场景或条件，切换使用不同的负载均衡策略（可能是静态的或动态的）。它是在静态或动态策略之上增加了一层策略选择逻辑。比如，时间（工作日/周末、白天/夜晚）、流量特征（请求类型：登录、支付、查询；流量来源：移动端/Web端/API客户端；地理位置）、业务活动（促销活动、秒杀）、系统事件（服务器维护窗口、故障转移状态）、性能指标阈值（整体CPU超过80%）等场景识别因子，将每个场景关联一个最适合该场景的负载均衡策略。基于场景的负载均衡能够针对不同的业务或技术场景应用最优的负载均衡策略，实现更精细化的优化。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176918.1303875
  },
  {
    "section_id": "1791",
    "section_name": "论文 - 论文",
    "question_id": 523331,
    "question_title": "<p style=\"margin-top:17px;margin-bottom:17px;line-height:173%\">试题二 论软件测试</p><p>在软件测试领域，AI技术的融入正引发一场方法论与工具链的深刻变革。传统测试依赖人工设计用例、执行脚本和分析结果，而AI通过模拟人类思维、学习历史数据、预测潜在风险，将测试过程从“经验驱动”推向“数据驱动”，最终实现“智能驱动”。</p><p>请围绕“论软件测试”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你参与管理和开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.描述AI测试用例生成的基本处理流程，说明各个步骤的基本内容。</p><p>3.结合你具体参与管理和开发的实际项目，说明是如何利用AI进行软件测试的，写出具体的过程。</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>AI测试用例生成是结合大模型、程序分析与业务理解的前沿实践，旨在提升测试效率与覆盖率。AI测试的基本流程有：</p><p>1、目标定义与需求分析分析阶段</p><p>明确本次生成测试用例的具体目标（如：功能覆盖、边界测试、异常测试、性能测试、安全测试等），并深入理解被测系统的需求规格说明书、设计文档、用户故事、API文档等。在此过程中，需要系统性地识别出所有待测的核心功能点、相关的输入参数及其约束条件、预期的输出结果、影响功能执行的关键系统状态、以及必须遵循的业务规则等。同时，界定本次测试的范围，并依据风险、重要性等因素确定不同功能或模块的测试优先级，明确哪些是重点测试对象。此外，根据项目需求和测试目标，也可以预先定义期望达成的测试覆盖率指标，如语句覆盖、分支覆盖或修正条件/判定覆盖等，为后续AI生成和评估提供量化基准。</p><p>2、准备阶段</p><p>收集并提供给AI模型所需的数据，包括：需求文档、设计文档、源代码、历史测试数据等。对收集的数据进行清洗、转换、标准化、特征提取等操作，使其适合AI模型处理。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;3、AI模型选择与训练/配置</p><p>根据测试目标、可用数据和资源选择合适的AI技术，具体可以使用：</p><p>①机器学习：</p><p>l&nbsp;监督学习： 利用历史测试用例和缺陷数据训练模型学习有效测试模式。</p><p>l&nbsp;无监督学习：利用聚类分析识别相似功能模块或异常输入模式。</p><p>l&nbsp;强化学习： 模型通过与模拟环境交互学习生成能发现缺陷的测试用例。</p><p>②自然语言处理：理解需求文档、用户故事，提取测试场景和条件。</p><p>③大型语言模型：利用其强大的文本生成和理解能力，直接根据需求描述生成自然语言描述的测试用例或测试步骤。</p><p>④符号执行/模糊测试：结合AI指导路径探索，提升高危路径探索效率或生成更有效的模糊输入以暴露深层次漏洞。</p><p>⑤遗传算法/搜索算法：用于优化测试输入组合或寻找满足特定覆盖目标的路径。</p><p>4、测试用例生成</p><p>运行配置好的AI模型，模型根据输入数据（需求、代码、历史数据等）、学习到的知识/规则以及设定的目标（如覆盖特定分支、探索边界值），自动生成下列内容：</p><p>l&nbsp;测试输入数据： 具体的参数值、配置、文件内容等。</p><p>l&nbsp;预期输出/结果： 模型基于需求或规格推断出的预期行为。</p><p>&nbsp;</p><p>l&nbsp;前置条件： 执行测试前系统所需的状态。</p><p>l&nbsp;后置条件： 测试执行后预期的系统状态变化。</p><p>l&nbsp;测试步骤： 如何执行测试的操作序列。</p><p>l&nbsp;测试预言： 如何判断测试通过或失败的依据。</p><p>5、测试用例评估与筛选</p><p>进行测试用例的有效性检查、覆盖度分析、多样性分析、优先级排序以及对于关键或复杂的用例，通常还需要测试工程师进行审查和确认。</p><p>6、测试用例输出与集成</p><p>将筛选、优化、确认后的测试用例以标准化格式输出，集成到现有的测试管理工具（如Jira, TestRail, Xray）或测试自动化框架（如Selenium, Cypress, Appium, JMeter）中。这个过程可能需要将自然语言描述的用例转换为可执行的脚本（如果AI未直接生成脚本）。之后记录生成元数据（如使用的模型、输入源、生成时间）。本阶段的主要目的是将AI生成的用例无缝融入实际的测试执行流程。</p><p>7、执行、反馈与持续改进</p><p>运行集成后的测试用例（手动或自动化执行），记录测试执行结果（通过/失败）、发现的缺陷、代码覆盖率（实际执行后）、执行时间等。将测试执行结果（特别是发现的缺陷）和实际覆盖率数据作为新的输入数据，反馈给AI模型。将人工审查结果（对生成用例的修改、确认或拒绝）也作为反馈。根据反馈数据重新训练或微调AI模型，使其学习到哪些模式更有效，哪些无效，从而调整生成策略、参数或提示词并改进数据预处理流程。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 15,
      "belong_page": 1,
      "question_id": 523331,
      "question_title": "<p style=\"margin-top:17px;margin-bottom:17px;line-height:173%\">试题二 论软件测试</p><p>在软件测试领域，AI技术的融入正引发一场方法论与工具链的深刻变革。传统测试依赖人工设计用例、执行脚本和分析结果，而AI通过模拟人类思维、学习历史数据、预测潜在风险，将测试过程从“经验驱动”推向“数据驱动”，最终实现“智能驱动”。</p><p>请围绕“论软件测试”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你参与管理和开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.描述AI测试用例生成的基本处理流程，说明各个步骤的基本内容。</p><p>3.结合你具体参与管理和开发的实际项目，说明是如何利用AI进行软件测试的，写出具体的过程。</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 523331,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>AI测试用例生成是结合大模型、程序分析与业务理解的前沿实践，旨在提升测试效率与覆盖率。AI测试的基本流程有：</p><p>1、目标定义与需求分析分析阶段</p><p>明确本次生成测试用例的具体目标（如：功能覆盖、边界测试、异常测试、性能测试、安全测试等），并深入理解被测系统的需求规格说明书、设计文档、用户故事、API文档等。在此过程中，需要系统性地识别出所有待测的核心功能点、相关的输入参数及其约束条件、预期的输出结果、影响功能执行的关键系统状态、以及必须遵循的业务规则等。同时，界定本次测试的范围，并依据风险、重要性等因素确定不同功能或模块的测试优先级，明确哪些是重点测试对象。此外，根据项目需求和测试目标，也可以预先定义期望达成的测试覆盖率指标，如语句覆盖、分支覆盖或修正条件/判定覆盖等，为后续AI生成和评估提供量化基准。</p><p>2、准备阶段</p><p>收集并提供给AI模型所需的数据，包括：需求文档、设计文档、源代码、历史测试数据等。对收集的数据进行清洗、转换、标准化、特征提取等操作，使其适合AI模型处理。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;3、AI模型选择与训练/配置</p><p>根据测试目标、可用数据和资源选择合适的AI技术，具体可以使用：</p><p>①机器学习：</p><p>l&nbsp;监督学习： 利用历史测试用例和缺陷数据训练模型学习有效测试模式。</p><p>l&nbsp;无监督学习：利用聚类分析识别相似功能模块或异常输入模式。</p><p>l&nbsp;强化学习： 模型通过与模拟环境交互学习生成能发现缺陷的测试用例。</p><p>②自然语言处理：理解需求文档、用户故事，提取测试场景和条件。</p><p>③大型语言模型：利用其强大的文本生成和理解能力，直接根据需求描述生成自然语言描述的测试用例或测试步骤。</p><p>④符号执行/模糊测试：结合AI指导路径探索，提升高危路径探索效率或生成更有效的模糊输入以暴露深层次漏洞。</p><p>⑤遗传算法/搜索算法：用于优化测试输入组合或寻找满足特定覆盖目标的路径。</p><p>4、测试用例生成</p><p>运行配置好的AI模型，模型根据输入数据（需求、代码、历史数据等）、学习到的知识/规则以及设定的目标（如覆盖特定分支、探索边界值），自动生成下列内容：</p><p>l&nbsp;测试输入数据： 具体的参数值、配置、文件内容等。</p><p>l&nbsp;预期输出/结果： 模型基于需求或规格推断出的预期行为。</p><p>&nbsp;</p><p>l&nbsp;前置条件： 执行测试前系统所需的状态。</p><p>l&nbsp;后置条件： 测试执行后预期的系统状态变化。</p><p>l&nbsp;测试步骤： 如何执行测试的操作序列。</p><p>l&nbsp;测试预言： 如何判断测试通过或失败的依据。</p><p>5、测试用例评估与筛选</p><p>进行测试用例的有效性检查、覆盖度分析、多样性分析、优先级排序以及对于关键或复杂的用例，通常还需要测试工程师进行审查和确认。</p><p>6、测试用例输出与集成</p><p>将筛选、优化、确认后的测试用例以标准化格式输出，集成到现有的测试管理工具（如Jira, TestRail, Xray）或测试自动化框架（如Selenium, Cypress, Appium, JMeter）中。这个过程可能需要将自然语言描述的用例转换为可执行的脚本（如果AI未直接生成脚本）。之后记录生成元数据（如使用的模型、输入源、生成时间）。本阶段的主要目的是将AI生成的用例无缝融入实际的测试执行流程。</p><p>7、执行、反馈与持续改进</p><p>运行集成后的测试用例（手动或自动化执行），记录测试执行结果（通过/失败）、发现的缺陷、代码覆盖率（实际执行后）、执行时间等。将测试执行结果（特别是发现的缺陷）和实际覆盖率数据作为新的输入数据，反馈给AI模型。将人工审查结果（对生成用例的修改、确认或拒绝）也作为反馈。根据反馈数据重新训练或微调AI模型，使其学习到哪些模式更有效，哪些无效，从而调整生成策略、参数或提示词并改进数据预处理流程。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176918.1303875
  },
  {
    "section_id": "1791",
    "section_name": "论文 - 论文",
    "question_id": 523332,
    "question_title": "<p style=\"margin-top:17px;margin-bottom:17px;line-height:173%\">试题三 论事件驱动的架构</p><p>事件驱动架构（Event-Driven Architecture, EDA） 是一种以事件的产生、检测、消费和响应为核心的分布式系统设计范式。其核心思想是组件通过异步事件通信解耦，实现高扩展性、实时性和灵活性。</p><p>请围绕“论事件驱动的架构”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你参与管理和开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.详细论述事件驱动架构的概念和特点</p><p>3.结合你具体参与管理和开发的实际项目，说明是如何利用事件驱动的架构进行分析、设计、开发的全过程的</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>事件驱动的架构本质是通过事件的产生、发布和消费来实现组件间的解耦与协作。核心概念：</p><p>1、事件： 代表系统中发生的、对业务有意义的状态变化或发生的事情。例如：“用户下单”、“库存低于阈值”、“支付成功”、“温度传感器读数超标”、“文件上传完成”等。</p><p>2、事件生产者/发布者： 负责创建和发布事件到事件通道的组件。生产者不知道也不关心谁会处理这个事件。</p><p>3、事件通道/代理： 充当生产者与消费者之间的中介，负责事件的传递、存储（如有必要）、路由和排序。</p><p>4、事件消费者/订阅者： 监听事件通道，接收感兴趣的事件，并触发相应的业务逻辑处理组件。消费者不知道事件是谁产生的。</p><p>事件驱动架构的特点：</p><p>1、松耦合：生产者（发出事件）和消费者（处理事件）彼此独立，互相不知道对方的存在以及做的处理。这种松耦合使得系统更易于扩展、修改和维护。可以独立添加、移除或更新生产者和消费者，只要它们遵守事件契约（格式和含义），对系统其他部分影响最小。</p><p>2、异步通信：事件的生产和消费通常是异步进行的。生产者发布事件后无需等待消费者立即处理完成，可以继续执行其他任务。消费者按照自己的节奏和能力处理事件。这显著提高了系统的响应性（生产者快速响应）和吞吐量（消费者可以并行处理积压的事件）。同时，它也能更好地处理突发流量和消费者暂时不可用的情况（事件可以存储在通道中等待稍后处理）。</p><p>3、弹性和容错性：异步特性和事件通道的缓冲能力，使得消费者可以暂时离线进行维护或遇到故障，事件会在通道中堆积，待消费者恢复后继续处理。并且在消费者处理失败时，通常可以重试处理事件。</p><p>4、更好的可追溯性：事件表示过去发生的事实是不可变的。通过记录所有事件，可以构建一个完整的事件日志。通过事件日志实现事件溯源模式，该模式将应用状态存储为一系列事件，可以随时重建历史状态或进行回放分析。这提供了强大的审计追踪能力，可以精确知道系统状态是如何一步步演变的。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 16,
      "belong_page": 1,
      "question_id": 523332,
      "question_title": "<p style=\"margin-top:17px;margin-bottom:17px;line-height:173%\">试题三 论事件驱动的架构</p><p>事件驱动架构（Event-Driven Architecture, EDA） 是一种以事件的产生、检测、消费和响应为核心的分布式系统设计范式。其核心思想是组件通过异步事件通信解耦，实现高扩展性、实时性和灵活性。</p><p>请围绕“论事件驱动的架构”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你参与管理和开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.详细论述事件驱动架构的概念和特点</p><p>3.结合你具体参与管理和开发的实际项目，说明是如何利用事件驱动的架构进行分析、设计、开发的全过程的</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 523332,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>事件驱动的架构本质是通过事件的产生、发布和消费来实现组件间的解耦与协作。核心概念：</p><p>1、事件： 代表系统中发生的、对业务有意义的状态变化或发生的事情。例如：“用户下单”、“库存低于阈值”、“支付成功”、“温度传感器读数超标”、“文件上传完成”等。</p><p>2、事件生产者/发布者： 负责创建和发布事件到事件通道的组件。生产者不知道也不关心谁会处理这个事件。</p><p>3、事件通道/代理： 充当生产者与消费者之间的中介，负责事件的传递、存储（如有必要）、路由和排序。</p><p>4、事件消费者/订阅者： 监听事件通道，接收感兴趣的事件，并触发相应的业务逻辑处理组件。消费者不知道事件是谁产生的。</p><p>事件驱动架构的特点：</p><p>1、松耦合：生产者（发出事件）和消费者（处理事件）彼此独立，互相不知道对方的存在以及做的处理。这种松耦合使得系统更易于扩展、修改和维护。可以独立添加、移除或更新生产者和消费者，只要它们遵守事件契约（格式和含义），对系统其他部分影响最小。</p><p>2、异步通信：事件的生产和消费通常是异步进行的。生产者发布事件后无需等待消费者立即处理完成，可以继续执行其他任务。消费者按照自己的节奏和能力处理事件。这显著提高了系统的响应性（生产者快速响应）和吞吐量（消费者可以并行处理积压的事件）。同时，它也能更好地处理突发流量和消费者暂时不可用的情况（事件可以存储在通道中等待稍后处理）。</p><p>3、弹性和容错性：异步特性和事件通道的缓冲能力，使得消费者可以暂时离线进行维护或遇到故障，事件会在通道中堆积，待消费者恢复后继续处理。并且在消费者处理失败时，通常可以重试处理事件。</p><p>4、更好的可追溯性：事件表示过去发生的事实是不可变的。通过记录所有事件，可以构建一个完整的事件日志。通过事件日志实现事件溯源模式，该模式将应用状态存储为一系列事件，可以随时重建历史状态或进行回放分析。这提供了强大的审计追踪能力，可以精确知道系统状态是如何一步步演变的。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176918.1303875
  },
  {
    "section_id": "1791",
    "section_name": "论文 - 论文",
    "question_id": 523333,
    "question_title": "<p style=\"margin-top:17px;margin-bottom:17px;line-height:173%\">试题四 论多模型数据源</p><p>多模型数据源是指能够同时支持多种数据模型（如文档、图、键值、关系型、时序等）的统一数据平台或数据库系统。它打破了传统单一模型数据库的局限，允许开发者在同一个系统中灵活存储、查询和处理不同类型的数据，无需在多个专用数据库间进行复杂的数据同步和集成。</p><p>&nbsp;请围绕“论多模型数据源”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你参与管理和开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.详细论述多模型数据库的特点</p><p>3.结合你具体参与管理和开发的实际项目，说明是如何使用多模型数据库的</p>",
    "question_type": 5,
    "answer_type": 5,
    "option": null,
    "answer": [
      "<p>多模型数据库是指一个数据库引擎底层统一存储数据，但向上提供多种数据模型接口和查询语言。用户可以根据应用需求，选择最合适的模型来操作同一份数据。多模型数据库常用的数据模型有：</p><p>l&nbsp;文档模型： 存储JSON、XML、BSON等文档。</p><p>l&nbsp;图模型： 存储节点、边和属性，用于表示复杂关系。</p><p>l&nbsp;键值模型： 存储简单的键值对。</p><p>l&nbsp;宽列模型： 存储面向列的数据。</p><p>l&nbsp;关系模型： 支持SQL查询和表结构。</p><p>l&nbsp;时序模型： 优化存储和查询时间序列数据。</p><p>l&nbsp;搜索模型： 提供全文搜索能力。</p><p>&nbsp;多模型数据库具有的特点包括：</p><p>l&nbsp;灵活性： 适应不同数据结构和访问模式的需求，无需为每种模型部署单独的数据库。</p><p>l&nbsp;简化架构： 减少需要管理和集成的系统数量。</p><p>l&nbsp;降低复杂性： 应用程序可以使用单一API或查询语言访问不同类型的数据。</p><p>l&nbsp;性能优化： 针对特定查询模式使用最合适的模型。</p><p>一致性： 在单一事务中操作不同模型的数据。</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 17,
      "belong_page": 1,
      "question_id": 523333,
      "question_title": "<p style=\"margin-top:17px;margin-bottom:17px;line-height:173%\">试题四 论多模型数据源</p><p>多模型数据源是指能够同时支持多种数据模型（如文档、图、键值、关系型、时序等）的统一数据平台或数据库系统。它打破了传统单一模型数据库的局限，允许开发者在同一个系统中灵活存储、查询和处理不同类型的数据，无需在多个专用数据库间进行复杂的数据同步和集成。</p><p>&nbsp;请围绕“论多模型数据源”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你参与管理和开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.详细论述多模型数据库的特点</p><p>3.结合你具体参与管理和开发的实际项目，说明是如何使用多模型数据库的</p>",
      "question_type": 5,
      "answer_type": 5,
      "show_type_name": "问答题",
      "new_parent_id": 523333,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>多模型数据库是指一个数据库引擎底层统一存储数据，但向上提供多种数据模型接口和查询语言。用户可以根据应用需求，选择最合适的模型来操作同一份数据。多模型数据库常用的数据模型有：</p><p>l&nbsp;文档模型： 存储JSON、XML、BSON等文档。</p><p>l&nbsp;图模型： 存储节点、边和属性，用于表示复杂关系。</p><p>l&nbsp;键值模型： 存储简单的键值对。</p><p>l&nbsp;宽列模型： 存储面向列的数据。</p><p>l&nbsp;关系模型： 支持SQL查询和表结构。</p><p>l&nbsp;时序模型： 优化存储和查询时间序列数据。</p><p>l&nbsp;搜索模型： 提供全文搜索能力。</p><p>&nbsp;多模型数据库具有的特点包括：</p><p>l&nbsp;灵活性： 适应不同数据结构和访问模式的需求，无需为每种模型部署单独的数据库。</p><p>l&nbsp;简化架构： 减少需要管理和集成的系统数量。</p><p>l&nbsp;降低复杂性： 应用程序可以使用单一API或查询语言访问不同类型的数据。</p><p>l&nbsp;性能优化： 针对特定查询模式使用最合适的模型。</p><p>一致性： 在单一事务中操作不同模型的数据。</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176918.1303875
  },
  {
    "section_id": "1791",
    "section_name": "论文 - 论文",
    "question_id": 491581,
    "question_title": "<p>论文提交注意事项：<br/><br/>1、在进行论文写作（电子版本）练习时，<span style=\"text-decoration: underline;\">建议先在word上完成并保存好，然后将其复制粘贴至以下作答框</span>；<br/><br/>2、提交论文内容时，论文篇数控制在一篇（不要一次性提交多篇）。<span style=\"text-decoration: underline;\">若提交多篇仅批阅第一篇</span>；<br/><br/>3、介于学员较多，且论文篇幅较长，讲师仔细审阅一篇论文需要十几分钟，建议在正式提交之前，请先进行自检自查，例如论文思路、结构等内容是否合理，自检通过后再进行论文提交，所以尽量准备好再提交，再耐心等候讲师批改完毕；<br/><br/>4、考虑到经常出现在一天内需要讲师进行批阅的论文高达几十篇，因此论文提交后，可能无法第一时间得到回复，讲师会尽量在48小时内进行批阅（节假日回复时间可能会顺延），敬请谅解；<br/><br/>5、请复制粘贴在答案空白处，<span style=\"text-decoration: underline;\">不要以附件形式提交，不要以附件形式提交，不要以附件形式提交</span>；<br/><br/><br/>论文提交模板（直接在以下答题框作答，不要上传附件！！！提交附件不予批改！！！）：<br/><br/>论文题目（居中&nbsp;）<br/><br/>正文<br/><br/>首行缩进两字符，区分段落<br/><br/>字数：2500字左右<br/><br/><br/>试题一： &nbsp;论软件体系结构的演化</p><p>软件体系结构的演化是在构件开发过程中或软件开发完毕投入运行后，由于用户需求发生变化，就必须相应地修改原有软件体系结构，以满足新的变化的软件需求的过程。体系结构的演化是一个复杂的、难以管理的问题。</p><p>请围绕“论软件体系结构的演化”论题，依次从以下三个方面进行论述。</p><p>&nbsp;</p><p>1.概要叙述你参与管理和开发的软件项目以及你在其中所承担的主要工作。</p><p>2.简要论述软件体系结构演化的常见原则有哪些（3-5个），请介绍其概念和理论。</p><p>3.具体阐述你参与管理和开发的项目是如何应用这些原则的，应用的效果如何。<br/><br/></p><p>试题二： &nbsp;论基于架构的软件设计方法（ABSD）及应用</p><p>基于架构的软件设计（Architecture-Based Software Design, ABSD）方法以构成软件架构的商业、质量和功能需求等要素来驱动整个软件开发过程。ABSD是一个自顶向下，递归细化的软件开发方法，它以软件系统功能的分解为基础，通过选择架构风格实现质量和商业需求，并强调在架构设计过程中使用软件架构模板。采用ABSD方法，设计活动可以从项目总体功能框架明确后就开始，因此该方法特别适用于开发一些不能预先决定所有需求的软件系统，如软件产品线系统或长生命周期系统等，也可为需求不能在短时间内明确的软件项目提供指导。</p><p>请围绕“基于架构的软件开发方法及应用”论题，依次从以下三个方面进行论述。</p><p>1、概要叙述你参与开发的、采用ABSD方法的软件项目以及你在其中所承担的主要工作。</p><p>2、结合项目实际，详细说明采用ABSD方法进行软件开发时，需要经历哪些开发阶段？每个阶段包括哪些主要活动？</p><p>3、阐述你在软件开发的过程中都遇到了哪些实际问题及解决方法。</p><p><br/></p>",
    "question_type": 15,
    "answer_type": 15,
    "option": null,
    "answer": [
      "<p>请认真查看页面最上方的评语，右侧的段落批注！<br/>范文在学习网站-资料-班内共享</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 18,
      "belong_page": 1,
      "question_id": 491581,
      "question_title": "<p>论文提交注意事项：<br/><br/>1、在进行论文写作（电子版本）练习时，<span style=\"text-decoration: underline;\">建议先在word上完成并保存好，然后将其复制粘贴至以下作答框</span>；<br/><br/>2、提交论文内容时，论文篇数控制在一篇（不要一次性提交多篇）。<span style=\"text-decoration: underline;\">若提交多篇仅批阅第一篇</span>；<br/><br/>3、介于学员较多，且论文篇幅较长，讲师仔细审阅一篇论文需要十几分钟，建议在正式提交之前，请先进行自检自查，例如论文思路、结构等内容是否合理，自检通过后再进行论文提交，所以尽量准备好再提交，再耐心等候讲师批改完毕；<br/><br/>4、考虑到经常出现在一天内需要讲师进行批阅的论文高达几十篇，因此论文提交后，可能无法第一时间得到回复，讲师会尽量在48小时内进行批阅（节假日回复时间可能会顺延），敬请谅解；<br/><br/>5、请复制粘贴在答案空白处，<span style=\"text-decoration: underline;\">不要以附件形式提交，不要以附件形式提交，不要以附件形式提交</span>；<br/><br/><br/>论文提交模板（直接在以下答题框作答，不要上传附件！！！提交附件不予批改！！！）：<br/><br/>论文题目（居中&nbsp;）<br/><br/>正文<br/><br/>首行缩进两字符，区分段落<br/><br/>字数：2500字左右<br/><br/><br/>试题一： &nbsp;论软件体系结构的演化</p><p>软件体系结构的演化是在构件开发过程中或软件开发完毕投入运行后，由于用户需求发生变化，就必须相应地修改原有软件体系结构，以满足新的变化的软件需求的过程。体系结构的演化是一个复杂的、难以管理的问题。</p><p>请围绕“论软件体系结构的演化”论题，依次从以下三个方面进行论述。</p><p>&nbsp;</p><p>1.概要叙述你参与管理和开发的软件项目以及你在其中所承担的主要工作。</p><p>2.简要论述软件体系结构演化的常见原则有哪些（3-5个），请介绍其概念和理论。</p><p>3.具体阐述你参与管理和开发的项目是如何应用这些原则的，应用的效果如何。<br/><br/></p><p>试题二： &nbsp;论基于架构的软件设计方法（ABSD）及应用</p><p>基于架构的软件设计（Architecture-Based Software Design, ABSD）方法以构成软件架构的商业、质量和功能需求等要素来驱动整个软件开发过程。ABSD是一个自顶向下，递归细化的软件开发方法，它以软件系统功能的分解为基础，通过选择架构风格实现质量和商业需求，并强调在架构设计过程中使用软件架构模板。采用ABSD方法，设计活动可以从项目总体功能框架明确后就开始，因此该方法特别适用于开发一些不能预先决定所有需求的软件系统，如软件产品线系统或长生命周期系统等，也可为需求不能在短时间内明确的软件项目提供指导。</p><p>请围绕“基于架构的软件开发方法及应用”论题，依次从以下三个方面进行论述。</p><p>1、概要叙述你参与开发的、采用ABSD方法的软件项目以及你在其中所承担的主要工作。</p><p>2、结合项目实际，详细说明采用ABSD方法进行软件开发时，需要经历哪些开发阶段？每个阶段包括哪些主要活动？</p><p>3、阐述你在软件开发的过程中都遇到了哪些实际问题及解决方法。</p><p><br/></p>",
      "question_type": 15,
      "answer_type": 15,
      "show_type_name": "论文题",
      "new_parent_id": 491581,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>请认真查看页面最上方的评语，右侧的段落批注！<br/>范文在学习网站-资料-班内共享</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176918.1303875
  },
  {
    "section_id": "1791",
    "section_name": "论文 - 论文",
    "question_id": 499247,
    "question_title": "<p><br/></p><p><br/></p><p>论文提交注意事项：<br/><br/>1、在进行论文写作（电子版本）练习时，建议先在word上完成并保存好，然后将其复制粘贴至以下作答框；<br/><br/>2、提交论文内容时，论文篇数控制在一篇（不要一次性提交多篇）。若提交多篇仅批阅第一篇；<br/><br/>3、介于学员较多，且论文篇幅较长，讲师仔细审阅一篇论文需要十几分钟，建议在正式提交之前，请先进行自检自查，例如论文思路、结构等内容是否合理，自检通过后再进行论文提交，所以尽量准备好再提交，再耐心等候讲师批改完毕；<br/><br/>4、考虑到经常出现在一天内需要讲师进行批阅的论文高达几十篇，因此论文提交后，可能无法第一时间得到回复，讲师会尽量在3个工作日内进行批阅（节假日回复时间可能会顺延），敬请谅解；<br/><br/>5、请复制粘贴在答案空白处，不要以附件形式提交，不要以附件形式提交，不要以附件形式提交；<br/><br/><br/>论文提交模板（直接在以下答题框作答，不要上传附件！！！提交附件不予批改！！！）：<br/><br/>论文题目（居中&nbsp;）<br/><br/>正文<br/><br/>首行缩进两字符，区分段落<br/><br/>字数：2500字左右</p><p><br/>ps：论文框架、论文考纲知识点、论文范文均在 pc端学习网站-资料-班内共享里下载哦！<br/><br/></p><p>试题一论特定领域软件架构</p><p>特定领域软件架构DSSA (Domain Specific Software Architecture）就是在一个特定应用领域中为一组应用提供组织结构参考的标准软件体系结构。对DSSA 研究的角度、关心的问题不同导致了对DSSA 的不同定义。DSSA 的必备特征如下。</p><p>l&nbsp;一个严格定义的问题域和问题解域。</p><p>l&nbsp;具有普遍性，使其可以用于领域中某个特定应用的开发。</p><p>l&nbsp;对整个领域的构件组织模型的恰当抽象。</p><p>l&nbsp;具备该领域固定的、典型的在开发过程中可重用元素。</p><p>请围绕“特定领域软件架构”论题，依次从以下三个方面进行论述。</p><p>①　概要叙述你所参与管理或开发的软件项目，以及你在其中所承担的主要工作。</p><p>②　说明DSSA包括哪几个阶段的活动以及参与人员有哪些。</p><p>③　结合②详细说明你所参与的特定领域软件开发项目是如何进行架构设计的，给出每个阶段具体的实践过程。</p><p><br/></p><p>试题二 论软件架构脆弱性分析</p><p>软件脆弱性包括了软件设计脆弱性和软件结构脆弱性，软件架构的脆弱性是结构脆弱性的 一种。确切地说，软件架构设计存在一些明显的或者隐含的缺陷，攻击者就可以利用这些缺陷 攻击系统，或者当受到某个或某些外部刺激时，系统会发生性能、稳定性、可靠性、安全性下降等。软件架构脆弱性通常与软件架构的风格和模式有关，不同风格和模式的软件架构，其脆弱性体现和特点有很大不同，且解决脆弱性问题需要考虑的因素和采取的措施也有很大不同。</p><p>请围绕“软件架构脆弱性分析”论题，依次从以下三个方面进行论述。</p><p>①　概要叙述你所参与管理或开发的软件项目，以及你在其中所承担的主要工作。</p><p>②　阐述典型架构风格的脆弱性。</p><p>③详细说明你所参与的软件开发项目中，使用的架构风格是如何解决脆弱性问题的。</p><br/><p>试题三 论软件过程模型及应用</p><p>&nbsp;&nbsp;&nbsp;软件要经历从需求分析、软件设计、软件开发、运行维护，直至被淘汰这样的全过程，这个全过程称为软件的生命周期。软件生命周期描述了软件从生到死的全过程。为了使软件生命周期中的各项任务能够有序地按照规程进行，需要一定的工作模型对各项任务给予规程约束，这样的工作模型被称为软件过程模型，有时也称之为软件生命周期模型。</p><p>请围绕“软件过程模型及应用”论题，依次从以下三个方面进行论述。</p><p>①　简要叙述所参与开发的软件项目，并明确指出在其中承担的主要任务和开展的主要工作。</p><p>②　叙述说明目前常见的软件过程模型有哪些，它们的特点是什么。</p><p>③　你的项目采用了哪个（些）软件过程模型进行软件开发的，给出具体的实施过程。</p><br/>",
    "question_type": 15,
    "answer_type": 15,
    "option": null,
    "answer": [
      "<p>评语请在电脑端 学习网页中查看！</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 19,
      "belong_page": 1,
      "question_id": 499247,
      "question_title": "<p><br/></p><p><br/></p><p>论文提交注意事项：<br/><br/>1、在进行论文写作（电子版本）练习时，建议先在word上完成并保存好，然后将其复制粘贴至以下作答框；<br/><br/>2、提交论文内容时，论文篇数控制在一篇（不要一次性提交多篇）。若提交多篇仅批阅第一篇；<br/><br/>3、介于学员较多，且论文篇幅较长，讲师仔细审阅一篇论文需要十几分钟，建议在正式提交之前，请先进行自检自查，例如论文思路、结构等内容是否合理，自检通过后再进行论文提交，所以尽量准备好再提交，再耐心等候讲师批改完毕；<br/><br/>4、考虑到经常出现在一天内需要讲师进行批阅的论文高达几十篇，因此论文提交后，可能无法第一时间得到回复，讲师会尽量在3个工作日内进行批阅（节假日回复时间可能会顺延），敬请谅解；<br/><br/>5、请复制粘贴在答案空白处，不要以附件形式提交，不要以附件形式提交，不要以附件形式提交；<br/><br/><br/>论文提交模板（直接在以下答题框作答，不要上传附件！！！提交附件不予批改！！！）：<br/><br/>论文题目（居中&nbsp;）<br/><br/>正文<br/><br/>首行缩进两字符，区分段落<br/><br/>字数：2500字左右</p><p><br/>ps：论文框架、论文考纲知识点、论文范文均在 pc端学习网站-资料-班内共享里下载哦！<br/><br/></p><p>试题一论特定领域软件架构</p><p>特定领域软件架构DSSA (Domain Specific Software Architecture）就是在一个特定应用领域中为一组应用提供组织结构参考的标准软件体系结构。对DSSA 研究的角度、关心的问题不同导致了对DSSA 的不同定义。DSSA 的必备特征如下。</p><p>l&nbsp;一个严格定义的问题域和问题解域。</p><p>l&nbsp;具有普遍性，使其可以用于领域中某个特定应用的开发。</p><p>l&nbsp;对整个领域的构件组织模型的恰当抽象。</p><p>l&nbsp;具备该领域固定的、典型的在开发过程中可重用元素。</p><p>请围绕“特定领域软件架构”论题，依次从以下三个方面进行论述。</p><p>①　概要叙述你所参与管理或开发的软件项目，以及你在其中所承担的主要工作。</p><p>②　说明DSSA包括哪几个阶段的活动以及参与人员有哪些。</p><p>③　结合②详细说明你所参与的特定领域软件开发项目是如何进行架构设计的，给出每个阶段具体的实践过程。</p><p><br/></p><p>试题二 论软件架构脆弱性分析</p><p>软件脆弱性包括了软件设计脆弱性和软件结构脆弱性，软件架构的脆弱性是结构脆弱性的 一种。确切地说，软件架构设计存在一些明显的或者隐含的缺陷，攻击者就可以利用这些缺陷 攻击系统，或者当受到某个或某些外部刺激时，系统会发生性能、稳定性、可靠性、安全性下降等。软件架构脆弱性通常与软件架构的风格和模式有关，不同风格和模式的软件架构，其脆弱性体现和特点有很大不同，且解决脆弱性问题需要考虑的因素和采取的措施也有很大不同。</p><p>请围绕“软件架构脆弱性分析”论题，依次从以下三个方面进行论述。</p><p>①　概要叙述你所参与管理或开发的软件项目，以及你在其中所承担的主要工作。</p><p>②　阐述典型架构风格的脆弱性。</p><p>③详细说明你所参与的软件开发项目中，使用的架构风格是如何解决脆弱性问题的。</p><br/><p>试题三 论软件过程模型及应用</p><p>&nbsp;&nbsp;&nbsp;软件要经历从需求分析、软件设计、软件开发、运行维护，直至被淘汰这样的全过程，这个全过程称为软件的生命周期。软件生命周期描述了软件从生到死的全过程。为了使软件生命周期中的各项任务能够有序地按照规程进行，需要一定的工作模型对各项任务给予规程约束，这样的工作模型被称为软件过程模型，有时也称之为软件生命周期模型。</p><p>请围绕“软件过程模型及应用”论题，依次从以下三个方面进行论述。</p><p>①　简要叙述所参与开发的软件项目，并明确指出在其中承担的主要任务和开展的主要工作。</p><p>②　叙述说明目前常见的软件过程模型有哪些，它们的特点是什么。</p><p>③　你的项目采用了哪个（些）软件过程模型进行软件开发的，给出具体的实施过程。</p><br/>",
      "question_type": 15,
      "answer_type": 15,
      "show_type_name": "论文题",
      "new_parent_id": 499247,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>评语请在电脑端 学习网页中查看！</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176918.1303875
  },
  {
    "section_id": "1791",
    "section_name": "论文 - 论文",
    "question_id": 502723,
    "question_title": "<p>论文提交注意事项：<br/><br/>1、在进行论文写作（电子版本）练习时，建议先在word上完成并保存好，然后将其复制粘贴至以下作答框；<br/><br/>2、提交论文内容时，论文篇数控制在一篇（不要一次性提交多篇）。若提交多篇仅批阅第一篇；<br/><br/>3、介于学员较多，且论文篇幅较长，讲师仔细审阅一篇论文需要十几分钟，建议在正式提交之前，请先进行自检自查，例如论文思路、结构等内容是否合理，自检通过后再进行论文提交，所以尽量准备好再提交，再耐心等候讲师批改完毕；<br/><br/>4、考虑到经常出现在一天内需要讲师进行批阅的论文高达几十篇，因此论文提交后，可能无法第一时间得到回复，讲师会尽量在3个工作日内进行批阅（节假日回复时间可能会顺延），敬请谅解；<br/><br/>5、请复制粘贴在答案空白处，直接在以下答题框作答，不要以附件形式提交，不要以附件形式提交，不要以附件形式提交；<br/><br/></p><p>ps：论文框架、论文考纲知识点、论文范文均在 pc端学习网站-资料-班内共享里下载哦！</p><p><br/><br/>试题一&nbsp;论云原生架构设计及应用<br/></p><p>“云原生”来自于Cloud Native 的直译，拆开来看，Cloud 就是指其应用软件是在云端而非传统的数据中心。Native 代表应用软件从一开始就是基于云环境、专门为云端特性而设计，可充分利用和发挥云平台的弹性＋分布式优势，最大化释放云计算生产力。从技术的角度，云原生架构是基于云原生技术的一组架构原则和设计模式的集合，旨在将云应用中的非业务代码部分进行最大化的剥离，从而让云设施接管应用中原有的大量非功能特性（如弹性、韧性、安全、可观测性、灰度等），使业务不再有非功能性业务中断困扰的同时，具备轻量、敏捷、高度自动化的特点。</p><p>请围绕“论云原生架构设计”论题，依次从以下三个方面进行论述。</p><p>1、概要叙述你参与开发的软件项目以及你在其中所承担的主要工作。</p><p>2、详细说明云原生的主要架构模式有哪些。</p><p>3、结合项目实际，详细说明你采用了哪些架构模式进行云原生架构设计的。<br/><br/></p><p>试题二&nbsp;论软件架构复用</p><p>软件架构复用可以减少开发工作、减少开发时间以及降低开发成本，提高生产力。不仅如此，它还可以提高产品质量使其具有更好的互操作性。同时，软件架构复用会使产品维护变得更加简单。</p><p>请围绕“论软件架构复用”论题，依次从以下三个方面进行论述。</p><p>1、概要叙述你参与开发的软件项目以及你在其中所承担的主要工作。</p><p>2、说明软件架构复用的基本过程。</p><p>3、结合项目实际，详细说明你是如何采用软件架构复用的方式形成最终系统的。</p><p><br/></p><p>试题三 论软件体系结构的演化</p><p>软件体系结构的演化是在构件开发过程中或软件开发完毕投入运行后，由于用户需求发生变化，就必须相应地修改原有软件体系结构，以满足新的变化的软件需求的过程。体系结构的演化是一个复杂的、难以管理的问题。</p><p>请围绕“论软件体系结构的演化”论题，依次从以下三个方面进行论述。</p><p>①　概要叙述你参与管理和开发的软件项目以及你在其中所承担的主要工作。</p><p>②　简要论述软件体系结构演化的常见原则有哪些（3-5个），请介绍其概念和理论。</p><p>③　具体阐述你参与管理和开发的项目是如何应用这些原则的，应用的效果如何。</p><p><br/></p><p>试题四 论分布式数据库技术及应用</p><p>随着经济的高速发展，企业的用户数量、数据量呈爆炸式増长，对数据库管理提出了严峻的考验。数据库系统是大多数商业信息系统的核心，因此除了业务逻辑之外，企业对数据库系统的系统性能、数据可靠性和服务可用性都提出了较高要求。为满足企业用户的实际需求，近年来分布式数据库技术岀现了飞速发展。业务在实现信息系统时，需要根据数据管理的实际需求，选择合适的分布式数据库产品。</p><p>请围绕“论分布式数据库技术及应用”论题，依次从以下三个方面进行论述。</p><p>1. 概要叙述你参与实施的软件项目以及你在其中所担任的主要工作。</p><p>2. 请说明你所参与的软件项目对数据管理的需求，结合分布式数据库的特点，论述你是如何应用分布式数据库或设计分布式数据库的。</p><p>3. 简要说明分布式数据库的应用效果及存在的问题。</p><p><br/></p>",
    "question_type": 15,
    "answer_type": 15,
    "option": null,
    "answer": [
      "<p>老师评语请在 电脑端(pc端)查看！</p>"
    ],
    "analysis": "",
    "raw_data": {
      "index": 20,
      "belong_page": 1,
      "question_id": 502723,
      "question_title": "<p>论文提交注意事项：<br/><br/>1、在进行论文写作（电子版本）练习时，建议先在word上完成并保存好，然后将其复制粘贴至以下作答框；<br/><br/>2、提交论文内容时，论文篇数控制在一篇（不要一次性提交多篇）。若提交多篇仅批阅第一篇；<br/><br/>3、介于学员较多，且论文篇幅较长，讲师仔细审阅一篇论文需要十几分钟，建议在正式提交之前，请先进行自检自查，例如论文思路、结构等内容是否合理，自检通过后再进行论文提交，所以尽量准备好再提交，再耐心等候讲师批改完毕；<br/><br/>4、考虑到经常出现在一天内需要讲师进行批阅的论文高达几十篇，因此论文提交后，可能无法第一时间得到回复，讲师会尽量在3个工作日内进行批阅（节假日回复时间可能会顺延），敬请谅解；<br/><br/>5、请复制粘贴在答案空白处，直接在以下答题框作答，不要以附件形式提交，不要以附件形式提交，不要以附件形式提交；<br/><br/></p><p>ps：论文框架、论文考纲知识点、论文范文均在 pc端学习网站-资料-班内共享里下载哦！</p><p><br/><br/>试题一&nbsp;论云原生架构设计及应用<br/></p><p>“云原生”来自于Cloud Native 的直译，拆开来看，Cloud 就是指其应用软件是在云端而非传统的数据中心。Native 代表应用软件从一开始就是基于云环境、专门为云端特性而设计，可充分利用和发挥云平台的弹性＋分布式优势，最大化释放云计算生产力。从技术的角度，云原生架构是基于云原生技术的一组架构原则和设计模式的集合，旨在将云应用中的非业务代码部分进行最大化的剥离，从而让云设施接管应用中原有的大量非功能特性（如弹性、韧性、安全、可观测性、灰度等），使业务不再有非功能性业务中断困扰的同时，具备轻量、敏捷、高度自动化的特点。</p><p>请围绕“论云原生架构设计”论题，依次从以下三个方面进行论述。</p><p>1、概要叙述你参与开发的软件项目以及你在其中所承担的主要工作。</p><p>2、详细说明云原生的主要架构模式有哪些。</p><p>3、结合项目实际，详细说明你采用了哪些架构模式进行云原生架构设计的。<br/><br/></p><p>试题二&nbsp;论软件架构复用</p><p>软件架构复用可以减少开发工作、减少开发时间以及降低开发成本，提高生产力。不仅如此，它还可以提高产品质量使其具有更好的互操作性。同时，软件架构复用会使产品维护变得更加简单。</p><p>请围绕“论软件架构复用”论题，依次从以下三个方面进行论述。</p><p>1、概要叙述你参与开发的软件项目以及你在其中所承担的主要工作。</p><p>2、说明软件架构复用的基本过程。</p><p>3、结合项目实际，详细说明你是如何采用软件架构复用的方式形成最终系统的。</p><p><br/></p><p>试题三 论软件体系结构的演化</p><p>软件体系结构的演化是在构件开发过程中或软件开发完毕投入运行后，由于用户需求发生变化，就必须相应地修改原有软件体系结构，以满足新的变化的软件需求的过程。体系结构的演化是一个复杂的、难以管理的问题。</p><p>请围绕“论软件体系结构的演化”论题，依次从以下三个方面进行论述。</p><p>①　概要叙述你参与管理和开发的软件项目以及你在其中所承担的主要工作。</p><p>②　简要论述软件体系结构演化的常见原则有哪些（3-5个），请介绍其概念和理论。</p><p>③　具体阐述你参与管理和开发的项目是如何应用这些原则的，应用的效果如何。</p><p><br/></p><p>试题四 论分布式数据库技术及应用</p><p>随着经济的高速发展，企业的用户数量、数据量呈爆炸式増长，对数据库管理提出了严峻的考验。数据库系统是大多数商业信息系统的核心，因此除了业务逻辑之外，企业对数据库系统的系统性能、数据可靠性和服务可用性都提出了较高要求。为满足企业用户的实际需求，近年来分布式数据库技术岀现了飞速发展。业务在实现信息系统时，需要根据数据管理的实际需求，选择合适的分布式数据库产品。</p><p>请围绕“论分布式数据库技术及应用”论题，依次从以下三个方面进行论述。</p><p>1. 概要叙述你参与实施的软件项目以及你在其中所担任的主要工作。</p><p>2. 请说明你所参与的软件项目对数据管理的需求，结合分布式数据库的特点，论述你是如何应用分布式数据库或设计分布式数据库的。</p><p>3. 简要说明分布式数据库的应用效果及存在的问题。</p><p><br/></p>",
      "question_type": 15,
      "answer_type": 15,
      "show_type_name": "论文题",
      "new_parent_id": 502723,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "<p>老师评语请在 电脑端(pc端)查看！</p>"
      ],
      "option": null
    },
    "crawl_time": 1753176918.1303875
  },
  {
    "section_id": "1791",
    "section_name": "论文 - 论文",
    "question_id": 503812,
    "question_title": "<p>试题一论云原生微服务</p><p>在云原生时代，云原生微服务体系将充分利用云资源的高可用和安全体系，让应用获得更有保障的弹性、可用性与安全性。应用构建在云所提供的基础设施与基础服务之上，充分利用云服务所带来的便捷性、稳定性，降低应用架构的复杂度。云原生的微服务体系也将帮助应用架构全面升级，让应用天然具有更好的可观测性、可控制性、可容错性等特性。</p><p>请围绕“论云原生微服务”论题，依次从以下三个方面进行论述。</p><p>1、概要叙述你参与开发的软件项目以及你在其中所承担的主要工作。</p><p>2、设计一个优秀的微服务系统应遵循一定的设计约束。详细说明微服务的设计约束有哪些。</p><p>3、结合项目实际，详细说明你的项目采用了哪些微服务技术实现上述设计约束的。</p><br/><br/><p>试题二&nbsp;论面向对象的设计方法及应用</p><p>面向对象（Object-Oriented , OO）开发方法将面向对象的思想应用于软件开发过程中，指导开发活动，是建立在“对象”概念基础上的方法学。面向对象方法的本质是主张参照人们认识一个现实系统的方法，完成分析、设计与实现一个软件系统，提倡用人类在现实生活中常用的思维方法来认识和理解描述客观事物，强调最终建立的系统能映射问题域，使得系统中的对象，以及对象之间的关系能够如实地反映问题域中固有的事物及其关系。面向对象的方法主要分为面向对象的分析、面向对象的设计、面向对象的程序设计三个部分。</p><p>请围绕“论面向对象的设计方法及应用”论题，依次从以下三个方面进行论述。</p><p>①　简要叙述所参与管理和开发的软件项目，并明确指出在其中承担的主要任务和开展的主要工作。</p><p>②　说明面向对象的设计过程可以分为哪几个步骤？</p><p>③　结合②说明你是如何进行面向对象的设计工作的，写出具体实践过程。</p><br/><br/><p>试题三&nbsp;论信息系统的安全与保密设计</p><p>信息安全是指保护信息系统、信息资源和信息用户的安全，防止信息被窃取、篡改、破坏或丢失的一系列措施和技术。信息安全的重要性在当今数字化时代变得越来越突出，随着信息技术的快速发展，信息安全问题日益严重，已经成为社会发展和经济发展的重要因素。当前，信息安全的现状已经呈现出安全威胁日益复杂，安全防护手段相对薄弱，安全意识需要加强，信息安全标准亟待完善，网络空间安全治理需要加强几个方面的特点。信息安全面临着严峻的挑战，需要采取综合的措施来保障信息系统的安全，加强安全防护技术研究和开发，提高用户安全意识，完善信息安全标准体系，加强网络空间安全治理，维护信息安全和网络空间的和平与稳定。</p><p>请围绕“论信息系统的安全与保密设计”论题，依次从以下三个方面进行论述。</p><p>①　概要叙述你参与管理和开发的软件项目以及你在其中承担的主要工作，并阐述软件系统安全架构原因。</p><p>②　请结合项目实际，具体阐述你在项目中设计实践，具体运用了哪些安全性和保密性的手段。</p><p>③　请结合项目实际，说明你在实践中遇到的问题以及解决方案。</p><br/><br/><p>试题四 论分布式设计</p><p>分布式是指将一个系统或任务分解成多个子部分，并在多个计算机或服务器之间进行协同工作的方式。每个子部分都可以在不同的计算机节点上运行，彼此之间通过网络进行通信和协调。分布式技术在当今互联网应用中起着重要作用，例如大规模搜索引擎、社交网络和电子商务平台等。常见的分布式系统包括分布式数据库、分布式存储系统、分布式计算系统等。这些系统通过将数据、计算和功能分散到多个节点上，可以提供更高的性能、可伸缩性和容错性。分布式系统的设计和实现需要解决一系列挑战，例如节点之间的通信和同步、数据一致性的维护、负载均衡、故障恢复等。为了解决这些挑战，通常会使用一些分布式算法和协议，如一致性哈希、Paxos、Raft等。</p><p>请围绕“论分布式设计与实现”论题，依次从以下三个方面进行论述。</p><p>①　概要叙述你参与管理和开发的软件项目以及你在其中承担的主要工作。</p><p>②　请阐述你参与的项目使用了哪些分布式技术，它们的特点是什么？</p><p>③　请结合项目实际，具体阐述你在项目中分布式技术的实践，以及在实施过程中遇到的问题及解决方案。</p>",
    "question_type": 15,
    "answer_type": 15,
    "option": null,
    "answer": [
      "无"
    ],
    "analysis": "",
    "raw_data": {
      "index": 21,
      "belong_page": 1,
      "question_id": 503812,
      "question_title": "<p>试题一论云原生微服务</p><p>在云原生时代，云原生微服务体系将充分利用云资源的高可用和安全体系，让应用获得更有保障的弹性、可用性与安全性。应用构建在云所提供的基础设施与基础服务之上，充分利用云服务所带来的便捷性、稳定性，降低应用架构的复杂度。云原生的微服务体系也将帮助应用架构全面升级，让应用天然具有更好的可观测性、可控制性、可容错性等特性。</p><p>请围绕“论云原生微服务”论题，依次从以下三个方面进行论述。</p><p>1、概要叙述你参与开发的软件项目以及你在其中所承担的主要工作。</p><p>2、设计一个优秀的微服务系统应遵循一定的设计约束。详细说明微服务的设计约束有哪些。</p><p>3、结合项目实际，详细说明你的项目采用了哪些微服务技术实现上述设计约束的。</p><br/><br/><p>试题二&nbsp;论面向对象的设计方法及应用</p><p>面向对象（Object-Oriented , OO）开发方法将面向对象的思想应用于软件开发过程中，指导开发活动，是建立在“对象”概念基础上的方法学。面向对象方法的本质是主张参照人们认识一个现实系统的方法，完成分析、设计与实现一个软件系统，提倡用人类在现实生活中常用的思维方法来认识和理解描述客观事物，强调最终建立的系统能映射问题域，使得系统中的对象，以及对象之间的关系能够如实地反映问题域中固有的事物及其关系。面向对象的方法主要分为面向对象的分析、面向对象的设计、面向对象的程序设计三个部分。</p><p>请围绕“论面向对象的设计方法及应用”论题，依次从以下三个方面进行论述。</p><p>①　简要叙述所参与管理和开发的软件项目，并明确指出在其中承担的主要任务和开展的主要工作。</p><p>②　说明面向对象的设计过程可以分为哪几个步骤？</p><p>③　结合②说明你是如何进行面向对象的设计工作的，写出具体实践过程。</p><br/><br/><p>试题三&nbsp;论信息系统的安全与保密设计</p><p>信息安全是指保护信息系统、信息资源和信息用户的安全，防止信息被窃取、篡改、破坏或丢失的一系列措施和技术。信息安全的重要性在当今数字化时代变得越来越突出，随着信息技术的快速发展，信息安全问题日益严重，已经成为社会发展和经济发展的重要因素。当前，信息安全的现状已经呈现出安全威胁日益复杂，安全防护手段相对薄弱，安全意识需要加强，信息安全标准亟待完善，网络空间安全治理需要加强几个方面的特点。信息安全面临着严峻的挑战，需要采取综合的措施来保障信息系统的安全，加强安全防护技术研究和开发，提高用户安全意识，完善信息安全标准体系，加强网络空间安全治理，维护信息安全和网络空间的和平与稳定。</p><p>请围绕“论信息系统的安全与保密设计”论题，依次从以下三个方面进行论述。</p><p>①　概要叙述你参与管理和开发的软件项目以及你在其中承担的主要工作，并阐述软件系统安全架构原因。</p><p>②　请结合项目实际，具体阐述你在项目中设计实践，具体运用了哪些安全性和保密性的手段。</p><p>③　请结合项目实际，说明你在实践中遇到的问题以及解决方案。</p><br/><br/><p>试题四 论分布式设计</p><p>分布式是指将一个系统或任务分解成多个子部分，并在多个计算机或服务器之间进行协同工作的方式。每个子部分都可以在不同的计算机节点上运行，彼此之间通过网络进行通信和协调。分布式技术在当今互联网应用中起着重要作用，例如大规模搜索引擎、社交网络和电子商务平台等。常见的分布式系统包括分布式数据库、分布式存储系统、分布式计算系统等。这些系统通过将数据、计算和功能分散到多个节点上，可以提供更高的性能、可伸缩性和容错性。分布式系统的设计和实现需要解决一系列挑战，例如节点之间的通信和同步、数据一致性的维护、负载均衡、故障恢复等。为了解决这些挑战，通常会使用一些分布式算法和协议，如一致性哈希、Paxos、Raft等。</p><p>请围绕“论分布式设计与实现”论题，依次从以下三个方面进行论述。</p><p>①　概要叙述你参与管理和开发的软件项目以及你在其中承担的主要工作。</p><p>②　请阐述你参与的项目使用了哪些分布式技术，它们的特点是什么？</p><p>③　请结合项目实际，具体阐述你在项目中分布式技术的实践，以及在实施过程中遇到的问题及解决方案。</p>",
      "question_type": 15,
      "answer_type": 15,
      "show_type_name": "论文题",
      "new_parent_id": 503812,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "无"
      ],
      "option": null
    },
    "crawl_time": 1753176918.1303875
  },
  {
    "section_id": "1791",
    "section_name": "论文 - 论文",
    "question_id": 503953,
    "question_title": "<p>论文一：大数据lamda架构</p><p>1简要说明你参与开发的软件项目，以及你所承担的主要工作</p><p>2 lamada体系架构将数据流分为批处理层(Batch Layer)、加速层(Speed Layer)、服务层（Serving Layer）。简要叙述这三个层次的用途和特点</p><p>3 详细阐述你参与开发的软件项目是如何基于lamada体系架构进行大数据处理的<br/><br/></p><p>论文二 模型驱动架构设计方法及其应用</p><p>1简要说明你参与分析和开发的软件项目，以及你所承担的主要工作</p><p>2 简要阐述采用模型驱动架构思想进行软件开发的全过程和特点</p><p>3详细阐述你参与开发的软件项目是基于模型驱动架构进行分析、设计和开发的。<br/><br/></p><p>论文三 单元测试方法及其运用</p><p>1 概要叙述你参与管理和开发的软件项目，以及你所承担的主要工作</p><p>2 结合你参与管理和开发的软件项目，简要叙述单元测试中静态测试和动态测试方法的基本内容</p><p>3 结合你参与管理和开发的软件项目，具体阐述在单元测试过程中，如何确定白盒测试的覆盖标准，以及如何组织实施回归测试</p><p><br/>论文四 云上自动化运维及其应用</p><p>1简要说明你参与开发的软件项目，以及你所承担的主要工作</p><p>2概要叙述云上自动化运维(如CloudOps)的主要衡量指标</p><p>3详细描述你参与开发的项目如何实现云上自动化运维。</p>",
    "question_type": 15,
    "answer_type": 15,
    "option": null,
    "answer": [
      "无"
    ],
    "analysis": "",
    "raw_data": {
      "index": 22,
      "belong_page": 1,
      "question_id": 503953,
      "question_title": "<p>论文一：大数据lamda架构</p><p>1简要说明你参与开发的软件项目，以及你所承担的主要工作</p><p>2 lamada体系架构将数据流分为批处理层(Batch Layer)、加速层(Speed Layer)、服务层（Serving Layer）。简要叙述这三个层次的用途和特点</p><p>3 详细阐述你参与开发的软件项目是如何基于lamada体系架构进行大数据处理的<br/><br/></p><p>论文二 模型驱动架构设计方法及其应用</p><p>1简要说明你参与分析和开发的软件项目，以及你所承担的主要工作</p><p>2 简要阐述采用模型驱动架构思想进行软件开发的全过程和特点</p><p>3详细阐述你参与开发的软件项目是基于模型驱动架构进行分析、设计和开发的。<br/><br/></p><p>论文三 单元测试方法及其运用</p><p>1 概要叙述你参与管理和开发的软件项目，以及你所承担的主要工作</p><p>2 结合你参与管理和开发的软件项目，简要叙述单元测试中静态测试和动态测试方法的基本内容</p><p>3 结合你参与管理和开发的软件项目，具体阐述在单元测试过程中，如何确定白盒测试的覆盖标准，以及如何组织实施回归测试</p><p><br/>论文四 云上自动化运维及其应用</p><p>1简要说明你参与开发的软件项目，以及你所承担的主要工作</p><p>2概要叙述云上自动化运维(如CloudOps)的主要衡量指标</p><p>3详细描述你参与开发的项目如何实现云上自动化运维。</p>",
      "question_type": 15,
      "answer_type": 15,
      "show_type_name": "论文题",
      "new_parent_id": 503953,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "无"
      ],
      "option": null
    },
    "crawl_time": 1753176918.1303875
  },
  {
    "section_id": "1791",
    "section_name": "论文 - 论文",
    "question_id": 513963,
    "question_title": "<p>1、论nosql数据库</p><p>随着互联网Web 2.0网站的兴起，传统关系数据库在应对Web 2.0网站，特别是超大规模和高并发的Web 2.0纯动态SNS网站上已经显得力不从心，暴露了很多难以克服的问题，而非关系型的数据库则由于其本身的特点得到了非常迅速的发展。NoSQL(Not only SQL)的产生就是为了解决大规模数据集合及多种数据类型带来的挑战，尤其是大数据应用难题。目前NoSQL数据库并没有一个统一的架构，根据其所采用的数据模型可以分为四类：键值(Key-Value)存储数据库、列存储数据库、文档型数据库和图(Graph)数据库。</p><p>请围绕“论NoSQL数据库技术及其应用”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你参与管理和开发的软件项目以及你在其中所担任的主要工作。</p><p>2.详细论述常见的NoSQL数据库及主要特点。</p><p>3.结合你具体参与管理和开发的实际项目，说明具体采用哪种NoSQL数据库技术以及其应用效果。</p><p>&nbsp;</p><p>2、论大数据架构的应用</p><p>大数据指的是所涉及的资料量规模巨大，无法透过主流软件工具在合理时间内达到撷取、</p><p>管理、处理、并整理成为帮助企业经营决策更积极目的的资讯。目前大数据的应用已经渗透到各个行业领域，通过大数据分析，企业可以洞察消费者行为，优化产品设计和服务，提高运营效率，降低成本，从而实现精准营销和个性化服务。</p><p>请围绕“大数据架构的应用”论题，依次从以下三个方面进行论述。</p><p>1、简要说明那你参与管理和开发的软件项目，以及你所承担的主要工作</p><p>2、结合你参与管理和开发的软件项目，简要说明大数据有哪些架构和它们的特点</p><p>3、结合你参与管理和开发的项目，具体阐述你采用哪种大数据的架构以及是如何应用大数据架构进行系统开发的</p><p>&nbsp;</p><p>3、论软件架构脆弱性分析</p><p>软件脆弱性包括了软件设计脆弱性和软件结构脆弱性，软件架构的脆弱性是结构脆弱性的 一种。确切地说，软件架构设计存在一些明显的或者隐含的缺陷，攻击者就可以利用这些缺陷 攻击系统，或者当受到某个或某些外部刺激时，系统会发生性能、稳定性、可靠性、安全性下降等。软件架构脆弱性通常与软件架构的风格和模式有关，不同风格和模式的软件架构，其脆弱性体现和特点有很大不同，且解决脆弱性问题需要考虑的因素和采取的措施也有很大不同。</p><p>请围绕“软件架构脆弱性分析”论题，依次从以下三个方面进行论述。</p><p>1、概要叙述你所参与管理或开发的软件项目，以及你在其中所承担的主要工作。</p><p>2、阐述典型架构风格的脆弱性。</p><p>3、详细说明你所参与的软件开发项目中，使用的架构风格是如何解决脆弱性问题的。</p><p>&nbsp;</p><p>4、特定领域架构</p><p>特定领域软件架构DSSA (Domain Specific Software Architecture）就是在一个特定应用领域中为一组应用提供组织结构参考的标准软件体系结构。对DSSA 研究的角度、关心的问题不同导致了对DSSA 的不同定义。DSSA 的必备特征如下。</p><p>l&nbsp;l一个严格定义的问题域和问题解域。</p><p>l&nbsp;l具有普遍性，使其可以用于领域中某个特定应用的开发。</p><p>l&nbsp;l对整个领域的构件组织模型的恰当抽象。</p><p>l&nbsp;l具备该领域固定的、典型的在开发过程中可重用元素。</p><p>请围绕“特定领域软件架构”论题，依次从以下三个方面进行论述。</p><p>1、概要叙述你所参与管理或开发的软件项目，以及你在其中所承担的主要工作。</p><p>2、说明DSSA包括哪几个阶段的活动以及参与人员有哪些。</p><p>3、结合②详细说明你所参与的特定领域软件开发项目是如何进行架构设计的，给出每个阶段具体的实践过程。</p><p>&nbsp;</p><p>&nbsp;</p>",
    "question_type": 15,
    "answer_type": 15,
    "option": null,
    "answer": [
      "略"
    ],
    "analysis": "",
    "raw_data": {
      "index": 23,
      "belong_page": 1,
      "question_id": 513963,
      "question_title": "<p>1、论nosql数据库</p><p>随着互联网Web 2.0网站的兴起，传统关系数据库在应对Web 2.0网站，特别是超大规模和高并发的Web 2.0纯动态SNS网站上已经显得力不从心，暴露了很多难以克服的问题，而非关系型的数据库则由于其本身的特点得到了非常迅速的发展。NoSQL(Not only SQL)的产生就是为了解决大规模数据集合及多种数据类型带来的挑战，尤其是大数据应用难题。目前NoSQL数据库并没有一个统一的架构，根据其所采用的数据模型可以分为四类：键值(Key-Value)存储数据库、列存储数据库、文档型数据库和图(Graph)数据库。</p><p>请围绕“论NoSQL数据库技术及其应用”论题，依次从以下三个方面进行论述。</p><p>1.概要叙述你参与管理和开发的软件项目以及你在其中所担任的主要工作。</p><p>2.详细论述常见的NoSQL数据库及主要特点。</p><p>3.结合你具体参与管理和开发的实际项目，说明具体采用哪种NoSQL数据库技术以及其应用效果。</p><p>&nbsp;</p><p>2、论大数据架构的应用</p><p>大数据指的是所涉及的资料量规模巨大，无法透过主流软件工具在合理时间内达到撷取、</p><p>管理、处理、并整理成为帮助企业经营决策更积极目的的资讯。目前大数据的应用已经渗透到各个行业领域，通过大数据分析，企业可以洞察消费者行为，优化产品设计和服务，提高运营效率，降低成本，从而实现精准营销和个性化服务。</p><p>请围绕“大数据架构的应用”论题，依次从以下三个方面进行论述。</p><p>1、简要说明那你参与管理和开发的软件项目，以及你所承担的主要工作</p><p>2、结合你参与管理和开发的软件项目，简要说明大数据有哪些架构和它们的特点</p><p>3、结合你参与管理和开发的项目，具体阐述你采用哪种大数据的架构以及是如何应用大数据架构进行系统开发的</p><p>&nbsp;</p><p>3、论软件架构脆弱性分析</p><p>软件脆弱性包括了软件设计脆弱性和软件结构脆弱性，软件架构的脆弱性是结构脆弱性的 一种。确切地说，软件架构设计存在一些明显的或者隐含的缺陷，攻击者就可以利用这些缺陷 攻击系统，或者当受到某个或某些外部刺激时，系统会发生性能、稳定性、可靠性、安全性下降等。软件架构脆弱性通常与软件架构的风格和模式有关，不同风格和模式的软件架构，其脆弱性体现和特点有很大不同，且解决脆弱性问题需要考虑的因素和采取的措施也有很大不同。</p><p>请围绕“软件架构脆弱性分析”论题，依次从以下三个方面进行论述。</p><p>1、概要叙述你所参与管理或开发的软件项目，以及你在其中所承担的主要工作。</p><p>2、阐述典型架构风格的脆弱性。</p><p>3、详细说明你所参与的软件开发项目中，使用的架构风格是如何解决脆弱性问题的。</p><p>&nbsp;</p><p>4、特定领域架构</p><p>特定领域软件架构DSSA (Domain Specific Software Architecture）就是在一个特定应用领域中为一组应用提供组织结构参考的标准软件体系结构。对DSSA 研究的角度、关心的问题不同导致了对DSSA 的不同定义。DSSA 的必备特征如下。</p><p>l&nbsp;l一个严格定义的问题域和问题解域。</p><p>l&nbsp;l具有普遍性，使其可以用于领域中某个特定应用的开发。</p><p>l&nbsp;l对整个领域的构件组织模型的恰当抽象。</p><p>l&nbsp;l具备该领域固定的、典型的在开发过程中可重用元素。</p><p>请围绕“特定领域软件架构”论题，依次从以下三个方面进行论述。</p><p>1、概要叙述你所参与管理或开发的软件项目，以及你在其中所承担的主要工作。</p><p>2、说明DSSA包括哪几个阶段的活动以及参与人员有哪些。</p><p>3、结合②详细说明你所参与的特定领域软件开发项目是如何进行架构设计的，给出每个阶段具体的实践过程。</p><p>&nbsp;</p><p>&nbsp;</p>",
      "question_type": 15,
      "answer_type": 15,
      "show_type_name": "论文题",
      "new_parent_id": 513963,
      "score_rule": "",
      "material_text": "",
      "sort_son": "0",
      "analyze": "",
      "like": 0,
      "answer": [
        "略"
      ],
      "option": null
    },
    "crawl_time": 1753176918.1303875
  }
]