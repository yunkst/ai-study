1. 后端支持上传题库
2. APP 上可以下载题库到本地进行答题
3. APP 答题结果可以根据

我认为，首页需要一片空白，然后有个添加学科的按钮，添加学科信息之后，首页出现一个新的学科。点击学科进去之后有3个模块

1. 题库管理模块
2. 知识库模块
3. 学习统计模块

知识库模块，上传 PDF， word ,txt 等常见的文档格式，自动进行RAG知识库构建(FAISS)

* 前端代码完成后，都需要通过 npm run type-check 命令检查 typescript 错误，
并修复，确保不报错才算任务完成。（如果前端在 docker中运行，
那么就需要用 docker exec 来执行 typescript 检查）,运行完之后，再用 npm run lint 检查并修复
* 后端代码修改好之后，都需要用 ruff + pylint 工具检测其中的问题，修复所有的报错和警告

题库上传之后，看不到有哪些题目，增加题目查看和管理页面。